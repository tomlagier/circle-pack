// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function shell_read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return xhr.response;
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 9808;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_hierarchy_cpp() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } });


/* memory initializer */ allocate([100,7,0,0,243,8,0,0,80,8,0,0,180,8,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,100,7,0,0,32,9,0,0,100,7,0,0,173,9,0,0,140,7,0,0,87,9,0,0,48,0,0,0,0,0,0,0,100,7,0,0,228,9,0,0,140,7,0,0,221,9,0,0,72,0,0,0,0,0,0,0,52,8,0,0,213,9,0,0,0,0,0,0,80,0,0,0,100,7,0,0,236,9,0,0,140,7,0,0,12,10,0,0,48,0,0,0,0,0,0,0,100,7,0,0,99,10,0,0,140,7,0,0,132,10,0,0,48,0,0,0,0,0,0,0,100,7,0,0,219,10,0,0,140,7,0,0,252,10,0,0,72,2,0,0,0,0,0,0,100,7,0,0,122,11,0,0,140,7,0,0,24,11,0,0,184,0,0,0,0,0,0,0,100,7,0,0,162,11,0,0,140,7,0,0,210,11,0,0,184,0,0,0,0,0,0,0,100,7,0,0,55,12,0,0,140,7,0,0,106,12,0,0,184,0,0,0,0,0,0,0,100,7,0,0,188,12,0,0,100,7,0,0,77,13,0,0,80,8,0,0,25,13,0,0,0,0,0,0,1,0,0,0,8,1,0,0,0,0,0,0,80,8,0,0,237,12,0,0,0,0,0,0,1,0,0,0,16,1,0,0,0,0,0,0,52,8,0,0,114,13,0,0,0,0,0,0,40,1,0,0,52,8,0,0,159,13,0,0,1,0,0,0,40,1,0,0,52,8,0,0,239,13,0,0,0,0,0,0,72,0,0,0,52,8,0,0,248,13,0,0,1,0,0,0,72,0,0,0,52,8,0,0,11,14,0,0,1,0,0,0,80,0,0,0,100,7,0,0,20,14,0,0,52,8,0,0,31,14,0,0,0,0,0,0,144,1,0,0,52,8,0,0,43,14,0,0,1,0,0,0,144,1,0,0,100,7,0,0,85,17,0,0,100,7,0,0,116,17,0,0,100,7,0,0,147,17,0,0,100,7,0,0,178,17,0,0,100,7,0,0,209,17,0,0,100,7,0,0,240,17,0,0,100,7,0,0,15,18,0,0,100,7,0,0,46,18,0,0,100,7,0,0,77,18,0,0,100,7,0,0,108,18,0,0,100,7,0,0,139,18,0,0,100,7,0,0,170,18,0,0,80,8,0,0,201,18,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,80,8,0,0,8,19,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,100,7,0,0,102,29,0,0,140,7,0,0,198,29,0,0,96,2,0,0,0,0,0,0,140,7,0,0,115,29,0,0,112,2,0,0,0,0,0,0,100,7,0,0,148,29,0,0,140,7,0,0,161,29,0,0,80,2,0,0,0,0,0,0,140,7,0,0,233,30,0,0,72,2,0,0,0,0,0,0,140,7,0,0,5,31,0,0,72,2,0,0,0,0,0,0,140,7,0,0,21,31,0,0,152,2,0,0,0,0,0,0,140,7,0,0,38,31,0,0,152,2,0,0,0,0,0,0,140,7,0,0,91,31,0,0,96,2,0,0,0,0,0,0,140,7,0,0,55,31,0,0,200,2,0,0,0,0,0,0,140,7,0,0,125,31,0,0,96,2,0,0,0,0,0,0,24,8,0,0,165,31,0,0,24,8,0,0,167,31,0,0,24,8,0,0,170,31,0,0,24,8,0,0,172,31,0,0,24,8,0,0,174,31,0,0,24,8,0,0,176,31,0,0,24,8,0,0,178,31,0,0,24,8,0,0,180,31,0,0,24,8,0,0,182,31,0,0,24,8,0,0,184,31,0,0,24,8,0,0,186,31,0,0,24,8,0,0,188,31,0,0,24,8,0,0,190,31,0,0,24,8,0,0,192,31,0,0,140,7,0,0,194,31,0,0,80,2,0,0,0,0,0,0,96,3,0,0,16,0,0,0,64,3,0,0,40,0,0,0,0,0,0,0,56,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,0,0,0,0,48,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,96,0,0,0,0,0,0,0,120,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,144,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,168,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,0,0,0,0,192,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,0,0,0,0,184,0,0,0,43,0,0,0,44,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,216,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,0,0,0,0,240,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,64,1,0,0,248,2,0,0,64,1,0,0,96,0,0,0,248,2,0,0,64,1,0,0,64,3,0,0,96,0,0,0,64,3,0,0,80,1,0,0,40,0,0,0,40,1,0,0,64,3,0,0,8,3,0,0,40,1,0,0,64,3,0,0,96,0,0,0,96,0,0,0,40,0,0,0,152,1,0,0,40,0,0,0,40,0,0,0,96,0,0,0,152,1,0,0,100,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,65,0,0,0,58,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,65,0,0,0,66,34,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,212,6,0,0,67,0,0,0,93,29,0,0,0,0,0,0,80,2,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,0,0,0,0,120,2,0,0,68,0,0,0,76,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,0,0,0,0,136,2,0,0,80,0,0,0,81,0,0,0,82,0,0,0,0,0,0,0,72,2,0,0,83,0,0,0,84,0,0,0,33,0,0,0,0,0,0,0,152,2,0,0,85,0,0,0,86,0,0,0,87,0,0,0,0,0,0,0,168,2,0,0,85,0,0,0,88,0,0,0,87,0,0,0,0,0,0,0,184,2,0,0,85,0,0,0,89,0,0,0,87,0,0,0,0,0,0,0,232,2,0,0,68,0,0,0,90,0,0,0,70,0,0,0,71,0,0,0,91,0,0,0,0,0,0,0,216,2,0,0,68,0,0,0,92,0,0,0,70,0,0,0,71,0,0,0,93,0,0,0,0,0,0,0,104,3,0,0,68,0,0,0,94,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,86,101,99,116,111,114,72,78,111,100,101,0,72,66,97,115,105,115,0,120,0,121,0,114,0,72,78,111,100,101,0,99,104,105,108,100,114,101,110,0,118,97,108,117,101,0,72,105,101,114,97,114,99,104,121,0,112,97,99,107,0,111,98,106,101,99,116,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,78,83,116,51,95,95,50,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,108,101,110,103,116,104,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,115,105,122,101,0,112,97,100,100,105,110,103,0,110,117,109,98,101,114,0,114,97,100,105,117,115,0,102,117,110,99,116,105,111,110,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,53,95,69,69,70,100,83,52,95,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,100,80,53,72,78,111,100,101,69,69,69,0,80,53,72,78,111,100,101,0,53,72,78,111,100,101,0,54,72,66,97,115,105,115,0,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,95,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,48,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,53,95,69,69,70,100,83,52,95,69,69,69,0,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,48,95,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,49,95,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,53,95,69,69,70,100,83,52,95,69,69,69,0,90,78,57,72,105,101,114,97,114,99,104,121,52,112,97,99,107,69,118,69,85,108,80,53,72,78,111,100,101,69,49,95,0,78,83,116,51,95,95,50,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,49,48,114,97,100,105,117,115,76,101,97,102,78,83,95,56,102,117,110,99,116,105,111,110,73,70,100,80,53,72,78,111,100,101,69,69,69,69,51,36,95,48,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,55,95,69,69,70,118,83,52,95,69,69,69,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,118,80,53,72,78,111,100,101,69,69,69,0,90,49,48,114,97,100,105,117,115,76,101,97,102,78,83,116,51,95,95,50,56,102,117,110,99,116,105,111,110,73,70,100,80,53,72,78,111,100,101,69,69,69,69,51,36,95,48,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,49,50,112,97,99,107,67,104,105,108,100,114,101,110,78,83,95,56,102,117,110,99,116,105,111,110,73,70,100,80,53,72,78,111,100,101,69,69,69,100,69,51,36,95,49,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,55,95,69,69,70,118,83,52,95,69,69,69,0,90,49,50,112,97,99,107,67,104,105,108,100,114,101,110,78,83,116,51,95,95,50,56,102,117,110,99,116,105,111,110,73,70,100,80,53,72,78,111,100,101,69,69,69,100,69,51,36,95,49,0,78,83,116,51,95,95,50,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,49,52,116,114,97,110,115,108,97,116,101,67,104,105,108,100,100,69,51,36,95,50,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,70,118,80,53,72,78,111,100,101,69,69,69,0,90,49,52,116,114,97,110,115,108,97,116,101,67,104,105,108,100,100,69,51,36,95,50,0,112,117,115,104,95,98,97,99,107,0,114,101,115,105,122,101,0,103,101,116,0,115,101,116,0,78,83,116,51,95,95,50,54,118,101,99,116,111,114,73,80,53,72,78,111,100,101,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,69,69,0,78,83,116,51,95,95,50,49,51,95,95,118,101,99,116,111,114,95,98,97,115,101,73,80,53,72,78,111,100,101,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,69,69,0,78,83,116,51,95,95,50,50,48,95,95,118,101,99,116,111,114,95,98,97,115,101,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,80,78,83,116,51,95,95,50,54,118,101,99,116,111,114,73,80,53,72,78,111,100,101,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,69,69,0,80,75,78,83,116,51,95,95,50,54,118,101,99,116,111,114,73,80,53,72,78,111,100,101,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,69,69,0,105,105,0,118,0,118,105,0,118,105,105,105,0,118,105,105,105,105,0,105,105,105,0,105,105,105,105,0,105,105,105,105,105,0,80,54,72,66,97,115,105,115,0,80,75,54,72,66,97,115,105,115,0,100,105,105,0,118,105,105,100,0,80,75,53,72,78,111,100,101,0,57,72,105,101,114,97,114,99,104,121,0,80,57,72,105,101,114,97,114,99,104,121,0,80,75,57,72,105,101,114,97,114,99,104,121,0,118,111,105,100,0,98,111,111,108,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,115,116,100,58,58,119,115,116,114,105,110,103,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,78,83,116,51,95,95,50,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,118,101,99,116,111,114,0,98,97,115,105,99,95,115,116,114,105,110,103,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,83,116,57,101,120,99,101,112,116,105,111,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,83,116,57,98,97,100,95,97,108,108,111,99,0,115,116,100,58,58,101,120,99,101,112,116,105,111,110,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,118,0,68,110,0,98,0,99,0,104,0,97,0,115,0,116,0,105,0,106,0,108,0,109,0,102,0,100,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((Runtime.setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((Runtime.setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((Runtime.setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((Runtime.setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

   
  Module["_memset"] = _memset;

  
  
  var emval_symbols={};function getStringOrSymbol(address) {
      var symbol = emval_symbols[address];
      if (symbol === undefined) {
          return readLatin1String(address);
      } else {
          return symbol;
      }
    }
  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __emval_new_cstring(v) {
      return __emval_register(getStringOrSymbol(v));
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  
  
  
  function _free() {
  }
  Module["_free"] = _free;function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function requireRegisteredType(rawType, humanName) {
      var impl = registeredTypes[rawType];
      if (undefined === impl) {
          throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
      }
      return impl;
    }function __emval_lookupTypes(argCount, argTypes, argWireTypes) {
      var a = new Array(argCount);
      for (var i = 0; i < argCount; ++i) {
          a[i] = requireRegisteredType(
              HEAP32[(argTypes >> 2) + i],
              "parameter " + i);
      }
      return a;
    }
  
  function requireHandle(handle) {
      if (!handle) {
          throwBindingError('Cannot use deleted val. handle = ' + handle);
      }
      return emval_handle_array[handle].value;
    }function __emval_call(handle, argCount, argTypes, argv) {
      handle = requireHandle(handle);
      var types = __emval_lookupTypes(argCount, argTypes);
  
      var args = new Array(argCount);
      for (var i = 0; i < argCount; ++i) {
          var type = types[i];
          args[i] = type['readValueFromPointer'](argv);
          argv += type['argPackAdvance'];
      }
  
      var rv = handle.apply(undefined, args);
      return __emval_register(rv);
    }

  function _abort() {
      Module['abort']();
    }

  function __emval_as(handle, returnType, destructorsRef) {
      handle = requireHandle(handle);
      returnType = requireRegisteredType(returnType, 'emval::as');
      var destructors = [];
      var rd = __emval_register(destructors);
      HEAP32[destructorsRef >> 2] = rd;
      return returnType['toWireType'](destructors, handle);
    }

  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      // Clear state flag.
      Module['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  
  
  
  function ClassHandle_isAliasOf(other) {
      if (!(this instanceof ClassHandle)) {
          return false;
      }
      if (!(other instanceof ClassHandle)) {
          return false;
      }
  
      var leftClass = this.$$.ptrType.registeredClass;
      var left = this.$$.ptr;
      var rightClass = other.$$.ptrType.registeredClass;
      var right = other.$$.ptr;
  
      while (leftClass.baseClass) {
          left = leftClass.upcast(left);
          leftClass = leftClass.baseClass;
      }
  
      while (rightClass.baseClass) {
          right = rightClass.upcast(right);
          rightClass = rightClass.baseClass;
      }
  
      return leftClass === rightClass && left === right;
    }
  
  
  function shallowCopyInternalPointer(o) {
      return {
          count: o.count,
          deleteScheduled: o.deleteScheduled,
          preservePointerOnDelete: o.preservePointerOnDelete,
          ptr: o.ptr,
          ptrType: o.ptrType,
          smartPtr: o.smartPtr,
          smartPtrType: o.smartPtrType,
      };
    }
  
  function throwInstanceAlreadyDeleted(obj) {
      function getInstanceTypeName(handle) {
        return handle.$$.ptrType.registeredClass.name;
      }
      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
    }function ClassHandle_clone() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.preservePointerOnDelete) {
          this.$$.count.value += 1;
          return this;
      } else {
          var clone = Object.create(Object.getPrototypeOf(this), {
              $$: {
                  value: shallowCopyInternalPointer(this.$$),
              }
          });
  
          clone.$$.count.value += 1;
          clone.$$.deleteScheduled = false;
          return clone;
      }
    }
  
  
  function runDestructor(handle) {
      var $$ = handle.$$;
      if ($$.smartPtr) {
          $$.smartPtrType.rawDestructor($$.smartPtr);
      } else {
          $$.ptrType.registeredClass.rawDestructor($$.ptr);
      }
    }function ClassHandle_delete() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
  
      this.$$.count.value -= 1;
      var toDelete = 0 === this.$$.count.value;
      if (toDelete) {
          runDestructor(this);
      }
      if (!this.$$.preservePointerOnDelete) {
          this.$$.smartPtr = undefined;
          this.$$.ptr = undefined;
      }
    }
  
  function ClassHandle_isDeleted() {
      return !this.$$.ptr;
    }
  
  
  var delayFunction=undefined;
  
  var deletionQueue=[];
  
  function flushPendingDeletes() {
      while (deletionQueue.length) {
          var obj = deletionQueue.pop();
          obj.$$.deleteScheduled = false;
          obj['delete']();
      }
    }function ClassHandle_deleteLater() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
      deletionQueue.push(this);
      if (deletionQueue.length === 1 && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
      this.$$.deleteScheduled = true;
      return this;
    }function init_ClassHandle() {
      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;
      ClassHandle.prototype['clone'] = ClassHandle_clone;
      ClassHandle.prototype['delete'] = ClassHandle_delete;
      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;
      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;
    }function ClassHandle() {
    }
  
  var registeredPointers={};
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function RegisteredClass(
      name,
      constructor,
      instancePrototype,
      rawDestructor,
      baseClass,
      getActualType,
      upcast,
      downcast
    ) {
      this.name = name;
      this.constructor = constructor;
      this.instancePrototype = instancePrototype;
      this.rawDestructor = rawDestructor;
      this.baseClass = baseClass;
      this.getActualType = getActualType;
      this.upcast = upcast;
      this.downcast = downcast;
      this.pureVirtualFunctions = [];
    }
  
  
  
  function upcastPointer(ptr, ptrClass, desiredClass) {
      while (ptrClass !== desiredClass) {
          if (!ptrClass.upcast) {
              throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
          }
          ptr = ptrClass.upcast(ptr);
          ptrClass = ptrClass.baseClass;
      }
      return ptr;
    }function constNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  function genericPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
  
          if (this.isSmartPointer) {
              var ptr = this.rawConstructor();
              if (destructors !== null) {
                  destructors.push(this.rawDestructor, ptr);
              }
              return ptr;
          } else {
              return 0;
          }
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (!this.isConst && handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
  
      if (this.isSmartPointer) {
          // TODO: this is not strictly true
          // We could support BY_EMVAL conversions from raw pointers to smart pointers
          // because the smart pointer can hold a reference to the handle
          if (undefined === handle.$$.smartPtr) {
              throwBindingError('Passing raw pointer to smart pointer is illegal');
          }
  
          switch (this.sharingPolicy) {
              case 0: // NONE
                  // no upcasting
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
                  }
                  break;
  
              case 1: // INTRUSIVE
                  ptr = handle.$$.smartPtr;
                  break;
  
              case 2: // BY_EMVAL
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      var clonedHandle = handle['clone']();
                      ptr = this.rawShare(
                          ptr,
                          __emval_register(function() {
                              clonedHandle['delete']();
                          })
                      );
                      if (destructors !== null) {
                          destructors.push(this.rawDestructor, ptr);
                      }
                  }
                  break;
  
              default:
                  throwBindingError('Unsupporting sharing policy');
          }
      }
      return ptr;
    }
  
  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }
  
  function RegisteredPointer_getPointee(ptr) {
      if (this.rawGetPointee) {
          ptr = this.rawGetPointee(ptr);
      }
      return ptr;
    }
  
  function RegisteredPointer_destructor(ptr) {
      if (this.rawDestructor) {
          this.rawDestructor(ptr);
      }
    }
  
  function RegisteredPointer_deleteObject(handle) {
      if (handle !== null) {
          handle['delete']();
      }
    }
  
  
  function downcastPointer(ptr, ptrClass, desiredClass) {
      if (ptrClass === desiredClass) {
          return ptr;
      }
      if (undefined === desiredClass.baseClass) {
          return null; // no conversion
      }
  
      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
      if (rv === null) {
          return null;
      }
      return desiredClass.downcast(rv);
    }
  
  
  
  
  function getInheritedInstanceCount() {
      return Object.keys(registeredInstances).length;
    }
  
  function getLiveInheritedInstances() {
      var rv = [];
      for (var k in registeredInstances) {
          if (registeredInstances.hasOwnProperty(k)) {
              rv.push(registeredInstances[k]);
          }
      }
      return rv;
    }
  
  function setDelayFunction(fn) {
      delayFunction = fn;
      if (deletionQueue.length && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
    }function init_embind() {
      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;
      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;
      Module['flushPendingDeletes'] = flushPendingDeletes;
      Module['setDelayFunction'] = setDelayFunction;
    }var registeredInstances={};
  
  function getBasestPointer(class_, ptr) {
      if (ptr === undefined) {
          throwBindingError('ptr should not be undefined');
      }
      while (class_.baseClass) {
          ptr = class_.upcast(ptr);
          class_ = class_.baseClass;
      }
      return ptr;
    }function getInheritedInstance(class_, ptr) {
      ptr = getBasestPointer(class_, ptr);
      return registeredInstances[ptr];
    }
  
  function makeClassHandle(prototype, record) {
      if (!record.ptrType || !record.ptr) {
          throwInternalError('makeClassHandle requires ptr and ptrType');
      }
      var hasSmartPtrType = !!record.smartPtrType;
      var hasSmartPtr = !!record.smartPtr;
      if (hasSmartPtrType !== hasSmartPtr) {
          throwInternalError('Both smartPtrType and smartPtr must be specified');
      }
      record.count = { value: 1 };
      return Object.create(prototype, {
          $$: {
              value: record,
          },
      });
    }function RegisteredPointer_fromWireType(ptr) {
      // ptr is a raw pointer (or a raw smartpointer)
  
      // rawPointer is a maybe-null raw pointer
      var rawPointer = this.getPointee(ptr);
      if (!rawPointer) {
          this.destructor(ptr);
          return null;
      }
  
      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
      if (undefined !== registeredInstance) {
          // JS object has been neutered, time to repopulate it
          if (0 === registeredInstance.$$.count.value) {
              registeredInstance.$$.ptr = rawPointer;
              registeredInstance.$$.smartPtr = ptr;
              return registeredInstance['clone']();
          } else {
              // else, just increment reference count on existing object
              // it already has a reference to the smart pointer
              var rv = registeredInstance['clone']();
              this.destructor(ptr);
              return rv;
          }
      }
  
      function makeDefaultHandle() {
          if (this.isSmartPointer) {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this.pointeeType,
                  ptr: rawPointer,
                  smartPtrType: this,
                  smartPtr: ptr,
              });
          } else {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this,
                  ptr: ptr,
              });
          }
      }
  
      var actualType = this.registeredClass.getActualType(rawPointer);
      var registeredPointerRecord = registeredPointers[actualType];
      if (!registeredPointerRecord) {
          return makeDefaultHandle.call(this);
      }
  
      var toType;
      if (this.isConst) {
          toType = registeredPointerRecord.constPointerType;
      } else {
          toType = registeredPointerRecord.pointerType;
      }
      var dp = downcastPointer(
          rawPointer,
          this.registeredClass,
          toType.registeredClass);
      if (dp === null) {
          return makeDefaultHandle.call(this);
      }
      if (this.isSmartPointer) {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
              smartPtrType: this,
              smartPtr: ptr,
          });
      } else {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
          });
      }
    }function init_RegisteredPointer() {
      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
      RegisteredPointer.prototype['argPackAdvance'] = 8;
      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;
      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;
      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;
    }function RegisteredPointer(
      name,
      registeredClass,
      isReference,
      isConst,
  
      // smart pointer properties
      isSmartPointer,
      pointeeType,
      sharingPolicy,
      rawGetPointee,
      rawConstructor,
      rawShare,
      rawDestructor
    ) {
      this.name = name;
      this.registeredClass = registeredClass;
      this.isReference = isReference;
      this.isConst = isConst;
  
      // smart pointer properties
      this.isSmartPointer = isSmartPointer;
      this.pointeeType = pointeeType;
      this.sharingPolicy = sharingPolicy;
      this.rawGetPointee = rawGetPointee;
      this.rawConstructor = rawConstructor;
      this.rawShare = rawShare;
      this.rawDestructor = rawDestructor;
  
      if (!isSmartPointer && registeredClass.baseClass === undefined) {
          if (isConst) {
              this['toWireType'] = constNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          } else {
              this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          }
      } else {
          this['toWireType'] = genericPointerToWireType;
          // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
          // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
          // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
          //       craftInvokerFunction altogether.
      }
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module["asm"]['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module["asm"]['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_class(
      rawType,
      rawPointerType,
      rawConstPointerType,
      baseClassRawType,
      getActualTypeSignature,
      getActualType,
      upcastSignature,
      upcast,
      downcastSignature,
      downcast,
      name,
      destructorSignature,
      rawDestructor
    ) {
      name = readLatin1String(name);
      getActualType = requireFunction(getActualTypeSignature, getActualType);
      if (upcast) {
          upcast = requireFunction(upcastSignature, upcast);
      }
      if (downcast) {
          downcast = requireFunction(downcastSignature, downcast);
      }
      rawDestructor = requireFunction(destructorSignature, rawDestructor);
      var legalFunctionName = makeLegalFunctionName(name);
  
      exposePublicSymbol(legalFunctionName, function() {
          // this code cannot run if baseClassRawType is zero
          throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
      });
  
      whenDependentTypesAreResolved(
          [rawType, rawPointerType, rawConstPointerType],
          baseClassRawType ? [baseClassRawType] : [],
          function(base) {
              base = base[0];
  
              var baseClass;
              var basePrototype;
              if (baseClassRawType) {
                  baseClass = base.registeredClass;
                  basePrototype = baseClass.instancePrototype;
              } else {
                  basePrototype = ClassHandle.prototype;
              }
  
              var constructor = createNamedFunction(legalFunctionName, function() {
                  if (Object.getPrototypeOf(this) !== instancePrototype) {
                      throw new BindingError("Use 'new' to construct " + name);
                  }
                  if (undefined === registeredClass.constructor_body) {
                      throw new BindingError(name + " has no accessible constructor");
                  }
                  var body = registeredClass.constructor_body[arguments.length];
                  if (undefined === body) {
                      throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
                  }
                  return body.apply(this, arguments);
              });
  
              var instancePrototype = Object.create(basePrototype, {
                  constructor: { value: constructor },
              });
  
              constructor.prototype = instancePrototype;
  
              var registeredClass = new RegisteredClass(
                  name,
                  constructor,
                  instancePrototype,
                  rawDestructor,
                  baseClass,
                  getActualType,
                  upcast,
                  downcast);
  
              var referenceConverter = new RegisteredPointer(
                  name,
                  registeredClass,
                  true,
                  false,
                  false);
  
              var pointerConverter = new RegisteredPointer(
                  name + '*',
                  registeredClass,
                  false,
                  false,
                  false);
  
              var constPointerConverter = new RegisteredPointer(
                  name + ' const*',
                  registeredClass,
                  false,
                  true,
                  false);
  
              registeredPointers[rawType] = {
                  pointerType: pointerConverter,
                  constPointerType: constPointerConverter
              };
  
              replacePublicSymbol(legalFunctionName, constructor);
  
              return [referenceConverter, pointerConverter, constPointerConverter];
          }
      );
    }

  function ___lock() {}

  function ___unlock() {}

  function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __emval_take_value(type, argv) {
      type = requireRegisteredType(type, '_emval_take_value');
      var v = type['readValueFromPointer'](argv);
      return __emval_register(v);
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
      
      var fromWireType = function(value) {
          return value;
      };
      
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return value | 0;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __emval_get_property(handle, key) {
      handle = requireHandle(handle);
      key = requireHandle(key);
      return __emval_register(handle[key]);
    }

  function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }
  
  function validateThis(this_, classType, humanName) {
      if (!(this_ instanceof Object)) {
          throwBindingError(humanName + ' with invalid "this": ' + this_);
      }
      if (!(this_ instanceof classType.registeredClass.constructor)) {
          throwBindingError(humanName + ' incompatible with "this" of type ' + this_.constructor.name);
      }
      if (!this_.$$.ptr) {
          throwBindingError('cannot call emscripten binding method ' + humanName + ' on deleted object');
      }
  
      // todo: kill this
      return upcastPointer(
          this_.$$.ptr,
          this_.$$.ptrType.registeredClass,
          classType.registeredClass);
    }function __embind_register_class_property(
      classType,
      fieldName,
      getterReturnType,
      getterSignature,
      getter,
      getterContext,
      setterArgumentType,
      setterSignature,
      setter,
      setterContext
    ) {
      fieldName = readLatin1String(fieldName);
      getter = requireFunction(getterSignature, getter);
  
      whenDependentTypesAreResolved([], [classType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + fieldName;
          var desc = {
              get: function() {
                  throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
              },
              enumerable: true,
              configurable: true
          };
          if (setter) {
              desc.set = function() {
                  throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
              };
          } else {
              desc.set = function(v) {
                  throwBindingError(humanName + ' is a read-only property');
              };
          }
  
          Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
  
          whenDependentTypesAreResolved(
              [],
              (setter ? [getterReturnType, setterArgumentType] : [getterReturnType]),
          function(types) {
              var getterReturnType = types[0];
              var desc = {
                  get: function() {
                      var ptr = validateThis(this, classType, humanName + ' getter');
                      return getterReturnType['fromWireType'](getter(getterContext, ptr));
                  },
                  enumerable: true
              };
  
              if (setter) {
                  setter = requireFunction(setterSignature, setter);
                  var setterArgumentType = types[1];
                  desc.set = function(v) {
                      var ptr = validateThis(this, classType, humanName + ' setter');
                      var destructors = [];
                      setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, v));
                      runDestructors(destructors);
                  };
              }
  
              Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
              return [];
          });
  
          return [];
      });
    }

  function __emval_incref(handle) {
      if (handle > 4) {
          emval_handle_array[handle].refcount += 1;
      }
    }

  function __emval_typeof(handle) {
      handle = requireHandle(handle);
      return __emval_register(typeof handle);
    }

  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function __emval_run_destructors(handle) {
      var destructors = emval_handle_array[handle].value;
      runDestructors(destructors);
      __emval_decref(handle);
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___udivdi3"] = ___udivdi3;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    } 
  Module["_sbrk"] = _sbrk;

   
  Module["_memmove"] = _memmove;

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by enlargeMemory().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function ___gxx_personality_v0() {
    }

   
  Module["___uremdi3"] = ___uremdi3;

  function ___cxa_rethrow() {
      var ptr = EXCEPTIONS.caught.pop();
      if (!EXCEPTIONS.infos[ptr].rethrown) {
        // Only pop if the corresponding push was through rethrow_primary_exception
        EXCEPTIONS.caught.push(ptr)
        EXCEPTIONS.infos[ptr].rethrown = true;
      }
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;

  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }function __embind_register_class_constructor(
      rawClassType,
      argCount,
      rawArgTypesAddr,
      invokerSignature,
      invoker,
      rawConstructor
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      invoker = requireFunction(invokerSignature, invoker);
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = 'constructor ' + classType.name;
  
          if (undefined === classType.registeredClass.constructor_body) {
              classType.registeredClass.constructor_body = [];
          }
          if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
              throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount-1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
          }
          classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
              throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
          };
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
                  if (arguments.length !== argCount - 1) {
                      throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));
                  }
                  var destructors = [];
                  var args = new Array(argCount);
                  args[0] = rawConstructor;
                  for (var i = 1; i < argCount; ++i) {
                      args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);
                  }
  
                  var ptr = invoker.apply(null, args);
                  runDestructors(destructors);
  
                  return argTypes[0]['fromWireType'](ptr);
              };
              return [];
          });
          return [];
      });
    }


  function _llvm_trap() {
      abort('trap!');
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      var returns = (argTypes[0].name !== "void");
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }function __embind_register_class_function(
      rawClassType,
      methodName,
      argCount,
      rawArgTypesAddr, // [ReturnType, ThisType, Args...]
      invokerSignature,
      rawInvoker,
      context,
      isPureVirtual
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      methodName = readLatin1String(methodName);
      rawInvoker = requireFunction(invokerSignature, rawInvoker);
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + methodName;
  
          if (isPureVirtual) {
              classType.registeredClass.pureVirtualFunctions.push(methodName);
          }
  
          function unboundTypesHandler() {
              throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
          }
  
          var proto = classType.registeredClass.instancePrototype;
          var method = proto[methodName];
          if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {
              // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.
              unboundTypesHandler.argCount = argCount - 2;
              unboundTypesHandler.className = classType.name;
              proto[methodName] = unboundTypesHandler;
          } else {
              // There was an existing function with the same name registered. Set up a function overload routing table.
              ensureOverloadTable(proto, methodName, humanName);
              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
          }
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
  
              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
  
              // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
              // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.
              if (undefined === proto[methodName].overloadTable) {
                  // Set argCount in case an overload is registered later
                  memberFunction.argCount = argCount - 2;
                  proto[methodName] = memberFunction;
              } else {
                  proto[methodName].overloadTable[argCount - 2] = memberFunction;
              }
  
              return [];
          });
          return [];
      });
    }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Uint8ClampedArray) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
init_emval();;
init_ClassHandle();
init_RegisteredPointer();
init_embind();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


function nullFunc_viddd(x) { Module["printErr"]("Invalid function pointer called with signature 'viddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_dii(x) { Module["printErr"]("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vid(x) { Module["printErr"]("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_dd(x) { Module["printErr"]("Invalid function pointer called with signature 'dd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viid(x) { Module["printErr"]("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_id(x) { Module["printErr"]("Invalid function pointer called with signature 'id'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_viddd(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viddd"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_dii(index,a1,a2) {
  try {
    return Module["dynCall_dii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_dd(index,a1) {
  try {
    return Module["dynCall_dd"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_id(index,a1) {
  try {
    return Module["dynCall_id"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_viddd": nullFunc_viddd, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_dii": nullFunc_dii, "nullFunc_vid": nullFunc_vid, "nullFunc_di": nullFunc_di, "nullFunc_i": nullFunc_i, "nullFunc_vi": nullFunc_vi, "nullFunc_dd": nullFunc_dd, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_viid": nullFunc_viid, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_iii": nullFunc_iii, "nullFunc_id": nullFunc_id, "nullFunc_iiiiii": nullFunc_iiiiii, "invoke_viddd": invoke_viddd, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiii": invoke_viiiii, "invoke_dii": invoke_dii, "invoke_vid": invoke_vid, "invoke_di": invoke_di, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_dd": invoke_dd, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iiiii": invoke_iiiii, "invoke_viiii": invoke_viiii, "invoke_iii": invoke_iii, "invoke_id": invoke_id, "invoke_iiiiii": invoke_iiiiii, "floatReadValueFromPointer": floatReadValueFromPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "throwInternalError": throwInternalError, "get_first_emval": get_first_emval, "getLiveInheritedInstances": getLiveInheritedInstances, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "ClassHandle": ClassHandle, "getShiftFromSize": getShiftFromSize, "__emval_get_property": __emval_get_property, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "runDestructor": runDestructor, "throwInstanceAlreadyDeleted": throwInstanceAlreadyDeleted, "RegisteredPointer_fromWireType": RegisteredPointer_fromWireType, "init_RegisteredPointer": init_RegisteredPointer, "ClassHandle_isAliasOf": ClassHandle_isAliasOf, "flushPendingDeletes": flushPendingDeletes, "makeClassHandle": makeClassHandle, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "__embind_register_class_constructor": __embind_register_class_constructor, "___cxa_rethrow": ___cxa_rethrow, "init_ClassHandle": init_ClassHandle, "___syscall140": ___syscall140, "ClassHandle_clone": ClassHandle_clone, "___syscall146": ___syscall146, "throwBindingError": throwBindingError, "RegisteredClass": RegisteredClass, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "embind_init_charCodes": embind_init_charCodes, "__emval_as": __emval_as, "___setErrNo": ___setErrNo, "__embind_register_bool": __embind_register_bool, "___resumeException": ___resumeException, "createNamedFunction": createNamedFunction, "validateThis": validateThis, "__embind_register_emval": __embind_register_emval, "__emval_decref": __emval_decref, "_pthread_once": _pthread_once, "_llvm_trap": _llvm_trap, "__embind_register_class": __embind_register_class, "constNoSmartPtrRawPointerToWireType": constNoSmartPtrRawPointerToWireType, "heap32VectorToArray": heap32VectorToArray, "__emval_lookupTypes": __emval_lookupTypes, "__emval_run_destructors": __emval_run_destructors, "ClassHandle_delete": ClassHandle_delete, "___lock": ___lock, "___syscall6": ___syscall6, "ensureOverloadTable": ensureOverloadTable, "new_": new_, "downcastPointer": downcastPointer, "replacePublicSymbol": replacePublicSymbol, "init_embind": init_embind, "ClassHandle_deleteLater": ClassHandle_deleteLater, "integerReadValueFromPointer": integerReadValueFromPointer, "RegisteredPointer_deleteObject": RegisteredPointer_deleteObject, "ClassHandle_isDeleted": ClassHandle_isDeleted, "__embind_register_integer": __embind_register_integer, "___cxa_allocate_exception": ___cxa_allocate_exception, "__emval_take_value": __emval_take_value, "___cxa_end_catch": ___cxa_end_catch, "_embind_repr": _embind_repr, "__emval_call": __emval_call, "__embind_register_class_function": __embind_register_class_function, "throwUnboundTypeError": throwUnboundTypeError, "craftInvokerFunction": craftInvokerFunction, "runDestructors": runDestructors, "requireRegisteredType": requireRegisteredType, "makeLegalFunctionName": makeLegalFunctionName, "_pthread_key_create": _pthread_key_create, "upcastPointer": upcastPointer, "init_emval": init_emval, "shallowCopyInternalPointer": shallowCopyInternalPointer, "nonConstNoSmartPtrRawPointerToWireType": nonConstNoSmartPtrRawPointerToWireType, "_abort": _abort, "requireHandle": requireHandle, "getTypeName": getTypeName, "__embind_register_class_property": __embind_register_class_property, "exposePublicSymbol": exposePublicSymbol, "__embind_register_std_string": __embind_register_std_string, "___cxa_pure_virtual": ___cxa_pure_virtual, "_pthread_getspecific": _pthread_getspecific, "RegisteredPointer_destructor": RegisteredPointer_destructor, "__embind_register_memory_view": __embind_register_memory_view, "getInheritedInstance": getInheritedInstance, "__emval_typeof": __emval_typeof, "setDelayFunction": setDelayFunction, "___gxx_personality_v0": ___gxx_personality_v0, "extendError": extendError, "__embind_register_void": __embind_register_void, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "RegisteredPointer_getPointee": RegisteredPointer_getPointee, "__emval_register": __emval_register, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "getStringOrSymbol": getStringOrSymbol, "__emval_incref": __emval_incref, "RegisteredPointer": RegisteredPointer, "readLatin1String": readLatin1String, "getBasestPointer": getBasestPointer, "getInheritedInstanceCount": getInheritedInstanceCount, "__embind_register_float": __embind_register_float, "___syscall54": ___syscall54, "___unlock": ___unlock, "__embind_register_std_wstring": __embind_register_std_wstring, "_pthread_setspecific": _pthread_setspecific, "genericPointerToWireType": genericPointerToWireType, "registerType": registerType, "___cxa_throw": ___cxa_throw, "__emval_new_cstring": __emval_new_cstring, "count_emval_handles": count_emval_handles, "requireFunction": requireFunction, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_viddd=env.nullFunc_viddd;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_dii=env.nullFunc_dii;
  var nullFunc_vid=env.nullFunc_vid;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_dd=env.nullFunc_dd;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_viid=env.nullFunc_viid;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_id=env.nullFunc_id;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var invoke_viddd=env.invoke_viddd;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_dii=env.invoke_dii;
  var invoke_vid=env.invoke_vid;
  var invoke_di=env.invoke_di;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_dd=env.invoke_dd;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_viid=env.invoke_viid;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_iii=env.invoke_iii;
  var invoke_id=env.invoke_id;
  var invoke_iiiiii=env.invoke_iiiiii;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var getLiveInheritedInstances=env.getLiveInheritedInstances;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ClassHandle=env.ClassHandle;
  var getShiftFromSize=env.getShiftFromSize;
  var __emval_get_property=env.__emval_get_property;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var runDestructor=env.runDestructor;
  var throwInstanceAlreadyDeleted=env.throwInstanceAlreadyDeleted;
  var RegisteredPointer_fromWireType=env.RegisteredPointer_fromWireType;
  var init_RegisteredPointer=env.init_RegisteredPointer;
  var ClassHandle_isAliasOf=env.ClassHandle_isAliasOf;
  var flushPendingDeletes=env.flushPendingDeletes;
  var makeClassHandle=env.makeClassHandle;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var __embind_register_class_constructor=env.__embind_register_class_constructor;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var init_ClassHandle=env.init_ClassHandle;
  var ___syscall140=env.___syscall140;
  var ClassHandle_clone=env.ClassHandle_clone;
  var ___syscall146=env.___syscall146;
  var throwBindingError=env.throwBindingError;
  var RegisteredClass=env.RegisteredClass;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var embind_init_charCodes=env.embind_init_charCodes;
  var __emval_as=env.__emval_as;
  var ___setErrNo=env.___setErrNo;
  var __embind_register_bool=env.__embind_register_bool;
  var ___resumeException=env.___resumeException;
  var createNamedFunction=env.createNamedFunction;
  var validateThis=env.validateThis;
  var __embind_register_emval=env.__embind_register_emval;
  var __emval_decref=env.__emval_decref;
  var _pthread_once=env._pthread_once;
  var _llvm_trap=env._llvm_trap;
  var __embind_register_class=env.__embind_register_class;
  var constNoSmartPtrRawPointerToWireType=env.constNoSmartPtrRawPointerToWireType;
  var heap32VectorToArray=env.heap32VectorToArray;
  var __emval_lookupTypes=env.__emval_lookupTypes;
  var __emval_run_destructors=env.__emval_run_destructors;
  var ClassHandle_delete=env.ClassHandle_delete;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var ensureOverloadTable=env.ensureOverloadTable;
  var new_=env.new_;
  var downcastPointer=env.downcastPointer;
  var replacePublicSymbol=env.replacePublicSymbol;
  var init_embind=env.init_embind;
  var ClassHandle_deleteLater=env.ClassHandle_deleteLater;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var RegisteredPointer_deleteObject=env.RegisteredPointer_deleteObject;
  var ClassHandle_isDeleted=env.ClassHandle_isDeleted;
  var __embind_register_integer=env.__embind_register_integer;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var __emval_take_value=env.__emval_take_value;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _embind_repr=env._embind_repr;
  var __emval_call=env.__emval_call;
  var __embind_register_class_function=env.__embind_register_class_function;
  var throwUnboundTypeError=env.throwUnboundTypeError;
  var craftInvokerFunction=env.craftInvokerFunction;
  var runDestructors=env.runDestructors;
  var requireRegisteredType=env.requireRegisteredType;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var _pthread_key_create=env._pthread_key_create;
  var upcastPointer=env.upcastPointer;
  var init_emval=env.init_emval;
  var shallowCopyInternalPointer=env.shallowCopyInternalPointer;
  var nonConstNoSmartPtrRawPointerToWireType=env.nonConstNoSmartPtrRawPointerToWireType;
  var _abort=env._abort;
  var requireHandle=env.requireHandle;
  var getTypeName=env.getTypeName;
  var __embind_register_class_property=env.__embind_register_class_property;
  var exposePublicSymbol=env.exposePublicSymbol;
  var __embind_register_std_string=env.__embind_register_std_string;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _pthread_getspecific=env._pthread_getspecific;
  var RegisteredPointer_destructor=env.RegisteredPointer_destructor;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var getInheritedInstance=env.getInheritedInstance;
  var __emval_typeof=env.__emval_typeof;
  var setDelayFunction=env.setDelayFunction;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var extendError=env.extendError;
  var __embind_register_void=env.__embind_register_void;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var RegisteredPointer_getPointee=env.RegisteredPointer_getPointee;
  var __emval_register=env.__emval_register;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var getStringOrSymbol=env.getStringOrSymbol;
  var __emval_incref=env.__emval_incref;
  var RegisteredPointer=env.RegisteredPointer;
  var readLatin1String=env.readLatin1String;
  var getBasestPointer=env.getBasestPointer;
  var getInheritedInstanceCount=env.getInheritedInstanceCount;
  var __embind_register_float=env.__embind_register_float;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _pthread_setspecific=env._pthread_setspecific;
  var genericPointerToWireType=env.genericPointerToWireType;
  var registerType=env.registerType;
  var ___cxa_throw=env.___cxa_throw;
  var __emval_new_cstring=env.__emval_new_cstring;
  var count_emval_handles=env.count_emval_handles;
  var requireFunction=env.requireFunction;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z5placeP5HNodeS0_S0_($a,$b,$c) {
 $a = $a|0;
 $b = $b|0;
 $c = $c|0;
 var $$sink = 0.0, $$sink2 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $__lcpp_x$addr$i = 0, $__lcpp_y$addr$i = 0.0;
 var $a$addr = 0, $add = 0.0, $add15 = 0.0, $add18 = 0.0, $add29 = 0.0, $add31 = 0.0, $add34 = 0.0, $add38 = 0.0, $add4 = 0.0, $add9 = 0.0, $ax = 0.0, $ay = 0.0, $b$addr = 0, $c$addr = 0, $call$i = 0.0, $call25 = 0.0, $cmp = 0, $conv$i = 0.0, $da = 0.0, $db = 0.0;
 var $dc = 0.0, $div = 0.0, $div27 = 0.0, $dx = 0.0, $dy = 0.0, $mul = 0.0, $mul11 = 0.0, $mul12 = 0.0, $mul14 = 0.0, $mul17 = 0.0, $mul19 = 0.0, $mul21 = 0.0, $mul23 = 0.0, $mul26 = 0.0, $mul28 = 0.0, $mul30 = 0.0, $mul33 = 0.0, $mul35 = 0.0, $mul8 = 0.0, $r = 0;
 var $r1 = 0, $r2 = 0, $r3 = 0, $sub = 0.0, $sub13 = 0.0, $sub20 = 0.0, $sub22 = 0.0, $sub24 = 0.0, $sub36 = 0.0, $sub7 = 0.0, $x10 = 0.0, $y = 0, $y16 = 0.0, $y40 = 0, $y6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $a$addr = $a;
 $b$addr = $b;
 $c$addr = $c;
 $0 = $a$addr; //@line 100 "hierarchy.cpp"
 $1 = +HEAPF64[$0>>3]; //@line 100 "hierarchy.cpp"
 $ax = $1; //@line 100 "hierarchy.cpp"
 $2 = $a$addr; //@line 101 "hierarchy.cpp"
 $y = ((($2)) + 8|0); //@line 101 "hierarchy.cpp"
 $3 = +HEAPF64[$y>>3]; //@line 101 "hierarchy.cpp"
 $ay = $3; //@line 101 "hierarchy.cpp"
 $4 = $b$addr; //@line 102 "hierarchy.cpp"
 $r = ((($4)) + 16|0); //@line 102 "hierarchy.cpp"
 $5 = +HEAPF64[$r>>3]; //@line 102 "hierarchy.cpp"
 $6 = $c$addr; //@line 102 "hierarchy.cpp"
 $r1 = ((($6)) + 16|0); //@line 102 "hierarchy.cpp"
 $7 = +HEAPF64[$r1>>3]; //@line 102 "hierarchy.cpp"
 $add = $5 + $7; //@line 102 "hierarchy.cpp"
 $da = $add; //@line 102 "hierarchy.cpp"
 $8 = $a$addr; //@line 103 "hierarchy.cpp"
 $r2 = ((($8)) + 16|0); //@line 103 "hierarchy.cpp"
 $9 = +HEAPF64[$r2>>3]; //@line 103 "hierarchy.cpp"
 $10 = $c$addr; //@line 103 "hierarchy.cpp"
 $r3 = ((($10)) + 16|0); //@line 103 "hierarchy.cpp"
 $11 = +HEAPF64[$r3>>3]; //@line 103 "hierarchy.cpp"
 $add4 = $9 + $11; //@line 103 "hierarchy.cpp"
 $db = $add4; //@line 103 "hierarchy.cpp"
 $12 = $b$addr; //@line 104 "hierarchy.cpp"
 $13 = +HEAPF64[$12>>3]; //@line 104 "hierarchy.cpp"
 $14 = $ax; //@line 104 "hierarchy.cpp"
 $sub = $13 - $14; //@line 104 "hierarchy.cpp"
 $dx = $sub; //@line 104 "hierarchy.cpp"
 $15 = $b$addr; //@line 105 "hierarchy.cpp"
 $y6 = ((($15)) + 8|0); //@line 105 "hierarchy.cpp"
 $16 = +HEAPF64[$y6>>3]; //@line 105 "hierarchy.cpp"
 $17 = $ay; //@line 105 "hierarchy.cpp"
 $sub7 = $16 - $17; //@line 105 "hierarchy.cpp"
 $dy = $sub7; //@line 105 "hierarchy.cpp"
 $18 = $dx; //@line 106 "hierarchy.cpp"
 $19 = $dx; //@line 106 "hierarchy.cpp"
 $mul = $18 * $19; //@line 106 "hierarchy.cpp"
 $20 = $dy; //@line 106 "hierarchy.cpp"
 $21 = $dy; //@line 106 "hierarchy.cpp"
 $mul8 = $20 * $21; //@line 106 "hierarchy.cpp"
 $add9 = $mul + $mul8; //@line 106 "hierarchy.cpp"
 $dc = $add9; //@line 106 "hierarchy.cpp"
 $22 = $dc; //@line 108 "hierarchy.cpp"
 $cmp = $22 > 0.0; //@line 108 "hierarchy.cpp"
 if ($cmp) {
  $23 = $db; //@line 109 "hierarchy.cpp"
  $24 = $db; //@line 109 "hierarchy.cpp"
  $mul11 = $24 * $23; //@line 109 "hierarchy.cpp"
  $db = $mul11; //@line 109 "hierarchy.cpp"
  $25 = $da; //@line 109 "hierarchy.cpp"
  $26 = $da; //@line 109 "hierarchy.cpp"
  $mul12 = $26 * $25; //@line 109 "hierarchy.cpp"
  $da = $mul12; //@line 109 "hierarchy.cpp"
  $sub13 = $mul11 - $mul12; //@line 109 "hierarchy.cpp"
  $27 = $dc; //@line 109 "hierarchy.cpp"
  $mul14 = 2.0 * $27; //@line 109 "hierarchy.cpp"
  $div = $sub13 / $mul14; //@line 109 "hierarchy.cpp"
  $add15 = 0.5 + $div; //@line 109 "hierarchy.cpp"
  $x10 = $add15; //@line 109 "hierarchy.cpp"
  $28 = $da; //@line 110 "hierarchy.cpp"
  $mul17 = 2.0 * $28; //@line 110 "hierarchy.cpp"
  $29 = $db; //@line 110 "hierarchy.cpp"
  $30 = $dc; //@line 110 "hierarchy.cpp"
  $add18 = $29 + $30; //@line 110 "hierarchy.cpp"
  $mul19 = $mul17 * $add18; //@line 110 "hierarchy.cpp"
  $31 = $dc; //@line 110 "hierarchy.cpp"
  $32 = $db; //@line 110 "hierarchy.cpp"
  $sub20 = $32 - $31; //@line 110 "hierarchy.cpp"
  $db = $sub20; //@line 110 "hierarchy.cpp"
  $33 = $db; //@line 110 "hierarchy.cpp"
  $mul21 = $sub20 * $33; //@line 110 "hierarchy.cpp"
  $sub22 = $mul19 - $mul21; //@line 110 "hierarchy.cpp"
  $34 = $da; //@line 110 "hierarchy.cpp"
  $35 = $da; //@line 110 "hierarchy.cpp"
  $mul23 = $34 * $35; //@line 110 "hierarchy.cpp"
  $sub24 = $sub22 - $mul23; //@line 110 "hierarchy.cpp"
  $__lcpp_x$addr$i = 0;
  $__lcpp_y$addr$i = $sub24;
  $36 = $__lcpp_x$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $conv$i = (+($36|0)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $37 = $__lcpp_y$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $call$i = (+_fmax($conv$i,$37)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $call25 = (+Math_sqrt((+$call$i))); //@line 110 "hierarchy.cpp"
  $38 = $dc; //@line 110 "hierarchy.cpp"
  $mul26 = 2.0 * $38; //@line 110 "hierarchy.cpp"
  $div27 = $call25 / $mul26; //@line 110 "hierarchy.cpp"
  $y16 = $div27; //@line 110 "hierarchy.cpp"
  $39 = $ax; //@line 111 "hierarchy.cpp"
  $40 = $x10; //@line 111 "hierarchy.cpp"
  $41 = $dx; //@line 111 "hierarchy.cpp"
  $mul28 = $40 * $41; //@line 111 "hierarchy.cpp"
  $add29 = $39 + $mul28; //@line 111 "hierarchy.cpp"
  $42 = $y16; //@line 111 "hierarchy.cpp"
  $43 = $dy; //@line 111 "hierarchy.cpp"
  $mul30 = $42 * $43; //@line 111 "hierarchy.cpp"
  $add31 = $add29 + $mul30; //@line 111 "hierarchy.cpp"
  $44 = $c$addr; //@line 111 "hierarchy.cpp"
  HEAPF64[$44>>3] = $add31; //@line 111 "hierarchy.cpp"
  $45 = $ay; //@line 112 "hierarchy.cpp"
  $46 = $x10; //@line 112 "hierarchy.cpp"
  $47 = $dy; //@line 112 "hierarchy.cpp"
  $mul33 = $46 * $47; //@line 112 "hierarchy.cpp"
  $add34 = $45 + $mul33; //@line 112 "hierarchy.cpp"
  $48 = $y16; //@line 112 "hierarchy.cpp"
  $49 = $dx; //@line 112 "hierarchy.cpp"
  $mul35 = $48 * $49; //@line 112 "hierarchy.cpp"
  $sub36 = $add34 - $mul35; //@line 112 "hierarchy.cpp"
  $50 = $c$addr; //@line 112 "hierarchy.cpp"
  $$sink = $sub36;$$sink2 = $50;
  $y40 = ((($$sink2)) + 8|0);
  HEAPF64[$y40>>3] = $$sink;
  STACKTOP = sp;return; //@line 117 "hierarchy.cpp"
 } else {
  $51 = $ax; //@line 114 "hierarchy.cpp"
  $52 = $db; //@line 114 "hierarchy.cpp"
  $add38 = $51 + $52; //@line 114 "hierarchy.cpp"
  $53 = $c$addr; //@line 114 "hierarchy.cpp"
  HEAPF64[$53>>3] = $add38; //@line 114 "hierarchy.cpp"
  $54 = $ay; //@line 115 "hierarchy.cpp"
  $55 = $c$addr; //@line 115 "hierarchy.cpp"
  $$sink = $54;$$sink2 = $55;
  $y40 = ((($$sink2)) + 8|0);
  HEAPF64[$y40>>3] = $$sink;
  STACKTOP = sp;return; //@line 117 "hierarchy.cpp"
 }
}
function __Z10intersectsP5HNodeS0_($a,$b) {
 $a = $a|0;
 $b = $b|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $a$addr = 0, $add = 0.0;
 var $add8 = 0.0, $b$addr = 0, $cmp = 0, $dr = 0.0, $dx = 0.0, $dy = 0.0, $mul = 0.0, $mul6 = 0.0, $mul7 = 0.0, $r = 0, $r4 = 0, $sub = 0.0, $sub3 = 0.0, $sub5 = 0.0, $y = 0, $y2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $a$addr = $a;
 $b$addr = $b;
 $0 = $b$addr; //@line 130 "hierarchy.cpp"
 $1 = +HEAPF64[$0>>3]; //@line 130 "hierarchy.cpp"
 $2 = $a$addr; //@line 130 "hierarchy.cpp"
 $3 = +HEAPF64[$2>>3]; //@line 130 "hierarchy.cpp"
 $sub = $1 - $3; //@line 130 "hierarchy.cpp"
 $dx = $sub; //@line 130 "hierarchy.cpp"
 $4 = $b$addr; //@line 131 "hierarchy.cpp"
 $y = ((($4)) + 8|0); //@line 131 "hierarchy.cpp"
 $5 = +HEAPF64[$y>>3]; //@line 131 "hierarchy.cpp"
 $6 = $a$addr; //@line 131 "hierarchy.cpp"
 $y2 = ((($6)) + 8|0); //@line 131 "hierarchy.cpp"
 $7 = +HEAPF64[$y2>>3]; //@line 131 "hierarchy.cpp"
 $sub3 = $5 - $7; //@line 131 "hierarchy.cpp"
 $dy = $sub3; //@line 131 "hierarchy.cpp"
 $8 = $a$addr; //@line 132 "hierarchy.cpp"
 $r = ((($8)) + 16|0); //@line 132 "hierarchy.cpp"
 $9 = +HEAPF64[$r>>3]; //@line 132 "hierarchy.cpp"
 $10 = $b$addr; //@line 132 "hierarchy.cpp"
 $r4 = ((($10)) + 16|0); //@line 132 "hierarchy.cpp"
 $11 = +HEAPF64[$r4>>3]; //@line 132 "hierarchy.cpp"
 $add = $9 + $11; //@line 132 "hierarchy.cpp"
 $dr = $add; //@line 132 "hierarchy.cpp"
 $12 = $dr; //@line 133 "hierarchy.cpp"
 $13 = $dr; //@line 133 "hierarchy.cpp"
 $mul = $12 * $13; //@line 133 "hierarchy.cpp"
 $sub5 = $mul - 9.9999999999999995E-7; //@line 133 "hierarchy.cpp"
 $14 = $dx; //@line 133 "hierarchy.cpp"
 $15 = $dx; //@line 133 "hierarchy.cpp"
 $mul6 = $14 * $15; //@line 133 "hierarchy.cpp"
 $16 = $dy; //@line 133 "hierarchy.cpp"
 $17 = $dy; //@line 133 "hierarchy.cpp"
 $mul7 = $16 * $17; //@line 133 "hierarchy.cpp"
 $add8 = $mul6 + $mul7; //@line 133 "hierarchy.cpp"
 $cmp = $sub5 > $add8; //@line 133 "hierarchy.cpp"
 STACKTOP = sp;return ($cmp|0); //@line 133 "hierarchy.cpp"
}
function __Z9distance2PK6HLNodedd($node,$x,$y) {
 $node = $node|0;
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0, $a = 0, $ab = 0.0, $add = 0.0, $add15 = 0.0, $add20 = 0.0, $add8 = 0.0, $b = 0;
 var $div = 0.0, $div16 = 0.0, $dx = 0.0, $dy = 0.0, $mul = 0.0, $mul11 = 0.0, $mul14 = 0.0, $mul18 = 0.0, $mul19 = 0.0, $mul7 = 0.0, $next = 0, $node$addr = 0, $r = 0, $r10 = 0, $r13 = 0, $r2 = 0, $r4 = 0, $r6 = 0, $sub = 0.0, $sub17 = 0.0;
 var $x$addr = 0.0, $y$addr = 0.0, $y12 = 0, $y9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $node$addr = $node;
 $x$addr = $x;
 $y$addr = $y;
 $0 = $node$addr; //@line 137 "hierarchy.cpp"
 $1 = HEAP32[$0>>2]|0; //@line 137 "hierarchy.cpp"
 $a = $1; //@line 137 "hierarchy.cpp"
 $2 = $node$addr; //@line 138 "hierarchy.cpp"
 $next = ((($2)) + 4|0); //@line 138 "hierarchy.cpp"
 $3 = HEAP32[$next>>2]|0; //@line 138 "hierarchy.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 138 "hierarchy.cpp"
 $b = $4; //@line 138 "hierarchy.cpp"
 $5 = $a; //@line 139 "hierarchy.cpp"
 $r = ((($5)) + 16|0); //@line 139 "hierarchy.cpp"
 $6 = +HEAPF64[$r>>3]; //@line 139 "hierarchy.cpp"
 $7 = $b; //@line 139 "hierarchy.cpp"
 $r2 = ((($7)) + 16|0); //@line 139 "hierarchy.cpp"
 $8 = +HEAPF64[$r2>>3]; //@line 139 "hierarchy.cpp"
 $add = $6 + $8; //@line 139 "hierarchy.cpp"
 $ab = $add; //@line 139 "hierarchy.cpp"
 $9 = $a; //@line 140 "hierarchy.cpp"
 $10 = +HEAPF64[$9>>3]; //@line 140 "hierarchy.cpp"
 $11 = $b; //@line 140 "hierarchy.cpp"
 $r4 = ((($11)) + 16|0); //@line 140 "hierarchy.cpp"
 $12 = +HEAPF64[$r4>>3]; //@line 140 "hierarchy.cpp"
 $mul = $10 * $12; //@line 140 "hierarchy.cpp"
 $13 = $b; //@line 140 "hierarchy.cpp"
 $14 = +HEAPF64[$13>>3]; //@line 140 "hierarchy.cpp"
 $15 = $a; //@line 140 "hierarchy.cpp"
 $r6 = ((($15)) + 16|0); //@line 140 "hierarchy.cpp"
 $16 = +HEAPF64[$r6>>3]; //@line 140 "hierarchy.cpp"
 $mul7 = $14 * $16; //@line 140 "hierarchy.cpp"
 $add8 = $mul + $mul7; //@line 140 "hierarchy.cpp"
 $17 = $ab; //@line 140 "hierarchy.cpp"
 $div = $add8 / $17; //@line 140 "hierarchy.cpp"
 $18 = $x$addr; //@line 140 "hierarchy.cpp"
 $sub = $div - $18; //@line 140 "hierarchy.cpp"
 $dx = $sub; //@line 140 "hierarchy.cpp"
 $19 = $a; //@line 141 "hierarchy.cpp"
 $y9 = ((($19)) + 8|0); //@line 141 "hierarchy.cpp"
 $20 = +HEAPF64[$y9>>3]; //@line 141 "hierarchy.cpp"
 $21 = $b; //@line 141 "hierarchy.cpp"
 $r10 = ((($21)) + 16|0); //@line 141 "hierarchy.cpp"
 $22 = +HEAPF64[$r10>>3]; //@line 141 "hierarchy.cpp"
 $mul11 = $20 * $22; //@line 141 "hierarchy.cpp"
 $23 = $b; //@line 141 "hierarchy.cpp"
 $y12 = ((($23)) + 8|0); //@line 141 "hierarchy.cpp"
 $24 = +HEAPF64[$y12>>3]; //@line 141 "hierarchy.cpp"
 $25 = $a; //@line 141 "hierarchy.cpp"
 $r13 = ((($25)) + 16|0); //@line 141 "hierarchy.cpp"
 $26 = +HEAPF64[$r13>>3]; //@line 141 "hierarchy.cpp"
 $mul14 = $24 * $26; //@line 141 "hierarchy.cpp"
 $add15 = $mul11 + $mul14; //@line 141 "hierarchy.cpp"
 $27 = $ab; //@line 141 "hierarchy.cpp"
 $div16 = $add15 / $27; //@line 141 "hierarchy.cpp"
 $28 = $y$addr; //@line 141 "hierarchy.cpp"
 $sub17 = $div16 - $28; //@line 141 "hierarchy.cpp"
 $dy = $sub17; //@line 141 "hierarchy.cpp"
 $29 = $dx; //@line 142 "hierarchy.cpp"
 $30 = $dx; //@line 142 "hierarchy.cpp"
 $mul18 = $29 * $30; //@line 142 "hierarchy.cpp"
 $31 = $dy; //@line 142 "hierarchy.cpp"
 $32 = $dy; //@line 142 "hierarchy.cpp"
 $mul19 = $31 * $32; //@line 142 "hierarchy.cpp"
 $add20 = $mul18 + $mul19; //@line 142 "hierarchy.cpp"
 STACKTOP = sp;return (+$add20); //@line 142 "hierarchy.cpp"
}
function __Z8enclosesP6HBasisS0_($a,$b) {
 $a = $a|0;
 $b = $b|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0;
 var $a$addr = 0, $add = 0.0, $add8 = 0.0, $b$addr = 0, $cmp = 0, $cmp9 = 0, $dr = 0.0, $dx = 0.0, $dy = 0.0, $mul = 0.0, $mul6 = 0.0, $mul7 = 0.0, $r = 0, $r1 = 0, $sub = 0.0, $sub3 = 0.0, $sub5 = 0.0, $y = 0, $y4 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $a$addr = $a;
 $b$addr = $b;
 $0 = $a$addr; //@line 146 "hierarchy.cpp"
 $r = ((($0)) + 16|0); //@line 146 "hierarchy.cpp"
 $1 = +HEAPF64[$r>>3]; //@line 146 "hierarchy.cpp"
 $2 = $b$addr; //@line 146 "hierarchy.cpp"
 $r1 = ((($2)) + 16|0); //@line 146 "hierarchy.cpp"
 $3 = +HEAPF64[$r1>>3]; //@line 146 "hierarchy.cpp"
 $sub = $1 - $3; //@line 146 "hierarchy.cpp"
 $add = $sub + 1.0000000000000001E-9; //@line 146 "hierarchy.cpp"
 $dr = $add; //@line 146 "hierarchy.cpp"
 $4 = $b$addr; //@line 147 "hierarchy.cpp"
 $5 = +HEAPF64[$4>>3]; //@line 147 "hierarchy.cpp"
 $6 = $a$addr; //@line 147 "hierarchy.cpp"
 $7 = +HEAPF64[$6>>3]; //@line 147 "hierarchy.cpp"
 $sub3 = $5 - $7; //@line 147 "hierarchy.cpp"
 $dx = $sub3; //@line 147 "hierarchy.cpp"
 $8 = $b$addr; //@line 148 "hierarchy.cpp"
 $y = ((($8)) + 8|0); //@line 148 "hierarchy.cpp"
 $9 = +HEAPF64[$y>>3]; //@line 148 "hierarchy.cpp"
 $10 = $a$addr; //@line 148 "hierarchy.cpp"
 $y4 = ((($10)) + 8|0); //@line 148 "hierarchy.cpp"
 $11 = +HEAPF64[$y4>>3]; //@line 148 "hierarchy.cpp"
 $sub5 = $9 - $11; //@line 148 "hierarchy.cpp"
 $dy = $sub5; //@line 148 "hierarchy.cpp"
 $12 = $dr; //@line 149 "hierarchy.cpp"
 $cmp = $12 > 0.0; //@line 149 "hierarchy.cpp"
 if (!($cmp)) {
  $19 = 0;
  STACKTOP = sp;return ($19|0); //@line 149 "hierarchy.cpp"
 }
 $13 = $dr; //@line 149 "hierarchy.cpp"
 $14 = $dr; //@line 149 "hierarchy.cpp"
 $mul = $13 * $14; //@line 149 "hierarchy.cpp"
 $15 = $dx; //@line 149 "hierarchy.cpp"
 $16 = $dx; //@line 149 "hierarchy.cpp"
 $mul6 = $15 * $16; //@line 149 "hierarchy.cpp"
 $17 = $dy; //@line 149 "hierarchy.cpp"
 $18 = $dy; //@line 149 "hierarchy.cpp"
 $mul7 = $17 * $18; //@line 149 "hierarchy.cpp"
 $add8 = $mul6 + $mul7; //@line 149 "hierarchy.cpp"
 $cmp9 = $mul > $add8; //@line 149 "hierarchy.cpp"
 $19 = $cmp9;
 STACKTOP = sp;return ($19|0); //@line 149 "hierarchy.cpp"
}
function __Z13encloseBasis1P6HBasis($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0.0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a$addr = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $r = 0, $sel = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $a$addr = $a;
 $call = (__Znwj(24)|0); //@line 153 "hierarchy.cpp"
 $0 = $a$addr; //@line 153 "hierarchy.cpp"
 $1 = +HEAPF64[$0>>3]; //@line 153 "hierarchy.cpp"
 $2 = $a$addr; //@line 153 "hierarchy.cpp"
 $y = ((($2)) + 8|0); //@line 153 "hierarchy.cpp"
 $3 = +HEAPF64[$y>>3]; //@line 153 "hierarchy.cpp"
 $4 = $a$addr; //@line 153 "hierarchy.cpp"
 $r = ((($4)) + 16|0); //@line 153 "hierarchy.cpp"
 $5 = +HEAPF64[$r>>3]; //@line 153 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_viddd(98,($call|0),(+$1),(+$3),(+$5)); //@line 153 "hierarchy.cpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_2()|0;
  $9 = tempRet0;
  $exn$slot = $8; //@line 154 "hierarchy.cpp"
  $ehselector$slot = $9; //@line 154 "hierarchy.cpp"
  __ZdlPv($call); //@line 153 "hierarchy.cpp"
  $exn = $exn$slot; //@line 153 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 153 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($call|0); //@line 153 "hierarchy.cpp"
 }
 return (0)|0;
}
function __ZN6HBasisC2Eddd($this,$x,$y,$r) {
 $this = $this|0;
 $x = +$x;
 $y = +$y;
 $r = +$r;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $r$addr = 0.0, $r4 = 0, $this$addr = 0, $this1 = 0, $x$addr = 0.0, $y$addr = 0.0, $y3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $x$addr = $x;
 $y$addr = $y;
 $r$addr = $r;
 $this1 = $this$addr;
 $0 = $x$addr; //@line 15 "hierarchy.cpp"
 HEAPF64[$this1>>3] = $0; //@line 15 "hierarchy.cpp"
 $y3 = ((($this1)) + 8|0); //@line 15 "hierarchy.cpp"
 $1 = $y$addr; //@line 15 "hierarchy.cpp"
 HEAPF64[$y3>>3] = $1; //@line 15 "hierarchy.cpp"
 $r4 = ((($this1)) + 16|0); //@line 15 "hierarchy.cpp"
 $2 = $r$addr; //@line 15 "hierarchy.cpp"
 HEAPF64[$r4>>3] = $2; //@line 15 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 15 "hierarchy.cpp"
}
function __Z13encloseBasis2P6HBasisS0_($a,$b) {
 $a = $a|0;
 $b = $b|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $a$addr = 0;
 var $add = 0.0, $add10 = 0.0, $add12 = 0.0, $add14 = 0.0, $add17 = 0.0, $add19 = 0.0, $add20 = 0.0, $b$addr = 0, $call = 0.0, $call9 = 0, $div = 0.0, $div13 = 0.0, $div15 = 0.0, $div18 = 0.0, $div21 = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $l = 0.0, $mul = 0.0;
 var $mul11 = 0.0, $mul16 = 0.0, $mul8 = 0.0, $r = 0, $r1 = 0.0, $r2 = 0.0, $r21 = 0.0, $r5 = 0, $sel = 0, $sub = 0.0, $sub6 = 0.0, $sub7 = 0.0, $x1 = 0.0, $x2 = 0.0, $x21 = 0.0, $y = 0, $y1 = 0.0, $y2 = 0.0, $y21 = 0.0, $y4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $a$addr = $a;
 $b$addr = $b;
 $0 = $a$addr; //@line 157 "hierarchy.cpp"
 $1 = +HEAPF64[$0>>3]; //@line 157 "hierarchy.cpp"
 $x1 = $1; //@line 157 "hierarchy.cpp"
 $2 = $a$addr; //@line 157 "hierarchy.cpp"
 $y = ((($2)) + 8|0); //@line 157 "hierarchy.cpp"
 $3 = +HEAPF64[$y>>3]; //@line 157 "hierarchy.cpp"
 $y1 = $3; //@line 157 "hierarchy.cpp"
 $4 = $a$addr; //@line 157 "hierarchy.cpp"
 $r = ((($4)) + 16|0); //@line 157 "hierarchy.cpp"
 $5 = +HEAPF64[$r>>3]; //@line 157 "hierarchy.cpp"
 $r1 = $5; //@line 157 "hierarchy.cpp"
 $6 = $b$addr; //@line 158 "hierarchy.cpp"
 $7 = +HEAPF64[$6>>3]; //@line 158 "hierarchy.cpp"
 $x2 = $7; //@line 158 "hierarchy.cpp"
 $8 = $b$addr; //@line 158 "hierarchy.cpp"
 $y4 = ((($8)) + 8|0); //@line 158 "hierarchy.cpp"
 $9 = +HEAPF64[$y4>>3]; //@line 158 "hierarchy.cpp"
 $y2 = $9; //@line 158 "hierarchy.cpp"
 $10 = $b$addr; //@line 158 "hierarchy.cpp"
 $r5 = ((($10)) + 16|0); //@line 158 "hierarchy.cpp"
 $11 = +HEAPF64[$r5>>3]; //@line 158 "hierarchy.cpp"
 $r2 = $11; //@line 158 "hierarchy.cpp"
 $12 = $x2; //@line 159 "hierarchy.cpp"
 $13 = $x1; //@line 159 "hierarchy.cpp"
 $sub = $12 - $13; //@line 159 "hierarchy.cpp"
 $x21 = $sub; //@line 159 "hierarchy.cpp"
 $14 = $y2; //@line 159 "hierarchy.cpp"
 $15 = $y1; //@line 159 "hierarchy.cpp"
 $sub6 = $14 - $15; //@line 159 "hierarchy.cpp"
 $y21 = $sub6; //@line 159 "hierarchy.cpp"
 $16 = $r2; //@line 159 "hierarchy.cpp"
 $17 = $r1; //@line 159 "hierarchy.cpp"
 $sub7 = $16 - $17; //@line 159 "hierarchy.cpp"
 $r21 = $sub7; //@line 159 "hierarchy.cpp"
 $18 = $x21; //@line 160 "hierarchy.cpp"
 $19 = $x21; //@line 160 "hierarchy.cpp"
 $mul = $18 * $19; //@line 160 "hierarchy.cpp"
 $20 = $y21; //@line 160 "hierarchy.cpp"
 $21 = $y21; //@line 160 "hierarchy.cpp"
 $mul8 = $20 * $21; //@line 160 "hierarchy.cpp"
 $add = $mul + $mul8; //@line 160 "hierarchy.cpp"
 $call = (+Math_sqrt((+$add))); //@line 160 "hierarchy.cpp"
 $l = $call; //@line 160 "hierarchy.cpp"
 $call9 = (__Znwj(24)|0); //@line 161 "hierarchy.cpp"
 $22 = $x1; //@line 162 "hierarchy.cpp"
 $23 = $x2; //@line 162 "hierarchy.cpp"
 $add10 = $22 + $23; //@line 162 "hierarchy.cpp"
 $24 = $x21; //@line 162 "hierarchy.cpp"
 $25 = $l; //@line 162 "hierarchy.cpp"
 $div = $24 / $25; //@line 162 "hierarchy.cpp"
 $26 = $r21; //@line 162 "hierarchy.cpp"
 $mul11 = $div * $26; //@line 162 "hierarchy.cpp"
 $add12 = $add10 + $mul11; //@line 162 "hierarchy.cpp"
 $div13 = $add12 / 2.0; //@line 162 "hierarchy.cpp"
 $27 = $y1; //@line 163 "hierarchy.cpp"
 $28 = $y2; //@line 163 "hierarchy.cpp"
 $add14 = $27 + $28; //@line 163 "hierarchy.cpp"
 $29 = $y21; //@line 163 "hierarchy.cpp"
 $30 = $l; //@line 163 "hierarchy.cpp"
 $div15 = $29 / $30; //@line 163 "hierarchy.cpp"
 $31 = $r21; //@line 163 "hierarchy.cpp"
 $mul16 = $div15 * $31; //@line 163 "hierarchy.cpp"
 $add17 = $add14 + $mul16; //@line 163 "hierarchy.cpp"
 $div18 = $add17 / 2.0; //@line 163 "hierarchy.cpp"
 $32 = $l; //@line 164 "hierarchy.cpp"
 $33 = $r1; //@line 164 "hierarchy.cpp"
 $add19 = $32 + $33; //@line 164 "hierarchy.cpp"
 $34 = $r2; //@line 164 "hierarchy.cpp"
 $add20 = $add19 + $34; //@line 164 "hierarchy.cpp"
 $div21 = $add20 / 2.0; //@line 164 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_viddd(98,($call9|0),(+$div13),(+$div18),(+$div21)); //@line 161 "hierarchy.cpp"
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $37 = ___cxa_find_matching_catch_2()|0;
  $38 = tempRet0;
  $exn$slot = $37; //@line 166 "hierarchy.cpp"
  $ehselector$slot = $38; //@line 166 "hierarchy.cpp"
  __ZdlPv($call9); //@line 161 "hierarchy.cpp"
  $exn = $exn$slot; //@line 161 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 161 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($call9|0); //@line 161 "hierarchy.cpp"
 }
 return (0)|0;
}
function __Z13encloseBasis3P6HBasisS0_S0_($a,$b,$c) {
 $a = $a|0;
 $b = $b|0;
 $c = $c|0;
 var $0 = 0, $1 = 0.0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0.0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0.0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0;
 var $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0;
 var $5 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0;
 var $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0;
 var $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $A = 0.0, $B = 0.0, $C = 0.0, $a$addr = 0, $a2 = 0.0;
 var $a3 = 0.0, $ab = 0.0, $add = 0.0, $add103 = 0.0, $add105 = 0.0, $add23 = 0.0, $add29 = 0.0, $add54 = 0.0, $add57 = 0.0, $add59 = 0.0, $add63 = 0.0, $add71 = 0.0, $add76 = 0.0, $add80 = 0.0, $add88 = 0.0, $add90 = 0.0, $add95 = 0.0, $add97 = 0.0, $b$addr = 0, $b2 = 0.0;
 var $b3 = 0.0, $c$addr = 0, $c2 = 0.0, $c3 = 0.0, $call = 0.0, $call104 = 0.0, $call106 = 0.0, $call83 = 0, $call89 = 0.0, $call96 = 0.0, $call98 = 0.0, $cond = 0.0, $d1 = 0.0, $d2 = 0.0, $d3 = 0.0, $div = 0.0, $div41 = 0.0, $div46 = 0.0, $div51 = 0.0, $div73 = 0.0;
 var $div74 = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $mul = 0.0, $mul100 = 0.0, $mul102 = 0.0, $mul15 = 0.0, $mul16 = 0.0, $mul18 = 0.0, $mul20 = 0.0, $mul22 = 0.0, $mul24 = 0.0, $mul26 = 0.0, $mul28 = 0.0, $mul30 = 0.0, $mul31 = 0.0, $mul33 = 0.0, $mul34 = 0.0, $mul36 = 0.0;
 var $mul38 = 0.0, $mul39 = 0.0, $mul42 = 0.0, $mul43 = 0.0, $mul45 = 0.0, $mul48 = 0.0, $mul49 = 0.0, $mul52 = 0.0, $mul53 = 0.0, $mul56 = 0.0, $mul58 = 0.0, $mul60 = 0.0, $mul61 = 0.0, $mul62 = 0.0, $mul64 = 0.0, $mul67 = 0.0, $mul68 = 0.0, $mul69 = 0.0, $mul72 = 0.0, $mul77 = 0.0;
 var $mul81 = 0.0, $mul85 = 0.0, $mul87 = 0.0, $mul92 = 0.0, $mul94 = 0.0, $r = 0, $r1 = 0.0, $r2 = 0.0, $r3 = 0.0, $r5 = 0, $r66 = 0.0, $r9 = 0, $sel = 0, $sub = 0.0, $sub10 = 0.0, $sub101 = 0.0, $sub11 = 0.0, $sub12 = 0.0, $sub13 = 0.0, $sub14 = 0.0;
 var $sub17 = 0.0, $sub19 = 0.0, $sub21 = 0.0, $sub25 = 0.0, $sub27 = 0.0, $sub32 = 0.0, $sub35 = 0.0, $sub37 = 0.0, $sub40 = 0.0, $sub44 = 0.0, $sub47 = 0.0, $sub50 = 0.0, $sub55 = 0.0, $sub65 = 0.0, $sub70 = 0.0, $sub78 = 0.0, $sub82 = 0.0, $sub84 = 0.0, $sub86 = 0.0, $sub91 = 0.0;
 var $sub93 = 0.0, $sub99 = 0.0, $tobool = 0, $x1 = 0.0, $x2 = 0.0, $x36 = 0.0, $x75 = 0.0, $xa = 0.0, $xb = 0.0, $y = 0, $y1 = 0.0, $y2 = 0.0, $y3 = 0.0, $y4 = 0, $y79 = 0.0, $y8 = 0, $ya = 0.0, $yb = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $a$addr = $a;
 $b$addr = $b;
 $c$addr = $c;
 $0 = $a$addr; //@line 169 "hierarchy.cpp"
 $1 = +HEAPF64[$0>>3]; //@line 169 "hierarchy.cpp"
 $x1 = $1; //@line 169 "hierarchy.cpp"
 $2 = $a$addr; //@line 169 "hierarchy.cpp"
 $y = ((($2)) + 8|0); //@line 169 "hierarchy.cpp"
 $3 = +HEAPF64[$y>>3]; //@line 169 "hierarchy.cpp"
 $y1 = $3; //@line 169 "hierarchy.cpp"
 $4 = $a$addr; //@line 169 "hierarchy.cpp"
 $r = ((($4)) + 16|0); //@line 169 "hierarchy.cpp"
 $5 = +HEAPF64[$r>>3]; //@line 169 "hierarchy.cpp"
 $r1 = $5; //@line 169 "hierarchy.cpp"
 $6 = $b$addr; //@line 170 "hierarchy.cpp"
 $7 = +HEAPF64[$6>>3]; //@line 170 "hierarchy.cpp"
 $x2 = $7; //@line 170 "hierarchy.cpp"
 $8 = $b$addr; //@line 170 "hierarchy.cpp"
 $y4 = ((($8)) + 8|0); //@line 170 "hierarchy.cpp"
 $9 = +HEAPF64[$y4>>3]; //@line 170 "hierarchy.cpp"
 $y2 = $9; //@line 170 "hierarchy.cpp"
 $10 = $b$addr; //@line 170 "hierarchy.cpp"
 $r5 = ((($10)) + 16|0); //@line 170 "hierarchy.cpp"
 $11 = +HEAPF64[$r5>>3]; //@line 170 "hierarchy.cpp"
 $r2 = $11; //@line 170 "hierarchy.cpp"
 $12 = $c$addr; //@line 171 "hierarchy.cpp"
 $13 = +HEAPF64[$12>>3]; //@line 171 "hierarchy.cpp"
 $x36 = $13; //@line 171 "hierarchy.cpp"
 $14 = $c$addr; //@line 171 "hierarchy.cpp"
 $y8 = ((($14)) + 8|0); //@line 171 "hierarchy.cpp"
 $15 = +HEAPF64[$y8>>3]; //@line 171 "hierarchy.cpp"
 $y3 = $15; //@line 171 "hierarchy.cpp"
 $16 = $c$addr; //@line 171 "hierarchy.cpp"
 $r9 = ((($16)) + 16|0); //@line 171 "hierarchy.cpp"
 $17 = +HEAPF64[$r9>>3]; //@line 171 "hierarchy.cpp"
 $r3 = $17; //@line 171 "hierarchy.cpp"
 $18 = $x1; //@line 172 "hierarchy.cpp"
 $19 = $x2; //@line 172 "hierarchy.cpp"
 $sub = $18 - $19; //@line 172 "hierarchy.cpp"
 $a2 = $sub; //@line 172 "hierarchy.cpp"
 $20 = $x1; //@line 173 "hierarchy.cpp"
 $21 = $x36; //@line 173 "hierarchy.cpp"
 $sub10 = $20 - $21; //@line 173 "hierarchy.cpp"
 $a3 = $sub10; //@line 173 "hierarchy.cpp"
 $22 = $y1; //@line 174 "hierarchy.cpp"
 $23 = $y2; //@line 174 "hierarchy.cpp"
 $sub11 = $22 - $23; //@line 174 "hierarchy.cpp"
 $b2 = $sub11; //@line 174 "hierarchy.cpp"
 $24 = $y1; //@line 175 "hierarchy.cpp"
 $25 = $y3; //@line 175 "hierarchy.cpp"
 $sub12 = $24 - $25; //@line 175 "hierarchy.cpp"
 $b3 = $sub12; //@line 175 "hierarchy.cpp"
 $26 = $r2; //@line 176 "hierarchy.cpp"
 $27 = $r1; //@line 176 "hierarchy.cpp"
 $sub13 = $26 - $27; //@line 176 "hierarchy.cpp"
 $c2 = $sub13; //@line 176 "hierarchy.cpp"
 $28 = $r3; //@line 177 "hierarchy.cpp"
 $29 = $r1; //@line 177 "hierarchy.cpp"
 $sub14 = $28 - $29; //@line 177 "hierarchy.cpp"
 $c3 = $sub14; //@line 177 "hierarchy.cpp"
 $30 = $x1; //@line 178 "hierarchy.cpp"
 $31 = $x1; //@line 178 "hierarchy.cpp"
 $mul = $30 * $31; //@line 178 "hierarchy.cpp"
 $32 = $y1; //@line 178 "hierarchy.cpp"
 $33 = $y1; //@line 178 "hierarchy.cpp"
 $mul15 = $32 * $33; //@line 178 "hierarchy.cpp"
 $add = $mul + $mul15; //@line 178 "hierarchy.cpp"
 $34 = $r1; //@line 178 "hierarchy.cpp"
 $35 = $r1; //@line 178 "hierarchy.cpp"
 $mul16 = $34 * $35; //@line 178 "hierarchy.cpp"
 $sub17 = $add - $mul16; //@line 178 "hierarchy.cpp"
 $d1 = $sub17; //@line 178 "hierarchy.cpp"
 $36 = $d1; //@line 179 "hierarchy.cpp"
 $37 = $x2; //@line 179 "hierarchy.cpp"
 $38 = $x2; //@line 179 "hierarchy.cpp"
 $mul18 = $37 * $38; //@line 179 "hierarchy.cpp"
 $sub19 = $36 - $mul18; //@line 179 "hierarchy.cpp"
 $39 = $y2; //@line 179 "hierarchy.cpp"
 $40 = $y2; //@line 179 "hierarchy.cpp"
 $mul20 = $39 * $40; //@line 179 "hierarchy.cpp"
 $sub21 = $sub19 - $mul20; //@line 179 "hierarchy.cpp"
 $41 = $r2; //@line 179 "hierarchy.cpp"
 $42 = $r2; //@line 179 "hierarchy.cpp"
 $mul22 = $41 * $42; //@line 179 "hierarchy.cpp"
 $add23 = $sub21 + $mul22; //@line 179 "hierarchy.cpp"
 $d2 = $add23; //@line 179 "hierarchy.cpp"
 $43 = $d1; //@line 180 "hierarchy.cpp"
 $44 = $x36; //@line 180 "hierarchy.cpp"
 $45 = $x36; //@line 180 "hierarchy.cpp"
 $mul24 = $44 * $45; //@line 180 "hierarchy.cpp"
 $sub25 = $43 - $mul24; //@line 180 "hierarchy.cpp"
 $46 = $y3; //@line 180 "hierarchy.cpp"
 $47 = $y3; //@line 180 "hierarchy.cpp"
 $mul26 = $46 * $47; //@line 180 "hierarchy.cpp"
 $sub27 = $sub25 - $mul26; //@line 180 "hierarchy.cpp"
 $48 = $r3; //@line 180 "hierarchy.cpp"
 $49 = $r3; //@line 180 "hierarchy.cpp"
 $mul28 = $48 * $49; //@line 180 "hierarchy.cpp"
 $add29 = $sub27 + $mul28; //@line 180 "hierarchy.cpp"
 $d3 = $add29; //@line 180 "hierarchy.cpp"
 $50 = $a3; //@line 181 "hierarchy.cpp"
 $51 = $b2; //@line 181 "hierarchy.cpp"
 $mul30 = $50 * $51; //@line 181 "hierarchy.cpp"
 $52 = $a2; //@line 181 "hierarchy.cpp"
 $53 = $b3; //@line 181 "hierarchy.cpp"
 $mul31 = $52 * $53; //@line 181 "hierarchy.cpp"
 $sub32 = $mul30 - $mul31; //@line 181 "hierarchy.cpp"
 $ab = $sub32; //@line 181 "hierarchy.cpp"
 $54 = $b2; //@line 182 "hierarchy.cpp"
 $55 = $d3; //@line 182 "hierarchy.cpp"
 $mul33 = $54 * $55; //@line 182 "hierarchy.cpp"
 $56 = $b3; //@line 182 "hierarchy.cpp"
 $57 = $d2; //@line 182 "hierarchy.cpp"
 $mul34 = $56 * $57; //@line 182 "hierarchy.cpp"
 $sub35 = $mul33 - $mul34; //@line 182 "hierarchy.cpp"
 $58 = $ab; //@line 182 "hierarchy.cpp"
 $mul36 = $58 * 2.0; //@line 182 "hierarchy.cpp"
 $div = $sub35 / $mul36; //@line 182 "hierarchy.cpp"
 $59 = $x1; //@line 182 "hierarchy.cpp"
 $sub37 = $div - $59; //@line 182 "hierarchy.cpp"
 $xa = $sub37; //@line 182 "hierarchy.cpp"
 $60 = $b3; //@line 183 "hierarchy.cpp"
 $61 = $c2; //@line 183 "hierarchy.cpp"
 $mul38 = $60 * $61; //@line 183 "hierarchy.cpp"
 $62 = $b2; //@line 183 "hierarchy.cpp"
 $63 = $c3; //@line 183 "hierarchy.cpp"
 $mul39 = $62 * $63; //@line 183 "hierarchy.cpp"
 $sub40 = $mul38 - $mul39; //@line 183 "hierarchy.cpp"
 $64 = $ab; //@line 183 "hierarchy.cpp"
 $div41 = $sub40 / $64; //@line 183 "hierarchy.cpp"
 $xb = $div41; //@line 183 "hierarchy.cpp"
 $65 = $a3; //@line 184 "hierarchy.cpp"
 $66 = $d2; //@line 184 "hierarchy.cpp"
 $mul42 = $65 * $66; //@line 184 "hierarchy.cpp"
 $67 = $a2; //@line 184 "hierarchy.cpp"
 $68 = $d3; //@line 184 "hierarchy.cpp"
 $mul43 = $67 * $68; //@line 184 "hierarchy.cpp"
 $sub44 = $mul42 - $mul43; //@line 184 "hierarchy.cpp"
 $69 = $ab; //@line 184 "hierarchy.cpp"
 $mul45 = $69 * 2.0; //@line 184 "hierarchy.cpp"
 $div46 = $sub44 / $mul45; //@line 184 "hierarchy.cpp"
 $70 = $y1; //@line 184 "hierarchy.cpp"
 $sub47 = $div46 - $70; //@line 184 "hierarchy.cpp"
 $ya = $sub47; //@line 184 "hierarchy.cpp"
 $71 = $a2; //@line 185 "hierarchy.cpp"
 $72 = $c3; //@line 185 "hierarchy.cpp"
 $mul48 = $71 * $72; //@line 185 "hierarchy.cpp"
 $73 = $a3; //@line 185 "hierarchy.cpp"
 $74 = $c2; //@line 185 "hierarchy.cpp"
 $mul49 = $73 * $74; //@line 185 "hierarchy.cpp"
 $sub50 = $mul48 - $mul49; //@line 185 "hierarchy.cpp"
 $75 = $ab; //@line 185 "hierarchy.cpp"
 $div51 = $sub50 / $75; //@line 185 "hierarchy.cpp"
 $yb = $div51; //@line 185 "hierarchy.cpp"
 $76 = $xb; //@line 186 "hierarchy.cpp"
 $77 = $xb; //@line 186 "hierarchy.cpp"
 $mul52 = $76 * $77; //@line 186 "hierarchy.cpp"
 $78 = $yb; //@line 186 "hierarchy.cpp"
 $79 = $yb; //@line 186 "hierarchy.cpp"
 $mul53 = $78 * $79; //@line 186 "hierarchy.cpp"
 $add54 = $mul52 + $mul53; //@line 186 "hierarchy.cpp"
 $sub55 = $add54 - 1.0; //@line 186 "hierarchy.cpp"
 $A = $sub55; //@line 186 "hierarchy.cpp"
 $80 = $r1; //@line 187 "hierarchy.cpp"
 $81 = $xa; //@line 187 "hierarchy.cpp"
 $82 = $xb; //@line 187 "hierarchy.cpp"
 $mul56 = $81 * $82; //@line 187 "hierarchy.cpp"
 $add57 = $80 + $mul56; //@line 187 "hierarchy.cpp"
 $83 = $ya; //@line 187 "hierarchy.cpp"
 $84 = $yb; //@line 187 "hierarchy.cpp"
 $mul58 = $83 * $84; //@line 187 "hierarchy.cpp"
 $add59 = $add57 + $mul58; //@line 187 "hierarchy.cpp"
 $mul60 = 2.0 * $add59; //@line 187 "hierarchy.cpp"
 $B = $mul60; //@line 187 "hierarchy.cpp"
 $85 = $xa; //@line 188 "hierarchy.cpp"
 $86 = $xa; //@line 188 "hierarchy.cpp"
 $mul61 = $85 * $86; //@line 188 "hierarchy.cpp"
 $87 = $ya; //@line 188 "hierarchy.cpp"
 $88 = $ya; //@line 188 "hierarchy.cpp"
 $mul62 = $87 * $88; //@line 188 "hierarchy.cpp"
 $add63 = $mul61 + $mul62; //@line 188 "hierarchy.cpp"
 $89 = $r1; //@line 188 "hierarchy.cpp"
 $90 = $r1; //@line 188 "hierarchy.cpp"
 $mul64 = $89 * $90; //@line 188 "hierarchy.cpp"
 $sub65 = $add63 - $mul64; //@line 188 "hierarchy.cpp"
 $C = $sub65; //@line 188 "hierarchy.cpp"
 $91 = $A; //@line 189 "hierarchy.cpp"
 $tobool = $91 != 0.0; //@line 189 "hierarchy.cpp"
 if ($tobool) {
  $92 = $B; //@line 189 "hierarchy.cpp"
  $93 = $B; //@line 189 "hierarchy.cpp"
  $94 = $B; //@line 189 "hierarchy.cpp"
  $mul67 = $93 * $94; //@line 189 "hierarchy.cpp"
  $95 = $A; //@line 189 "hierarchy.cpp"
  $mul68 = 4.0 * $95; //@line 189 "hierarchy.cpp"
  $96 = $C; //@line 189 "hierarchy.cpp"
  $mul69 = $mul68 * $96; //@line 189 "hierarchy.cpp"
  $sub70 = $mul67 - $mul69; //@line 189 "hierarchy.cpp"
  $call = (+Math_sqrt((+$sub70))); //@line 189 "hierarchy.cpp"
  $add71 = $92 + $call; //@line 189 "hierarchy.cpp"
  $97 = $A; //@line 189 "hierarchy.cpp"
  $mul72 = 2.0 * $97; //@line 189 "hierarchy.cpp"
  $div73 = $add71 / $mul72; //@line 189 "hierarchy.cpp"
  $cond = $div73;
 } else {
  $98 = $C; //@line 189 "hierarchy.cpp"
  $99 = $B; //@line 189 "hierarchy.cpp"
  $div74 = $98 / $99; //@line 189 "hierarchy.cpp"
  $cond = $div74;
 }
 $r66 = $cond; //@line 189 "hierarchy.cpp"
 $100 = $x1; //@line 190 "hierarchy.cpp"
 $101 = $xa; //@line 190 "hierarchy.cpp"
 $add76 = $100 + $101; //@line 190 "hierarchy.cpp"
 $102 = $xb; //@line 190 "hierarchy.cpp"
 $103 = $r66; //@line 190 "hierarchy.cpp"
 $mul77 = $102 * $103; //@line 190 "hierarchy.cpp"
 $sub78 = $add76 - $mul77; //@line 190 "hierarchy.cpp"
 $x75 = $sub78; //@line 190 "hierarchy.cpp"
 $104 = $y1; //@line 191 "hierarchy.cpp"
 $105 = $ya; //@line 191 "hierarchy.cpp"
 $add80 = $104 + $105; //@line 191 "hierarchy.cpp"
 $106 = $yb; //@line 191 "hierarchy.cpp"
 $107 = $r66; //@line 191 "hierarchy.cpp"
 $mul81 = $106 * $107; //@line 191 "hierarchy.cpp"
 $sub82 = $add80 - $mul81; //@line 191 "hierarchy.cpp"
 $y79 = $sub82; //@line 191 "hierarchy.cpp"
 $call83 = (__Znwj(24)|0); //@line 193 "hierarchy.cpp"
 $108 = $x75; //@line 194 "hierarchy.cpp"
 $109 = $y79; //@line 194 "hierarchy.cpp"
 $110 = $x75; //@line 196 "hierarchy.cpp"
 $111 = $x1; //@line 196 "hierarchy.cpp"
 $sub84 = $111 - $110; //@line 196 "hierarchy.cpp"
 $x1 = $sub84; //@line 196 "hierarchy.cpp"
 $112 = $x1; //@line 196 "hierarchy.cpp"
 $mul85 = $sub84 * $112; //@line 196 "hierarchy.cpp"
 $113 = $y79; //@line 196 "hierarchy.cpp"
 $114 = $y1; //@line 196 "hierarchy.cpp"
 $sub86 = $114 - $113; //@line 196 "hierarchy.cpp"
 $y1 = $sub86; //@line 196 "hierarchy.cpp"
 $115 = $y1; //@line 196 "hierarchy.cpp"
 $mul87 = $sub86 * $115; //@line 196 "hierarchy.cpp"
 $add88 = $mul85 + $mul87; //@line 196 "hierarchy.cpp"
 $call89 = (+Math_sqrt((+$add88))); //@line 196 "hierarchy.cpp"
 $116 = $r1; //@line 196 "hierarchy.cpp"
 $add90 = $call89 + $116; //@line 196 "hierarchy.cpp"
 $117 = $x75; //@line 197 "hierarchy.cpp"
 $118 = $x2; //@line 197 "hierarchy.cpp"
 $sub91 = $118 - $117; //@line 197 "hierarchy.cpp"
 $x2 = $sub91; //@line 197 "hierarchy.cpp"
 $119 = $x2; //@line 197 "hierarchy.cpp"
 $mul92 = $sub91 * $119; //@line 197 "hierarchy.cpp"
 $120 = $y79; //@line 197 "hierarchy.cpp"
 $121 = $y2; //@line 197 "hierarchy.cpp"
 $sub93 = $121 - $120; //@line 197 "hierarchy.cpp"
 $y2 = $sub93; //@line 197 "hierarchy.cpp"
 $122 = $y2; //@line 197 "hierarchy.cpp"
 $mul94 = $sub93 * $122; //@line 197 "hierarchy.cpp"
 $add95 = $mul92 + $mul94; //@line 197 "hierarchy.cpp"
 $call96 = (+Math_sqrt((+$add95))); //@line 197 "hierarchy.cpp"
 $123 = $r2; //@line 197 "hierarchy.cpp"
 $add97 = $call96 + $123; //@line 197 "hierarchy.cpp"
 $call98 = (+_fmax($add90,$add97)); //@line 195 "hierarchy.cpp"
 $124 = $x75; //@line 198 "hierarchy.cpp"
 $125 = $x36; //@line 198 "hierarchy.cpp"
 $sub99 = $125 - $124; //@line 198 "hierarchy.cpp"
 $x36 = $sub99; //@line 198 "hierarchy.cpp"
 $126 = $x36; //@line 198 "hierarchy.cpp"
 $mul100 = $sub99 * $126; //@line 198 "hierarchy.cpp"
 $127 = $y79; //@line 198 "hierarchy.cpp"
 $128 = $y3; //@line 198 "hierarchy.cpp"
 $sub101 = $128 - $127; //@line 198 "hierarchy.cpp"
 $y3 = $sub101; //@line 198 "hierarchy.cpp"
 $129 = $y3; //@line 198 "hierarchy.cpp"
 $mul102 = $sub101 * $129; //@line 198 "hierarchy.cpp"
 $add103 = $mul100 + $mul102; //@line 198 "hierarchy.cpp"
 $call104 = (+Math_sqrt((+$add103))); //@line 198 "hierarchy.cpp"
 $130 = $r3; //@line 198 "hierarchy.cpp"
 $add105 = $call104 + $130; //@line 198 "hierarchy.cpp"
 $call106 = (+_fmax($call98,$add105)); //@line 195 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_viddd(98,($call83|0),(+$108),(+$109),(+$call106)); //@line 193 "hierarchy.cpp"
 $131 = __THREW__; __THREW__ = 0;
 $132 = $131&1;
 if ($132) {
  $133 = ___cxa_find_matching_catch_2()|0;
  $134 = tempRet0;
  $exn$slot = $133; //@line 200 "hierarchy.cpp"
  $ehselector$slot = $134; //@line 200 "hierarchy.cpp"
  __ZdlPv($call83); //@line 193 "hierarchy.cpp"
  $exn = $exn$slot; //@line 193 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 193 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($call83|0); //@line 193 "hierarchy.cpp"
 }
 return (0)|0;
}
function __Z8isBasis3P6HBasisS0_S0_($a,$b,$c) {
 $a = $a|0;
 $b = $b|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a$addr = 0, $b$addr = 0, $c$addr = 0, $call = 0, $call1 = 0, $call2 = 0, $call3 = 0, $call4 = 0, $call5 = 0;
 var $frombool = 0, $lnot = 0, $ret = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $a$addr = $a;
 $b$addr = $b;
 $c$addr = $c;
 $0 = $a$addr; //@line 203 "hierarchy.cpp"
 $1 = $b$addr; //@line 203 "hierarchy.cpp"
 $call = (__Z13encloseBasis2P6HBasisS0_($0,$1)|0); //@line 203 "hierarchy.cpp"
 $2 = $c$addr; //@line 203 "hierarchy.cpp"
 $call1 = (__Z8enclosesP6HBasisS0_($call,$2)|0); //@line 203 "hierarchy.cpp"
 if ($call1) {
  $9 = 0;
 } else {
  $3 = $a$addr; //@line 204 "hierarchy.cpp"
  $4 = $c$addr; //@line 204 "hierarchy.cpp"
  $call2 = (__Z13encloseBasis2P6HBasisS0_($3,$4)|0); //@line 204 "hierarchy.cpp"
  $5 = $b$addr; //@line 204 "hierarchy.cpp"
  $call3 = (__Z8enclosesP6HBasisS0_($call2,$5)|0); //@line 204 "hierarchy.cpp"
  if ($call3) {
   $9 = 0;
  } else {
   $6 = $b$addr; //@line 205 "hierarchy.cpp"
   $7 = $c$addr; //@line 205 "hierarchy.cpp"
   $call4 = (__Z13encloseBasis2P6HBasisS0_($6,$7)|0); //@line 205 "hierarchy.cpp"
   $8 = $a$addr; //@line 205 "hierarchy.cpp"
   $call5 = (__Z8enclosesP6HBasisS0_($call4,$8)|0); //@line 205 "hierarchy.cpp"
   $lnot = $call5 ^ 1; //@line 205 "hierarchy.cpp"
   $9 = $lnot;
  }
 }
 $frombool = $9&1; //@line 203 "hierarchy.cpp"
 $ret = $frombool; //@line 203 "hierarchy.cpp"
 $10 = $ret; //@line 207 "hierarchy.cpp"
 $tobool = $10&1; //@line 207 "hierarchy.cpp"
 STACKTOP = sp;return ($tobool|0); //@line 207 "hierarchy.cpp"
}
function __Z12encloseBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEE($B) {
 $B = $B|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__end_$i = 0, $__n$addr$i = 0, $__n$addr$i16 = 0, $__n$addr$i21 = 0, $__n$addr$i26 = 0, $__n$addr$i31 = 0, $__n$addr$i36 = 0, $arrayidx$i = 0, $arrayidx$i19 = 0, $arrayidx$i24 = 0, $arrayidx$i29 = 0, $arrayidx$i34 = 0, $arrayidx$i39 = 0, $call11 = 0, $call2 = 0, $call6 = 0, $retval = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0;
 var $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr$i = 0, $this$addr$i12 = 0, $this$addr$i15 = 0, $this$addr$i20 = 0, $this$addr$i25 = 0, $this$addr$i30 = 0, $this$addr$i35 = 0, $this1$i = 0, $this1$i13 = 0, $this1$i17 = 0, $this1$i22 = 0, $this1$i27 = 0, $this1$i32 = 0, $this1$i37 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr$i = $B;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 switch ($sub$ptr$div$i|0) {
 case 1:  {
  $this$addr$i12 = $B;
  $__n$addr$i = 0;
  $this1$i13 = $this$addr$i12;
  $2 = HEAP32[$this1$i13>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $3 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i = (($2) + ($3<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $4 = HEAP32[$arrayidx$i>>2]|0; //@line 213 "hierarchy.cpp"
  $call2 = (__Z13encloseBasis1P6HBasis($4)|0); //@line 213 "hierarchy.cpp"
  $retval = $call2; //@line 213 "hierarchy.cpp"
  $20 = $retval; //@line 221 "hierarchy.cpp"
  STACKTOP = sp;return ($20|0); //@line 221 "hierarchy.cpp"
  break;
 }
 case 2:  {
  $this$addr$i30 = $B;
  $__n$addr$i31 = 0;
  $this1$i32 = $this$addr$i30;
  $5 = HEAP32[$this1$i32>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = $__n$addr$i31; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i34 = (($5) + ($6<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = HEAP32[$arrayidx$i34>>2]|0; //@line 215 "hierarchy.cpp"
  $this$addr$i35 = $B;
  $__n$addr$i36 = 1;
  $this1$i37 = $this$addr$i35;
  $8 = HEAP32[$this1$i37>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $9 = $__n$addr$i36; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i39 = (($8) + ($9<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $10 = HEAP32[$arrayidx$i39>>2]|0; //@line 215 "hierarchy.cpp"
  $call6 = (__Z13encloseBasis2P6HBasisS0_($7,$10)|0); //@line 215 "hierarchy.cpp"
  $retval = $call6; //@line 215 "hierarchy.cpp"
  $20 = $retval; //@line 221 "hierarchy.cpp"
  STACKTOP = sp;return ($20|0); //@line 221 "hierarchy.cpp"
  break;
 }
 case 3:  {
  $this$addr$i25 = $B;
  $__n$addr$i26 = 0;
  $this1$i27 = $this$addr$i25;
  $11 = HEAP32[$this1$i27>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $12 = $__n$addr$i26; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i29 = (($11) + ($12<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $13 = HEAP32[$arrayidx$i29>>2]|0; //@line 217 "hierarchy.cpp"
  $this$addr$i20 = $B;
  $__n$addr$i21 = 1;
  $this1$i22 = $this$addr$i20;
  $14 = HEAP32[$this1$i22>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $15 = $__n$addr$i21; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i24 = (($14) + ($15<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $16 = HEAP32[$arrayidx$i24>>2]|0; //@line 217 "hierarchy.cpp"
  $this$addr$i15 = $B;
  $__n$addr$i16 = 2;
  $this1$i17 = $this$addr$i15;
  $17 = HEAP32[$this1$i17>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $18 = $__n$addr$i16; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i19 = (($17) + ($18<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $19 = HEAP32[$arrayidx$i19>>2]|0; //@line 217 "hierarchy.cpp"
  $call11 = (__Z13encloseBasis3P6HBasisS0_S0_($13,$16,$19)|0); //@line 217 "hierarchy.cpp"
  $retval = $call11; //@line 217 "hierarchy.cpp"
  $20 = $retval; //@line 221 "hierarchy.cpp"
  STACKTOP = sp;return ($20|0); //@line 221 "hierarchy.cpp"
  break;
 }
 default: {
  $retval = 0; //@line 219 "hierarchy.cpp"
  $20 = $retval; //@line 221 "hierarchy.cpp"
  STACKTOP = sp;return ($20|0); //@line 221 "hierarchy.cpp"
 }
 }
 return (0)|0;
}
function __Z11enclosesAllP6HBasisNSt3__26vectorIS0_NS1_9allocatorIS0_EEEE($a,$B) {
 $a = $a|0;
 $B = $B|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__n$addr$i = 0, $a$addr = 0, $arrayidx$i = 0, $call2 = 0, $cmp = 0, $i = 0;
 var $inc = 0, $retval = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr$i = 0, $this$addr$i3 = 0, $this1$i = 0, $this1$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $retval = sp + 20|0;
 $a$addr = $a;
 $i = 0; //@line 224 "hierarchy.cpp"
 while(1) {
  $0 = $i; //@line 224 "hierarchy.cpp"
  $this$addr$i = $B;
  $this1$i = $this$addr$i;
  $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $1 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $2 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$lhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$rhs$cast$i = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp = ($0>>>0)<($sub$ptr$div$i>>>0); //@line 224 "hierarchy.cpp"
  if (!($cmp)) {
   label = 6;
   break;
  }
  $3 = $a$addr; //@line 225 "hierarchy.cpp"
  $4 = $i; //@line 225 "hierarchy.cpp"
  $this$addr$i3 = $B;
  $__n$addr$i = $4;
  $this1$i4 = $this$addr$i3;
  $5 = HEAP32[$this1$i4>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i = (($5) + ($6<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = HEAP32[$arrayidx$i>>2]|0; //@line 225 "hierarchy.cpp"
  $call2 = (__Z8enclosesP6HBasisS0_($3,$7)|0); //@line 225 "hierarchy.cpp"
  if (!($call2)) {
   label = 4;
   break;
  }
  $8 = $i; //@line 224 "hierarchy.cpp"
  $inc = (($8) + 1)|0; //@line 224 "hierarchy.cpp"
  $i = $inc; //@line 224 "hierarchy.cpp"
 }
 if ((label|0) == 4) {
  $$expand_i1_val = 0; //@line 226 "hierarchy.cpp"
  HEAP8[$retval>>0] = $$expand_i1_val; //@line 226 "hierarchy.cpp"
  $$pre_trunc = HEAP8[$retval>>0]|0; //@line 230 "hierarchy.cpp"
  $9 = $$pre_trunc&1; //@line 230 "hierarchy.cpp"
  STACKTOP = sp;return ($9|0); //@line 230 "hierarchy.cpp"
 }
 else if ((label|0) == 6) {
  $$expand_i1_val2 = 1; //@line 229 "hierarchy.cpp"
  HEAP8[$retval>>0] = $$expand_i1_val2; //@line 229 "hierarchy.cpp"
  $$pre_trunc = HEAP8[$retval>>0]|0; //@line 230 "hierarchy.cpp"
  $9 = $$pre_trunc&1; //@line 230 "hierarchy.cpp"
  STACKTOP = sp;return ($9|0); //@line 230 "hierarchy.cpp"
 }
 return (0)|0;
}
function __Z11extendBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEES2_($agg$result,$B,$p) {
 $agg$result = $agg$result|0;
 $B = $B|0;
 $p = $p|0;
 var $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i137 = 0, $__a$addr$i$i$i218 = 0, $__a$addr$i$i$i268 = 0, $__a$addr$i$i$i318 = 0, $__a$addr$i$i$i92 = 0, $__a$addr$i$i142 = 0, $__a$addr$i$i223 = 0, $__a$addr$i$i273 = 0, $__a$addr$i$i323 = 0, $__a$addr$i$i97 = 0, $__annotator$i = 0;
 var $__annotator$i111 = 0, $__annotator$i156 = 0, $__annotator$i237 = 0, $__annotator$i287 = 0, $__annotator$i337 = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__args$addr$i$i$i$i135 = 0, $__args$addr$i$i$i$i216 = 0, $__args$addr$i$i$i$i266 = 0, $__args$addr$i$i$i$i316 = 0, $__args$addr$i$i$i$i90 = 0, $__args$addr$i$i$i139 = 0, $__args$addr$i$i$i220 = 0, $__args$addr$i$i$i270 = 0, $__args$addr$i$i$i320 = 0, $__args$addr$i$i$i94 = 0, $__args$addr$i$i144 = 0, $__args$addr$i$i225 = 0;
 var $__args$addr$i$i275 = 0, $__args$addr$i$i325 = 0, $__args$addr$i$i99 = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_$i113 = 0, $__end_$i158 = 0, $__end_$i179 = 0, $__end_$i187 = 0, $__end_$i239 = 0, $__end_$i289 = 0, $__end_$i339 = 0, $__end_$i78 = 0, $__end_3$i = 0, $__end_3$i124 = 0, $__end_3$i169 = 0, $__end_3$i250 = 0, $__end_3$i300 = 0, $__end_3$i350 = 0, $__end_5$i = 0;
 var $__end_5$i126 = 0, $__end_5$i171 = 0, $__end_5$i252 = 0, $__end_5$i302 = 0, $__end_5$i352 = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i115 = 0, $__end_cap_$i$i160 = 0, $__end_cap_$i$i241 = 0, $__end_cap_$i$i291 = 0, $__end_cap_$i$i341 = 0, $__end_cap_$i$i72 = 0, $__end_cap_$i10$i = 0, $__end_cap_$i10$i121 = 0, $__end_cap_$i10$i166 = 0, $__end_cap_$i10$i247 = 0, $__end_cap_$i10$i297 = 0, $__end_cap_$i10$i347 = 0, $__n$addr$i = 0, $__n$addr$i194 = 0;
 var $__n$addr$i199 = 0, $__n$addr$i204 = 0, $__n$addr$i209 = 0, $__n$addr$i259 = 0, $__n$addr$i309 = 0, $__n$addr$i83 = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i134 = 0, $__p$addr$i$i$i$i215 = 0, $__p$addr$i$i$i$i265 = 0, $__p$addr$i$i$i$i315 = 0, $__p$addr$i$i$i$i89 = 0, $__p$addr$i$i$i138 = 0, $__p$addr$i$i$i219 = 0, $__p$addr$i$i$i269 = 0, $__p$addr$i$i$i319 = 0, $__p$addr$i$i$i93 = 0, $__p$addr$i$i102 = 0;
 var $__p$addr$i$i147 = 0, $__p$addr$i$i228 = 0, $__p$addr$i$i278 = 0, $__p$addr$i$i328 = 0, $__p$addr$i14$i = 0, $__p$addr$i14$i143 = 0, $__p$addr$i14$i224 = 0, $__p$addr$i14$i274 = 0, $__p$addr$i14$i324 = 0, $__p$addr$i14$i98 = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i132 = 0, $__t$addr$i$i$i$i$i213 = 0, $__t$addr$i$i$i$i$i263 = 0, $__t$addr$i$i$i$i$i313 = 0, $__t$addr$i$i$i$i$i64 = 0, $__t$addr$i$i$i$i$i87 = 0, $__t$addr$i$i$i$i136 = 0;
 var $__t$addr$i$i$i$i217 = 0, $__t$addr$i$i$i$i267 = 0, $__t$addr$i$i$i$i317 = 0, $__t$addr$i$i$i$i65 = 0, $__t$addr$i$i$i$i91 = 0, $__t$addr$i$i$i141 = 0, $__t$addr$i$i$i222 = 0, $__t$addr$i$i$i272 = 0, $__t$addr$i$i$i322 = 0, $__t$addr$i$i$i96 = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__x$addr$i = 0, $__x$addr$i110 = 0, $__x$addr$i155 = 0, $__x$addr$i236 = 0, $__x$addr$i286 = 0, $__x$addr$i336 = 0, $add = 0, $agg$tmp = 0;
 var $agg$tmp$i$i = 0, $agg$tmp$i$i100 = 0, $agg$tmp$i$i145 = 0, $agg$tmp$i$i226 = 0, $agg$tmp$i$i276 = 0, $agg$tmp$i$i326 = 0, $agg$tmp1$i$i = 0, $agg$tmp1$i$i140 = 0, $agg$tmp1$i$i221 = 0, $agg$tmp1$i$i271 = 0, $agg$tmp1$i$i321 = 0, $agg$tmp1$i$i95 = 0, $agg$tmp40 = 0, $agg$tmp9 = 0, $arrayidx$i = 0, $arrayidx$i197 = 0, $arrayidx$i202 = 0, $arrayidx$i207 = 0, $arrayidx$i212 = 0, $arrayidx$i262 = 0;
 var $arrayidx$i312 = 0, $arrayidx$i86 = 0, $call = 0, $call13 = 0, $call33 = 0, $call39 = 0, $call44 = 0, $call8 = 0, $cleanup$cond = 0, $cleanup$dest$slot = 0, $cleanup$is_active = 0, $cleanup$is_active$pre_trunc = 0, $cleanup$is_active45 = 0, $cleanup$is_active45$pre_trunc = 0, $cmp = 0, $cmp$i = 0, $cmp$i119 = 0, $cmp$i164 = 0, $cmp$i245 = 0, $cmp$i295 = 0;
 var $cmp$i345 = 0, $cmp22 = 0, $cmp26 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $inc58 = 0, $inc61 = 0, $incdec$ptr$i = 0, $incdec$ptr$i127 = 0, $incdec$ptr$i172 = 0, $incdec$ptr$i253 = 0, $incdec$ptr$i303 = 0, $incdec$ptr$i353 = 0, $j = 0, $nrvo = 0, $nrvo$val = 0, $nrvo$val$pre_trunc = 0;
 var $p$addr = 0, $sel = 0, $sub = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i184 = 0, $sub$ptr$div$i192 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i181 = 0, $sub$ptr$lhs$cast$i189 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i182 = 0, $sub$ptr$rhs$cast$i190 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i183 = 0, $sub$ptr$sub$i191 = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i106 = 0, $this$addr$i$i$i$i151 = 0, $this$addr$i$i$i$i232 = 0, $this$addr$i$i$i$i282 = 0, $this$addr$i$i$i$i332 = 0, $this$addr$i$i$i$i66 = 0, $this$addr$i$i$i107 = 0, $this$addr$i$i$i13$i = 0, $this$addr$i$i$i13$i133 = 0, $this$addr$i$i$i13$i214 = 0, $this$addr$i$i$i13$i264 = 0, $this$addr$i$i$i13$i314 = 0, $this$addr$i$i$i13$i88 = 0, $this$addr$i$i$i152 = 0, $this$addr$i$i$i233 = 0, $this$addr$i$i$i283 = 0, $this$addr$i$i$i333 = 0, $this$addr$i$i$i6$i = 0, $this$addr$i$i$i6$i103 = 0, $this$addr$i$i$i6$i148 = 0;
 var $this$addr$i$i$i6$i229 = 0, $this$addr$i$i$i6$i279 = 0, $this$addr$i$i$i6$i329 = 0, $this$addr$i$i$i67 = 0, $this$addr$i$i108 = 0, $this$addr$i$i153 = 0, $this$addr$i$i234 = 0, $this$addr$i$i284 = 0, $this$addr$i$i334 = 0, $this$addr$i$i68 = 0, $this$addr$i$i7$i = 0, $this$addr$i$i7$i104 = 0, $this$addr$i$i7$i149 = 0, $this$addr$i$i7$i230 = 0, $this$addr$i$i7$i280 = 0, $this$addr$i$i7$i330 = 0, $this$addr$i109 = 0, $this$addr$i154 = 0, $this$addr$i177 = 0, $this$addr$i185 = 0;
 var $this$addr$i193 = 0, $this$addr$i198 = 0, $this$addr$i203 = 0, $this$addr$i208 = 0, $this$addr$i235 = 0, $this$addr$i258 = 0, $this$addr$i285 = 0, $this$addr$i3$i$i = 0, $this$addr$i308 = 0, $this$addr$i335 = 0, $this$addr$i69 = 0, $this$addr$i76 = 0, $this$addr$i79 = 0, $this$addr$i8$i = 0, $this$addr$i8$i105 = 0, $this$addr$i8$i150 = 0, $this$addr$i8$i231 = 0, $this$addr$i8$i281 = 0, $this$addr$i8$i331 = 0, $this$addr$i82 = 0;
 var $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i117 = 0, $this1$i$i$i$i162 = 0, $this1$i$i$i$i243 = 0, $this1$i$i$i$i293 = 0, $this1$i$i$i$i343 = 0, $this1$i$i$i$i74 = 0, $this1$i$i$i116 = 0, $this1$i$i$i12$i = 0, $this1$i$i$i12$i123 = 0, $this1$i$i$i12$i168 = 0, $this1$i$i$i12$i249 = 0, $this1$i$i$i12$i299 = 0, $this1$i$i$i12$i349 = 0, $this1$i$i$i161 = 0, $this1$i$i$i242 = 0, $this1$i$i$i292 = 0, $this1$i$i$i342 = 0;
 var $this1$i$i$i73 = 0, $this1$i$i11$i = 0, $this1$i$i11$i122 = 0, $this1$i$i11$i167 = 0, $this1$i$i11$i248 = 0, $this1$i$i11$i298 = 0, $this1$i$i11$i348 = 0, $this1$i$i114 = 0, $this1$i$i159 = 0, $this1$i$i240 = 0, $this1$i$i290 = 0, $this1$i$i340 = 0, $this1$i$i71 = 0, $this1$i112 = 0, $this1$i157 = 0, $this1$i178 = 0, $this1$i186 = 0, $this1$i195 = 0, $this1$i200 = 0, $this1$i205 = 0;
 var $this1$i210 = 0, $this1$i238 = 0, $this1$i260 = 0, $this1$i288 = 0, $this1$i310 = 0, $this1$i338 = 0, $this1$i4$i$i = 0, $this1$i70 = 0, $this1$i77 = 0, $this1$i80 = 0, $this1$i84 = 0, $this1$i9$i = 0, $this1$i9$i120 = 0, $this1$i9$i165 = 0, $this1$i9$i246 = 0, $this1$i9$i296 = 0, $this1$i9$i346 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 752|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(752|0);
 $agg$tmp1$i$i321 = sp + 40|0;
 $agg$tmp$i$i326 = sp + 737|0;
 $__annotator$i337 = sp + 736|0;
 $agg$tmp1$i$i271 = sp + 32|0;
 $agg$tmp$i$i276 = sp + 735|0;
 $__annotator$i287 = sp + 734|0;
 $agg$tmp1$i$i221 = sp + 24|0;
 $agg$tmp$i$i226 = sp + 733|0;
 $__annotator$i237 = sp + 732|0;
 $agg$tmp1$i$i140 = sp + 16|0;
 $agg$tmp$i$i145 = sp + 731|0;
 $__annotator$i156 = sp + 730|0;
 $agg$tmp1$i$i95 = sp + 8|0;
 $agg$tmp$i$i100 = sp + 729|0;
 $__annotator$i111 = sp + 728|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 727|0;
 $__annotator$i = sp + 726|0;
 $__t1$addr$i$i$i$i = sp + 128|0;
 $__t1$addr$i$i$i = sp + 116|0;
 $p$addr = sp + 100|0;
 $nrvo = sp + 725|0;
 $agg$tmp = sp + 80|0;
 $agg$tmp9 = sp + 56|0;
 $agg$tmp40 = sp + 44|0;
 $cleanup$cond = sp + 724|0;
 HEAP32[$p$addr>>2] = $p;
 $$expand_i1_val = 0; //@line 233 "hierarchy.cpp"
 HEAP8[$nrvo>>0] = $$expand_i1_val; //@line 233 "hierarchy.cpp"
 $this$addr$i = $agg$result;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $0 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $1;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = HEAP32[$p$addr>>2]|0; //@line 237 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(99,($agg$tmp|0),($B|0)); //@line 237 "hierarchy.cpp"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 L1: do {
  if (!($6)) {
   __THREW__ = 0;
   $call = (invoke_iii(100,($4|0),($agg$tmp|0))|0); //@line 237 "hierarchy.cpp"
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $32 = ___cxa_find_matching_catch_2()|0;
    $33 = tempRet0;
    $exn$slot = $32; //@line 263 "hierarchy.cpp"
    $ehselector$slot = $33; //@line 263 "hierarchy.cpp"
    __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 237 "hierarchy.cpp"
    __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
    $exn = $exn$slot; //@line 263 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 263 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 237 "hierarchy.cpp"
   do {
    if ($call) {
     $this$addr$i69 = $agg$result;
     $__x$addr$i = $p$addr;
     $this1$i70 = $this$addr$i69;
     $__end_$i = ((($this1$i70)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $9 = HEAP32[$__end_$i>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $this$addr$i$i68 = $this1$i70;
     $this1$i$i71 = $this$addr$i$i68;
     $__end_cap_$i$i72 = ((($this1$i$i71)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $this$addr$i$i$i67 = $__end_cap_$i$i72;
     $this1$i$i$i73 = $this$addr$i$i$i67;
     $this$addr$i$i$i$i66 = $this1$i$i$i73;
     $this1$i$i$i$i74 = $this$addr$i$i$i$i66;
     $10 = HEAP32[$this1$i$i$i$i74>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $cmp$i = ($9|0)!=($10|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     if ($cmp$i) {
      __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i,$this1$i70,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i8$i = $this1$i70;
      $this1$i9$i = $this$addr$i8$i;
      $__end_cap_$i10$i = ((($this1$i9$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i$i7$i = $__end_cap_$i10$i;
      $this1$i$i11$i = $this$addr$i$i7$i;
      $this$addr$i$i$i6$i = $this1$i$i11$i;
      $this1$i$i$i12$i = $this$addr$i$i$i6$i;
      $__end_3$i = ((($this1$i70)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $11 = HEAP32[$__end_3$i>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $__p$addr$i$i = $11;
      $12 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $13 = $__x$addr$i; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $__a$addr$i$i = $this1$i$i$i12$i;
      $__p$addr$i14$i = $12;
      $__args$addr$i$i = $13;
      $14 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $15 = $__p$addr$i14$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $16 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $__t$addr$i$i$i = $16;
      $17 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
      $__a$addr$i$i$i = $14;
      $__p$addr$i$i$i = $15;
      $__args$addr$i$i$i = $17;
      $18 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $19 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $20 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $__t$addr$i$i$i$i65 = $20;
      $21 = $__t$addr$i$i$i$i65; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i$i$i13$i = $18;
      $__p$addr$i$i$i$i = $19;
      $__args$addr$i$i$i$i = $21;
      $22 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $23 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $__t$addr$i$i$i$i$i64 = $23;
      $24 = $__t$addr$i$i$i$i$i64; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $25 = HEAP32[$24>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      HEAP32[$22>>2] = $25; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $__end_5$i = ((($this1$i70)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $26 = HEAP32[$__end_5$i>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $incdec$ptr$i = ((($26)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      HEAP32[$__end_5$i>>2] = $incdec$ptr$i; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     } else {
      $27 = $__x$addr$i; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      __THREW__ = 0;
      invoke_vii(101,($this1$i70|0),($27|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       break L1;
      }
     }
     $$expand_i1_val2 = 1; //@line 240 "hierarchy.cpp"
     HEAP8[$nrvo>>0] = $$expand_i1_val2; //@line 240 "hierarchy.cpp"
     $cleanup$dest$slot = 1;
    } else {
     $i = 0; //@line 243 "hierarchy.cpp"
     while(1) {
      $34 = $i; //@line 243 "hierarchy.cpp"
      $this$addr$i76 = $B;
      $this1$i77 = $this$addr$i76;
      $__end_$i78 = ((($this1$i77)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $35 = HEAP32[$__end_$i78>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $36 = HEAP32[$this1$i77>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $sub$ptr$lhs$cast$i = $35; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $sub$ptr$rhs$cast$i = $36; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $cmp = ($34>>>0)<($sub$ptr$div$i>>>0); //@line 243 "hierarchy.cpp"
      if (!($cmp)) {
       label = 25;
       break;
      }
      $37 = $i; //@line 245 "hierarchy.cpp"
      $this$addr$i79 = $B;
      $__n$addr$i = $37;
      $this1$i80 = $this$addr$i79;
      $38 = HEAP32[$this1$i80>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $39 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $arrayidx$i = (($38) + ($39<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $40 = HEAP32[$arrayidx$i>>2]|0; //@line 245 "hierarchy.cpp"
      $41 = HEAP32[$p$addr>>2]|0; //@line 245 "hierarchy.cpp"
      __THREW__ = 0;
      $call8 = (invoke_iii(102,($40|0),($41|0))|0); //@line 245 "hierarchy.cpp"
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if ($43) {
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(99,($agg$tmp9|0),($B|0)); //@line 245 "hierarchy.cpp"
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       break L1;
      }
      __THREW__ = 0;
      $call13 = (invoke_iii(100,($call8|0),($agg$tmp9|0))|0); //@line 245 "hierarchy.cpp"
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 23;
       break;
      }
      __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp9); //@line 245 "hierarchy.cpp"
      $48 = $i;
      if ($call13) {
       label = 16;
       break;
      }
      $inc = (($48) + 1)|0; //@line 243 "hierarchy.cpp"
      $i = $inc; //@line 243 "hierarchy.cpp"
     }
     if ((label|0) == 16) {
      $this$addr$i82 = $B;
      $__n$addr$i83 = $48;
      $this1$i84 = $this$addr$i82;
      $49 = HEAP32[$this1$i84>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $50 = $__n$addr$i83; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $arrayidx$i86 = (($49) + ($50<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i109 = $agg$result;
      $__x$addr$i110 = $arrayidx$i86;
      $this1$i112 = $this$addr$i109;
      $__end_$i113 = ((($this1$i112)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $51 = HEAP32[$__end_$i113>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i$i108 = $this1$i112;
      $this1$i$i114 = $this$addr$i$i108;
      $__end_cap_$i$i115 = ((($this1$i$i114)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i$i$i107 = $__end_cap_$i$i115;
      $this1$i$i$i116 = $this$addr$i$i$i107;
      $this$addr$i$i$i$i106 = $this1$i$i$i116;
      $this1$i$i$i$i117 = $this$addr$i$i$i$i106;
      $52 = HEAP32[$this1$i$i$i$i117>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $cmp$i119 = ($51|0)!=($52|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      if ($cmp$i119) {
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i111,$this1$i112,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i8$i105 = $this1$i112;
       $this1$i9$i120 = $this$addr$i8$i105;
       $__end_cap_$i10$i121 = ((($this1$i9$i120)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i7$i104 = $__end_cap_$i10$i121;
       $this1$i$i11$i122 = $this$addr$i$i7$i104;
       $this$addr$i$i$i6$i103 = $this1$i$i11$i122;
       $this1$i$i$i12$i123 = $this$addr$i$i$i6$i103;
       $__end_3$i124 = ((($this1$i112)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $53 = HEAP32[$__end_3$i124>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__p$addr$i$i102 = $53;
       $54 = $__p$addr$i$i102; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $55 = $__x$addr$i110; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__a$addr$i$i97 = $this1$i$i$i12$i123;
       $__p$addr$i14$i98 = $54;
       $__args$addr$i$i99 = $55;
       $56 = $__a$addr$i$i97; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $57 = $__p$addr$i14$i98; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $58 = $__args$addr$i$i99; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i96 = $58;
       $59 = $__t$addr$i$i$i96; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       ;HEAP8[$agg$tmp1$i$i95>>0]=HEAP8[$agg$tmp$i$i100>>0]|0;
       $__a$addr$i$i$i92 = $56;
       $__p$addr$i$i$i93 = $57;
       $__args$addr$i$i$i94 = $59;
       $60 = $__a$addr$i$i$i92; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $61 = $__p$addr$i$i$i93; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $62 = $__args$addr$i$i$i94; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i$i91 = $62;
       $63 = $__t$addr$i$i$i$i91; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       $this$addr$i$i$i13$i88 = $60;
       $__p$addr$i$i$i$i89 = $61;
       $__args$addr$i$i$i$i90 = $63;
       $64 = $__p$addr$i$i$i$i89; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $65 = $__args$addr$i$i$i$i90; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i$i$i87 = $65;
       $66 = $__t$addr$i$i$i$i$i87; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       $67 = HEAP32[$66>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       HEAP32[$64>>2] = $67; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i111); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__end_5$i126 = ((($this1$i112)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $68 = HEAP32[$__end_5$i126>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $incdec$ptr$i127 = ((($68)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       HEAP32[$__end_5$i126>>2] = $incdec$ptr$i127; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      } else {
       $69 = $__x$addr$i110; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       __THREW__ = 0;
       invoke_vii(101,($this1$i112|0),($69|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if ($71) {
        break L1;
       }
      }
      $this$addr$i154 = $agg$result;
      $__x$addr$i155 = $p$addr;
      $this1$i157 = $this$addr$i154;
      $__end_$i158 = ((($this1$i157)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $72 = HEAP32[$__end_$i158>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i$i153 = $this1$i157;
      $this1$i$i159 = $this$addr$i$i153;
      $__end_cap_$i$i160 = ((($this1$i$i159)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $this$addr$i$i$i152 = $__end_cap_$i$i160;
      $this1$i$i$i161 = $this$addr$i$i$i152;
      $this$addr$i$i$i$i151 = $this1$i$i$i161;
      $this1$i$i$i$i162 = $this$addr$i$i$i$i151;
      $73 = HEAP32[$this1$i$i$i$i162>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $cmp$i164 = ($72|0)!=($73|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      if ($cmp$i164) {
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i156,$this1$i157,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i8$i150 = $this1$i157;
       $this1$i9$i165 = $this$addr$i8$i150;
       $__end_cap_$i10$i166 = ((($this1$i9$i165)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i7$i149 = $__end_cap_$i10$i166;
       $this1$i$i11$i167 = $this$addr$i$i7$i149;
       $this$addr$i$i$i6$i148 = $this1$i$i11$i167;
       $this1$i$i$i12$i168 = $this$addr$i$i$i6$i148;
       $__end_3$i169 = ((($this1$i157)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $74 = HEAP32[$__end_3$i169>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__p$addr$i$i147 = $74;
       $75 = $__p$addr$i$i147; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $76 = $__x$addr$i155; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__a$addr$i$i142 = $this1$i$i$i12$i168;
       $__p$addr$i14$i143 = $75;
       $__args$addr$i$i144 = $76;
       $77 = $__a$addr$i$i142; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $78 = $__p$addr$i14$i143; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $79 = $__args$addr$i$i144; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i141 = $79;
       $80 = $__t$addr$i$i$i141; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       ;HEAP8[$agg$tmp1$i$i140>>0]=HEAP8[$agg$tmp$i$i145>>0]|0;
       $__a$addr$i$i$i137 = $77;
       $__p$addr$i$i$i138 = $78;
       $__args$addr$i$i$i139 = $80;
       $81 = $__a$addr$i$i$i137; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $82 = $__p$addr$i$i$i138; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $83 = $__args$addr$i$i$i139; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i$i136 = $83;
       $84 = $__t$addr$i$i$i$i136; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       $this$addr$i$i$i13$i133 = $81;
       $__p$addr$i$i$i$i134 = $82;
       $__args$addr$i$i$i$i135 = $84;
       $85 = $__p$addr$i$i$i$i134; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $86 = $__args$addr$i$i$i$i135; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__t$addr$i$i$i$i$i132 = $86;
       $87 = $__t$addr$i$i$i$i$i132; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
       $88 = HEAP32[$87>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       HEAP32[$85>>2] = $88; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i156); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $__end_5$i171 = ((($this1$i157)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $89 = HEAP32[$__end_5$i171>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $incdec$ptr$i172 = ((($89)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       HEAP32[$__end_5$i171>>2] = $incdec$ptr$i172; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      } else {
       $90 = $__x$addr$i155; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       __THREW__ = 0;
       invoke_vii(101,($this1$i157|0),($90|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $91 = __THREW__; __THREW__ = 0;
       $92 = $91&1;
       if ($92) {
        break L1;
       }
      }
      $$expand_i1_val4 = 1; //@line 249 "hierarchy.cpp"
      HEAP8[$nrvo>>0] = $$expand_i1_val4; //@line 249 "hierarchy.cpp"
      $cleanup$dest$slot = 1;
      break;
     }
     else if ((label|0) == 23) {
      $93 = ___cxa_find_matching_catch_2()|0;
      $94 = tempRet0;
      $exn$slot = $93; //@line 263 "hierarchy.cpp"
      $ehselector$slot = $94; //@line 263 "hierarchy.cpp"
      __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp9); //@line 245 "hierarchy.cpp"
      __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
      $exn = $exn$slot; //@line 263 "hierarchy.cpp"
      $sel = $ehselector$slot; //@line 263 "hierarchy.cpp"
      ___resumeException($exn|0);
      // unreachable;
     }
     else if ((label|0) == 25) {
      $i = 0; //@line 253 "hierarchy.cpp"
      L23: while(1) {
       $95 = $i; //@line 253 "hierarchy.cpp"
       $this$addr$i177 = $B;
       $this1$i178 = $this$addr$i177;
       $__end_$i179 = ((($this1$i178)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $96 = HEAP32[$__end_$i179>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $97 = HEAP32[$this1$i178>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$lhs$cast$i181 = $96; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$rhs$cast$i182 = $97; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$sub$i183 = (($sub$ptr$lhs$cast$i181) - ($sub$ptr$rhs$cast$i182))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$div$i184 = (($sub$ptr$sub$i183|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub = (($sub$ptr$div$i184) - 1)|0; //@line 253 "hierarchy.cpp"
       $cmp22 = ($95>>>0)<($sub>>>0); //@line 253 "hierarchy.cpp"
       if (!($cmp22)) {
        label = 51;
        break;
       }
       $98 = $i; //@line 254 "hierarchy.cpp"
       $add = (($98) + 1)|0; //@line 254 "hierarchy.cpp"
       $j = $add; //@line 254 "hierarchy.cpp"
       while(1) {
        $99 = $j; //@line 254 "hierarchy.cpp"
        $this$addr$i185 = $B;
        $this1$i186 = $this$addr$i185;
        $__end_$i187 = ((($this1$i186)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $100 = HEAP32[$__end_$i187>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $101 = HEAP32[$this1$i186>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $sub$ptr$lhs$cast$i189 = $100; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $sub$ptr$rhs$cast$i190 = $101; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $sub$ptr$sub$i191 = (($sub$ptr$lhs$cast$i189) - ($sub$ptr$rhs$cast$i190))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $sub$ptr$div$i192 = (($sub$ptr$sub$i191|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $cmp26 = ($99>>>0)<($sub$ptr$div$i192>>>0); //@line 254 "hierarchy.cpp"
        $102 = $i;
        if (!($cmp26)) {
         break;
        }
        $$expand_i1_val5 = 0;
        HEAP8[$cleanup$cond>>0] = $$expand_i1_val5;
        $this$addr$i193 = $B;
        $__n$addr$i194 = $102;
        $this1$i195 = $this$addr$i193;
        $103 = HEAP32[$this1$i195>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $104 = $__n$addr$i194; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $arrayidx$i197 = (($103) + ($104<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $105 = HEAP32[$arrayidx$i197>>2]|0; //@line 255 "hierarchy.cpp"
        $106 = $j; //@line 255 "hierarchy.cpp"
        $this$addr$i198 = $B;
        $__n$addr$i199 = $106;
        $this1$i200 = $this$addr$i198;
        $107 = HEAP32[$this1$i200>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $108 = $__n$addr$i199; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $arrayidx$i202 = (($107) + ($108<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $109 = HEAP32[$arrayidx$i202>>2]|0; //@line 255 "hierarchy.cpp"
        $110 = HEAP32[$p$addr>>2]|0; //@line 255 "hierarchy.cpp"
        __THREW__ = 0;
        $call33 = (invoke_iiii(103,($105|0),($109|0),($110|0))|0); //@line 255 "hierarchy.cpp"
        $111 = __THREW__; __THREW__ = 0;
        $112 = $111&1;
        if ($112) {
         break L1;
        }
        if ($call33) {
         $113 = $i; //@line 255 "hierarchy.cpp"
         $this$addr$i203 = $B;
         $__n$addr$i204 = $113;
         $this1$i205 = $this$addr$i203;
         $114 = HEAP32[$this1$i205>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $115 = $__n$addr$i204; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $arrayidx$i207 = (($114) + ($115<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $116 = HEAP32[$arrayidx$i207>>2]|0; //@line 255 "hierarchy.cpp"
         $117 = $j; //@line 255 "hierarchy.cpp"
         $this$addr$i208 = $B;
         $__n$addr$i209 = $117;
         $this1$i210 = $this$addr$i208;
         $118 = HEAP32[$this1$i210>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $119 = $__n$addr$i209; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $arrayidx$i212 = (($118) + ($119<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
         $120 = HEAP32[$arrayidx$i212>>2]|0; //@line 255 "hierarchy.cpp"
         $121 = HEAP32[$p$addr>>2]|0; //@line 255 "hierarchy.cpp"
         __THREW__ = 0;
         $call39 = (invoke_iiii(104,($116|0),($120|0),($121|0))|0); //@line 255 "hierarchy.cpp"
         $122 = __THREW__; __THREW__ = 0;
         $123 = $122&1;
         if ($123) {
          break L1;
         }
         __THREW__ = 0;
         invoke_vii(99,($agg$tmp40|0),($B|0)); //@line 255 "hierarchy.cpp"
         $124 = __THREW__; __THREW__ = 0;
         $125 = $124&1;
         if ($125) {
          break L1;
         }
         $$expand_i1_val7 = 1; //@line 255 "hierarchy.cpp"
         HEAP8[$cleanup$cond>>0] = $$expand_i1_val7; //@line 255 "hierarchy.cpp"
         __THREW__ = 0;
         $call44 = (invoke_iii(100,($call39|0),($agg$tmp40|0))|0); //@line 255 "hierarchy.cpp"
         $126 = __THREW__; __THREW__ = 0;
         $127 = $126&1;
         if ($127) {
          label = 47;
          break L23;
         } else {
          $200 = $call44;
         }
        } else {
         $200 = 0;
        }
        $cleanup$is_active$pre_trunc = HEAP8[$cleanup$cond>>0]|0; //@line 255 "hierarchy.cpp"
        $cleanup$is_active = $cleanup$is_active$pre_trunc&1; //@line 255 "hierarchy.cpp"
        if ($cleanup$is_active) {
         __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp40); //@line 255 "hierarchy.cpp"
        }
        if ($200) {
         label = 37;
         break L23;
        }
        $199 = $j; //@line 254 "hierarchy.cpp"
        $inc58 = (($199) + 1)|0; //@line 254 "hierarchy.cpp"
        $j = $inc58; //@line 254 "hierarchy.cpp"
       }
       $inc61 = (($102) + 1)|0; //@line 253 "hierarchy.cpp"
       $i = $inc61; //@line 253 "hierarchy.cpp"
      }
      if ((label|0) == 37) {
       $128 = $i; //@line 256 "hierarchy.cpp"
       $this$addr$i258 = $B;
       $__n$addr$i259 = $128;
       $this1$i260 = $this$addr$i258;
       $129 = HEAP32[$this1$i260>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $130 = $__n$addr$i259; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $arrayidx$i262 = (($129) + ($130<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i285 = $agg$result;
       $__x$addr$i286 = $arrayidx$i262;
       $this1$i288 = $this$addr$i285;
       $__end_$i289 = ((($this1$i288)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $131 = HEAP32[$__end_$i289>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i284 = $this1$i288;
       $this1$i$i290 = $this$addr$i$i284;
       $__end_cap_$i$i291 = ((($this1$i$i290)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i$i283 = $__end_cap_$i$i291;
       $this1$i$i$i292 = $this$addr$i$i$i283;
       $this$addr$i$i$i$i282 = $this1$i$i$i292;
       $this1$i$i$i$i293 = $this$addr$i$i$i$i282;
       $132 = HEAP32[$this1$i$i$i$i293>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $cmp$i295 = ($131|0)!=($132|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       if ($cmp$i295) {
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i287,$this1$i288,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i8$i281 = $this1$i288;
        $this1$i9$i296 = $this$addr$i8$i281;
        $__end_cap_$i10$i297 = ((($this1$i9$i296)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i$i7$i280 = $__end_cap_$i10$i297;
        $this1$i$i11$i298 = $this$addr$i$i7$i280;
        $this$addr$i$i$i6$i279 = $this1$i$i11$i298;
        $this1$i$i$i12$i299 = $this$addr$i$i$i6$i279;
        $__end_3$i300 = ((($this1$i288)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $133 = HEAP32[$__end_3$i300>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__p$addr$i$i278 = $133;
        $134 = $__p$addr$i$i278; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $135 = $__x$addr$i286; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__a$addr$i$i273 = $this1$i$i$i12$i299;
        $__p$addr$i14$i274 = $134;
        $__args$addr$i$i275 = $135;
        $136 = $__a$addr$i$i273; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $137 = $__p$addr$i14$i274; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $138 = $__args$addr$i$i275; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i272 = $138;
        $139 = $__t$addr$i$i$i272; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        ;HEAP8[$agg$tmp1$i$i271>>0]=HEAP8[$agg$tmp$i$i276>>0]|0;
        $__a$addr$i$i$i268 = $136;
        $__p$addr$i$i$i269 = $137;
        $__args$addr$i$i$i270 = $139;
        $140 = $__a$addr$i$i$i268; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $141 = $__p$addr$i$i$i269; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $142 = $__args$addr$i$i$i270; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i267 = $142;
        $143 = $__t$addr$i$i$i$i267; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $this$addr$i$i$i13$i264 = $140;
        $__p$addr$i$i$i$i265 = $141;
        $__args$addr$i$i$i$i266 = $143;
        $144 = $__p$addr$i$i$i$i265; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $145 = $__args$addr$i$i$i$i266; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i$i263 = $145;
        $146 = $__t$addr$i$i$i$i$i263; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $147 = HEAP32[$146>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        HEAP32[$144>>2] = $147; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i287); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__end_5$i302 = ((($this1$i288)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $148 = HEAP32[$__end_5$i302>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $incdec$ptr$i303 = ((($148)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        HEAP32[$__end_5$i302>>2] = $incdec$ptr$i303; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       } else {
        $149 = $__x$addr$i286; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        __THREW__ = 0;
        invoke_vii(101,($this1$i288|0),($149|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $150 = __THREW__; __THREW__ = 0;
        $151 = $150&1;
        if ($151) {
         break L1;
        }
       }
       $152 = $j; //@line 257 "hierarchy.cpp"
       $this$addr$i308 = $B;
       $__n$addr$i309 = $152;
       $this1$i310 = $this$addr$i308;
       $153 = HEAP32[$this1$i310>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $154 = $__n$addr$i309; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $arrayidx$i312 = (($153) + ($154<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i335 = $agg$result;
       $__x$addr$i336 = $arrayidx$i312;
       $this1$i338 = $this$addr$i335;
       $__end_$i339 = ((($this1$i338)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $155 = HEAP32[$__end_$i339>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i334 = $this1$i338;
       $this1$i$i340 = $this$addr$i$i334;
       $__end_cap_$i$i341 = ((($this1$i$i340)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i$i333 = $__end_cap_$i$i341;
       $this1$i$i$i342 = $this$addr$i$i$i333;
       $this$addr$i$i$i$i332 = $this1$i$i$i342;
       $this1$i$i$i$i343 = $this$addr$i$i$i$i332;
       $156 = HEAP32[$this1$i$i$i$i343>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $cmp$i345 = ($155|0)!=($156|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       if ($cmp$i345) {
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i337,$this1$i338,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i8$i331 = $this1$i338;
        $this1$i9$i346 = $this$addr$i8$i331;
        $__end_cap_$i10$i347 = ((($this1$i9$i346)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i$i7$i330 = $__end_cap_$i10$i347;
        $this1$i$i11$i348 = $this$addr$i$i7$i330;
        $this$addr$i$i$i6$i329 = $this1$i$i11$i348;
        $this1$i$i$i12$i349 = $this$addr$i$i$i6$i329;
        $__end_3$i350 = ((($this1$i338)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $157 = HEAP32[$__end_3$i350>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__p$addr$i$i328 = $157;
        $158 = $__p$addr$i$i328; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $159 = $__x$addr$i336; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__a$addr$i$i323 = $this1$i$i$i12$i349;
        $__p$addr$i14$i324 = $158;
        $__args$addr$i$i325 = $159;
        $160 = $__a$addr$i$i323; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $161 = $__p$addr$i14$i324; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $162 = $__args$addr$i$i325; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i322 = $162;
        $163 = $__t$addr$i$i$i322; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        ;HEAP8[$agg$tmp1$i$i321>>0]=HEAP8[$agg$tmp$i$i326>>0]|0;
        $__a$addr$i$i$i318 = $160;
        $__p$addr$i$i$i319 = $161;
        $__args$addr$i$i$i320 = $163;
        $164 = $__a$addr$i$i$i318; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $165 = $__p$addr$i$i$i319; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $166 = $__args$addr$i$i$i320; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i317 = $166;
        $167 = $__t$addr$i$i$i$i317; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $this$addr$i$i$i13$i314 = $164;
        $__p$addr$i$i$i$i315 = $165;
        $__args$addr$i$i$i$i316 = $167;
        $168 = $__p$addr$i$i$i$i315; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $169 = $__args$addr$i$i$i$i316; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i$i313 = $169;
        $170 = $__t$addr$i$i$i$i$i313; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $171 = HEAP32[$170>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        HEAP32[$168>>2] = $171; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i337); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__end_5$i352 = ((($this1$i338)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $172 = HEAP32[$__end_5$i352>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $incdec$ptr$i353 = ((($172)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        HEAP32[$__end_5$i352>>2] = $incdec$ptr$i353; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       } else {
        $173 = $__x$addr$i336; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        __THREW__ = 0;
        invoke_vii(101,($this1$i338|0),($173|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $174 = __THREW__; __THREW__ = 0;
        $175 = $174&1;
        if ($175) {
         break L1;
        }
       }
       $this$addr$i235 = $agg$result;
       $__x$addr$i236 = $p$addr;
       $this1$i238 = $this$addr$i235;
       $__end_$i239 = ((($this1$i238)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $176 = HEAP32[$__end_$i239>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i234 = $this1$i238;
       $this1$i$i240 = $this$addr$i$i234;
       $__end_cap_$i$i241 = ((($this1$i$i240)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i$i233 = $__end_cap_$i$i241;
       $this1$i$i$i242 = $this$addr$i$i$i233;
       $this$addr$i$i$i$i232 = $this1$i$i$i242;
       $this1$i$i$i$i243 = $this$addr$i$i$i$i232;
       $177 = HEAP32[$this1$i$i$i$i243>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $cmp$i245 = ($176|0)!=($177|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       if ($cmp$i245) {
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i237,$this1$i238,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i8$i231 = $this1$i238;
        $this1$i9$i246 = $this$addr$i8$i231;
        $__end_cap_$i10$i247 = ((($this1$i9$i246)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i$i7$i230 = $__end_cap_$i10$i247;
        $this1$i$i11$i248 = $this$addr$i$i7$i230;
        $this$addr$i$i$i6$i229 = $this1$i$i11$i248;
        $this1$i$i$i12$i249 = $this$addr$i$i$i6$i229;
        $__end_3$i250 = ((($this1$i238)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $178 = HEAP32[$__end_3$i250>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__p$addr$i$i228 = $178;
        $179 = $__p$addr$i$i228; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $180 = $__x$addr$i236; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__a$addr$i$i223 = $this1$i$i$i12$i249;
        $__p$addr$i14$i224 = $179;
        $__args$addr$i$i225 = $180;
        $181 = $__a$addr$i$i223; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $182 = $__p$addr$i14$i224; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $183 = $__args$addr$i$i225; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i222 = $183;
        $184 = $__t$addr$i$i$i222; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        ;HEAP8[$agg$tmp1$i$i221>>0]=HEAP8[$agg$tmp$i$i226>>0]|0;
        $__a$addr$i$i$i218 = $181;
        $__p$addr$i$i$i219 = $182;
        $__args$addr$i$i$i220 = $184;
        $185 = $__a$addr$i$i$i218; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $186 = $__p$addr$i$i$i219; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $187 = $__args$addr$i$i$i220; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i217 = $187;
        $188 = $__t$addr$i$i$i$i217; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $this$addr$i$i$i13$i214 = $185;
        $__p$addr$i$i$i$i215 = $186;
        $__args$addr$i$i$i$i216 = $188;
        $189 = $__p$addr$i$i$i$i215; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $190 = $__args$addr$i$i$i$i216; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i$i213 = $190;
        $191 = $__t$addr$i$i$i$i$i213; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $192 = HEAP32[$191>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        HEAP32[$189>>2] = $192; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i237); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__end_5$i252 = ((($this1$i238)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $193 = HEAP32[$__end_5$i252>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $incdec$ptr$i253 = ((($193)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        HEAP32[$__end_5$i252>>2] = $incdec$ptr$i253; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       } else {
        $194 = $__x$addr$i236; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        __THREW__ = 0;
        invoke_vii(101,($this1$i238|0),($194|0)); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $195 = __THREW__; __THREW__ = 0;
        $196 = $195&1;
        if ($196) {
         break L1;
        }
       }
       $$expand_i1_val10 = 1; //@line 259 "hierarchy.cpp"
       HEAP8[$nrvo>>0] = $$expand_i1_val10; //@line 259 "hierarchy.cpp"
       $cleanup$dest$slot = 1;
       break;
      }
      else if ((label|0) == 47) {
       $197 = ___cxa_find_matching_catch_2()|0;
       $198 = tempRet0;
       $exn$slot = $197; //@line 263 "hierarchy.cpp"
       $ehselector$slot = $198; //@line 263 "hierarchy.cpp"
       $cleanup$is_active45$pre_trunc = HEAP8[$cleanup$cond>>0]|0; //@line 255 "hierarchy.cpp"
       $cleanup$is_active45 = $cleanup$is_active45$pre_trunc&1; //@line 255 "hierarchy.cpp"
       if (!($cleanup$is_active45)) {
        __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
        $exn = $exn$slot; //@line 263 "hierarchy.cpp"
        $sel = $ehselector$slot; //@line 263 "hierarchy.cpp"
        ___resumeException($exn|0);
        // unreachable;
       }
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp40); //@line 255 "hierarchy.cpp"
       __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
       $exn = $exn$slot; //@line 263 "hierarchy.cpp"
       $sel = $ehselector$slot; //@line 263 "hierarchy.cpp"
       ___resumeException($exn|0);
       // unreachable;
      }
      else if ((label|0) == 51) {
       _llvm_trap(); //@line 262 "hierarchy.cpp"
       // unreachable; //@line 262 "hierarchy.cpp"
      }
     }
    }
   } while(0);
   $nrvo$val$pre_trunc = HEAP8[$nrvo>>0]|0; //@line 263 "hierarchy.cpp"
   $nrvo$val = $nrvo$val$pre_trunc&1; //@line 263 "hierarchy.cpp"
   if ($nrvo$val) {
    STACKTOP = sp;return; //@line 263 "hierarchy.cpp"
   }
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
   STACKTOP = sp;return; //@line 263 "hierarchy.cpp"
  }
 } while(0);
 $30 = ___cxa_find_matching_catch_2()|0;
 $31 = tempRet0;
 $exn$slot = $30; //@line 263 "hierarchy.cpp"
 $ehselector$slot = $31; //@line 263 "hierarchy.cpp"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$result); //@line 263 "hierarchy.cpp"
 $exn = $exn$slot; //@line 263 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 263 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEC2ERKS5_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i8 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i16 = 0, $__end_cap_$i = 0, $__end_cap_$i12 = 0, $__n = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__x$addr = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i9 = 0, $agg$tmp1$i = 0, $agg$tmp2$i = 0, $agg$tmp3$i$i = 0, $cmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $ref$tmp = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i5 = 0, $this$addr$i$i6 = 0;
 var $this$addr$i14 = 0, $this$addr$i3$i = 0, $this$addr$i7 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i13 = 0, $this1$i10 = 0, $this1$i15 = 0, $this1$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i$i = sp + 84|0;
 $agg$tmp3$i$i = sp + 16|0;
 $__t1$addr$i$i = sp + 72|0;
 $agg$tmp$i$i = sp + 111|0;
 $agg$tmp2$i = sp + 8|0;
 $agg$tmp$i9 = sp + 110|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 109|0;
 $ref$tmp = sp + 108|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $0 = $__x$addr; //@line 1197 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $0;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a$addr$i = $this1$i$i$i;
 $1 = $__a$addr$i; //@line 1547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $1;
 $this$addr$i7 = $this1;
 $__a$addr$i8 = $ref$tmp;
 $this1$i10 = $this$addr$i7;
 $this$addr$i$i6 = $this1$i10;
 HEAP32[$this1$i10>>2] = 0; //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i = ((($this1$i10)) + 4|0); //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i>>2] = 0; //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i12 = ((($this1$i10)) + 8|0); //@line 443 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i9>>0]|0;
 $this$addr$i3$i = $__end_cap_$i12;
 HEAP32[$__t1$addr$i$i>>2] = 0;
 $this1$i4$i = $this$addr$i3$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $2 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i5 = $this1$i4$i;
 HEAP32[$__t1$addr$i$i$i>>2] = $3;
 $this1$i$i$i13 = $this$addr$i$i$i5;
 $__t$addr$i$i$i$i = $agg$tmp3$i$i;
 $__t$addr$i3$i$i$i = $__t1$addr$i$i$i;
 $4 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i13>>2] = $5; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__x$addr; //@line 1202 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $6;
 $this1$i15 = $this$addr$i14;
 $__end_$i16 = ((($this1$i15)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = HEAP32[$__end_$i16>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$this1$i15>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $7; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $8; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__n = $sub$ptr$div$i; //@line 1202 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = $__n; //@line 1203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($9>>>0)>(0); //@line 1203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $10 = $__n; //@line 1205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(105,($this1|0),($10|0)); //@line 1205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $exn$slot = $20; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $21; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__213__vector_baseIP6HBasisNS_9allocatorIS2_EEED2Ev($this1); //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 }
 $13 = $__x$addr; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $14 = HEAP32[$13>>2]|0; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $15 = $__x$addr; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($15)) + 4|0); //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $16 = HEAP32[$__end_>>2]|0; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $17 = $__n; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_viiii(106,($this1|0),($14|0),($16|0),($17|0)); //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $exn$slot = $20; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $21; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__213__vector_baseIP6HBasisNS_9allocatorIS2_EEED2Ev($this1); //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__213__vector_baseIP6HBasisNS_9allocatorIS2_EEED2Ev($this1); //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __Z9findBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEEiS5_($agg$result,$L,$n,$B) {
 $agg$result = $agg$result|0;
 $L = $L|0;
 $n = $n|0;
 $B = $B|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i$i = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_4$i = 0, $__end_8$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i14$i = 0, $__end_cap_$i21$i = 0;
 var $__end_cap_$i29$i = 0, $__end_cap_$i38$i = 0, $__n$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i3$i$i$i$i = 0, $__t$addr$i4$i$i$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__x$addr$i = 0, $__x$addr$i28 = 0, $add = 0, $agg$tmp = 0, $agg$tmp$i = 0, $agg$tmp$i$byval_copy = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp2$i$i = 0, $agg$tmp3$i$i$i = 0;
 var $agg$tmp4 = 0, $agg$tmp5 = 0, $agg$tmp6 = 0, $agg$tmp7 = 0, $arrayidx$i = 0, $call = 0, $call19 = 0, $call3 = 0, $circle = 0, $cmp = 0, $cmp2 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $n$addr = 0, $p = 0, $ref$tmp = 0, $sel = 0;
 var $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i10$i = 0, $this$addr$i$i$i17$i = 0, $this$addr$i$i$i25$i = 0, $this$addr$i$i$i33$i = 0, $this$addr$i$i11$i = 0, $this$addr$i$i18$i = 0, $this$addr$i$i26$i = 0, $this$addr$i$i34$i = 0, $this$addr$i12$i = 0, $this$addr$i19$i = 0, $this$addr$i24 = 0, $this$addr$i27 = 0, $this$addr$i27$i = 0, $this$addr$i3$i$i = 0, $this$addr$i35$i = 0, $this1$i = 0;
 var $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i16$i = 0, $this1$i$i$i23$i = 0, $this1$i$i$i31$i = 0, $this1$i$i$i39$i = 0, $this1$i$i15$i = 0, $this1$i$i22$i = 0, $this1$i$i30$i = 0, $this1$i13$i = 0, $this1$i20$i = 0, $this1$i25 = 0, $this1$i28$i = 0, $this1$i29 = 0, $this1$i36$i = 0, $this1$i4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $agg$tmp$i$byval_copy = sp + 231|0;
 $agg$tmp$i = sp + 230|0;
 $__t1$addr$i$i$i$i = sp + 200|0;
 $agg$tmp3$i$i$i = sp + 8|0;
 $__t1$addr$i$i$i = sp + 188|0;
 $agg$tmp$i$i$i = sp + 229|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 228|0;
 $agg$tmp = sp + 88|0;
 $agg$tmp4 = sp + 60|0;
 $ref$tmp = sp + 48|0;
 $agg$tmp5 = sp + 36|0;
 $agg$tmp6 = sp + 24|0;
 $agg$tmp7 = sp + 12|0;
 $n$addr = $n;
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEC2ERKS5_($agg$tmp,$B); //@line 266 "hierarchy.cpp"
 __THREW__ = 0;
 $call = (invoke_ii(107,($agg$tmp|0))|0); //@line 266 "hierarchy.cpp"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $24 = ___cxa_find_matching_catch_2()|0;
  $25 = tempRet0;
  $exn$slot = $24; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $25; //@line 277 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 266 "hierarchy.cpp"
  $exn = $exn$slot; //@line 266 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 266 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 266 "hierarchy.cpp"
 $circle = $call; //@line 266 "hierarchy.cpp"
 $i = 0; //@line 268 "hierarchy.cpp"
 while(1) {
  $2 = $i; //@line 268 "hierarchy.cpp"
  $3 = $n$addr; //@line 268 "hierarchy.cpp"
  $cmp = ($2|0)<($3|0); //@line 268 "hierarchy.cpp"
  if (!($cmp)) {
   label = 23;
   break;
  }
  $4 = $i; //@line 269 "hierarchy.cpp"
  $this$addr$i = $L;
  $__n$addr$i = $4;
  $this1$i = $this$addr$i;
  $5 = HEAP32[$this1$i>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i = (($5) + ($6<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = HEAP32[$arrayidx$i>>2]|0; //@line 269 "hierarchy.cpp"
  $p = $7; //@line 269 "hierarchy.cpp"
  $8 = $circle; //@line 270 "hierarchy.cpp"
  $cmp2 = ($8|0)==(0|0); //@line 270 "hierarchy.cpp"
  if ($cmp2) {
   label = 6;
  } else {
   $9 = $circle; //@line 270 "hierarchy.cpp"
   $10 = $p; //@line 270 "hierarchy.cpp"
   $call3 = (__Z8enclosesP6HBasisS0_($9,$10)|0); //@line 270 "hierarchy.cpp"
   if (!($call3)) {
    label = 6;
   }
  }
  if ((label|0) == 6) {
   label = 0;
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEC2ERKS5_($agg$tmp5,$L); //@line 272 "hierarchy.cpp"
   $11 = $i; //@line 272 "hierarchy.cpp"
   $add = (($11) + 1)|0; //@line 272 "hierarchy.cpp"
   __THREW__ = 0;
   invoke_vii(99,($agg$tmp7|0),($B|0)); //@line 272 "hierarchy.cpp"
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    label = 13;
    break;
   }
   $14 = $p; //@line 272 "hierarchy.cpp"
   __THREW__ = 0;
   invoke_viii(108,($agg$tmp6|0),($agg$tmp7|0),($14|0)); //@line 272 "hierarchy.cpp"
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    label = 14;
    break;
   }
   __THREW__ = 0;
   invoke_viiii(109,($ref$tmp|0),($agg$tmp5|0),($add|0),($agg$tmp6|0)); //@line 272 "hierarchy.cpp"
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 15;
    break;
   }
   $this$addr$i27 = $B;
   $__x$addr$i28 = $ref$tmp;
   $this1$i29 = $this$addr$i27;
   $19 = $__x$addr$i28; //@line 1311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   ;HEAP8[$agg$tmp$i$byval_copy>>0]=HEAP8[$agg$tmp$i>>0]|0; //@line 1311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE13__move_assignERS5_NS_17integral_constantIbLb1EEE($this1$i29,$19,$agg$tmp$i$byval_copy); //@line 1311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   __THREW__ = 0;
   invoke_vii(99,($agg$tmp4|0),($this1$i29|0)); //@line 272 "hierarchy.cpp"
   $20 = __THREW__; __THREW__ = 0;
   $21 = $20&1;
   if ($21) {
    label = 16;
    break;
   }
   __THREW__ = 0;
   $call19 = (invoke_ii(107,($agg$tmp4|0))|0); //@line 272 "hierarchy.cpp"
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    label = 17;
    break;
   }
   $circle = $call19; //@line 272 "hierarchy.cpp"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp4); //@line 272 "hierarchy.cpp"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($ref$tmp); //@line 272 "hierarchy.cpp"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp6); //@line 272 "hierarchy.cpp"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp7); //@line 272 "hierarchy.cpp"
   __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp5); //@line 272 "hierarchy.cpp"
  }
  $36 = $i; //@line 268 "hierarchy.cpp"
  $inc = (($36) + 1)|0; //@line 268 "hierarchy.cpp"
  $i = $inc; //@line 268 "hierarchy.cpp"
 }
 if ((label|0) == 13) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  $exn$slot = $26; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $27; //@line 277 "hierarchy.cpp"
 }
 else if ((label|0) == 14) {
  $28 = ___cxa_find_matching_catch_2()|0;
  $29 = tempRet0;
  $exn$slot = $28; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $29; //@line 277 "hierarchy.cpp"
  label = 20;
 }
 else if ((label|0) == 15) {
  $30 = ___cxa_find_matching_catch_2()|0;
  $31 = tempRet0;
  $exn$slot = $30; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $31; //@line 277 "hierarchy.cpp"
  label = 19;
 }
 else if ((label|0) == 16) {
  $32 = ___cxa_find_matching_catch_2()|0;
  $33 = tempRet0;
  $exn$slot = $32; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $33; //@line 277 "hierarchy.cpp"
  label = 18;
 }
 else if ((label|0) == 17) {
  $34 = ___cxa_find_matching_catch_2()|0;
  $35 = tempRet0;
  $exn$slot = $34; //@line 277 "hierarchy.cpp"
  $ehselector$slot = $35; //@line 277 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp4); //@line 272 "hierarchy.cpp"
  label = 18;
 }
 else if ((label|0) == 23) {
  $this$addr$i24 = $agg$result;
  $__x$addr$i = $B;
  $this1$i25 = $this$addr$i24;
  $37 = $__x$addr$i; //@line 1235 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i = $37;
  $this1$i$i = $this$addr$i$i;
  $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i = $__end_cap_$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__t$addr$i$i = $this1$i$i$i$i;
  $38 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i35$i = $this1$i25;
  $__a$addr$i$i = $38;
  $this1$i36$i = $this$addr$i35$i;
  $this$addr$i$i34$i = $this1$i36$i;
  HEAP32[$this1$i36$i>>2] = 0; //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i = ((($this1$i36$i)) + 4|0); //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_$i$i>>2] = 0; //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_cap_$i38$i = ((($this1$i36$i)) + 8|0); //@line 443 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $this$addr$i3$i$i = $__end_cap_$i38$i;
  HEAP32[$__t1$addr$i$i$i>>2] = 0;
  $this1$i4$i$i = $this$addr$i3$i$i;
  $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
  $39 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $40 = HEAP32[$39>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i4$i$i$i = $agg$tmp2$i$i;
  ;HEAP8[$agg$tmp3$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $this$addr$i$i$i33$i = $this1$i4$i$i;
  HEAP32[$__t1$addr$i$i$i$i>>2] = $40;
  $this1$i$i$i39$i = $this$addr$i$i$i33$i;
  $__t$addr$i$i$i$i$i = $agg$tmp3$i$i$i;
  $__t$addr$i3$i$i$i$i = $__t1$addr$i$i$i$i;
  $41 = $__t$addr$i3$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $42 = HEAP32[$41>>2]|0; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$this1$i$i$i39$i>>2] = $42; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $43 = $__x$addr$i; //@line 1241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $44 = HEAP32[$43>>2]|0; //@line 1241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$this1$i25>>2] = $44; //@line 1241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $45 = $__x$addr$i; //@line 1242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i = ((($45)) + 4|0); //@line 1242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $46 = HEAP32[$__end_$i>>2]|0; //@line 1242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_4$i = ((($this1$i25)) + 4|0); //@line 1242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_4$i>>2] = $46; //@line 1242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $47 = $__x$addr$i; //@line 1243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i27$i = $47;
  $this1$i28$i = $this$addr$i27$i;
  $__end_cap_$i29$i = ((($this1$i28$i)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i26$i = $__end_cap_$i29$i;
  $this1$i$i30$i = $this$addr$i$i26$i;
  $this$addr$i$i$i25$i = $this1$i$i30$i;
  $this1$i$i$i31$i = $this$addr$i$i$i25$i;
  $48 = HEAP32[$this1$i$i$i31$i>>2]|0; //@line 1243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i19$i = $this1$i25;
  $this1$i20$i = $this$addr$i19$i;
  $__end_cap_$i21$i = ((($this1$i20$i)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i18$i = $__end_cap_$i21$i;
  $this1$i$i22$i = $this$addr$i$i18$i;
  $this$addr$i$i$i17$i = $this1$i$i22$i;
  $this1$i$i$i23$i = $this$addr$i$i$i17$i;
  HEAP32[$this1$i$i$i23$i>>2] = $48; //@line 1243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $49 = $__x$addr$i; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i12$i = $49;
  $this1$i13$i = $this$addr$i12$i;
  $__end_cap_$i14$i = ((($this1$i13$i)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i11$i = $__end_cap_$i14$i;
  $this1$i$i15$i = $this$addr$i$i11$i;
  $this$addr$i$i$i10$i = $this1$i$i15$i;
  $this1$i$i$i16$i = $this$addr$i$i$i10$i;
  HEAP32[$this1$i$i$i16$i>>2] = 0; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $50 = $__x$addr$i; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_8$i = ((($50)) + 4|0); //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_8$i>>2] = 0; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $51 = $__x$addr$i; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$51>>2] = 0; //@line 1244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 276 "hierarchy.cpp"
 }
 if ((label|0) == 18) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($ref$tmp); //@line 272 "hierarchy.cpp"
  label = 19;
 }
 if ((label|0) == 19) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp6); //@line 272 "hierarchy.cpp"
  label = 20;
 }
 if ((label|0) == 20) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp7); //@line 272 "hierarchy.cpp"
 }
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp5); //@line 272 "hierarchy.cpp"
 $exn = $exn$slot; //@line 266 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 266 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
}
function __Z7encloseNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEE($circles) {
 $circles = $circles|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_cap_$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t1$addr$i$i$i = 0;
 var $__t1$addr$i$i$i$i = 0, $agg$tmp = 0, $agg$tmp1 = 0, $agg$tmp2 = 0, $call5 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i3$i$i = 0, $this$addr$i8 = 0;
 var $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0, $this1$i4$i$i = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $__t1$addr$i$i$i$i = sp + 72|0;
 $__t1$addr$i$i$i = sp + 60|0;
 $agg$tmp = sp + 32|0;
 $agg$tmp1 = sp + 20|0;
 $agg$tmp2 = sp + 8|0;
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEC2ERKS5_($agg$tmp1,$circles); //@line 280 "hierarchy.cpp"
 $this$addr$i = $circles;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i8 = $agg$tmp2;
 $this1$i9 = $this$addr$i8;
 $this$addr$i$i = $this1$i9;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $2 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $3;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $4 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $5; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 __THREW__ = 0;
 invoke_viiii(109,($agg$tmp|0),($agg$tmp1|0),($sub$ptr$div$i|0),($agg$tmp2|0)); //@line 280 "hierarchy.cpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $10 = ___cxa_find_matching_catch_2()|0;
  $11 = tempRet0;
  $exn$slot = $10; //@line 281 "hierarchy.cpp"
  $ehselector$slot = $11; //@line 281 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp2); //@line 280 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp1); //@line 280 "hierarchy.cpp"
  $exn = $exn$slot; //@line 280 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 280 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 __THREW__ = 0;
 $call5 = (invoke_ii(107,($agg$tmp|0))|0); //@line 280 "hierarchy.cpp"
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 280 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp2); //@line 280 "hierarchy.cpp"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp1); //@line 280 "hierarchy.cpp"
  STACKTOP = sp;return ($call5|0); //@line 280 "hierarchy.cpp"
 }
 $12 = ___cxa_find_matching_catch_2()|0;
 $13 = tempRet0;
 $exn$slot = $12; //@line 281 "hierarchy.cpp"
 $ehselector$slot = $13; //@line 281 "hierarchy.cpp"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 280 "hierarchy.cpp"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp2); //@line 280 "hierarchy.cpp"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp1); //@line 280 "hierarchy.cpp"
 $exn = $exn$slot; //@line 280 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 280 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __Z11packEncloseNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEE($circles) {
 $circles = $circles|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0.0, $169 = 0, $17 = 0.0;
 var $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0.0, $272 = 0, $273 = 0.0, $274 = 0, $275 = 0.0, $276 = 0, $277 = 0.0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0;
 var $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0;
 var $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i217 = 0, $__a$addr$i$i222 = 0, $__annotator$i = 0, $__annotator$i237 = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__args$addr$i$i$i$i215 = 0, $__args$addr$i$i$i219 = 0, $__args$addr$i$i224 = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_$i167 = 0, $__end_$i205 = 0;
 var $__end_$i239 = 0, $__end_3$i = 0, $__end_3$i250 = 0, $__end_6$i = 0, $__end_6$i252 = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i207 = 0, $__end_cap_$i$i241 = 0, $__end_cap_$i12$i = 0, $__end_cap_$i12$i247 = 0, $__n$addr$i = 0, $__n$addr$i177 = 0, $__n$addr$i182 = 0, $__n$addr$i187 = 0, $__n$addr$i192 = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i214 = 0, $__p$addr$i$i$i218 = 0;
 var $__p$addr$i$i227 = 0, $__p$addr$i16$i = 0, $__p$addr$i16$i223 = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i198 = 0, $__t$addr$i$i$i$i$i212 = 0, $__t$addr$i$i$i$i199 = 0, $__t$addr$i$i$i$i216 = 0, $__t$addr$i$i$i221 = 0, $__t$addr$i$i228 = 0, $__t$addr$i18$i = 0, $__t$addr$i18$i211 = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__x$addr$i = 0, $__x$addr$i236 = 0, $a = 0;
 var $a_ = 0, $aa = 0.0, $add = 0.0, $add116 = 0.0, $add120 = 0.0, $add124 = 0.0, $add26 = 0.0, $add27 = 0.0, $add32 = 0.0, $add35 = 0.0, $add40 = 0.0, $add43 = 0.0, $add78 = 0.0, $add92 = 0.0, $agg$tmp = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i225 = 0, $agg$tmp1$i$i = 0, $agg$tmp1$i$i220 = 0, $arrayidx$i = 0;
 var $arrayidx$i180 = 0, $arrayidx$i185 = 0, $arrayidx$i190 = 0, $arrayidx$i195 = 0, $avec = 0, $b = 0, $b_ = 0, $ba = 0.0, $basis = 0, $c = 0, $c_ = 0, $ca = 0.0, $call126 = 0.0, $call129 = 0.0, $call148 = 0, $call44 = 0, $call45 = 0, $call48 = 0, $call59 = 0, $call72 = 0;
 var $call84 = 0, $cmp = 0, $cmp$i = 0, $cmp$i245 = 0, $cmp12 = 0, $cmp128 = 0, $cmp130 = 0, $cmp139 = 0, $cmp150 = 0, $cmp3 = 0, $cmp55 = 0, $cmp68 = 0, $cmp99 = 0, $cx = 0.0, $cy = 0.0, $d_ = 0, $d_58 = 0, $dec = 0, $dec88 = 0, $div = 0.0;
 var $div125 = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $inc161 = 0, $incdec$ptr$i = 0, $incdec$ptr$i253 = 0, $isnull = 0, $isnull103 = 0, $j = 0, $k = 0, $kill = 0, $mul = 0.0, $mul115 = 0.0, $mul119 = 0.0, $mul123 = 0.0, $mul22 = 0.0, $mul25 = 0.0;
 var $mul29 = 0.0, $mul31 = 0.0, $mul34 = 0.0, $mul37 = 0.0, $mul39 = 0.0, $mul42 = 0.0, $n = 0, $next = 0, $next107 = 0, $next110 = 0, $next127 = 0, $next133 = 0, $next138 = 0, $next52 = 0, $next54 = 0, $next62 = 0, $next74 = 0, $next79 = 0, $next86 = 0, $next98 = 0;
 var $oa = 0.0, $ox = 0.0, $oy = 0.0, $previous = 0, $previous106 = 0, $previous108 = 0, $previous109 = 0, $previous51 = 0, $previous53 = 0, $previous63 = 0, $previous75 = 0, $previous87 = 0, $previous93 = 0, $r = 0, $r112 = 0, $r114 = 0, $r14 = 0, $r15 = 0, $r163 = 0, $r18 = 0;
 var $r19 = 0, $r20 = 0, $r21 = 0, $r23 = 0, $r24 = 0, $r65 = 0, $r67 = 0, $r7 = 0, $r77 = 0, $r9 = 0, $r91 = 0, $ref$tmp = 0, $ref$tmp141 = 0, $retval = 0.0, $sel = 0, $sj = 0.0, $sk = 0.0, $sub = 0.0, $sub$ptr$div$i = 0, $sub$ptr$div$i172 = 0;
 var $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i169 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i170 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i171 = 0, $sub156 = 0.0, $sub159 = 0.0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i200 = 0, $this$addr$i$i$i$i232 = 0, $this$addr$i$i$i15$i = 0, $this$addr$i$i$i15$i213 = 0, $this$addr$i$i$i201 = 0, $this$addr$i$i$i233 = 0, $this$addr$i$i$i8$i = 0;
 var $this$addr$i$i$i8$i229 = 0, $this$addr$i$i202 = 0, $this$addr$i$i234 = 0, $this$addr$i$i9$i = 0, $this$addr$i$i9$i230 = 0, $this$addr$i10$i = 0, $this$addr$i10$i231 = 0, $this$addr$i165 = 0, $this$addr$i173 = 0, $this$addr$i176 = 0, $this$addr$i181 = 0, $this$addr$i186 = 0, $this$addr$i191 = 0, $this$addr$i196 = 0, $this$addr$i203 = 0, $this$addr$i235 = 0, $this$addr$i3$i$i = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0;
 var $this1$i$i$i$i209 = 0, $this1$i$i$i$i243 = 0, $this1$i$i$i14$i = 0, $this1$i$i$i14$i249 = 0, $this1$i$i$i208 = 0, $this1$i$i$i242 = 0, $this1$i$i13$i = 0, $this1$i$i13$i248 = 0, $this1$i$i206 = 0, $this1$i$i240 = 0, $this1$i11$i = 0, $this1$i11$i246 = 0, $this1$i166 = 0, $this1$i174 = 0, $this1$i178 = 0, $this1$i183 = 0, $this1$i188 = 0, $this1$i193 = 0, $this1$i197 = 0, $this1$i204 = 0;
 var $this1$i238 = 0, $this1$i4$i$i = 0, $tobool = 0, $tobool100 = 0, $y = 0, $y11 = 0, $y122 = 0, $y157 = 0, $y158 = 0, $y36 = 0, $y38 = 0, $y41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $agg$tmp1$i$i220 = sp + 96|0;
 $agg$tmp$i$i225 = sp + 468|0;
 $__annotator$i237 = sp + 467|0;
 $agg$tmp1$i$i = sp + 88|0;
 $agg$tmp$i$i = sp + 466|0;
 $__annotator$i = sp + 465|0;
 $__t1$addr$i$i$i$i = sp + 264|0;
 $__t1$addr$i$i$i = sp + 252|0;
 $avec = sp + 124|0;
 $ref$tmp = sp + 120|0;
 $ref$tmp141 = sp + 116|0;
 $agg$tmp = sp + 100|0;
 $this$addr$i = $circles;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $n = $sub$ptr$div$i; //@line 285 "hierarchy.cpp"
 $this$addr$i165 = $circles;
 $this1$i166 = $this$addr$i165;
 $__end_$i167 = ((($this1$i166)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__end_$i167>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = HEAP32[$this1$i166>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i169 = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i170 = $3; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i171 = (($sub$ptr$lhs$cast$i169) - ($sub$ptr$rhs$cast$i170))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i172 = (($sub$ptr$sub$i171|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $n = $sub$ptr$div$i172; //@line 287 "hierarchy.cpp"
 $4 = $n; //@line 289 "hierarchy.cpp"
 $cmp = ($4|0)==(0); //@line 289 "hierarchy.cpp"
 if ($cmp) {
  $retval = 0.0; //@line 291 "hierarchy.cpp"
  $283 = $retval; //@line 423 "hierarchy.cpp"
  STACKTOP = sp;return (+$283); //@line 423 "hierarchy.cpp"
 }
 $this$addr$i173 = $circles;
 $__n$addr$i = 0;
 $this1$i174 = $this$addr$i173;
 $5 = HEAP32[$this1$i174>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $arrayidx$i = (($5) + ($6<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = HEAP32[$arrayidx$i>>2]|0; //@line 298 "hierarchy.cpp"
 $a = $7; //@line 298 "hierarchy.cpp"
 $8 = $a; //@line 299 "hierarchy.cpp"
 HEAPF64[$8>>3] = 0.0; //@line 299 "hierarchy.cpp"
 $9 = $a; //@line 300 "hierarchy.cpp"
 $y = ((($9)) + 8|0); //@line 300 "hierarchy.cpp"
 HEAPF64[$y>>3] = 0.0; //@line 300 "hierarchy.cpp"
 $10 = $n; //@line 302 "hierarchy.cpp"
 $cmp3 = ($10|0)==(1); //@line 302 "hierarchy.cpp"
 if ($cmp3) {
  $11 = $a; //@line 303 "hierarchy.cpp"
  $r = ((($11)) + 16|0); //@line 303 "hierarchy.cpp"
  $12 = +HEAPF64[$r>>3]; //@line 303 "hierarchy.cpp"
  $retval = $12; //@line 303 "hierarchy.cpp"
  $283 = $retval; //@line 423 "hierarchy.cpp"
  STACKTOP = sp;return (+$283); //@line 423 "hierarchy.cpp"
 }
 $this$addr$i176 = $circles;
 $__n$addr$i177 = 1;
 $this1$i178 = $this$addr$i176;
 $13 = HEAP32[$this1$i178>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $14 = $__n$addr$i177; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $arrayidx$i180 = (($13) + ($14<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $15 = HEAP32[$arrayidx$i180>>2]|0; //@line 306 "hierarchy.cpp"
 $b = $15; //@line 306 "hierarchy.cpp"
 $16 = $b; //@line 307 "hierarchy.cpp"
 $r7 = ((($16)) + 16|0); //@line 307 "hierarchy.cpp"
 $17 = +HEAPF64[$r7>>3]; //@line 307 "hierarchy.cpp"
 $sub = -$17; //@line 307 "hierarchy.cpp"
 $18 = $a; //@line 307 "hierarchy.cpp"
 HEAPF64[$18>>3] = $sub; //@line 307 "hierarchy.cpp"
 $19 = $a; //@line 308 "hierarchy.cpp"
 $r9 = ((($19)) + 16|0); //@line 308 "hierarchy.cpp"
 $20 = +HEAPF64[$r9>>3]; //@line 308 "hierarchy.cpp"
 $21 = $b; //@line 308 "hierarchy.cpp"
 HEAPF64[$21>>3] = $20; //@line 308 "hierarchy.cpp"
 $22 = $b; //@line 309 "hierarchy.cpp"
 $y11 = ((($22)) + 8|0); //@line 309 "hierarchy.cpp"
 HEAPF64[$y11>>3] = 0.0; //@line 309 "hierarchy.cpp"
 $23 = $n; //@line 311 "hierarchy.cpp"
 $cmp12 = ($23|0)==(2); //@line 311 "hierarchy.cpp"
 if ($cmp12) {
  $24 = $a; //@line 312 "hierarchy.cpp"
  $r14 = ((($24)) + 16|0); //@line 312 "hierarchy.cpp"
  $25 = +HEAPF64[$r14>>3]; //@line 312 "hierarchy.cpp"
  $26 = $b; //@line 312 "hierarchy.cpp"
  $r15 = ((($26)) + 16|0); //@line 312 "hierarchy.cpp"
  $27 = +HEAPF64[$r15>>3]; //@line 312 "hierarchy.cpp"
  $add = $25 + $27; //@line 312 "hierarchy.cpp"
  $retval = $add; //@line 312 "hierarchy.cpp"
  $283 = $retval; //@line 423 "hierarchy.cpp"
  STACKTOP = sp;return (+$283); //@line 423 "hierarchy.cpp"
 }
 $this$addr$i186 = $circles;
 $__n$addr$i187 = 2;
 $this1$i188 = $this$addr$i186;
 $28 = HEAP32[$this1$i188>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $29 = $__n$addr$i187; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $arrayidx$i190 = (($28) + ($29<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $30 = HEAP32[$arrayidx$i190>>2]|0; //@line 315 "hierarchy.cpp"
 $c = $30; //@line 315 "hierarchy.cpp"
 $31 = $b; //@line 316 "hierarchy.cpp"
 $32 = $a; //@line 316 "hierarchy.cpp"
 $33 = $c; //@line 316 "hierarchy.cpp"
 __Z5placeP5HNodeS0_S0_($31,$32,$33); //@line 316 "hierarchy.cpp"
 $34 = $a; //@line 318 "hierarchy.cpp"
 $r18 = ((($34)) + 16|0); //@line 318 "hierarchy.cpp"
 $35 = +HEAPF64[$r18>>3]; //@line 318 "hierarchy.cpp"
 $36 = $a; //@line 318 "hierarchy.cpp"
 $r19 = ((($36)) + 16|0); //@line 318 "hierarchy.cpp"
 $37 = +HEAPF64[$r19>>3]; //@line 318 "hierarchy.cpp"
 $mul = $35 * $37; //@line 318 "hierarchy.cpp"
 $aa = $mul; //@line 318 "hierarchy.cpp"
 $38 = $b; //@line 318 "hierarchy.cpp"
 $r20 = ((($38)) + 16|0); //@line 318 "hierarchy.cpp"
 $39 = +HEAPF64[$r20>>3]; //@line 318 "hierarchy.cpp"
 $40 = $b; //@line 318 "hierarchy.cpp"
 $r21 = ((($40)) + 16|0); //@line 318 "hierarchy.cpp"
 $41 = +HEAPF64[$r21>>3]; //@line 318 "hierarchy.cpp"
 $mul22 = $39 * $41; //@line 318 "hierarchy.cpp"
 $ba = $mul22; //@line 318 "hierarchy.cpp"
 $42 = $c; //@line 318 "hierarchy.cpp"
 $r23 = ((($42)) + 16|0); //@line 318 "hierarchy.cpp"
 $43 = +HEAPF64[$r23>>3]; //@line 318 "hierarchy.cpp"
 $44 = $c; //@line 318 "hierarchy.cpp"
 $r24 = ((($44)) + 16|0); //@line 318 "hierarchy.cpp"
 $45 = +HEAPF64[$r24>>3]; //@line 318 "hierarchy.cpp"
 $mul25 = $43 * $45; //@line 318 "hierarchy.cpp"
 $ca = $mul25; //@line 318 "hierarchy.cpp"
 $46 = $aa; //@line 319 "hierarchy.cpp"
 $47 = $ba; //@line 319 "hierarchy.cpp"
 $add26 = $46 + $47; //@line 319 "hierarchy.cpp"
 $48 = $ca; //@line 319 "hierarchy.cpp"
 $add27 = $add26 + $48; //@line 319 "hierarchy.cpp"
 $oa = $add27; //@line 319 "hierarchy.cpp"
 $49 = $aa; //@line 320 "hierarchy.cpp"
 $50 = $a; //@line 320 "hierarchy.cpp"
 $51 = +HEAPF64[$50>>3]; //@line 320 "hierarchy.cpp"
 $mul29 = $49 * $51; //@line 320 "hierarchy.cpp"
 $52 = $ba; //@line 320 "hierarchy.cpp"
 $53 = $b; //@line 320 "hierarchy.cpp"
 $54 = +HEAPF64[$53>>3]; //@line 320 "hierarchy.cpp"
 $mul31 = $52 * $54; //@line 320 "hierarchy.cpp"
 $add32 = $mul29 + $mul31; //@line 320 "hierarchy.cpp"
 $55 = $ca; //@line 320 "hierarchy.cpp"
 $56 = $c; //@line 320 "hierarchy.cpp"
 $57 = +HEAPF64[$56>>3]; //@line 320 "hierarchy.cpp"
 $mul34 = $55 * $57; //@line 320 "hierarchy.cpp"
 $add35 = $add32 + $mul34; //@line 320 "hierarchy.cpp"
 $ox = $add35; //@line 320 "hierarchy.cpp"
 $58 = $aa; //@line 321 "hierarchy.cpp"
 $59 = $a; //@line 321 "hierarchy.cpp"
 $y36 = ((($59)) + 8|0); //@line 321 "hierarchy.cpp"
 $60 = +HEAPF64[$y36>>3]; //@line 321 "hierarchy.cpp"
 $mul37 = $58 * $60; //@line 321 "hierarchy.cpp"
 $61 = $ba; //@line 321 "hierarchy.cpp"
 $62 = $b; //@line 321 "hierarchy.cpp"
 $y38 = ((($62)) + 8|0); //@line 321 "hierarchy.cpp"
 $63 = +HEAPF64[$y38>>3]; //@line 321 "hierarchy.cpp"
 $mul39 = $61 * $63; //@line 321 "hierarchy.cpp"
 $add40 = $mul37 + $mul39; //@line 321 "hierarchy.cpp"
 $64 = $ca; //@line 321 "hierarchy.cpp"
 $65 = $c; //@line 321 "hierarchy.cpp"
 $y41 = ((($65)) + 8|0); //@line 321 "hierarchy.cpp"
 $66 = +HEAPF64[$y41>>3]; //@line 321 "hierarchy.cpp"
 $mul42 = $64 * $66; //@line 321 "hierarchy.cpp"
 $add43 = $add40 + $mul42; //@line 321 "hierarchy.cpp"
 $oy = $add43; //@line 321 "hierarchy.cpp"
 $call44 = (__Znwj(12)|0); //@line 328 "hierarchy.cpp"
 $67 = $a; //@line 328 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(110,($call44|0),($67|0)); //@line 328 "hierarchy.cpp"
 $68 = __THREW__; __THREW__ = 0;
 $69 = $68&1;
 if ($69) {
  $121 = ___cxa_find_matching_catch_2()|0;
  $122 = tempRet0;
  $exn$slot = $121; //@line 423 "hierarchy.cpp"
  $ehselector$slot = $122; //@line 423 "hierarchy.cpp"
  __ZdlPv($call44); //@line 328 "hierarchy.cpp"
  $exn = $exn$slot; //@line 328 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 328 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 $a_ = $call44; //@line 328 "hierarchy.cpp"
 $call45 = (__Znwj(12)|0); //@line 329 "hierarchy.cpp"
 $70 = $b; //@line 329 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(110,($call45|0),($70|0)); //@line 329 "hierarchy.cpp"
 $71 = __THREW__; __THREW__ = 0;
 $72 = $71&1;
 if ($72) {
  $123 = ___cxa_find_matching_catch_2()|0;
  $124 = tempRet0;
  $exn$slot = $123; //@line 423 "hierarchy.cpp"
  $ehselector$slot = $124; //@line 423 "hierarchy.cpp"
  __ZdlPv($call45); //@line 329 "hierarchy.cpp"
  $exn = $exn$slot; //@line 328 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 328 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 $b_ = $call45; //@line 329 "hierarchy.cpp"
 $call48 = (__Znwj(12)|0); //@line 330 "hierarchy.cpp"
 $73 = $c; //@line 330 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(110,($call48|0),($73|0)); //@line 330 "hierarchy.cpp"
 $74 = __THREW__; __THREW__ = 0;
 $75 = $74&1;
 if ($75) {
  $125 = ___cxa_find_matching_catch_2()|0;
  $126 = tempRet0;
  $exn$slot = $125; //@line 423 "hierarchy.cpp"
  $ehselector$slot = $126; //@line 423 "hierarchy.cpp"
  __ZdlPv($call48); //@line 330 "hierarchy.cpp"
  $exn = $exn$slot; //@line 328 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 328 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 $c_ = $call48; //@line 330 "hierarchy.cpp"
 $76 = $b_; //@line 332 "hierarchy.cpp"
 $77 = $c_; //@line 332 "hierarchy.cpp"
 $previous = ((($77)) + 8|0); //@line 332 "hierarchy.cpp"
 HEAP32[$previous>>2] = $76; //@line 332 "hierarchy.cpp"
 $78 = $a_; //@line 332 "hierarchy.cpp"
 $next = ((($78)) + 4|0); //@line 332 "hierarchy.cpp"
 HEAP32[$next>>2] = $76; //@line 332 "hierarchy.cpp"
 $79 = $c_; //@line 333 "hierarchy.cpp"
 $80 = $a_; //@line 333 "hierarchy.cpp"
 $previous51 = ((($80)) + 8|0); //@line 333 "hierarchy.cpp"
 HEAP32[$previous51>>2] = $79; //@line 333 "hierarchy.cpp"
 $81 = $b_; //@line 333 "hierarchy.cpp"
 $next52 = ((($81)) + 4|0); //@line 333 "hierarchy.cpp"
 HEAP32[$next52>>2] = $79; //@line 333 "hierarchy.cpp"
 $82 = $a_; //@line 334 "hierarchy.cpp"
 $83 = $b_; //@line 334 "hierarchy.cpp"
 $previous53 = ((($83)) + 8|0); //@line 334 "hierarchy.cpp"
 HEAP32[$previous53>>2] = $82; //@line 334 "hierarchy.cpp"
 $84 = $c_; //@line 334 "hierarchy.cpp"
 $next54 = ((($84)) + 4|0); //@line 334 "hierarchy.cpp"
 HEAP32[$next54>>2] = $82; //@line 334 "hierarchy.cpp"
 $i = 3; //@line 338 "hierarchy.cpp"
 while(1) {
  $85 = $i; //@line 338 "hierarchy.cpp"
  $86 = $n; //@line 338 "hierarchy.cpp"
  $cmp55 = ($85|0)<($86|0); //@line 338 "hierarchy.cpp"
  if (!($cmp55)) {
   break;
  }
  $87 = $a_; //@line 339 "hierarchy.cpp"
  $88 = HEAP32[$87>>2]|0; //@line 339 "hierarchy.cpp"
  $89 = $b_; //@line 339 "hierarchy.cpp"
  $90 = HEAP32[$89>>2]|0; //@line 339 "hierarchy.cpp"
  $91 = $i; //@line 339 "hierarchy.cpp"
  $this$addr$i191 = $circles;
  $__n$addr$i192 = $91;
  $this1$i193 = $this$addr$i191;
  $92 = HEAP32[$this1$i193>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $93 = $__n$addr$i192; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i195 = (($92) + ($93<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $94 = HEAP32[$arrayidx$i195>>2]|0; //@line 339 "hierarchy.cpp"
  $c = $94; //@line 339 "hierarchy.cpp"
  __Z5placeP5HNodeS0_S0_($88,$90,$94); //@line 339 "hierarchy.cpp"
  $95 = $d_; //@line 340 "hierarchy.cpp"
  $isnull = ($95|0)==(0|0); //@line 340 "hierarchy.cpp"
  if (!($isnull)) {
   __ZdlPv($95); //@line 340 "hierarchy.cpp"
  }
  $call59 = (__Znwj(12)|0); //@line 341 "hierarchy.cpp"
  $96 = $c; //@line 341 "hierarchy.cpp"
  __THREW__ = 0;
  invoke_vii(110,($call59|0),($96|0)); //@line 341 "hierarchy.cpp"
  $97 = __THREW__; __THREW__ = 0;
  $98 = $97&1;
  if ($98) {
   label = 22;
   break;
  }
  $d_58 = $call59; //@line 341 "hierarchy.cpp"
  $99 = $b_; //@line 343 "hierarchy.cpp"
  $next62 = ((($99)) + 4|0); //@line 343 "hierarchy.cpp"
  $100 = HEAP32[$next62>>2]|0; //@line 343 "hierarchy.cpp"
  $j = $100; //@line 343 "hierarchy.cpp"
  $101 = $a_; //@line 344 "hierarchy.cpp"
  $previous63 = ((($101)) + 8|0); //@line 344 "hierarchy.cpp"
  $102 = HEAP32[$previous63>>2]|0; //@line 344 "hierarchy.cpp"
  $k = $102; //@line 344 "hierarchy.cpp"
  $103 = $b_; //@line 345 "hierarchy.cpp"
  $104 = HEAP32[$103>>2]|0; //@line 345 "hierarchy.cpp"
  $r65 = ((($104)) + 16|0); //@line 345 "hierarchy.cpp"
  $105 = +HEAPF64[$r65>>3]; //@line 345 "hierarchy.cpp"
  $sj = $105; //@line 345 "hierarchy.cpp"
  $106 = $a_; //@line 346 "hierarchy.cpp"
  $107 = HEAP32[$106>>2]|0; //@line 346 "hierarchy.cpp"
  $r67 = ((($107)) + 16|0); //@line 346 "hierarchy.cpp"
  $108 = +HEAPF64[$r67>>3]; //@line 346 "hierarchy.cpp"
  $sk = $108; //@line 346 "hierarchy.cpp"
  $kill = 0; //@line 347 "hierarchy.cpp"
  while(1) {
   $109 = $sj; //@line 351 "hierarchy.cpp"
   $110 = $sk; //@line 351 "hierarchy.cpp"
   $cmp68 = $109 <= $110; //@line 351 "hierarchy.cpp"
   do {
    if ($cmp68) {
     $111 = $j; //@line 353 "hierarchy.cpp"
     $112 = HEAP32[$111>>2]|0; //@line 353 "hierarchy.cpp"
     $113 = $d_58; //@line 353 "hierarchy.cpp"
     $114 = HEAP32[$113>>2]|0; //@line 353 "hierarchy.cpp"
     $call72 = (__Z10intersectsP5HNodeS0_($112,$114)|0); //@line 353 "hierarchy.cpp"
     $115 = $j;
     if ($call72) {
      $b_ = $115; //@line 354 "hierarchy.cpp"
      $116 = $b_; //@line 355 "hierarchy.cpp"
      $117 = $a_; //@line 355 "hierarchy.cpp"
      $next74 = ((($117)) + 4|0); //@line 355 "hierarchy.cpp"
      HEAP32[$next74>>2] = $116; //@line 355 "hierarchy.cpp"
      $118 = $a_; //@line 356 "hierarchy.cpp"
      $119 = $b_; //@line 356 "hierarchy.cpp"
      $previous75 = ((($119)) + 8|0); //@line 356 "hierarchy.cpp"
      HEAP32[$previous75>>2] = $118; //@line 356 "hierarchy.cpp"
      $120 = $i; //@line 357 "hierarchy.cpp"
      $dec = (($120) + -1)|0; //@line 357 "hierarchy.cpp"
      $i = $dec; //@line 357 "hierarchy.cpp"
      $kill = 1; //@line 358 "hierarchy.cpp"
      break;
     } else {
      $129 = HEAP32[$115>>2]|0; //@line 360 "hierarchy.cpp"
      $r77 = ((($129)) + 16|0); //@line 360 "hierarchy.cpp"
      $130 = +HEAPF64[$r77>>3]; //@line 360 "hierarchy.cpp"
      $131 = $sj; //@line 360 "hierarchy.cpp"
      $add78 = $131 + $130; //@line 360 "hierarchy.cpp"
      $sj = $add78; //@line 360 "hierarchy.cpp"
      $132 = $j; //@line 361 "hierarchy.cpp"
      $next79 = ((($132)) + 4|0); //@line 361 "hierarchy.cpp"
      $133 = HEAP32[$next79>>2]|0; //@line 361 "hierarchy.cpp"
      $j = $133; //@line 361 "hierarchy.cpp"
      break;
     }
    } else {
     $134 = $k; //@line 364 "hierarchy.cpp"
     $135 = HEAP32[$134>>2]|0; //@line 364 "hierarchy.cpp"
     $136 = $d_58; //@line 364 "hierarchy.cpp"
     $137 = HEAP32[$136>>2]|0; //@line 364 "hierarchy.cpp"
     $call84 = (__Z10intersectsP5HNodeS0_($135,$137)|0); //@line 364 "hierarchy.cpp"
     $138 = $k;
     if ($call84) {
      $a_ = $138; //@line 365 "hierarchy.cpp"
      $139 = $b_; //@line 366 "hierarchy.cpp"
      $140 = $a_; //@line 366 "hierarchy.cpp"
      $next86 = ((($140)) + 4|0); //@line 366 "hierarchy.cpp"
      HEAP32[$next86>>2] = $139; //@line 366 "hierarchy.cpp"
      $141 = $a_; //@line 367 "hierarchy.cpp"
      $142 = $b_; //@line 367 "hierarchy.cpp"
      $previous87 = ((($142)) + 8|0); //@line 367 "hierarchy.cpp"
      HEAP32[$previous87>>2] = $141; //@line 367 "hierarchy.cpp"
      $143 = $i; //@line 368 "hierarchy.cpp"
      $dec88 = (($143) + -1)|0; //@line 368 "hierarchy.cpp"
      $i = $dec88; //@line 368 "hierarchy.cpp"
      $kill = 1; //@line 369 "hierarchy.cpp"
      break;
     } else {
      $144 = HEAP32[$138>>2]|0; //@line 371 "hierarchy.cpp"
      $r91 = ((($144)) + 16|0); //@line 371 "hierarchy.cpp"
      $145 = +HEAPF64[$r91>>3]; //@line 371 "hierarchy.cpp"
      $146 = $sk; //@line 371 "hierarchy.cpp"
      $add92 = $146 + $145; //@line 371 "hierarchy.cpp"
      $sk = $add92; //@line 371 "hierarchy.cpp"
      $147 = $k; //@line 372 "hierarchy.cpp"
      $previous93 = ((($147)) + 8|0); //@line 372 "hierarchy.cpp"
      $148 = HEAP32[$previous93>>2]|0; //@line 372 "hierarchy.cpp"
      $k = $148; //@line 372 "hierarchy.cpp"
      break;
     }
    }
   } while(0);
   $149 = $kill; //@line 376 "hierarchy.cpp"
   $tobool = $149&1; //@line 376 "hierarchy.cpp"
   if ($tobool) {
    break;
   }
   $150 = $j; //@line 379 "hierarchy.cpp"
   $151 = $k; //@line 379 "hierarchy.cpp"
   $next98 = ((($151)) + 4|0); //@line 379 "hierarchy.cpp"
   $152 = HEAP32[$next98>>2]|0; //@line 379 "hierarchy.cpp"
   $cmp99 = ($150|0)!=($152|0); //@line 379 "hierarchy.cpp"
   if (!($cmp99)) {
    break;
   }
  }
  $153 = $kill; //@line 381 "hierarchy.cpp"
  $tobool100 = $153&1; //@line 381 "hierarchy.cpp"
  if (!($tobool100)) {
   $154 = $d_58; //@line 385 "hierarchy.cpp"
   $c_ = $154; //@line 385 "hierarchy.cpp"
   $155 = $d_58; //@line 386 "hierarchy.cpp"
   $isnull103 = ($155|0)==(0|0); //@line 386 "hierarchy.cpp"
   if (!($isnull103)) {
    __ZdlPv($155); //@line 386 "hierarchy.cpp"
   }
   $156 = $a_; //@line 387 "hierarchy.cpp"
   $157 = $c_; //@line 387 "hierarchy.cpp"
   $previous106 = ((($157)) + 8|0); //@line 387 "hierarchy.cpp"
   HEAP32[$previous106>>2] = $156; //@line 387 "hierarchy.cpp"
   $158 = $b_; //@line 388 "hierarchy.cpp"
   $159 = $c_; //@line 388 "hierarchy.cpp"
   $next107 = ((($159)) + 4|0); //@line 388 "hierarchy.cpp"
   HEAP32[$next107>>2] = $158; //@line 388 "hierarchy.cpp"
   $160 = $c_; //@line 389 "hierarchy.cpp"
   $b_ = $160; //@line 389 "hierarchy.cpp"
   $161 = $b_; //@line 390 "hierarchy.cpp"
   $162 = $b_; //@line 390 "hierarchy.cpp"
   $previous108 = ((($162)) + 8|0); //@line 390 "hierarchy.cpp"
   HEAP32[$previous108>>2] = $161; //@line 390 "hierarchy.cpp"
   $163 = $b_; //@line 391 "hierarchy.cpp"
   $previous109 = ((($163)) + 8|0); //@line 391 "hierarchy.cpp"
   $164 = HEAP32[$previous109>>2]|0; //@line 391 "hierarchy.cpp"
   $165 = $a_; //@line 391 "hierarchy.cpp"
   $next110 = ((($165)) + 4|0); //@line 391 "hierarchy.cpp"
   HEAP32[$next110>>2] = $164; //@line 391 "hierarchy.cpp"
   $166 = $c_; //@line 393 "hierarchy.cpp"
   $167 = HEAP32[$166>>2]|0; //@line 393 "hierarchy.cpp"
   $r112 = ((($167)) + 16|0); //@line 393 "hierarchy.cpp"
   $168 = +HEAPF64[$r112>>3]; //@line 393 "hierarchy.cpp"
   $169 = $c_; //@line 393 "hierarchy.cpp"
   $170 = HEAP32[$169>>2]|0; //@line 393 "hierarchy.cpp"
   $r114 = ((($170)) + 16|0); //@line 393 "hierarchy.cpp"
   $171 = +HEAPF64[$r114>>3]; //@line 393 "hierarchy.cpp"
   $mul115 = $168 * $171; //@line 393 "hierarchy.cpp"
   $ca = $mul115; //@line 393 "hierarchy.cpp"
   $172 = $oa; //@line 393 "hierarchy.cpp"
   $add116 = $172 + $mul115; //@line 393 "hierarchy.cpp"
   $oa = $add116; //@line 393 "hierarchy.cpp"
   $173 = $ca; //@line 394 "hierarchy.cpp"
   $174 = $c_; //@line 394 "hierarchy.cpp"
   $175 = HEAP32[$174>>2]|0; //@line 394 "hierarchy.cpp"
   $176 = +HEAPF64[$175>>3]; //@line 394 "hierarchy.cpp"
   $mul119 = $173 * $176; //@line 394 "hierarchy.cpp"
   $177 = $ox; //@line 394 "hierarchy.cpp"
   $add120 = $177 + $mul119; //@line 394 "hierarchy.cpp"
   $ox = $add120; //@line 394 "hierarchy.cpp"
   $178 = $ca; //@line 395 "hierarchy.cpp"
   $179 = $c_; //@line 395 "hierarchy.cpp"
   $180 = HEAP32[$179>>2]|0; //@line 395 "hierarchy.cpp"
   $y122 = ((($180)) + 8|0); //@line 395 "hierarchy.cpp"
   $181 = +HEAPF64[$y122>>3]; //@line 395 "hierarchy.cpp"
   $mul123 = $178 * $181; //@line 395 "hierarchy.cpp"
   $182 = $oy; //@line 395 "hierarchy.cpp"
   $add124 = $182 + $mul123; //@line 395 "hierarchy.cpp"
   $oy = $add124; //@line 395 "hierarchy.cpp"
   $183 = $a_; //@line 397 "hierarchy.cpp"
   $184 = $ox; //@line 397 "hierarchy.cpp"
   $185 = $oa; //@line 397 "hierarchy.cpp"
   $div = $184 / $185; //@line 397 "hierarchy.cpp"
   $cx = $div; //@line 397 "hierarchy.cpp"
   $186 = $oy; //@line 397 "hierarchy.cpp"
   $187 = $oa; //@line 397 "hierarchy.cpp"
   $div125 = $186 / $187; //@line 397 "hierarchy.cpp"
   $cy = $div125; //@line 397 "hierarchy.cpp"
   $call126 = (+__Z9distance2PK6HLNodedd($183,$div,$div125)); //@line 397 "hierarchy.cpp"
   $aa = $call126; //@line 397 "hierarchy.cpp"
   while(1) {
    $188 = $c_; //@line 398 "hierarchy.cpp"
    $next127 = ((($188)) + 4|0); //@line 398 "hierarchy.cpp"
    $189 = HEAP32[$next127>>2]|0; //@line 398 "hierarchy.cpp"
    $c_ = $189; //@line 398 "hierarchy.cpp"
    $190 = $b_; //@line 398 "hierarchy.cpp"
    $cmp128 = ($189|0)!=($190|0); //@line 398 "hierarchy.cpp"
    if (!($cmp128)) {
     break;
    }
    $191 = $c_; //@line 399 "hierarchy.cpp"
    $192 = $cx; //@line 399 "hierarchy.cpp"
    $193 = $cy; //@line 399 "hierarchy.cpp"
    $call129 = (+__Z9distance2PK6HLNodedd($191,$192,$193)); //@line 399 "hierarchy.cpp"
    $ca = $call129; //@line 399 "hierarchy.cpp"
    $194 = $aa; //@line 399 "hierarchy.cpp"
    $cmp130 = $call129 < $194; //@line 399 "hierarchy.cpp"
    if (!($cmp130)) {
     continue;
    }
    $195 = $c_; //@line 401 "hierarchy.cpp"
    $a_ = $195; //@line 401 "hierarchy.cpp"
    $196 = $ca; //@line 401 "hierarchy.cpp"
    $aa = $196; //@line 401 "hierarchy.cpp"
   }
   $197 = $a_; //@line 404 "hierarchy.cpp"
   $next133 = ((($197)) + 4|0); //@line 404 "hierarchy.cpp"
   $198 = HEAP32[$next133>>2]|0; //@line 404 "hierarchy.cpp"
   $b_ = $198; //@line 404 "hierarchy.cpp"
  }
  $199 = $i; //@line 338 "hierarchy.cpp"
  $inc = (($199) + 1)|0; //@line 338 "hierarchy.cpp"
  $i = $inc; //@line 338 "hierarchy.cpp"
 }
 if ((label|0) == 22) {
  $127 = ___cxa_find_matching_catch_2()|0;
  $128 = tempRet0;
  $exn$slot = $127; //@line 423 "hierarchy.cpp"
  $ehselector$slot = $128; //@line 423 "hierarchy.cpp"
  __ZdlPv($call59); //@line 341 "hierarchy.cpp"
  $exn = $exn$slot; //@line 328 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 328 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 $this$addr$i196 = $avec;
 $this1$i197 = $this$addr$i196;
 $this$addr$i$i = $this1$i197;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $200 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $201 = HEAP32[$200>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $201;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $202 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $203 = HEAP32[$202>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $203; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $204 = $b_; //@line 408 "hierarchy.cpp"
 $205 = HEAP32[$204>>2]|0; //@line 408 "hierarchy.cpp"
 HEAP32[$ref$tmp>>2] = $205; //@line 408 "hierarchy.cpp"
 $this$addr$i235 = $avec;
 $__x$addr$i236 = $ref$tmp;
 $this1$i238 = $this$addr$i235;
 $__end_$i239 = ((($this1$i238)) + 4|0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $206 = HEAP32[$__end_$i239>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i234 = $this1$i238;
 $this1$i$i240 = $this$addr$i$i234;
 $__end_cap_$i$i241 = ((($this1$i$i240)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i233 = $__end_cap_$i$i241;
 $this1$i$i$i242 = $this$addr$i$i$i233;
 $this$addr$i$i$i$i232 = $this1$i$i$i242;
 $this1$i$i$i$i243 = $this$addr$i$i$i$i232;
 $207 = HEAP32[$this1$i$i$i$i243>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i245 = ($206>>>0)<($207>>>0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i245) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i237,$this1$i238,1); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i10$i231 = $this1$i238;
  $this1$i11$i246 = $this$addr$i10$i231;
  $__end_cap_$i12$i247 = ((($this1$i11$i246)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i9$i230 = $__end_cap_$i12$i247;
  $this1$i$i13$i248 = $this$addr$i$i9$i230;
  $this$addr$i$i$i8$i229 = $this1$i$i13$i248;
  $this1$i$i$i14$i249 = $this$addr$i$i$i8$i229;
  $__end_3$i250 = ((($this1$i238)) + 4|0); //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $208 = HEAP32[$__end_3$i250>>2]|0; //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i227 = $208;
  $209 = $__p$addr$i$i227; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $210 = $__x$addr$i236; //@line 1609 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__t$addr$i18$i211 = $210;
  $211 = $__t$addr$i18$i211; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $__a$addr$i$i222 = $this1$i$i$i14$i249;
  $__p$addr$i16$i223 = $209;
  $__args$addr$i$i224 = $211;
  $212 = $__a$addr$i$i222; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $213 = $__p$addr$i16$i223; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $214 = $__args$addr$i$i224; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i221 = $214;
  $215 = $__t$addr$i$i$i221; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i$i220>>0]=HEAP8[$agg$tmp$i$i225>>0]|0;
  $__a$addr$i$i$i217 = $212;
  $__p$addr$i$i$i218 = $213;
  $__args$addr$i$i$i219 = $215;
  $216 = $__a$addr$i$i$i217; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $217 = $__p$addr$i$i$i218; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $218 = $__args$addr$i$i$i219; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i216 = $218;
  $219 = $__t$addr$i$i$i$i216; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i15$i213 = $216;
  $__p$addr$i$i$i$i214 = $217;
  $__args$addr$i$i$i$i215 = $219;
  $220 = $__p$addr$i$i$i$i214; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $221 = $__args$addr$i$i$i$i215; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i$i212 = $221;
  $222 = $__t$addr$i$i$i$i$i212; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $223 = HEAP32[$222>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$220>>2] = $223; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i237); //@line 1610 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_6$i252 = ((($this1$i238)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $224 = HEAP32[$__end_6$i252>>2]|0; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i253 = ((($224)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_6$i252>>2] = $incdec$ptr$i253; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  label = 41;
 } else {
  $225 = $__x$addr$i236; //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__t$addr$i$i228 = $225;
  $226 = $__t$addr$i$i228; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  __THREW__ = 0;
  invoke_vii(111,($this1$i238|0),($226|0)); //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $227 = __THREW__; __THREW__ = 0;
  $228 = $227&1;
  if ($228) {
   label = 46;
  } else {
   label = 41;
  }
 }
 L64: do {
  if ((label|0) == 41) {
   $229 = $b_; //@line 409 "hierarchy.cpp"
   $c_ = $229; //@line 409 "hierarchy.cpp"
   while(1) {
    $230 = $c_; //@line 410 "hierarchy.cpp"
    $next138 = ((($230)) + 4|0); //@line 410 "hierarchy.cpp"
    $231 = HEAP32[$next138>>2]|0; //@line 410 "hierarchy.cpp"
    $c_ = $231; //@line 410 "hierarchy.cpp"
    $232 = $b_; //@line 410 "hierarchy.cpp"
    $cmp139 = ($231|0)!=($232|0); //@line 410 "hierarchy.cpp"
    if (!($cmp139)) {
     break;
    }
    $233 = $c_; //@line 411 "hierarchy.cpp"
    $234 = HEAP32[$233>>2]|0; //@line 411 "hierarchy.cpp"
    HEAP32[$ref$tmp141>>2] = $234; //@line 411 "hierarchy.cpp"
    $this$addr$i203 = $avec;
    $__x$addr$i = $ref$tmp141;
    $this1$i204 = $this$addr$i203;
    $__end_$i205 = ((($this1$i204)) + 4|0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
    $235 = HEAP32[$__end_$i205>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
    $this$addr$i$i202 = $this1$i204;
    $this1$i$i206 = $this$addr$i$i202;
    $__end_cap_$i$i207 = ((($this1$i$i206)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
    $this$addr$i$i$i201 = $__end_cap_$i$i207;
    $this1$i$i$i208 = $this$addr$i$i$i201;
    $this$addr$i$i$i$i200 = $this1$i$i$i208;
    $this1$i$i$i$i209 = $this$addr$i$i$i$i200;
    $236 = HEAP32[$this1$i$i$i$i209>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
    $cmp$i = ($235>>>0)<($236>>>0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
    if ($cmp$i) {
     __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i,$this1$i204,1); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $this$addr$i10$i = $this1$i204;
     $this1$i11$i = $this$addr$i10$i;
     $__end_cap_$i12$i = ((($this1$i11$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $this$addr$i$i9$i = $__end_cap_$i12$i;
     $this1$i$i13$i = $this$addr$i$i9$i;
     $this$addr$i$i$i8$i = $this1$i$i13$i;
     $this1$i$i$i14$i = $this$addr$i$i$i8$i;
     $__end_3$i = ((($this1$i204)) + 4|0); //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $237 = HEAP32[$__end_3$i>>2]|0; //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $__p$addr$i$i = $237;
     $238 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $239 = $__x$addr$i; //@line 1609 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $__t$addr$i18$i = $239;
     $240 = $__t$addr$i18$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__a$addr$i$i = $this1$i$i$i14$i;
     $__p$addr$i16$i = $238;
     $__args$addr$i$i = $240;
     $241 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $242 = $__p$addr$i16$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $243 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $__t$addr$i$i$i = $243;
     $244 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
     $__a$addr$i$i$i = $241;
     $__p$addr$i$i$i = $242;
     $__args$addr$i$i$i = $244;
     $245 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $246 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $247 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $__t$addr$i$i$i$i199 = $247;
     $248 = $__t$addr$i$i$i$i199; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $this$addr$i$i$i15$i = $245;
     $__p$addr$i$i$i$i = $246;
     $__args$addr$i$i$i$i = $248;
     $249 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $250 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     $__t$addr$i$i$i$i$i198 = $250;
     $251 = $__t$addr$i$i$i$i$i198; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $252 = HEAP32[$251>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     HEAP32[$249>>2] = $252; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
     __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i); //@line 1610 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $__end_6$i = ((($this1$i204)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $253 = HEAP32[$__end_6$i>>2]|0; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $incdec$ptr$i = ((($253)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     HEAP32[$__end_6$i>>2] = $incdec$ptr$i; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     continue;
    } else {
     $254 = $__x$addr$i; //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $__t$addr$i$i = $254;
     $255 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     __THREW__ = 0;
     invoke_vii(111,($this1$i204|0),($255|0)); //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $256 = __THREW__; __THREW__ = 0;
     $257 = $256&1;
     if ($257) {
      label = 46;
      break L64;
     } else {
      continue;
     }
    }
   }
   __THREW__ = 0;
   invoke_vii(99,($agg$tmp|0),($avec|0)); //@line 414 "hierarchy.cpp"
   $260 = __THREW__; __THREW__ = 0;
   $261 = $260&1;
   if ($261) {
    label = 46;
   } else {
    __THREW__ = 0;
    $call148 = (invoke_ii(112,($agg$tmp|0))|0); //@line 414 "hierarchy.cpp"
    $262 = __THREW__; __THREW__ = 0;
    $263 = $262&1;
    if ($263) {
     $279 = ___cxa_find_matching_catch_2()|0;
     $280 = tempRet0;
     $exn$slot = $279; //@line 423 "hierarchy.cpp"
     $ehselector$slot = $280; //@line 423 "hierarchy.cpp"
     __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 414 "hierarchy.cpp"
     break;
    }
    __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 414 "hierarchy.cpp"
    $basis = $call148; //@line 414 "hierarchy.cpp"
    $i = 0; //@line 416 "hierarchy.cpp"
    while(1) {
     $264 = $i; //@line 416 "hierarchy.cpp"
     $265 = $n; //@line 416 "hierarchy.cpp"
     $cmp150 = ($264|0)<($265|0); //@line 416 "hierarchy.cpp"
     if (!($cmp150)) {
      break;
     }
     $266 = $i; //@line 417 "hierarchy.cpp"
     $this$addr$i181 = $circles;
     $__n$addr$i182 = $266;
     $this1$i183 = $this$addr$i181;
     $267 = HEAP32[$this1$i183>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $268 = $__n$addr$i182; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $arrayidx$i185 = (($267) + ($268<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $269 = HEAP32[$arrayidx$i185>>2]|0; //@line 417 "hierarchy.cpp"
     $a = $269; //@line 417 "hierarchy.cpp"
     $270 = $basis; //@line 418 "hierarchy.cpp"
     $271 = +HEAPF64[$270>>3]; //@line 418 "hierarchy.cpp"
     $272 = $a; //@line 418 "hierarchy.cpp"
     $273 = +HEAPF64[$272>>3]; //@line 418 "hierarchy.cpp"
     $sub156 = $273 - $271; //@line 418 "hierarchy.cpp"
     HEAPF64[$272>>3] = $sub156; //@line 418 "hierarchy.cpp"
     $274 = $basis; //@line 419 "hierarchy.cpp"
     $y157 = ((($274)) + 8|0); //@line 419 "hierarchy.cpp"
     $275 = +HEAPF64[$y157>>3]; //@line 419 "hierarchy.cpp"
     $276 = $a; //@line 419 "hierarchy.cpp"
     $y158 = ((($276)) + 8|0); //@line 419 "hierarchy.cpp"
     $277 = +HEAPF64[$y158>>3]; //@line 419 "hierarchy.cpp"
     $sub159 = $277 - $275; //@line 419 "hierarchy.cpp"
     HEAPF64[$y158>>3] = $sub159; //@line 419 "hierarchy.cpp"
     $278 = $i; //@line 416 "hierarchy.cpp"
     $inc161 = (($278) + 1)|0; //@line 416 "hierarchy.cpp"
     $i = $inc161; //@line 416 "hierarchy.cpp"
    }
    $281 = $basis; //@line 422 "hierarchy.cpp"
    $r163 = ((($281)) + 16|0); //@line 422 "hierarchy.cpp"
    $282 = +HEAPF64[$r163>>3]; //@line 422 "hierarchy.cpp"
    $retval = $282; //@line 422 "hierarchy.cpp"
    __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($avec); //@line 423 "hierarchy.cpp"
    $283 = $retval; //@line 423 "hierarchy.cpp"
    STACKTOP = sp;return (+$283); //@line 423 "hierarchy.cpp"
   }
  }
 } while(0);
 if ((label|0) == 46) {
  $258 = ___cxa_find_matching_catch_2()|0;
  $259 = tempRet0;
  $exn$slot = $258; //@line 423 "hierarchy.cpp"
  $ehselector$slot = $259; //@line 423 "hierarchy.cpp"
 }
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEED2Ev($avec); //@line 423 "hierarchy.cpp"
 $exn = $exn$slot; //@line 328 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 328 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return +(0.0);
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__end_ = 0, $sub$ptr$div = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $__end_ = ((($this1)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return ($sub$ptr$div|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN6HLNodeC2EP5HNode($this,$circle) {
 $this = $this|0;
 $circle = $circle|0;
 var $0 = 0, $circle$addr = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $circle$addr = $circle;
 $this1 = $this$addr;
 $0 = $circle$addr; //@line 121 "hierarchy.cpp"
 HEAP32[$this1>>2] = $0; //@line 121 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 122 "hierarchy.cpp"
}
function __Z10radiusLeafNSt3__28functionIFdP5HNodeEEE($agg$result,$radius) {
 $agg$result = $agg$result|0;
 $radius = $radius|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $agg$tmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp = sp;
 __ZNSt3__28functionIFdP5HNodeEEC2ERKS4_($agg$tmp,$radius); //@line 427 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_viii(113,($agg$result|0),($agg$tmp|0),(0|0)); //@line 427 "hierarchy.cpp"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  $exn$slot = $2; //@line 433 "hierarchy.cpp"
  $ehselector$slot = $3; //@line 433 "hierarchy.cpp"
  __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0D2Ev($agg$tmp); //@line 427 "hierarchy.cpp"
  $exn = $exn$slot; //@line 427 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 427 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0D2Ev($agg$tmp); //@line 427 "hierarchy.cpp"
  STACKTOP = sp;return; //@line 427 "hierarchy.cpp"
 }
}
function __ZNSt3__28functionIFdP5HNodeEEC2ERKS4_($this,$__f) {
 $this = $this|0;
 $__f = $__f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$addr = 0, $__f_ = 0, $__f_10 = 0, $__f_12 = 0, $__f_16 = 0, $__f_2 = 0;
 var $__f_3 = 0, $__f_8 = 0, $__f_9 = 0, $call = 0, $call15 = 0, $cmp = 0, $cmp5 = 0, $this$addr = 0, $this1 = 0, $vtable = 0, $vtable13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $__f$addr = $__f;
 $this1 = $this$addr;
 $0 = $__f$addr; //@line 1665 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($0)) + 16|0); //@line 1665 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = HEAP32[$__f_>>2]|0; //@line 1665 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($1|0)==(0|0); //@line 1665 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if ($cmp) {
  $__f_2 = ((($this1)) + 16|0); //@line 1666 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  HEAP32[$__f_2>>2] = 0; //@line 1666 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1674 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $2 = $__f$addr; //@line 1667 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_3 = ((($2)) + 16|0); //@line 1667 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $3 = HEAP32[$__f_3>>2]|0; //@line 1667 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $4 = $__f$addr; //@line 1667 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp5 = ($3|0)==($4|0); //@line 1667 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if ($cmp5) {
  $call = (__ZNSt3__28functionIFdP5HNodeEE9__as_baseEPv($this1)|0); //@line 1669 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__f_8 = ((($this1)) + 16|0); //@line 1669 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  HEAP32[$__f_8>>2] = $call; //@line 1669 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $5 = $__f$addr; //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__f_9 = ((($5)) + 16|0); //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $6 = HEAP32[$__f_9>>2]|0; //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $vtable = HEAP32[$6>>2]|0; //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $7 = ((($vtable)) + 12|0); //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $8 = HEAP32[$7>>2]|0; //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__f_10 = ((($this1)) + 16|0); //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $9 = HEAP32[$__f_10>>2]|0; //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  FUNCTION_TABLE_vii[$8 & 255]($6,$9); //@line 1670 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1674 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $10 = $__f$addr; //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__f_12 = ((($10)) + 16|0); //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $11 = HEAP32[$__f_12>>2]|0; //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $vtable13 = HEAP32[$11>>2]|0; //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $12 = ((($vtable13)) + 8|0); //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $13 = HEAP32[$12>>2]|0; //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $call15 = (FUNCTION_TABLE_ii[$13 & 255]($11)|0); //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__f_16 = ((($this1)) + 16|0); //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  HEAP32[$__f_16>>2] = $call15; //@line 1673 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1674 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
}
function __ZNSt3__28functionIFvP5HNodeEEC2IZ10radiusLeafNS0_IFdS2_EEEE3__0EET_PNS_9enable_ifIXaasr10__callableIS9_EE5valuentsr7is_sameIS9_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $$addr$i$i$i$i$i18 = 0, $$addr$i101 = 0, $$addr$i54 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i19 = 0, $__a$addr$i91 = 0, $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_7 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i21 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i17 = 0, $__p$addr$i$i$i$i20 = 0, $__p$addr$i$i$i23 = 0, $__p$addr$i$i27 = 0, $__ptr$addr$i$i$i$i$i$i15 = 0, $__s$addr$i = 0;
 var $__s_$i = 0, $__s_$i$i$i48 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i44 = 0, $__size$addr$i$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i29$i = 0, $__t$addr$i$i$i$i32$i = 0, $__t$addr$i$i$i$i84 = 0, $__t$addr$i$i$i21$i = 0, $__t$addr$i$i$i39$i = 0, $__t$addr$i$i$i86 = 0, $__t$addr$i$i23$i = 0, $__t$addr$i$i46$i = 0, $__t$addr$i$i82 = 0;
 var $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i31$i = 0, $__t$addr$i24$i = 0, $__t$addr$i28$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i48$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i28 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i34$i = 0, $__u$addr$i$i41$i = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i42$i = 0, $agg$tmp$i$i87 = 0, $agg$tmp$i92 = 0, $agg$tmp15$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i43$i = 0, $agg$tmp2$i93 = 0, $agg$tmp216$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i37$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i44$i = 0, $agg$tmp3$i$i88 = 0, $agg$tmp37$i$i$i = 0;
 var $agg$tmp37$i$i36$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i45$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i35$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i38$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp617$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0;
 var $ref$i$i$i47 = 0, $ref$i$i12$i$i$i = 0, $ref$tmp = 0, $ref$tmp5 = 0, $retval$i$i = 0, $retval$i47$i = 0, $this$addr = 0, $this$addr$i$i$i$i$i16 = 0, $this$addr$i$i$i$i$i83 = 0, $this$addr$i$i$i$i20$i = 0, $this$addr$i$i$i$i24 = 0, $this$addr$i$i$i$i30$i = 0, $this$addr$i$i$i$i81 = 0, $this$addr$i$i$i25 = 0, $this$addr$i$i$i33$i = 0, $this$addr$i$i$i59 = 0, $this$addr$i$i$i65 = 0, $this$addr$i$i$i73 = 0, $this$addr$i$i$i85 = 0, $this$addr$i$i13$i$i11 = 0;
 var $this$addr$i$i22$i = 0, $this$addr$i$i26 = 0, $this$addr$i$i4$i = 0, $this$addr$i$i40$i = 0, $this$addr$i$i52 = 0, $this$addr$i$i60 = 0, $this$addr$i$i66 = 0, $this$addr$i$i7$i$i$i = 0, $this$addr$i$i74 = 0, $this$addr$i$i8$i$i13 = 0, $this$addr$i$i89 = 0, $this$addr$i100 = 0, $this$addr$i14$i$i12 = 0, $this$addr$i18$i = 0, $this$addr$i29 = 0, $this$addr$i5$i = 0, $this$addr$i53 = 0, $this$addr$i57 = 0, $this$addr$i6$i$i22 = 0, $this$addr$i61 = 0;
 var $this$addr$i67 = 0, $this$addr$i75 = 0, $this$addr$i9 = 0, $this$addr$i9$i$i14 = 0, $this$addr$i90 = 0, $this1 = 0, $this1$i$i$i$i$i98 = 0, $this1$i$i$i$i26$i = 0, $this1$i$i$i$i34 = 0, $this1$i$i$i$i52$i = 0, $this1$i$i$i$i96 = 0, $this1$i$i$i33 = 0, $this1$i$i$i51$i = 0, $this1$i$i$i64 = 0, $this1$i$i$i71 = 0, $this1$i$i$i79 = 0, $this1$i$i$i97 = 0, $this1$i$i10$i$i$i = 0, $this1$i$i11$i$i38 = 0, $this1$i$i16$i$i43 = 0;
 var $this1$i$i25$i = 0, $this1$i$i31 = 0, $this1$i$i49$i = 0, $this1$i$i63 = 0, $this1$i$i7$i = 0, $this1$i$i70 = 0, $this1$i$i78 = 0, $this1$i$i95 = 0, $this1$i10$i$i37 = 0, $this1$i15$i$i42 = 0, $this1$i19$i = 0, $this1$i30 = 0, $this1$i55 = 0, $this1$i58 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i68 = 0, $this1$i7$i$i45 = 0, $this1$i76 = 0, $this1$i94 = 0;
 var $tobool$i$i40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(592|0);
 $agg$tmp48$i$i35$i = sp + 136|0;
 $agg$tmp37$i$i36$i = sp + 128|0;
 $agg$tmp26$i$i37$i = sp + 120|0;
 $agg$tmp5$i$i38$i = sp + 112|0;
 $agg$tmp$i$i42$i = sp + 589|0;
 $agg$tmp2$i$i43$i = sp + 588|0;
 $agg$tmp3$i$i44$i = sp + 587|0;
 $agg$tmp4$i$i45$i = sp + 586|0;
 $retval$i47$i = sp + 524|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 585|0;
 $agg$tmp2$i$i$i = sp + 584|0;
 $agg$tmp3$i$i$i = sp + 583|0;
 $agg$tmp4$i$i$i = sp + 582|0;
 $retval$i$i = sp + 472|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i87 = sp + 581|0;
 $agg$tmp2$i$i = sp + 420|0;
 $agg$tmp3$i$i88 = sp + 416|0;
 $agg$tmp5$i$i = sp + 580|0;
 $agg$tmp6$i$i = sp + 579|0;
 $agg$tmp617$i = sp + 32|0;
 $agg$tmp216$i = sp + 24|0;
 $agg$tmp15$i = sp + 16|0;
 $agg$tmp$i92 = sp + 578|0;
 $agg$tmp2$i93 = sp + 396|0;
 $agg$tmp6$i = sp + 392|0;
 $__t1$addr$i$i$i = sp + 332|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 320|0;
 $agg$tmp$i$i = sp + 312|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 288|0;
 $__a = sp + 577|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp5 = sp + 576|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $this$addr$i9 = $__a;
 $this$addr$i53 = $__a;
 $__n$addr$i = 1;
 $$addr$i54 = 0;
 $this1$i55 = $this$addr$i53;
 $1 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i52 = $this1$i55;
 $cmp$i = ($1>>>0)>(134217727); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $2 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $2<<5; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $3 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($3)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i57 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i58 = $this$addr$i57;
 $4 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i58>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i58)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $5; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i61 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i62 = $this$addr$i61;
 $6 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $7;
 $8 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$8>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$8+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i60 = $this1$i62;
 HEAP32[$__t1$addr$i$i>>2] = $6;
 $this1$i$i63 = $this$addr$i$i60;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $9 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $10 = HEAP32[$9>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $11 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$11>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$11+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i59 = $this1$i$i63;
 HEAP32[$__t1$addr$i$i$i>>2] = $10;
 $this1$i$i$i64 = $this$addr$i$i$i59;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $12 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $13 = HEAP32[$12>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i64>>2] = $13; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i64)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $14 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$14>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$14+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i67 = $__hold;
 $this1$i68 = $this$addr$i67;
 $this$addr$i$i66 = $this1$i68;
 $this1$i$i70 = $this$addr$i$i66;
 $this$addr$i$i$i65 = $this1$i$i70;
 $this1$i$i$i71 = $this$addr$i$i$i65;
 $15 = HEAP32[$this1$i$i$i71>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i = $__f;
 $16 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i100 = $ref$tmp5;
 $$addr$i101 = $__a;
 $this$addr$i90 = $15;
 $__f$addr$i = $16;
 $__a$addr$i91 = $ref$tmp5;
 $this1$i94 = $this$addr$i90;
 $this$addr$i$i89 = $this1$i94;
 $this1$i$i95 = $this$addr$i$i89;
 HEAP32[$this1$i$i95>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i94>>2] = (1112); //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i94)) + 8|0); //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $17 = $__f$addr$i; //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i82 = $17;
 $18 = $__t$addr$i$i82; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i48$i = $18;
 $19 = $__t$addr$i48$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i46$i = $19;
 $20 = $__t$addr$i$i46$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i40$i = $retval$i47$i;
 $__u$addr$i$i41$i = $20;
 $this1$i$i49$i = $this$addr$i$i40$i;
 $21 = $__u$addr$i$i41$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i39$i = $21;
 $22 = $__t$addr$i$i$i39$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i35$i>>0]=HEAP8[$agg$tmp4$i$i45$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i36$i>>0]=HEAP8[$agg$tmp3$i$i44$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i37$i>>0]=HEAP8[$agg$tmp2$i$i43$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i38$i>>0]=HEAP8[$agg$tmp$i$i42$i>>0]|0;
 $this$addr$i$i$i33$i = $this1$i$i49$i;
 $__u$addr$i$i$i34$i = $22;
 $this1$i$i$i51$i = $this$addr$i$i$i33$i;
 $23 = $__u$addr$i$i$i34$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i32$i = $23;
 $24 = $__t$addr$i$i$i$i32$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i30$i = $this1$i$i$i51$i;
 $__t$addr$i2$i$i$i31$i = $24;
 $this1$i$i$i$i52$i = $this$addr$i$i$i$i30$i;
 $25 = $__t$addr$i2$i$i$i31$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i29$i = $25;
 $26 = $__t$addr$i$i$i$i$i29$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i52$i>>2] = $26; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $27 = HEAP32[$retval$i47$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i93>>2] = $27; //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $28 = $__a$addr$i91; //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i28$i = $28;
 $29 = $__t$addr$i28$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i24$i = $29;
 $30 = $__t$addr$i24$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i23$i = $30;
 $31 = $__t$addr$i$i23$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i22$i = $retval$i$i;
 $__u$addr$i$i$i = $31;
 $this1$i$i25$i = $this$addr$i$i22$i;
 $32 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i21$i = $32;
 $33 = $__t$addr$i$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i81 = $this1$i$i25$i;
 $__u$addr$i$i$i$i = $33;
 $this1$i$i$i$i96 = $this$addr$i$i$i$i81;
 $34 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $34;
 $35 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i20$i = $this1$i$i$i$i96;
 $__t$addr$i2$i$i$i$i = $35;
 $this1$i$i$i$i26$i = $this$addr$i$i$i$i20$i;
 $36 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $36;
 $37 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i26$i>>2] = $37; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $38 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp6$i>>2] = $38; //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp617$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;HEAP8[$agg$tmp617$i+1>>0]=HEAP8[$agg$tmp6$i+1>>0]|0;HEAP8[$agg$tmp617$i+2>>0]=HEAP8[$agg$tmp6$i+2>>0]|0;HEAP8[$agg$tmp617$i+3>>0]=HEAP8[$agg$tmp6$i+3>>0]|0;
 ;HEAP8[$agg$tmp216$i>>0]=HEAP8[$agg$tmp2$i93>>0]|0;HEAP8[$agg$tmp216$i+1>>0]=HEAP8[$agg$tmp2$i93+1>>0]|0;HEAP8[$agg$tmp216$i+2>>0]=HEAP8[$agg$tmp2$i93+2>>0]|0;HEAP8[$agg$tmp216$i+3>>0]=HEAP8[$agg$tmp2$i93+3>>0]|0;
 ;HEAP8[$agg$tmp15$i>>0]=HEAP8[$agg$tmp$i92>>0]|0;
 $this$addr$i18$i = $__f_$i;
 $this1$i19$i = $this$addr$i18$i;
 $__t$addr$i$i$i86 = $agg$tmp216$i;
 $39 = $__t$addr$i$i$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$39>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp617$i;
 $40 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i88>>2]=HEAP32[$40>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i88>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i88+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i88+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i88+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i87>>0]|0;
 $this$addr$i$i$i85 = $this1$i19$i;
 $this1$i$i$i97 = $this$addr$i$i$i85;
 $__t$addr$i$i$i$i84 = $agg$tmp39$i$i;
 $41 = $__t$addr$i$i$i$i84; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i83 = $41;
 $this1$i$i$i$i$i98 = $this$addr$i$i$i$i$i83;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i98>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $42 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $42;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $43 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0C2EOS5_($this1$i$i$i97,$43); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i75 = $__hold;
 $this1$i76 = $this$addr$i75;
 $this$addr$i$i74 = $this1$i76;
 $this1$i$i78 = $this$addr$i$i74;
 $this$addr$i$i$i73 = $this1$i$i78;
 $this1$i$i$i79 = $this$addr$i$i$i73;
 $44 = HEAP32[$this1$i$i$i79>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $44; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i76;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_7 = ((($this1)) + 16|0); //@line 1752 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_7>>2] = $45; //@line 1752 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i29 = $__hold;
 $this1$i30 = $this$addr$i29;
 $this$addr$i$i26 = $this1$i30;
 $__p$addr$i$i27 = 0;
 $this1$i$i31 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i31;
 $this1$i$i$i33 = $this$addr$i$i$i25;
 $this$addr$i$i$i$i24 = $this1$i$i$i33;
 $this1$i$i$i$i34 = $this$addr$i$i$i$i24;
 $46 = HEAP32[$this1$i$i$i$i34>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i28 = $46; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $47 = $__p$addr$i$i27; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i14 = $this1$i$i31;
 $this1$i10$i$i37 = $this$addr$i9$i$i14;
 $this$addr$i$i8$i$i13 = $this1$i10$i$i37;
 $this1$i$i11$i$i38 = $this$addr$i$i8$i$i13;
 HEAP32[$this1$i$i11$i$i38>>2] = $47; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $48 = $__tmp$i$i28; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i40 = ($48|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i40)) {
  STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i12 = $this1$i$i31;
 $this1$i15$i$i42 = $this$addr$i14$i$i12;
 $this$addr$i$i13$i$i11 = $this1$i15$i$i42;
 $this1$i$i16$i$i43 = $this$addr$i$i13$i$i11;
 $__second_$i$i$i$i44 = ((($this1$i$i16$i$i43)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__tmp$i$i28; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i22 = $__second_$i$i$i$i44;
 $__p$addr$i$i$i23 = $49;
 $this1$i7$i$i45 = $this$addr$i6$i$i22;
 $ref$i$i$i47 = HEAP32[$this1$i7$i$i45>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $50 = $__p$addr$i$i$i23; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i48 = ((($this1$i7$i$i45)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $51 = HEAP32[$__s_$i$i$i48>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i19 = $ref$i$i$i47;
 $__p$addr$i$i$i$i20 = $50;
 $__n$addr$i$i$i$i21 = $51;
 $52 = $__a$addr$i$i$i$i19; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $53 = $__p$addr$i$i$i$i20; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $54 = $__n$addr$i$i$i$i21; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i16 = $52;
 $__p$addr$i$i$i$i$i17 = $53;
 $$addr$i$i$i$i$i18 = $54;
 $55 = $__p$addr$i$i$i$i$i17; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i15 = $55;
 $56 = $__ptr$addr$i$i$i$i$i$i15; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($56); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0D2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__28functionIFdP5HNodeEED2Ev($this1); //@line 427 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 427 "hierarchy.cpp"
}
function __Z12packChildrenNSt3__28functionIFdP5HNodeEEEd($agg$result,$padding,$k) {
 $agg$result = $agg$result|0;
 $padding = $padding|0;
 $k = +$k;
 var $0 = 0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $agg$tmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $k$addr = 0.0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $agg$tmp = sp;
 $k$addr = $k;
 __ZNSt3__28functionIFdP5HNodeEEC2ERKS4_($agg$tmp,$padding); //@line 438 "hierarchy.cpp"
 $0 = ((($agg$tmp)) + 24|0); //@line 438 "hierarchy.cpp"
 $1 = $k$addr; //@line 438 "hierarchy.cpp"
 HEAPF64[$0>>3] = $1; //@line 438 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_viii(114,($agg$result|0),($agg$tmp|0),(0|0)); //@line 438 "hierarchy.cpp"
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  $exn$slot = $4; //@line 461 "hierarchy.cpp"
  $ehselector$slot = $5; //@line 461 "hierarchy.cpp"
  __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1D2Ev($agg$tmp); //@line 438 "hierarchy.cpp"
  $exn = $exn$slot; //@line 438 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 438 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1D2Ev($agg$tmp); //@line 438 "hierarchy.cpp"
  STACKTOP = sp;return; //@line 438 "hierarchy.cpp"
 }
}
function __ZNSt3__28functionIFvP5HNodeEEC2IZ12packChildrenNS0_IFdS2_EEEdE3__1EET_PNS_9enable_ifIXaasr10__callableIS9_EE5valuentsr7is_sameIS9_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $$addr$i$i$i$i$i18 = 0, $$addr$i101 = 0, $$addr$i54 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i19 = 0, $__a$addr$i91 = 0, $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_7 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i21 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i17 = 0, $__p$addr$i$i$i$i20 = 0, $__p$addr$i$i$i23 = 0, $__p$addr$i$i27 = 0, $__ptr$addr$i$i$i$i$i$i15 = 0, $__s$addr$i = 0;
 var $__s_$i = 0, $__s_$i$i$i48 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i44 = 0, $__size$addr$i$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i29$i = 0, $__t$addr$i$i$i$i32$i = 0, $__t$addr$i$i$i$i84 = 0, $__t$addr$i$i$i21$i = 0, $__t$addr$i$i$i39$i = 0, $__t$addr$i$i$i86 = 0, $__t$addr$i$i23$i = 0, $__t$addr$i$i46$i = 0, $__t$addr$i$i82 = 0;
 var $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i31$i = 0, $__t$addr$i24$i = 0, $__t$addr$i28$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i48$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i28 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i34$i = 0, $__u$addr$i$i41$i = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i42$i = 0, $agg$tmp$i$i87 = 0, $agg$tmp$i92 = 0, $agg$tmp15$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i43$i = 0, $agg$tmp2$i93 = 0, $agg$tmp216$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i37$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i44$i = 0, $agg$tmp3$i$i88 = 0, $agg$tmp37$i$i$i = 0;
 var $agg$tmp37$i$i36$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i45$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i35$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i38$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp617$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0;
 var $ref$i$i$i47 = 0, $ref$i$i12$i$i$i = 0, $ref$tmp = 0, $ref$tmp5 = 0, $retval$i$i = 0, $retval$i47$i = 0, $this$addr = 0, $this$addr$i$i$i$i$i16 = 0, $this$addr$i$i$i$i$i83 = 0, $this$addr$i$i$i$i20$i = 0, $this$addr$i$i$i$i24 = 0, $this$addr$i$i$i$i30$i = 0, $this$addr$i$i$i$i81 = 0, $this$addr$i$i$i25 = 0, $this$addr$i$i$i33$i = 0, $this$addr$i$i$i59 = 0, $this$addr$i$i$i65 = 0, $this$addr$i$i$i73 = 0, $this$addr$i$i$i85 = 0, $this$addr$i$i13$i$i11 = 0;
 var $this$addr$i$i22$i = 0, $this$addr$i$i26 = 0, $this$addr$i$i4$i = 0, $this$addr$i$i40$i = 0, $this$addr$i$i52 = 0, $this$addr$i$i60 = 0, $this$addr$i$i66 = 0, $this$addr$i$i7$i$i$i = 0, $this$addr$i$i74 = 0, $this$addr$i$i8$i$i13 = 0, $this$addr$i$i89 = 0, $this$addr$i100 = 0, $this$addr$i14$i$i12 = 0, $this$addr$i18$i = 0, $this$addr$i29 = 0, $this$addr$i5$i = 0, $this$addr$i53 = 0, $this$addr$i57 = 0, $this$addr$i6$i$i22 = 0, $this$addr$i61 = 0;
 var $this$addr$i67 = 0, $this$addr$i75 = 0, $this$addr$i9 = 0, $this$addr$i9$i$i14 = 0, $this$addr$i90 = 0, $this1 = 0, $this1$i$i$i$i$i98 = 0, $this1$i$i$i$i26$i = 0, $this1$i$i$i$i34 = 0, $this1$i$i$i$i52$i = 0, $this1$i$i$i$i96 = 0, $this1$i$i$i33 = 0, $this1$i$i$i51$i = 0, $this1$i$i$i64 = 0, $this1$i$i$i71 = 0, $this1$i$i$i79 = 0, $this1$i$i$i97 = 0, $this1$i$i10$i$i$i = 0, $this1$i$i11$i$i38 = 0, $this1$i$i16$i$i43 = 0;
 var $this1$i$i25$i = 0, $this1$i$i31 = 0, $this1$i$i49$i = 0, $this1$i$i63 = 0, $this1$i$i7$i = 0, $this1$i$i70 = 0, $this1$i$i78 = 0, $this1$i$i95 = 0, $this1$i10$i$i37 = 0, $this1$i15$i$i42 = 0, $this1$i19$i = 0, $this1$i30 = 0, $this1$i55 = 0, $this1$i58 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i68 = 0, $this1$i7$i$i45 = 0, $this1$i76 = 0, $this1$i94 = 0;
 var $tobool$i$i40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(592|0);
 $agg$tmp48$i$i35$i = sp + 136|0;
 $agg$tmp37$i$i36$i = sp + 128|0;
 $agg$tmp26$i$i37$i = sp + 120|0;
 $agg$tmp5$i$i38$i = sp + 112|0;
 $agg$tmp$i$i42$i = sp + 589|0;
 $agg$tmp2$i$i43$i = sp + 588|0;
 $agg$tmp3$i$i44$i = sp + 587|0;
 $agg$tmp4$i$i45$i = sp + 586|0;
 $retval$i47$i = sp + 524|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 585|0;
 $agg$tmp2$i$i$i = sp + 584|0;
 $agg$tmp3$i$i$i = sp + 583|0;
 $agg$tmp4$i$i$i = sp + 582|0;
 $retval$i$i = sp + 472|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i87 = sp + 581|0;
 $agg$tmp2$i$i = sp + 420|0;
 $agg$tmp3$i$i88 = sp + 416|0;
 $agg$tmp5$i$i = sp + 580|0;
 $agg$tmp6$i$i = sp + 579|0;
 $agg$tmp617$i = sp + 32|0;
 $agg$tmp216$i = sp + 24|0;
 $agg$tmp15$i = sp + 16|0;
 $agg$tmp$i92 = sp + 578|0;
 $agg$tmp2$i93 = sp + 396|0;
 $agg$tmp6$i = sp + 392|0;
 $__t1$addr$i$i$i = sp + 332|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 320|0;
 $agg$tmp$i$i = sp + 312|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 288|0;
 $__a = sp + 577|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp5 = sp + 576|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $this$addr$i9 = $__a;
 $this$addr$i53 = $__a;
 $__n$addr$i = 1;
 $$addr$i54 = 0;
 $this1$i55 = $this$addr$i53;
 $1 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i52 = $this1$i55;
 $cmp$i = ($1>>>0)>(107374182); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $2 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = ($2*40)|0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $3 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($3)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i57 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i58 = $this$addr$i57;
 $4 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i58>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i58)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $5; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i61 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i62 = $this$addr$i61;
 $6 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $7;
 $8 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$8>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$8+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i60 = $this1$i62;
 HEAP32[$__t1$addr$i$i>>2] = $6;
 $this1$i$i63 = $this$addr$i$i60;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $9 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $10 = HEAP32[$9>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $11 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$11>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$11+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i59 = $this1$i$i63;
 HEAP32[$__t1$addr$i$i$i>>2] = $10;
 $this1$i$i$i64 = $this$addr$i$i$i59;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $12 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $13 = HEAP32[$12>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i64>>2] = $13; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i64)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $14 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$14>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$14+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i67 = $__hold;
 $this1$i68 = $this$addr$i67;
 $this$addr$i$i66 = $this1$i68;
 $this1$i$i70 = $this$addr$i$i66;
 $this$addr$i$i$i65 = $this1$i$i70;
 $this1$i$i$i71 = $this$addr$i$i$i65;
 $15 = HEAP32[$this1$i$i$i71>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i = $__f;
 $16 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i100 = $ref$tmp5;
 $$addr$i101 = $__a;
 $this$addr$i90 = $15;
 $__f$addr$i = $16;
 $__a$addr$i91 = $ref$tmp5;
 $this1$i94 = $this$addr$i90;
 $this$addr$i$i89 = $this1$i94;
 $this1$i$i95 = $this$addr$i$i89;
 HEAP32[$this1$i$i95>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i94>>2] = (1200); //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i94)) + 8|0); //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $17 = $__f$addr$i; //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i82 = $17;
 $18 = $__t$addr$i$i82; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i48$i = $18;
 $19 = $__t$addr$i48$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i46$i = $19;
 $20 = $__t$addr$i$i46$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i40$i = $retval$i47$i;
 $__u$addr$i$i41$i = $20;
 $this1$i$i49$i = $this$addr$i$i40$i;
 $21 = $__u$addr$i$i41$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i39$i = $21;
 $22 = $__t$addr$i$i$i39$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i35$i>>0]=HEAP8[$agg$tmp4$i$i45$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i36$i>>0]=HEAP8[$agg$tmp3$i$i44$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i37$i>>0]=HEAP8[$agg$tmp2$i$i43$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i38$i>>0]=HEAP8[$agg$tmp$i$i42$i>>0]|0;
 $this$addr$i$i$i33$i = $this1$i$i49$i;
 $__u$addr$i$i$i34$i = $22;
 $this1$i$i$i51$i = $this$addr$i$i$i33$i;
 $23 = $__u$addr$i$i$i34$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i32$i = $23;
 $24 = $__t$addr$i$i$i$i32$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i30$i = $this1$i$i$i51$i;
 $__t$addr$i2$i$i$i31$i = $24;
 $this1$i$i$i$i52$i = $this$addr$i$i$i$i30$i;
 $25 = $__t$addr$i2$i$i$i31$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i29$i = $25;
 $26 = $__t$addr$i$i$i$i$i29$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i52$i>>2] = $26; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $27 = HEAP32[$retval$i47$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i93>>2] = $27; //@line 1477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $28 = $__a$addr$i91; //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i28$i = $28;
 $29 = $__t$addr$i28$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i24$i = $29;
 $30 = $__t$addr$i24$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i23$i = $30;
 $31 = $__t$addr$i$i23$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i22$i = $retval$i$i;
 $__u$addr$i$i$i = $31;
 $this1$i$i25$i = $this$addr$i$i22$i;
 $32 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i21$i = $32;
 $33 = $__t$addr$i$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i81 = $this1$i$i25$i;
 $__u$addr$i$i$i$i = $33;
 $this1$i$i$i$i96 = $this$addr$i$i$i$i81;
 $34 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $34;
 $35 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i20$i = $this1$i$i$i$i96;
 $__t$addr$i2$i$i$i$i = $35;
 $this1$i$i$i$i26$i = $this$addr$i$i$i$i20$i;
 $36 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $36;
 $37 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i26$i>>2] = $37; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $38 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp6$i>>2] = $38; //@line 1478 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp617$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;HEAP8[$agg$tmp617$i+1>>0]=HEAP8[$agg$tmp6$i+1>>0]|0;HEAP8[$agg$tmp617$i+2>>0]=HEAP8[$agg$tmp6$i+2>>0]|0;HEAP8[$agg$tmp617$i+3>>0]=HEAP8[$agg$tmp6$i+3>>0]|0;
 ;HEAP8[$agg$tmp216$i>>0]=HEAP8[$agg$tmp2$i93>>0]|0;HEAP8[$agg$tmp216$i+1>>0]=HEAP8[$agg$tmp2$i93+1>>0]|0;HEAP8[$agg$tmp216$i+2>>0]=HEAP8[$agg$tmp2$i93+2>>0]|0;HEAP8[$agg$tmp216$i+3>>0]=HEAP8[$agg$tmp2$i93+3>>0]|0;
 ;HEAP8[$agg$tmp15$i>>0]=HEAP8[$agg$tmp$i92>>0]|0;
 $this$addr$i18$i = $__f_$i;
 $this1$i19$i = $this$addr$i18$i;
 $__t$addr$i$i$i86 = $agg$tmp216$i;
 $39 = $__t$addr$i$i$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$39>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp617$i;
 $40 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i88>>2]=HEAP32[$40>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i88>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i88+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i88+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i88+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i87>>0]|0;
 $this$addr$i$i$i85 = $this1$i19$i;
 $this1$i$i$i97 = $this$addr$i$i$i85;
 $__t$addr$i$i$i$i84 = $agg$tmp39$i$i;
 $41 = $__t$addr$i$i$i$i84; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i83 = $41;
 $this1$i$i$i$i$i98 = $this$addr$i$i$i$i$i83;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i98>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $42 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $42;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $43 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1C2EOS5_($this1$i$i$i97,$43); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i75 = $__hold;
 $this1$i76 = $this$addr$i75;
 $this$addr$i$i74 = $this1$i76;
 $this1$i$i78 = $this$addr$i$i74;
 $this$addr$i$i$i73 = $this1$i$i78;
 $this1$i$i$i79 = $this$addr$i$i$i73;
 $44 = HEAP32[$this1$i$i$i79>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $44; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i76;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_7 = ((($this1)) + 16|0); //@line 1752 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_7>>2] = $45; //@line 1752 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i29 = $__hold;
 $this1$i30 = $this$addr$i29;
 $this$addr$i$i26 = $this1$i30;
 $__p$addr$i$i27 = 0;
 $this1$i$i31 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i31;
 $this1$i$i$i33 = $this$addr$i$i$i25;
 $this$addr$i$i$i$i24 = $this1$i$i$i33;
 $this1$i$i$i$i34 = $this$addr$i$i$i$i24;
 $46 = HEAP32[$this1$i$i$i$i34>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i28 = $46; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $47 = $__p$addr$i$i27; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i14 = $this1$i$i31;
 $this1$i10$i$i37 = $this$addr$i9$i$i14;
 $this$addr$i$i8$i$i13 = $this1$i10$i$i37;
 $this1$i$i11$i$i38 = $this$addr$i$i8$i$i13;
 HEAP32[$this1$i$i11$i$i38>>2] = $47; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $48 = $__tmp$i$i28; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i40 = ($48|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i40)) {
  STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i12 = $this1$i$i31;
 $this1$i15$i$i42 = $this$addr$i14$i$i12;
 $this$addr$i$i13$i$i11 = $this1$i15$i$i42;
 $this1$i$i16$i$i43 = $this$addr$i$i13$i$i11;
 $__second_$i$i$i$i44 = ((($this1$i$i16$i$i43)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__tmp$i$i28; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i22 = $__second_$i$i$i$i44;
 $__p$addr$i$i$i23 = $49;
 $this1$i7$i$i45 = $this$addr$i6$i$i22;
 $ref$i$i$i47 = HEAP32[$this1$i7$i$i45>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $50 = $__p$addr$i$i$i23; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i48 = ((($this1$i7$i$i45)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $51 = HEAP32[$__s_$i$i$i48>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i19 = $ref$i$i$i47;
 $__p$addr$i$i$i$i20 = $50;
 $__n$addr$i$i$i$i21 = $51;
 $52 = $__a$addr$i$i$i$i19; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $53 = $__p$addr$i$i$i$i20; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $54 = $__n$addr$i$i$i$i21; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i16 = $52;
 $__p$addr$i$i$i$i$i17 = $53;
 $$addr$i$i$i$i$i18 = $54;
 $55 = $__p$addr$i$i$i$i$i17; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i15 = $55;
 $56 = $__ptr$addr$i$i$i$i$i$i15; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($56); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1D2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__28functionIFdP5HNodeEED2Ev($this1); //@line 438 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 438 "hierarchy.cpp"
}
function __Z14translateChildd($agg$result,$k) {
 $agg$result = $agg$result|0;
 $k = +$k;
 var $0 = 0.0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $k$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp$byval_copy = sp + 16|0;
 $agg$tmp = sp;
 $k$addr = $k;
 $0 = $k$addr; //@line 464 "hierarchy.cpp"
 HEAPF64[$agg$tmp>>3] = $0; //@line 464 "hierarchy.cpp"
 ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0;HEAP32[$agg$tmp$byval_copy+4>>2]=HEAP32[$agg$tmp+4>>2]|0; //@line 464 "hierarchy.cpp"
 __ZNSt3__28functionIFvP5HNodeEEC2IZ14translateChilddE3__2EET_PNS_9enable_ifIXaasr10__callableIS7_EE5valuentsr7is_sameIS7_S4_EE5valueEvE4typeE($agg$result,$agg$tmp$byval_copy,0); //@line 464 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 464 "hierarchy.cpp"
}
function __ZNSt3__28functionIFvP5HNodeEEC2IZ14translateChilddE3__2EET_PNS_9enable_ifIXaasr10__callableIS7_EE5valuentsr7is_sameIS7_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0;
 var $__f_4 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i19$i = 0, $__t$addr$i$i21$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i27$i = 0, $__t$addr$i3$i$i$i = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp10$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp211$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp612$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0;
 var $retval$i$i = 0, $retval$i22$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i17$i = 0, $this$addr$i$i$i18$i = 0, $this$addr$i$i15$i = 0, $this$addr$i$i20$i = 0, $this$addr$i13$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i25$i = 0, $this1$i$i$i24$i = 0;
 var $this1$i$i23$i = 0, $this1$i14$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 226|0;
 $agg$tmp2$i$i$i = sp + 225|0;
 $agg$tmp3$i$i$i = sp + 224|0;
 $agg$tmp4$i$i$i = sp + 223|0;
 $retval$i22$i = sp + 164|0;
 $retval$i$i = sp + 222|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 221|0;
 $agg$tmp2$i$i = sp + 120|0;
 $agg$tmp3$i$i = sp + 220|0;
 $agg$tmp5$i$i = sp + 219|0;
 $agg$tmp6$i$i = sp + 218|0;
 $agg$tmp612$i = sp + 16|0;
 $agg$tmp211$i = sp + 8|0;
 $agg$tmp10$i = sp;
 $agg$tmp$i = sp + 217|0;
 $agg$tmp2$i = sp + 104|0;
 $agg$tmp6$i = sp + 216|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $__t$addr$i = $__f;
 $1 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i = $this1;
 $__f$addr$i = $1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i>>2] = (1244); //@line 1464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i)) + 8|0); //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $2 = $__f$addr$i; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i27$i = $2;
 $3 = $__t$addr$i27$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $4;
 $5 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i22$i;
 $__u$addr$i$i$i = $5;
 $this1$i$i23$i = $this$addr$i$i20$i;
 $6 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i19$i = $6;
 $7 = $__t$addr$i$i$i19$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i18$i = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $7;
 $this1$i$i$i24$i = $this$addr$i$i$i18$i;
 $8 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $8;
 $9 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i17$i = $this1$i$i$i24$i;
 $__t$addr$i2$i$i$i$i = $9;
 $this1$i$i$i$i25$i = $this$addr$i$i$i$i17$i;
 $10 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $10;
 $11 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i25$i>>2] = $11; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $12 = HEAP32[$retval$i22$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $12; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i$i15$i = $retval$i$i;
 ;HEAP8[$agg$tmp612$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;
 ;HEAP8[$agg$tmp211$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp211$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp211$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp211$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp10$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i13$i = $__f_$i;
 $this1$i14$i = $this$addr$i13$i;
 $__t$addr$i$i$i = $agg$tmp211$i;
 $13 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$13>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp612$i;
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i14$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $__t$addr$i3$i$i$i = $agg$tmp28$i$i;
 $14 = $__t$addr$i3$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $14;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i = $ref$i$i$i$i$i;
 $15 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$15>>2]|0;HEAP32[$this1$i$i$i+4>>2]=HEAP32[$15+4>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 16|0); //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_4>>2] = $this1; //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __Z15createHierarchyN10emscripten3valES0_($options,$node) {
 $options = $options|0;
 $node = $node|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $agg$tmp = 0, $agg$tmp4 = 0, $call = 0, $call3 = 0, $cleanup$is_active = 0, $cleanup$is_active$pre_trunc = 0, $cleanup$is_active12 = 0, $cleanup$is_active12$pre_trunc = 0, $cleanup$isactive = 0, $cleanup$isactive9 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $root = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp = sp + 12|0;
 $cleanup$isactive = sp + 21|0;
 $agg$tmp4 = sp;
 $cleanup$isactive9 = sp + 20|0;
 $call = (__Znwj(48)|0); //@line 563 "hierarchy.cpp"
 $$expand_i1_val = 1;
 HEAP8[$cleanup$isactive>>0] = $$expand_i1_val;
 __THREW__ = 0;
 invoke_vii(115,($agg$tmp|0),($node|0)); //@line 563 "hierarchy.cpp"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 do {
  if ($1) {
   $9 = ___cxa_find_matching_catch_2()|0;
   $10 = tempRet0;
   $exn$slot = $9; //@line 565 "hierarchy.cpp"
   $ehselector$slot = $10; //@line 565 "hierarchy.cpp"
  } else {
   __THREW__ = 0;
   invoke_vii(116,($call|0),($agg$tmp|0)); //@line 563 "hierarchy.cpp"
   $2 = __THREW__; __THREW__ = 0;
   $3 = $2&1;
   if ($3) {
    $11 = ___cxa_find_matching_catch_2()|0;
    $12 = tempRet0;
    $exn$slot = $11; //@line 565 "hierarchy.cpp"
    $ehselector$slot = $12; //@line 565 "hierarchy.cpp"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 563 "hierarchy.cpp"
    break;
   }
   $$expand_i1_val2 = 0; //@line 563 "hierarchy.cpp"
   HEAP8[$cleanup$isactive>>0] = $$expand_i1_val2; //@line 563 "hierarchy.cpp"
   __ZN10emscripten3valD2Ev($agg$tmp); //@line 563 "hierarchy.cpp"
   $root = $call; //@line 563 "hierarchy.cpp"
   $call3 = (__Znwj(32)|0); //@line 564 "hierarchy.cpp"
   $$expand_i1_val3 = 1;
   HEAP8[$cleanup$isactive9>>0] = $$expand_i1_val3;
   __THREW__ = 0;
   invoke_vii(115,($agg$tmp4|0),($options|0)); //@line 564 "hierarchy.cpp"
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   do {
    if ($5) {
     $13 = ___cxa_find_matching_catch_2()|0;
     $14 = tempRet0;
     $exn$slot = $13; //@line 565 "hierarchy.cpp"
     $ehselector$slot = $14; //@line 565 "hierarchy.cpp"
    } else {
     $6 = $root; //@line 564 "hierarchy.cpp"
     __THREW__ = 0;
     invoke_viii(117,($call3|0),($agg$tmp4|0),($6|0)); //@line 564 "hierarchy.cpp"
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if ($8) {
      $15 = ___cxa_find_matching_catch_2()|0;
      $16 = tempRet0;
      $exn$slot = $15; //@line 565 "hierarchy.cpp"
      $ehselector$slot = $16; //@line 565 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($agg$tmp4); //@line 564 "hierarchy.cpp"
      break;
     } else {
      $$expand_i1_val5 = 0; //@line 564 "hierarchy.cpp"
      HEAP8[$cleanup$isactive9>>0] = $$expand_i1_val5; //@line 564 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($agg$tmp4); //@line 564 "hierarchy.cpp"
      STACKTOP = sp;return ($call3|0); //@line 564 "hierarchy.cpp"
     }
    }
   } while(0);
   $cleanup$is_active12$pre_trunc = HEAP8[$cleanup$isactive9>>0]|0; //@line 564 "hierarchy.cpp"
   $cleanup$is_active12 = $cleanup$is_active12$pre_trunc&1; //@line 564 "hierarchy.cpp"
   if (!($cleanup$is_active12)) {
    $exn = $exn$slot; //@line 563 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 563 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
   __ZdlPv($call3); //@line 564 "hierarchy.cpp"
   $exn = $exn$slot; //@line 563 "hierarchy.cpp"
   $sel = $ehselector$slot; //@line 563 "hierarchy.cpp"
   ___resumeException($exn|0);
   // unreachable;
  }
 } while(0);
 $cleanup$is_active$pre_trunc = HEAP8[$cleanup$isactive>>0]|0; //@line 563 "hierarchy.cpp"
 $cleanup$is_active = $cleanup$is_active$pre_trunc&1; //@line 563 "hierarchy.cpp"
 if (!($cleanup$is_active)) {
  $exn = $exn$slot; //@line 563 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 563 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 __ZdlPv($call); //@line 563 "hierarchy.cpp"
 $exn = $exn$slot; //@line 563 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 563 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __ZN10emscripten3valC2ERKS0_($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $this$addr = 0, $this1 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $v$addr = $v;
 $this1 = $this$addr;
 $0 = $v$addr; //@line 339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$0>>2]|0; //@line 339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $1; //@line 339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$this1>>2]|0; //@line 341 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __emval_incref(($2|0)); //@line 341 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN5HNodeC2EN10emscripten3valE($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__annotator$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__end_$i = 0, $__end_$i$i = 0;
 var $__end_$i57 = 0, $__end_3$i = 0, $__end_6$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i59 = 0, $__end_cap_$i12$i = 0, $__lhs$addr$i = 0, $__n$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i16$i = 0, $__rhs$addr$i = 0, $__rhs_len$i = 0, $__size_$i23$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i50 = 0;
 var $__t$addr$i$i$i$i51 = 0, $__t$addr$i18$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__x$addr$i = 0, $agg$tmp = 0, $agg$tmp$i$i = 0, $agg$tmp1$i$i = 0, $agg$tmp24 = 0, $and$i$i$i = 0, $arrayidx$i = 0, $call = 0.0, $call$i = 0, $call23 = 0, $call3$i = 0, $children = 0, $children19 = 0, $children_ = 0, $cleanup$is_active = 0, $cleanup$is_active$pre_trunc = 0;
 var $cleanup$isactive = 0, $cmp = 0, $cmp$i = 0, $cmp$i63 = 0, $cmp4$i = 0, $cmp4$i$expand_i1_val = 0, $cond$i$i = 0, $conv$i$i$i = 0, $conv$i14$i$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $incdec$ptr$i = 0, $ref$tmp = 0, $ref$tmp20 = 0, $ref$tmp5 = 0, $ref$tmp6 = 0, $ref$tmp7 = 0;
 var $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i37 = 0, $this$addr$i$i$i$i38 = 0, $this$addr$i$i$i$i52 = 0, $this$addr$i$i$i15$i = 0, $this$addr$i$i$i15$i$i = 0, $this$addr$i$i$i39 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i53 = 0;
 var $this$addr$i$i$i8$i = 0, $this$addr$i$i16$i$i = 0, $this$addr$i$i40 = 0, $this$addr$i$i5$i$i = 0, $this$addr$i$i54 = 0, $this$addr$i$i9$i = 0, $this$addr$i10$i = 0, $this$addr$i17$i$i = 0, $this$addr$i3$i$i = 0, $this$addr$i45 = 0, $this$addr$i47 = 0, $this$addr$i55 = 0, $this$addr$i6$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i44 = 0, $this1$i$i$i$i43 = 0, $this1$i$i$i$i61 = 0;
 var $this1$i$i$i10$i$i = 0, $this1$i$i$i14$i = 0, $this1$i$i$i21$i$i = 0, $this1$i$i$i42 = 0, $this1$i$i$i60 = 0, $this1$i$i13$i = 0, $this1$i$i20$i$i = 0, $this1$i$i41 = 0, $this1$i$i58 = 0, $this1$i$i9$i$i = 0, $this1$i11$i = 0, $this1$i18$i$i = 0, $this1$i4$i$i = 0, $this1$i46 = 0, $this1$i48 = 0, $this1$i56 = 0, $this1$i7$i$i = 0, $tobool$i$i$i = 0, $value = 0, $value4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 267|0;
 $__annotator$i = sp + 266|0;
 $retval$i = sp + 265|0;
 $__t1$addr$i$i$i$i = sp + 92|0;
 $__t1$addr$i$i$i = sp + 80|0;
 $ref$tmp = sp + 60|0;
 $ref$tmp5 = sp + 40|0;
 $ref$tmp6 = sp + 36|0;
 $ref$tmp7 = sp + 32|0;
 $children_ = sp + 20|0;
 $agg$tmp = sp + 16|0;
 $ref$tmp20 = sp + 8|0;
 $agg$tmp24 = sp + 4|0;
 $cleanup$isactive = sp + 264|0;
 $this$addr = $this;
 $this1 = $this$addr;
 __ZN6HBasisC2Ev($this1); //@line 24 "hierarchy.cpp"
 $value = ((($this1)) + 24|0); //@line 44 "hierarchy.cpp"
 HEAPF64[$value>>3] = 0.0; //@line 44 "hierarchy.cpp"
 $children = ((($this1)) + 32|0); //@line 24 "hierarchy.cpp"
 $this$addr$i = $children;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $0 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $1;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 __THREW__ = 0;
 invoke_viii(118,($ref$tmp|0),($node|0),(2200|0)); //@line 26 "hierarchy.cpp"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   $call = (+invoke_di(119,($ref$tmp|0))); //@line 26 "hierarchy.cpp"
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $74 = ___cxa_find_matching_catch_2()|0;
    $75 = tempRet0;
    $exn$slot = $74; //@line 36 "hierarchy.cpp"
    $ehselector$slot = $75; //@line 36 "hierarchy.cpp"
    __ZN10emscripten3valD2Ev($ref$tmp); //@line 26 "hierarchy.cpp"
    __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 36 "hierarchy.cpp"
    $exn = $exn$slot; //@line 36 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 36 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
   $value4 = ((($this1)) + 24|0); //@line 26 "hierarchy.cpp"
   HEAPF64[$value4>>3] = $call; //@line 26 "hierarchy.cpp"
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 26 "hierarchy.cpp"
   __THREW__ = 0;
   invoke_viii(120,($ref$tmp7|0),($node|0),(2191|0)); //@line 28 "hierarchy.cpp"
   $8 = __THREW__; __THREW__ = 0;
   $9 = $8&1;
   if (!($9)) {
    __THREW__ = 0;
    invoke_vii(121,($ref$tmp6|0),($ref$tmp7|0)); //@line 28 "hierarchy.cpp"
    $10 = __THREW__; __THREW__ = 0;
    $11 = $10&1;
    do {
     if ($11) {
      $76 = ___cxa_find_matching_catch_2()|0;
      $77 = tempRet0;
      $exn$slot = $76; //@line 36 "hierarchy.cpp"
      $ehselector$slot = $77; //@line 36 "hierarchy.cpp"
     } else {
      __THREW__ = 0;
      invoke_vii(122,($ref$tmp5|0),($ref$tmp6|0)); //@line 28 "hierarchy.cpp"
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if ($13) {
       $78 = ___cxa_find_matching_catch_2()|0;
       $79 = tempRet0;
       $exn$slot = $78; //@line 36 "hierarchy.cpp"
       $ehselector$slot = $79; //@line 36 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($ref$tmp6); //@line 28 "hierarchy.cpp"
       break;
      }
      $__lhs$addr$i = $ref$tmp5;
      $__rhs$addr$i = 2221;
      $14 = $__rhs$addr$i; //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      __THREW__ = 0;
      $call$i = (invoke_ii(123,($14|0))|0); //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if ($16) {
       $29 = ___cxa_find_matching_catch_3(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29); //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       // unreachable; //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      }
      $__rhs_len$i = $call$i; //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $17 = $__rhs_len$i; //@line 3853 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $18 = $__lhs$addr$i; //@line 3853 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $this$addr$i$i40 = $18;
      $this1$i$i41 = $this$addr$i$i40;
      $this$addr$i$i$i39 = $this1$i$i41;
      $this1$i$i$i42 = $this$addr$i$i$i39;
      $this$addr$i$i$i$i38 = $this1$i$i$i42;
      $this1$i$i$i$i43 = $this$addr$i$i$i$i38;
      $this$addr$i$i$i$i$i37 = $this1$i$i$i$i43;
      $this1$i$i$i$i$i44 = $this$addr$i$i$i$i$i37;
      $19 = ((($this1$i$i$i$i$i44)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $20 = HEAP8[$19>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $conv$i$i$i = $20&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $and$i$i$i = $conv$i$i$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $tobool$i$i$i = ($and$i$i$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      if ($tobool$i$i$i) {
       $this$addr$i17$i$i = $this1$i$i41;
       $this1$i18$i$i = $this$addr$i17$i$i;
       $this$addr$i$i16$i$i = $this1$i18$i$i;
       $this1$i$i20$i$i = $this$addr$i$i16$i$i;
       $this$addr$i$i$i15$i$i = $this1$i$i20$i$i;
       $this1$i$i$i21$i$i = $this$addr$i$i$i15$i$i;
       $__size_$i23$i$i = ((($this1$i$i$i21$i$i)) + 4|0); //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       $21 = HEAP32[$__size_$i23$i$i>>2]|0; //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       $cond$i$i = $21;
      } else {
       $this$addr$i6$i$i = $this1$i$i41;
       $this1$i7$i$i = $this$addr$i6$i$i;
       $this$addr$i$i5$i$i = $this1$i7$i$i;
       $this1$i$i9$i$i = $this$addr$i$i5$i$i;
       $this$addr$i$i$i4$i$i = $this1$i$i9$i$i;
       $this1$i$i$i10$i$i = $this$addr$i$i$i4$i$i;
       $22 = ((($this1$i$i$i10$i$i)) + 11|0); //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       $23 = HEAP8[$22>>0]|0; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       $conv$i14$i$i = $23&255; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       $cond$i$i = $conv$i14$i$i;
      }
      $cmp$i = ($17|0)!=($cond$i$i|0); //@line 3853 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      do {
       if ($cmp$i) {
        $$expand_i1_val = 0; //@line 3853 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        HEAP8[$retval$i>>0] = $$expand_i1_val; //@line 3853 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
       } else {
        $24 = $__lhs$addr$i; //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        $25 = $__rhs$addr$i; //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        $26 = $__rhs_len$i; //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        __THREW__ = 0;
        $call3$i = (invoke_iiiiii(124,($24|0),0,-1,($25|0),($26|0))|0); //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        $27 = __THREW__; __THREW__ = 0;
        $28 = $27&1;
        if ($28) {
         $29 = ___cxa_find_matching_catch_3(0|0)|0;
         $30 = tempRet0;
         ___clang_call_terminate($29); //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
         // unreachable; //@line 3852 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
        } else {
         $cmp4$i = ($call3$i|0)==(0); //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
         $cmp4$i$expand_i1_val = $cmp4$i&1; //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
         HEAP8[$retval$i>>0] = $cmp4$i$expand_i1_val; //@line 3854 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
         break;
        }
       }
      } while(0);
      $$pre_trunc = HEAP8[$retval$i>>0]|0; //@line 3855 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $31 = $$pre_trunc&1; //@line 3855 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp5); //@line 28 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($ref$tmp6); //@line 28 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($ref$tmp7); //@line 28 "hierarchy.cpp"
      if (!($31)) {
       STACKTOP = sp;return; //@line 36 "hierarchy.cpp"
      }
      __THREW__ = 0;
      invoke_viii(120,($agg$tmp|0),($node|0),(2191|0)); //@line 29 "hierarchy.cpp"
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(125,($children_|0),($agg$tmp|0)); //@line 29 "hierarchy.cpp"
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $80 = ___cxa_find_matching_catch_2()|0;
       $81 = tempRet0;
       $exn$slot = $80; //@line 36 "hierarchy.cpp"
       $ehselector$slot = $81; //@line 36 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($agg$tmp); //@line 29 "hierarchy.cpp"
       __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 36 "hierarchy.cpp"
       $exn = $exn$slot; //@line 36 "hierarchy.cpp"
       $sel = $ehselector$slot; //@line 36 "hierarchy.cpp"
       ___resumeException($exn|0);
       // unreachable;
      }
      __ZN10emscripten3valD2Ev($agg$tmp); //@line 29 "hierarchy.cpp"
      $i = 0; //@line 31 "hierarchy.cpp"
      while(1) {
       $36 = $i; //@line 31 "hierarchy.cpp"
       $this$addr$i45 = $children_;
       $this1$i46 = $this$addr$i45;
       $__end_$i = ((($this1$i46)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $37 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $38 = HEAP32[$this1$i46>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$lhs$cast$i = $37; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$rhs$cast$i = $38; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $cmp = ($36>>>0)<($sub$ptr$div$i>>>0); //@line 31 "hierarchy.cpp"
       if (!($cmp)) {
        label = 38;
        break;
       }
       $children19 = ((($this1)) + 32|0); //@line 33 "hierarchy.cpp"
       __THREW__ = 0;
       $call23 = (invoke_ii(126,48)|0); //@line 33 "hierarchy.cpp"
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        label = 33;
        break;
       }
       $$expand_i1_val3 = 1;
       HEAP8[$cleanup$isactive>>0] = $$expand_i1_val3;
       $41 = $i; //@line 33 "hierarchy.cpp"
       $this$addr$i47 = $children_;
       $__n$addr$i = $41;
       $this1$i48 = $this$addr$i47;
       $42 = HEAP32[$this1$i48>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $43 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $arrayidx$i = (($42) + ($43<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       __THREW__ = 0;
       invoke_vii(115,($agg$tmp24|0),($arrayidx$i|0)); //@line 33 "hierarchy.cpp"
       $44 = __THREW__; __THREW__ = 0;
       $45 = $44&1;
       if ($45) {
        label = 34;
        break;
       }
       __THREW__ = 0;
       invoke_viii(127,($call23|0),($agg$tmp24|0),($this1|0)); //@line 33 "hierarchy.cpp"
       $46 = __THREW__; __THREW__ = 0;
       $47 = $46&1;
       if ($47) {
        label = 35;
        break;
       }
       $$expand_i1_val5 = 0; //@line 33 "hierarchy.cpp"
       HEAP8[$cleanup$isactive>>0] = $$expand_i1_val5; //@line 33 "hierarchy.cpp"
       HEAP32[$ref$tmp20>>2] = $call23; //@line 33 "hierarchy.cpp"
       $this$addr$i55 = $children19;
       $__x$addr$i = $ref$tmp20;
       $this1$i56 = $this$addr$i55;
       $__end_$i57 = ((($this1$i56)) + 4|0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $48 = HEAP32[$__end_$i57>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i54 = $this1$i56;
       $this1$i$i58 = $this$addr$i$i54;
       $__end_cap_$i$i59 = ((($this1$i$i58)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $this$addr$i$i$i53 = $__end_cap_$i$i59;
       $this1$i$i$i60 = $this$addr$i$i$i53;
       $this$addr$i$i$i$i52 = $this1$i$i$i60;
       $this1$i$i$i$i61 = $this$addr$i$i$i$i52;
       $49 = HEAP32[$this1$i$i$i$i61>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       $cmp$i63 = ($48>>>0)<($49>>>0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       if ($cmp$i63) {
        __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i,$this1$i56,1); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i10$i = $this1$i56;
        $this1$i11$i = $this$addr$i10$i;
        $__end_cap_$i12$i = ((($this1$i11$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $this$addr$i$i9$i = $__end_cap_$i12$i;
        $this1$i$i13$i = $this$addr$i$i9$i;
        $this$addr$i$i$i8$i = $this1$i$i13$i;
        $this1$i$i$i14$i = $this$addr$i$i$i8$i;
        $__end_3$i = ((($this1$i56)) + 4|0); //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $50 = HEAP32[$__end_3$i>>2]|0; //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__p$addr$i$i = $50;
        $51 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $52 = $__x$addr$i; //@line 1609 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__t$addr$i18$i = $52;
        $53 = $__t$addr$i18$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $__a$addr$i$i = $this1$i$i$i14$i;
        $__p$addr$i16$i = $51;
        $__args$addr$i$i = $53;
        $54 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $55 = $__p$addr$i16$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $56 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i = $56;
        $57 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
        $__a$addr$i$i$i = $54;
        $__p$addr$i$i$i = $55;
        $__args$addr$i$i$i = $57;
        $58 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $59 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $60 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i51 = $60;
        $61 = $__t$addr$i$i$i$i51; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $this$addr$i$i$i15$i = $58;
        $__p$addr$i$i$i$i = $59;
        $__args$addr$i$i$i$i = $61;
        $62 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $63 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        $__t$addr$i$i$i$i$i50 = $63;
        $64 = $__t$addr$i$i$i$i$i50; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        $65 = HEAP32[$64>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        HEAP32[$62>>2] = $65; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
        __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i); //@line 1610 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__end_6$i = ((($this1$i56)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $66 = HEAP32[$__end_6$i>>2]|0; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $incdec$ptr$i = ((($66)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        HEAP32[$__end_6$i>>2] = $incdec$ptr$i; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
       } else {
        $67 = $__x$addr$i; //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $__t$addr$i$i = $67;
        $68 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
        __THREW__ = 0;
        invoke_vii(128,($this1$i56|0),($68|0)); //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
        $69 = __THREW__; __THREW__ = 0;
        $70 = $69&1;
        if ($70) {
         label = 35;
         break;
        }
       }
       __ZN10emscripten3valD2Ev($agg$tmp24); //@line 33 "hierarchy.cpp"
       $71 = $i; //@line 31 "hierarchy.cpp"
       $inc = (($71) + 1)|0; //@line 31 "hierarchy.cpp"
       $i = $inc; //@line 31 "hierarchy.cpp"
      }
      if ((label|0) == 33) {
       $82 = ___cxa_find_matching_catch_2()|0;
       $83 = tempRet0;
       $exn$slot = $82; //@line 36 "hierarchy.cpp"
       $ehselector$slot = $83; //@line 36 "hierarchy.cpp"
      }
      else if ((label|0) == 34) {
       $84 = ___cxa_find_matching_catch_2()|0;
       $85 = tempRet0;
       $exn$slot = $84; //@line 36 "hierarchy.cpp"
       $ehselector$slot = $85; //@line 36 "hierarchy.cpp"
       label = 36;
      }
      else if ((label|0) == 35) {
       $86 = ___cxa_find_matching_catch_2()|0;
       $87 = tempRet0;
       $exn$slot = $86; //@line 36 "hierarchy.cpp"
       $ehselector$slot = $87; //@line 36 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($agg$tmp24); //@line 33 "hierarchy.cpp"
       label = 36;
      }
      else if ((label|0) == 38) {
       __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEED2Ev($children_); //@line 35 "hierarchy.cpp"
       STACKTOP = sp;return; //@line 36 "hierarchy.cpp"
      }
      if ((label|0) == 36) {
       $cleanup$is_active$pre_trunc = HEAP8[$cleanup$isactive>>0]|0; //@line 33 "hierarchy.cpp"
       $cleanup$is_active = $cleanup$is_active$pre_trunc&1; //@line 33 "hierarchy.cpp"
       if ($cleanup$is_active) {
        __ZdlPv($call23); //@line 33 "hierarchy.cpp"
       }
      }
      __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEED2Ev($children_); //@line 35 "hierarchy.cpp"
      __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 36 "hierarchy.cpp"
      $exn = $exn$slot; //@line 36 "hierarchy.cpp"
      $sel = $ehselector$slot; //@line 36 "hierarchy.cpp"
      ___resumeException($exn|0);
      // unreachable;
     }
    } while(0);
    __ZN10emscripten3valD2Ev($ref$tmp7); //@line 28 "hierarchy.cpp"
    __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 36 "hierarchy.cpp"
    $exn = $exn$slot; //@line 36 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 36 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
  }
 } while(0);
 $72 = ___cxa_find_matching_catch_2()|0;
 $73 = tempRet0;
 $exn$slot = $72; //@line 36 "hierarchy.cpp"
 $ehselector$slot = $73; //@line 36 "hierarchy.cpp"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 36 "hierarchy.cpp"
 $exn = $exn$slot; //@line 36 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 36 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZN10emscripten3valD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 invoke_vi(129,($0|0)); //@line 345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_3(0|0)|0;
  $4 = tempRet0;
  ___clang_call_terminate($3); //@line 345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  // unreachable; //@line 345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 } else {
  STACKTOP = sp;return; //@line 346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
}
function __ZN9HierarchyC2EN10emscripten3valEP5HNode($this,$options,$root) {
 $this = $this|0;
 $options = $options|0;
 $root = $root|0;
 var $0 = 0, $dy = 0, $options2 = 0, $padding = 0, $root$addr = 0, $root3 = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $root$addr = $root;
 $this1 = $this$addr;
 HEAPF64[$this1>>3] = 1.0; //@line 488 "hierarchy.cpp"
 $dy = ((($this1)) + 8|0); //@line 489 "hierarchy.cpp"
 HEAPF64[$dy>>3] = 1.0; //@line 489 "hierarchy.cpp"
 $padding = ((($this1)) + 16|0); //@line 490 "hierarchy.cpp"
 HEAPF64[$padding>>3] = 0.0; //@line 490 "hierarchy.cpp"
 $options2 = ((($this1)) + 24|0); //@line 480 "hierarchy.cpp"
 __ZN10emscripten3valC2IRS0_EEOT_($options2,$options); //@line 480 "hierarchy.cpp"
 $root3 = ((($this1)) + 28|0); //@line 481 "hierarchy.cpp"
 $0 = $root$addr; //@line 481 "hierarchy.cpp"
 HEAP32[$root3>>2] = $0; //@line 481 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 482 "hierarchy.cpp"
}
function ___cxx_global_var_init() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN38EmscriptenBindingInitializer_hierarchyC2Ev(8752); //@line 567 "hierarchy.cpp"
 return; //@line 567 "hierarchy.cpp"
}
function __ZN38EmscriptenBindingInitializer_hierarchyC2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $$addr$i$i$i = 0, $$addr$i$i105 = 0, $$addr$i$i11 = 0, $$addr$i$i123 = 0, $$addr$i$i132 = 0, $$addr$i$i20 = 0, $$addr$i$i35 = 0, $$addr$i$i52 = 0, $$addr$i$i73 = 0, $$addr$i$i88 = 0, $$addr$i11$i = 0, $$addr$i11$i104 = 0, $$addr$i11$i51 = 0, $$addr$i13$i = 0, $$addr$i13$i103 = 0, $$addr$i13$i50 = 0, $$addr$i15$i = 0, $$addr$i15$i102 = 0, $$addr$i15$i49 = 0;
 var $$addr$i8$i = 0, $$addr$i8$i19 = 0, $$addr$i8$i34 = 0, $$addr$i8$i72 = 0, $$addr$i8$i87 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $_getActualType$i = 0, $_getActualType$i108 = 0, $_getActualType$i55 = 0, $agg$tmp = 0, $agg$tmp131 = 0, $args$i = 0, $args$i$i = 0, $args$i134 = 0, $call$i = 0, $call$i$i = 0, $call$i$i$i = 0, $call$i$i$i$i = 0, $call$i$i$i119 = 0, $call$i$i$i129 = 0;
 var $call$i$i$i139 = 0, $call$i$i$i16 = 0, $call$i$i$i29 = 0, $call$i$i$i44 = 0, $call$i$i$i66 = 0, $call$i$i$i82 = 0, $call$i$i$i97 = 0, $call$i$i12$i = 0, $call$i$i12$i120 = 0, $call$i$i12$i67 = 0, $call$i$i14$i = 0, $call$i$i14$i121 = 0, $call$i$i14$i68 = 0, $call$i$i16$i = 0, $call$i$i16$i122 = 0, $call$i$i16$i69 = 0, $call$i$i9$i = 0, $call$i$i9$i100 = 0, $call$i$i9$i32 = 0, $call$i$i9$i47 = 0;
 var $call$i$i9$i85 = 0, $call$i113 = 0, $call$i126 = 0, $call$i136 = 0, $call$i14 = 0, $call$i27 = 0, $call$i42 = 0, $call$i60 = 0, $call$i80 = 0, $call$i95 = 0, $call2$i = 0, $call2$i$i = 0, $call2$i114 = 0, $call2$i127 = 0, $call2$i137 = 0, $call2$i15 = 0, $call2$i28 = 0, $call2$i43 = 0, $call2$i61 = 0, $call2$i81 = 0;
 var $call2$i96 = 0, $call3$i = 0, $call3$i$i = 0, $call3$i115 = 0, $call3$i128 = 0, $call3$i138 = 0, $call3$i62 = 0, $call4$i = 0, $call4$i116 = 0, $call4$i17 = 0, $call4$i30 = 0, $call4$i45 = 0, $call4$i63 = 0, $call4$i83 = 0, $call4$i98 = 0, $call5$i = 0, $call5$i117 = 0, $call5$i140 = 0, $call5$i18 = 0, $call5$i31 = 0;
 var $call5$i46 = 0, $call5$i64 = 0, $call5$i84 = 0, $call5$i99 = 0, $call6$i = 0, $call6$i118 = 0, $call6$i65 = 0, $call7$i = 0, $call7$i101 = 0, $call7$i33 = 0, $call7$i48 = 0, $call7$i86 = 0, $destructor$i = 0, $destructor$i111 = 0, $destructor$i58 = 0, $downcast$i = 0, $downcast$i110 = 0, $downcast$i57 = 0, $factory$addr$i = 0, $factory$addr$i$i = 0;
 var $field$addr$i = 0, $field$addr$i23 = 0, $field$addr$i38 = 0, $field$addr$i76 = 0, $field$addr$i91 = 0, $fieldName$addr$i = 0, $fieldName$addr$i22 = 0, $fieldName$addr$i37 = 0, $fieldName$addr$i75 = 0, $fieldName$addr$i90 = 0, $getter$i = 0, $getter$i24 = 0, $getter$i39 = 0, $getter$i77 = 0, $getter$i92 = 0, $invoke$i = 0, $invoke$i$i = 0, $invoker$i = 0, $memberFunction$addr$i = 0, $memberFunction$addr$i$index5 = 0;
 var $memberFunction$i$field = 0, $memberFunction$i$field3 = 0, $memberFunction$i$index2 = 0, $methodName$addr$i = 0, $name$addr$i = 0, $name$addr$i107 = 0, $name$addr$i54 = 0, $ref$tmp = 0, $ref$tmp4 = 0, $ref$tmp8 = 0, $setter$i = 0, $setter$i25 = 0, $setter$i40 = 0, $setter$i78 = 0, $setter$i93 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i106 = 0, $this$addr$i12 = 0;
 var $this$addr$i124 = 0, $this$addr$i133 = 0, $this$addr$i21 = 0, $this$addr$i36 = 0, $this$addr$i53 = 0, $this$addr$i70 = 0, $this$addr$i74 = 0, $this$addr$i89 = 0, $this1$i$i = 0, $this1$i125 = 0, $this1$i13 = 0, $this1$i26 = 0, $this1$i71 = 0, $this1$i79 = 0, $tmp = 0, $tmp$index1 = 0, $tmp130 = 0, $upcast$i = 0, $upcast$i109 = 0, $upcast$i56 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $memberFunction$addr$i = sp + 328|0;
 $args$i134 = sp + 354|0;
 $agg$tmp131 = sp + 8|0;
 $tmp130 = sp;
 $args$i = sp + 353|0;
 $field$addr$i91 = sp + 248|0;
 $field$addr$i76 = sp + 220|0;
 $args$i$i = sp + 352|0;
 $field$addr$i38 = sp + 132|0;
 $field$addr$i23 = sp + 104|0;
 $field$addr$i = sp + 76|0;
 $ref$tmp = sp + 351|0;
 $ref$tmp4 = sp + 350|0;
 $ref$tmp8 = sp + 349|0;
 $agg$tmp = sp + 348|0;
 $tmp = sp + 16|0;
 $this$addr = $this;
 __ZN10emscripten15register_vectorIP5HNodeEENS_6class_INSt3__26vectorIT_NS4_9allocatorIS6_EEEENS_8internal11NoBaseClassEEEPKc(2160); //@line 568 "hierarchy.cpp"
 $this$addr$i = $ref$tmp;
 $name$addr$i = 2172;
 __ZN10emscripten8internal11NoBaseClass6verifyI6HBasisEEvv(); //@line 1121 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $_getActualType$i = 130; //@line 1123 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i = (__ZN10emscripten8internal11NoBaseClass11getUpcasterI6HBasisEEPFvvEv()|0); //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $upcast$i = $call$i; //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i = (__ZN10emscripten8internal11NoBaseClass13getDowncasterI6HBasisEEPFvvEv()|0); //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $downcast$i = $call2$i; //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $destructor$i = 131; //@line 1126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i = (__ZN10emscripten8internal6TypeIDI6HBasisE3getEv()|0); //@line 1129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI6HBasisEEE3getEv()|0); //@line 1130 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK6HBasisEEE3getEv()|0); //@line 1131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call6$i = (__ZN10emscripten8internal11NoBaseClass3getEv()|0); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $_getActualType$i; //@line 1133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i = $0;
 $call$i$i$i = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $_getActualType$i; //@line 1134 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $upcast$i; //@line 1135 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i11$i = $2;
 $call$i$i12$i = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $upcast$i; //@line 1136 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $4 = $downcast$i; //@line 1137 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i13$i = $4;
 $call$i$i14$i = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $5 = $downcast$i; //@line 1138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $6 = $name$addr$i; //@line 1139 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $7 = $destructor$i; //@line 1140 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i15$i = $7;
 $call$i$i16$i = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $8 = $destructor$i; //@line 1141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class(($call3$i|0),($call4$i|0),($call5$i|0),($call6$i|0),($call$i$i$i|0),($1|0),($call$i$i12$i|0),($3|0),($call$i$i14$i|0),($5|0),($6|0),($call$i$i16$i|0),($8|0)); //@line 1128 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i12 = $ref$tmp;
 $fieldName$addr$i = 2179;
 HEAP32[$field$addr$i>>2] = 0;
 $this1$i13 = $this$addr$i12;
 $getter$i = 132; //@line 1345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $setter$i = 133; //@line 1346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i14 = (__ZN10emscripten8internal6TypeIDI6HBasisE3getEv()|0); //@line 1348 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $9 = $fieldName$addr$i; //@line 1349 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i15 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1350 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $10 = $getter$i; //@line 1351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i11 = $10;
 $call$i$i$i16 = (__ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $11 = $getter$i; //@line 1352 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i17 = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i)|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i18 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $12 = $setter$i; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i8$i = $12;
 $call$i$i9$i = (__ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $13 = $setter$i; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call7$i = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i)|0); //@line 1357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_property(($call$i14|0),($9|0),($call2$i15|0),($call$i$i$i16|0),($11|0),($call4$i17|0),($call5$i18|0),($call$i$i9$i|0),($13|0),($call7$i|0)); //@line 1347 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i21 = $this1$i13;
 $fieldName$addr$i22 = 2181;
 HEAP32[$field$addr$i23>>2] = 8;
 $this1$i26 = $this$addr$i21;
 $getter$i24 = 132; //@line 1345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $setter$i25 = 133; //@line 1346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i27 = (__ZN10emscripten8internal6TypeIDI6HBasisE3getEv()|0); //@line 1348 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $14 = $fieldName$addr$i22; //@line 1349 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i28 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1350 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $15 = $getter$i24; //@line 1351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i20 = $15;
 $call$i$i$i29 = (__ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $16 = $getter$i24; //@line 1352 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i30 = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i23)|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i31 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $17 = $setter$i25; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i8$i19 = $17;
 $call$i$i9$i32 = (__ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $18 = $setter$i25; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call7$i33 = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i23)|0); //@line 1357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_property(($call$i27|0),($14|0),($call2$i28|0),($call$i$i$i29|0),($16|0),($call4$i30|0),($call5$i31|0),($call$i$i9$i32|0),($18|0),($call7$i33|0)); //@line 1347 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i36 = $this1$i26;
 $fieldName$addr$i37 = 2183;
 HEAP32[$field$addr$i38>>2] = 16;
 $getter$i39 = 132; //@line 1345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $setter$i40 = 133; //@line 1346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i42 = (__ZN10emscripten8internal6TypeIDI6HBasisE3getEv()|0); //@line 1348 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $19 = $fieldName$addr$i37; //@line 1349 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i43 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1350 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $20 = $getter$i39; //@line 1351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i35 = $20;
 $call$i$i$i44 = (__ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $21 = $getter$i39; //@line 1352 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i45 = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i38)|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i46 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $22 = $setter$i40; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i8$i34 = $22;
 $call$i$i9$i47 = (__ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $23 = $setter$i40; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call7$i48 = (__ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($field$addr$i38)|0); //@line 1357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_property(($call$i42|0),($19|0),($call2$i43|0),($call$i$i$i44|0),($21|0),($call4$i45|0),($call5$i46|0),($call$i$i9$i47|0),($23|0),($call7$i48|0)); //@line 1347 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i53 = $ref$tmp4;
 $name$addr$i54 = 2185;
 __ZN10emscripten4baseI6HBasisE6verifyI5HNodeEEvv(); //@line 1121 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $_getActualType$i55 = 134; //@line 1123 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i60 = (__ZN10emscripten4baseI6HBasisE11getUpcasterI5HNodeEEPFPS1_PT_Ev()|0); //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $upcast$i56 = $call$i60; //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i61 = (__ZN10emscripten4baseI6HBasisE13getDowncasterI5HNodeEEPFPT_PS1_Ev()|0); //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $downcast$i57 = $call2$i61; //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $destructor$i58 = 135; //@line 1126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i62 = (__ZN10emscripten8internal6TypeIDI5HNodeE3getEv()|0); //@line 1129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i63 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI5HNodeEEE3getEv()|0); //@line 1130 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i64 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK5HNodeEEE3getEv()|0); //@line 1131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call6$i65 = (__ZN10emscripten4baseI6HBasisE3getEv()|0); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $24 = $_getActualType$i55; //@line 1133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i52 = $24;
 $call$i$i$i66 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $25 = $_getActualType$i55; //@line 1134 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $26 = $upcast$i56; //@line 1135 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i11$i51 = $26;
 $call$i$i12$i67 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $27 = $upcast$i56; //@line 1136 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $28 = $downcast$i57; //@line 1137 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i13$i50 = $28;
 $call$i$i14$i68 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $29 = $downcast$i57; //@line 1138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $30 = $name$addr$i54; //@line 1139 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $31 = $destructor$i58; //@line 1140 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i15$i49 = $31;
 $call$i$i16$i69 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $32 = $destructor$i58; //@line 1141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class(($call3$i62|0),($call4$i63|0),($call5$i64|0),($call6$i65|0),($call$i$i$i66|0),($25|0),($call$i$i12$i67|0),($27|0),($call$i$i14$i68|0),($29|0),($30|0),($call$i$i16$i69|0),($32|0)); //@line 1128 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i70 = $ref$tmp4;
 $this1$i71 = $this$addr$i70;
 $this$addr$i$i = $this1$i71;
 $factory$addr$i$i = 136;
 $this1$i$i = $this$addr$i$i;
 $invoke$i$i = 137; //@line 1187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i$i = (__ZN10emscripten8internal6TypeIDI5HNodeE3getEv()|0); //@line 1189 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i$i = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeONS_3valEEE8getCountEv($args$i$i)|0); //@line 1190 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i$i = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeONS_3valEEE8getTypesEv($args$i$i)|0); //@line 1191 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $33 = $invoke$i$i; //@line 1192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i$i = $33;
 $call$i$i$i$i = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $34 = $invoke$i$i; //@line 1193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $35 = $factory$addr$i$i; //@line 1194 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_constructor(($call$i$i|0),($call2$i$i|0),($call3$i$i|0),($call$i$i$i$i|0),($34|0),($35|0)); //@line 1188 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i74 = $this1$i$i;
 $fieldName$addr$i75 = 2191;
 HEAP32[$field$addr$i76>>2] = 32;
 $this1$i79 = $this$addr$i74;
 $getter$i77 = 138; //@line 1345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $setter$i78 = 139; //@line 1346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i80 = (__ZN10emscripten8internal6TypeIDI5HNodeE3getEv()|0); //@line 1348 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $36 = $fieldName$addr$i75; //@line 1349 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i81 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1350 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $37 = $getter$i77; //@line 1351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i73 = $37;
 $call$i$i$i82 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $38 = $getter$i77; //@line 1352 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i83 = (__ZN10emscripten8internal10getContextIM5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEEEPT_RKSA_($field$addr$i76)|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i84 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $39 = $setter$i78; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i8$i72 = $39;
 $call$i$i9$i85 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $40 = $setter$i78; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call7$i86 = (__ZN10emscripten8internal10getContextIM5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEEEPT_RKSA_($field$addr$i76)|0); //@line 1357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_property(($call$i80|0),($36|0),($call2$i81|0),($call$i$i$i82|0),($38|0),($call4$i83|0),($call5$i84|0),($call$i$i9$i85|0),($40|0),($call7$i86|0)); //@line 1347 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i89 = $this1$i79;
 $fieldName$addr$i90 = 2200;
 HEAP32[$field$addr$i91>>2] = 24;
 $getter$i92 = 140; //@line 1345 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $setter$i93 = 141; //@line 1346 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i95 = (__ZN10emscripten8internal6TypeIDI5HNodeE3getEv()|0); //@line 1348 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $41 = $fieldName$addr$i90; //@line 1349 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i96 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1350 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $42 = $getter$i92; //@line 1351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i88 = $42;
 $call$i$i$i97 = (__ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $43 = $getter$i92; //@line 1352 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i98 = (__ZN10emscripten8internal10getContextIM5HNodedEEPT_RKS4_($field$addr$i91)|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i99 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 1354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $44 = $setter$i93; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i8$i87 = $44;
 $call$i$i9$i100 = (__ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $45 = $setter$i93; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call7$i101 = (__ZN10emscripten8internal10getContextIM5HNodedEEPT_RKS4_($field$addr$i91)|0); //@line 1357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_property(($call$i95|0),($41|0),($call2$i96|0),($call$i$i$i97|0),($43|0),($call4$i98|0),($call5$i99|0),($call$i$i9$i100|0),($45|0),($call7$i101|0)); //@line 1347 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i106 = $ref$tmp8;
 $name$addr$i107 = 2206;
 __ZN10emscripten8internal11NoBaseClass6verifyI9HierarchyEEvv(); //@line 1121 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $_getActualType$i108 = 142; //@line 1123 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i113 = (__ZN10emscripten8internal11NoBaseClass11getUpcasterI9HierarchyEEPFvvEv()|0); //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $upcast$i109 = $call$i113; //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i114 = (__ZN10emscripten8internal11NoBaseClass13getDowncasterI9HierarchyEEPFvvEv()|0); //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $downcast$i110 = $call2$i114; //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $destructor$i111 = 143; //@line 1126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i115 = (__ZN10emscripten8internal6TypeIDI9HierarchyE3getEv()|0); //@line 1129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i116 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI9HierarchyEEE3getEv()|0); //@line 1130 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i117 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK9HierarchyEEE3getEv()|0); //@line 1131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call6$i118 = (__ZN10emscripten8internal11NoBaseClass3getEv()|0); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $46 = $_getActualType$i108; //@line 1133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i105 = $46;
 $call$i$i$i119 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $47 = $_getActualType$i108; //@line 1134 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $48 = $upcast$i109; //@line 1135 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i11$i104 = $48;
 $call$i$i12$i120 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $49 = $upcast$i109; //@line 1136 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $50 = $downcast$i110; //@line 1137 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i13$i103 = $50;
 $call$i$i14$i121 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $51 = $downcast$i110; //@line 1138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $52 = $name$addr$i107; //@line 1139 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $53 = $destructor$i111; //@line 1140 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i15$i102 = $53;
 $call$i$i16$i122 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $54 = $destructor$i111; //@line 1141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class(($call3$i115|0),($call4$i116|0),($call5$i117|0),($call6$i118|0),($call$i$i$i119|0),($47|0),($call$i$i12$i120|0),($49|0),($call$i$i14$i121|0),($51|0),($52|0),($call$i$i16$i122|0),($54|0)); //@line 1128 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i124 = $ref$tmp8;
 $factory$addr$i = 144;
 $this1$i125 = $this$addr$i124;
 $invoke$i = 145; //@line 1187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i126 = (__ZN10emscripten8internal6TypeIDI9HierarchyE3getEv()|0); //@line 1189 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i127 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP9HierarchyNS_3valES7_EE8getCountEv($args$i)|0); //@line 1190 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i128 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP9HierarchyNS_3valES7_EE8getTypesEv($args$i)|0); //@line 1191 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $55 = $invoke$i; //@line 1192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i123 = $55;
 $call$i$i$i129 = (__ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $56 = $invoke$i; //@line 1193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $57 = $factory$addr$i; //@line 1194 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_constructor(($call$i126|0),($call2$i127|0),($call3$i128|0),($call$i$i$i129|0),($56|0),($57|0)); //@line 1188 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp>>2] = (146); //@line 582 "hierarchy.cpp"
 $tmp$index1 = ((($tmp)) + 4|0); //@line 582 "hierarchy.cpp"
 HEAP32[$tmp$index1>>2] = 0; //@line 582 "hierarchy.cpp"
 ;HEAP8[$agg$tmp131>>0]=HEAP8[$agg$tmp>>0]|0;
 ;HEAP8[$tmp130>>0]=HEAP8[$tmp>>0]|0;HEAP8[$tmp130+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$tmp130+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$tmp130+3>>0]=HEAP8[$tmp+3>>0]|0;HEAP8[$tmp130+4>>0]=HEAP8[$tmp+4>>0]|0;HEAP8[$tmp130+5>>0]=HEAP8[$tmp+5>>0]|0;HEAP8[$tmp130+6>>0]=HEAP8[$tmp+6>>0]|0;HEAP8[$tmp130+7>>0]=HEAP8[$tmp+7>>0]|0;
 $memberFunction$i$field = HEAP32[$tmp130>>2]|0;
 $memberFunction$i$index2 = ((($tmp130)) + 4|0);
 $memberFunction$i$field3 = HEAP32[$memberFunction$i$index2>>2]|0;
 $this$addr$i133 = $this1$i125;
 $methodName$addr$i = 2216;
 HEAP32[$memberFunction$addr$i>>2] = $memberFunction$i$field;
 $memberFunction$addr$i$index5 = ((($memberFunction$addr$i)) + 4|0);
 HEAP32[$memberFunction$addr$i$index5>>2] = $memberFunction$i$field3;
 $invoker$i = 147; //@line 1270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i136 = (__ZN10emscripten8internal6TypeIDI9HierarchyE3getEv()|0); //@line 1274 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $58 = $methodName$addr$i; //@line 1275 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i137 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeNS0_17AllowedRawPointerI9HierarchyEEEE8getCountEv($args$i134)|0); //@line 1276 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i138 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeNS0_17AllowedRawPointerI9HierarchyEEEE8getTypesEv($args$i134)|0); //@line 1277 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $59 = $invoker$i; //@line 1278 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i132 = $59;
 $call$i$i$i139 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $60 = $invoker$i; //@line 1279 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i140 = (__ZN10emscripten8internal10getContextIM9HierarchyFP5HNodevEEEPT_RKS7_($memberFunction$addr$i)|0); //@line 1280 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i136|0),($58|0),($call2$i137|0),($call3$i138|0),($call$i$i$i139|0),($60|0),($call5$i140|0),0); //@line 1273 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 583 "hierarchy.cpp"
}
function __ZN10emscripten15register_vectorIP5HNodeEENS_6class_INSt3__26vectorIT_NS4_9allocatorIS6_EEEENS_8internal11NoBaseClassEEEPKc($name) {
 $name = $name|0;
 var $$addr$i$i = 0, $$addr$i$i$i = 0, $$addr$i$i11 = 0, $$addr$i$i20 = 0, $$addr$i$i34 = 0, $$addr$i$i47 = 0, $$addr$i$i57 = 0, $$addr$i11$i = 0, $$addr$i13$i = 0, $$addr$i15$i = 0, $$field = 0, $$field12 = 0, $$field15 = 0, $$field4 = 0, $$index14 = 0, $$index3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_getActualType$i = 0, $args$i = 0, $args$i$i = 0, $args$i25 = 0, $args$i39 = 0, $args$i50 = 0, $args$i61 = 0, $call$i = 0, $call$i$i = 0, $call$i$i$i = 0, $call$i$i$i$i = 0, $call$i$i$i17 = 0, $call$i$i$i31 = 0, $call$i$i$i45 = 0, $call$i$i$i55 = 0, $call$i$i$i67 = 0;
 var $call$i$i12$i = 0, $call$i$i14$i = 0, $call$i$i16$i = 0, $call$i14 = 0, $call$i28 = 0, $call$i42 = 0, $call$i52 = 0, $call$i64 = 0, $call2$i = 0, $call2$i$i = 0, $call2$i15 = 0, $call2$i29 = 0, $call2$i43 = 0, $call2$i53 = 0, $call2$i65 = 0, $call3$i = 0, $call3$i$i = 0, $call3$i16 = 0, $call3$i30 = 0, $call3$i44 = 0;
 var $call3$i54 = 0, $call3$i66 = 0, $call4$i = 0, $call5$i = 0, $call5$i18 = 0, $call5$i32 = 0, $call5$i46 = 0, $call5$i56 = 0, $call5$i68 = 0, $call6$i = 0, $destructor$i = 0, $downcast$i = 0, $factory$addr$i$i = 0, $function$addr$i = 0, $function$addr$i60 = 0, $invoke$i = 0, $invoke$i$i = 0, $invoke$i62 = 0, $invoker$i = 0, $invoker$i24 = 0;
 var $invoker$i38 = 0, $memberFunction$addr$i = 0, $memberFunction$addr$i$index10 = 0, $memberFunction$addr$i23 = 0, $memberFunction$addr$i23$index21 = 0, $memberFunction$addr$i37 = 0, $memberFunction$addr$i37$index26 = 0, $memberFunction$i$field = 0, $memberFunction$i$field8 = 0, $memberFunction$i$index7 = 0, $memberFunction$i26$field = 0, $memberFunction$i26$field19 = 0, $memberFunction$i26$index18 = 0, $memberFunction$i40$field = 0, $memberFunction$i40$field24 = 0, $memberFunction$i40$index23 = 0, $methodName$addr$i = 0, $methodName$addr$i22 = 0, $methodName$addr$i36 = 0, $methodName$addr$i49 = 0;
 var $methodName$addr$i59 = 0, $name$addr = 0, $name$addr$i = 0, $push_back = 0, $push_back$index1 = 0, $ref$tmp = 0, $resize = 0, $resize$index2 = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i12 = 0, $this$addr$i21 = 0, $this$addr$i35 = 0, $this$addr$i48 = 0, $this$addr$i58 = 0, $this$addr$i8 = 0, $this1$i$i = 0, $this1$i13 = 0, $this1$i27 = 0, $this1$i41 = 0;
 var $this1$i51 = 0, $this1$i9 = 0, $tmp = 0, $tmp$index6 = 0, $tmp10 = 0, $tmp2 = 0, $tmp2$index17 = 0, $tmp219 = 0, $tmp4 = 0, $tmp4$index22 = 0, $tmp433 = 0, $upcast$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $function$addr$i60 = sp + 228|0;
 $args$i61 = sp + 250|0;
 $function$addr$i = sp + 208|0;
 $args$i50 = sp + 249|0;
 $memberFunction$addr$i37 = sp + 184|0;
 $args$i39 = sp + 248|0;
 $tmp433 = sp + 16|0;
 $memberFunction$addr$i23 = sp + 160|0;
 $args$i25 = sp + 247|0;
 $tmp219 = sp + 8|0;
 $memberFunction$addr$i = sp + 136|0;
 $args$i = sp + 246|0;
 $tmp10 = sp;
 $args$i$i = sp + 245|0;
 $push_back = sp + 56|0;
 $resize = sp + 48|0;
 $ref$tmp = sp + 244|0;
 $tmp = sp + 40|0;
 $tmp2 = sp + 32|0;
 $tmp4 = sp + 24|0;
 $name$addr = $name;
 HEAP32[$push_back>>2] = (148); //@line 1489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $push_back$index1 = ((($push_back)) + 4|0); //@line 1489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$push_back$index1>>2] = 0; //@line 1489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$resize>>2] = (149); //@line 1490 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $resize$index2 = ((($resize)) + 4|0); //@line 1490 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$resize$index2>>2] = 0; //@line 1490 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $name$addr; //@line 1491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i = $ref$tmp;
 $name$addr$i = $0;
 __ZN10emscripten8internal11NoBaseClass6verifyINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEvv(); //@line 1121 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $_getActualType$i = 150; //@line 1123 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i = (__ZN10emscripten8internal11NoBaseClass11getUpcasterINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEPFvvEv()|0); //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $upcast$i = $call$i; //@line 1124 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i = (__ZN10emscripten8internal11NoBaseClass13getDowncasterINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEPFvvEv()|0); //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $downcast$i = $call2$i; //@line 1125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $destructor$i = 151; //@line 1126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4$i = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEE3getEv()|0); //@line 1130 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEE3getEv()|0); //@line 1131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call6$i = (__ZN10emscripten8internal11NoBaseClass3getEv()|0); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $_getActualType$i; //@line 1133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i = $1;
 $call$i$i$i = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $_getActualType$i; //@line 1134 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $upcast$i; //@line 1135 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i11$i = $3;
 $call$i$i12$i = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $4 = $upcast$i; //@line 1136 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $5 = $downcast$i; //@line 1137 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i13$i = $5;
 $call$i$i14$i = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $6 = $downcast$i; //@line 1138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $7 = $name$addr$i; //@line 1139 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $8 = $destructor$i; //@line 1140 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i15$i = $8;
 $call$i$i16$i = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $9 = $destructor$i; //@line 1141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class(($call3$i|0),($call4$i|0),($call5$i|0),($call6$i|0),($call$i$i$i|0),($2|0),($call$i$i12$i|0),($4|0),($call$i$i14$i|0),($6|0),($7|0),($call$i$i16$i|0),($9|0)); //@line 1128 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i8 = $ref$tmp;
 $this1$i9 = $this$addr$i8;
 $this$addr$i$i = $this1$i9;
 $factory$addr$i$i = 152;
 $this1$i$i = $this$addr$i$i;
 $invoke$i$i = 153; //@line 1187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i$i = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1189 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i$i = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJPNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEE8getCountEv($args$i$i)|0); //@line 1190 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i$i = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJPNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEE8getTypesEv($args$i$i)|0); //@line 1191 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $10 = $invoke$i$i; //@line 1192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i$i = $10;
 $call$i$i$i$i = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $11 = $invoke$i$i; //@line 1193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $12 = $factory$addr$i$i; //@line 1194 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_constructor(($call$i$i|0),($call2$i$i|0),($call3$i$i|0),($call$i$i$i$i|0),($11|0),($12|0)); //@line 1188 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$push_back>>2]|0; //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index3 = ((($push_back)) + 4|0); //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field4 = HEAP32[$$index3>>2]|0; //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp>>2] = $$field; //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $tmp$index6 = ((($tmp)) + 4|0); //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp$index6>>2] = $$field4; //@line 1493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ;HEAP8[$tmp10>>0]=HEAP8[$tmp>>0]|0;HEAP8[$tmp10+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$tmp10+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$tmp10+3>>0]=HEAP8[$tmp+3>>0]|0;HEAP8[$tmp10+4>>0]=HEAP8[$tmp+4>>0]|0;HEAP8[$tmp10+5>>0]=HEAP8[$tmp+5>>0]|0;HEAP8[$tmp10+6>>0]=HEAP8[$tmp+6>>0]|0;HEAP8[$tmp10+7>>0]=HEAP8[$tmp+7>>0]|0;
 $memberFunction$i$field = HEAP32[$tmp10>>2]|0;
 $memberFunction$i$index7 = ((($tmp10)) + 4|0);
 $memberFunction$i$field8 = HEAP32[$memberFunction$i$index7>>2]|0;
 $this$addr$i12 = $this1$i$i;
 $methodName$addr$i = 3284;
 HEAP32[$memberFunction$addr$i>>2] = $memberFunction$i$field;
 $memberFunction$addr$i$index10 = ((($memberFunction$addr$i)) + 4|0);
 HEAP32[$memberFunction$addr$i$index10>>2] = $memberFunction$i$field8;
 $this1$i13 = $this$addr$i12;
 $invoker$i = 154; //@line 1270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i14 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1274 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $13 = $methodName$addr$i; //@line 1275 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i15 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEERKS8_EE8getCountEv($args$i)|0); //@line 1276 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i16 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEERKS8_EE8getTypesEv($args$i)|0); //@line 1277 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $14 = $invoker$i; //@line 1278 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i11 = $14;
 $call$i$i$i17 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $15 = $invoker$i; //@line 1279 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i18 = (__ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvRKS5_EEEPT_RKSD_($memberFunction$addr$i)|0); //@line 1280 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i14|0),($13|0),($call2$i15|0),($call3$i16|0),($call$i$i$i17|0),($15|0),($call5$i18|0),0); //@line 1273 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field12 = HEAP32[$resize>>2]|0; //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index14 = ((($resize)) + 4|0); //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field15 = HEAP32[$$index14>>2]|0; //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp2>>2] = $$field12; //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $tmp2$index17 = ((($tmp2)) + 4|0); //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp2$index17>>2] = $$field15; //@line 1494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ;HEAP8[$tmp219>>0]=HEAP8[$tmp2>>0]|0;HEAP8[$tmp219+1>>0]=HEAP8[$tmp2+1>>0]|0;HEAP8[$tmp219+2>>0]=HEAP8[$tmp2+2>>0]|0;HEAP8[$tmp219+3>>0]=HEAP8[$tmp2+3>>0]|0;HEAP8[$tmp219+4>>0]=HEAP8[$tmp2+4>>0]|0;HEAP8[$tmp219+5>>0]=HEAP8[$tmp2+5>>0]|0;HEAP8[$tmp219+6>>0]=HEAP8[$tmp2+6>>0]|0;HEAP8[$tmp219+7>>0]=HEAP8[$tmp2+7>>0]|0;
 $memberFunction$i26$field = HEAP32[$tmp219>>2]|0;
 $memberFunction$i26$index18 = ((($tmp219)) + 4|0);
 $memberFunction$i26$field19 = HEAP32[$memberFunction$i26$index18>>2]|0;
 $this$addr$i21 = $this1$i13;
 $methodName$addr$i22 = 3294;
 HEAP32[$memberFunction$addr$i23>>2] = $memberFunction$i26$field;
 $memberFunction$addr$i23$index21 = ((($memberFunction$addr$i23)) + 4|0);
 HEAP32[$memberFunction$addr$i23$index21>>2] = $memberFunction$i26$field19;
 $this1$i27 = $this$addr$i21;
 $invoker$i24 = 155; //@line 1270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i28 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1274 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $16 = $methodName$addr$i22; //@line 1275 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i29 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEjRKS8_EE8getCountEv($args$i25)|0); //@line 1276 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i30 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEjRKS8_EE8getTypesEv($args$i25)|0); //@line 1277 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $17 = $invoker$i24; //@line 1278 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i20 = $17;
 $call$i$i$i31 = (__ZN10emscripten8internal19getGenericSignatureIJviiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $18 = $invoker$i24; //@line 1279 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i32 = (__ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvjRKS5_EEEPT_RKSD_($memberFunction$addr$i23)|0); //@line 1280 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i28|0),($16|0),($call2$i29|0),($call3$i30|0),($call$i$i$i31|0),($18|0),($call5$i32|0),0); //@line 1273 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp4>>2] = (156); //@line 1495 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $tmp4$index22 = ((($tmp4)) + 4|0); //@line 1495 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$tmp4$index22>>2] = 0; //@line 1495 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ;HEAP8[$tmp433>>0]=HEAP8[$tmp4>>0]|0;HEAP8[$tmp433+1>>0]=HEAP8[$tmp4+1>>0]|0;HEAP8[$tmp433+2>>0]=HEAP8[$tmp4+2>>0]|0;HEAP8[$tmp433+3>>0]=HEAP8[$tmp4+3>>0]|0;HEAP8[$tmp433+4>>0]=HEAP8[$tmp4+4>>0]|0;HEAP8[$tmp433+5>>0]=HEAP8[$tmp4+5>>0]|0;HEAP8[$tmp433+6>>0]=HEAP8[$tmp4+6>>0]|0;HEAP8[$tmp433+7>>0]=HEAP8[$tmp4+7>>0]|0;
 $memberFunction$i40$field = HEAP32[$tmp433>>2]|0;
 $memberFunction$i40$index23 = ((($tmp433)) + 4|0);
 $memberFunction$i40$field24 = HEAP32[$memberFunction$i40$index23>>2]|0;
 $this$addr$i35 = $this1$i27;
 $methodName$addr$i36 = 2355;
 HEAP32[$memberFunction$addr$i37>>2] = $memberFunction$i40$field;
 $memberFunction$addr$i37$index26 = ((($memberFunction$addr$i37)) + 4|0);
 HEAP32[$memberFunction$addr$i37$index26>>2] = $memberFunction$i40$field24;
 $this1$i41 = $this$addr$i35;
 $invoker$i38 = 157; //@line 1289 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i42 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1293 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $19 = $methodName$addr$i36; //@line 1294 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i43 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEEE8getCountEv($args$i39)|0); //@line 1295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i44 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEEE8getTypesEv($args$i39)|0); //@line 1296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $20 = $invoker$i38; //@line 1297 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i34 = $20;
 $call$i$i$i45 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $21 = $invoker$i38; //@line 1298 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i46 = (__ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEKFjvEEEPT_RKSB_($memberFunction$addr$i37)|0); //@line 1299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i42|0),($19|0),($call2$i43|0),($call3$i44|0),($call$i$i$i45|0),($21|0),($call5$i46|0),0); //@line 1292 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i48 = $this1$i41;
 $methodName$addr$i49 = 3301;
 HEAP32[$function$addr$i>>2] = 158;
 $this1$i51 = $this$addr$i48;
 $invoke$i = 159; //@line 1309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i52 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $22 = $methodName$addr$i49; //@line 1312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i53 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEjEE8getCountEv($args$i50)|0); //@line 1313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i54 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEjEE8getTypesEv($args$i50)|0); //@line 1314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $23 = $invoke$i; //@line 1315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i47 = $23;
 $call$i$i$i55 = (__ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $24 = $invoke$i; //@line 1316 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i56 = (__ZN10emscripten8internal10getContextIPFNS_3valERKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjEEEPT_RKSE_($function$addr$i)|0); //@line 1317 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i52|0),($22|0),($call2$i53|0),($call3$i54|0),($call$i$i$i55|0),($24|0),($call5$i56|0),0); //@line 1310 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i58 = $this1$i51;
 $methodName$addr$i59 = 3305;
 HEAP32[$function$addr$i60>>2] = 160;
 $invoke$i62 = 161; //@line 1309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call$i64 = (__ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 1311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $25 = $methodName$addr$i59; //@line 1312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2$i65 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJbRNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjRKS7_EE8getCountEv($args$i61)|0); //@line 1313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3$i66 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJbRNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjRKS7_EE8getTypesEv($args$i61)|0); //@line 1314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $26 = $invoke$i62; //@line 1315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$addr$i$i57 = $26;
 $call$i$i$i67 = (__ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv()|0); //@line 399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $27 = $invoke$i62; //@line 1316 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5$i68 = (__ZN10emscripten8internal10getContextIPFbRNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEjRKS5_EEEPT_RKSE_($function$addr$i60)|0); //@line 1317 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __embind_register_class_function(($call$i64|0),($25|0),($call2$i65|0),($call3$i66|0),($call$i$i$i67|0),($27|0),($call5$i68|0),0); //@line 1310 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 1491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN9Hierarchy4packEv($this) {
 $this = $this|0;
 var $$expand_i1_val = 0, $$expand_i1_val1 = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0.0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__s$addr$i = 0, $__s$addr$i178 = 0, $__s$addr$i192 = 0, $__s$addr$i206 = 0, $agg$tmp = 0, $agg$tmp$ensured = 0, $agg$tmp$ensured109 = 0, $agg$tmp$ensured116 = 0, $agg$tmp$ensured127 = 0, $agg$tmp$ensured138 = 0, $agg$tmp$ensured154 = 0;
 var $agg$tmp$ensured98 = 0, $agg$tmp100 = 0, $agg$tmp101 = 0, $agg$tmp111 = 0, $agg$tmp118 = 0, $agg$tmp119 = 0, $agg$tmp129 = 0, $agg$tmp130 = 0, $agg$tmp140 = 0, $agg$tmp141 = 0, $agg$tmp156 = 0, $agg$tmp25 = 0, $agg$tmp47 = 0, $agg$tmp47$byval_copy = 0, $agg$tmp48 = 0, $agg$tmp48$byval_copy = 0, $agg$tmp51 = 0, $agg$tmp51$byval_copy = 0, $agg$tmp54 = 0, $agg$tmp64 = 0;
 var $agg$tmp89 = 0, $agg$tmp90 = 0, $call = 0, $call$i173 = 0, $call$i186 = 0, $call$i200 = 0, $call$i214 = 0, $call11 = 0.0, $call146 = 0.0, $call159 = 0.0, $call22 = 0.0, $call32 = 0, $call40 = 0.0, $call63 = 0, $call73 = 0, $cleanup$cond = 0, $cleanup$cond70 = 0, $cleanup$is_active = 0, $cleanup$is_active$pre_trunc = 0, $cleanup$is_active75 = 0;
 var $cleanup$is_active75$pre_trunc = 0, $cleanup$is_active78 = 0, $cleanup$is_active78$pre_trunc = 0, $cleanup$is_active82 = 0, $cleanup$is_active82$pre_trunc = 0, $div = 0.0, $div147 = 0.0, $div162 = 0.0, $div45 = 0.0, $dy = 0, $dy145 = 0, $dy158 = 0, $dy44 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $frombool = 0, $hasRadius = 0, $mul = 0.0, $options = 0;
 var $options16 = 0, $options26 = 0, $options37 = 0, $options5 = 0, $options55 = 0, $options65 = 0, $padding = 0, $paddingFunction = 0, $r = 0, $r161 = 0, $radiusFunction = 0, $ref$tmp = 0, $ref$tmp14 = 0, $ref$tmp17 = 0, $ref$tmp27 = 0, $ref$tmp36 = 0, $ref$tmp4 = 0, $ref$tmp58 = 0, $ref$tmp6 = 0, $ref$tmp67 = 0;
 var $root = 0, $root110 = 0, $root128 = 0, $root139 = 0, $root143 = 0, $root155 = 0, $root160 = 0, $root168 = 0, $root46 = 0, $root88 = 0, $root99 = 0, $sel = 0, $temp$lvalue = 0, $temp$lvalue15 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i174 = 0;
 var $this$addr$i$i$i$i188 = 0, $this$addr$i$i$i$i202 = 0, $this$addr$i$i$i175 = 0, $this$addr$i$i$i189 = 0, $this$addr$i$i$i203 = 0, $this$addr$i$i176 = 0, $this$addr$i$i190 = 0, $this$addr$i$i204 = 0, $this$addr$i177 = 0, $this$addr$i191 = 0, $this$addr$i205 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i182 = 0, $this1$i$i$i196 = 0, $this1$i$i$i210 = 0, $this1$i$i181 = 0, $this1$i$i195 = 0;
 var $this1$i$i209 = 0, $this1$i179 = 0, $this1$i193 = 0, $this1$i207 = 0, $tobool = 0, $y = 0, $zeroFn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $agg$tmp51$byval_copy = sp + 900|0;
 $agg$tmp48$byval_copy = sp + 892|0;
 $agg$tmp47$byval_copy = sp + 888|0;
 $agg$tmp = sp + 800|0;
 $ref$tmp = sp + 788|0;
 $ref$tmp4 = sp + 776|0;
 $temp$lvalue = sp + 772|0;
 $ref$tmp6 = sp + 768|0;
 $ref$tmp14 = sp + 764|0;
 $temp$lvalue15 = sp + 760|0;
 $ref$tmp17 = sp + 756|0;
 $agg$tmp25 = sp + 752|0;
 $ref$tmp27 = sp + 740|0;
 $ref$tmp36 = sp + 736|0;
 $radiusFunction = sp + 672|0;
 $agg$tmp47 = sp + 732|0;
 $paddingFunction = sp + 648|0;
 $agg$tmp48 = sp + 728|0;
 $zeroFn = sp + 624|0;
 $agg$tmp51 = sp + 899|0;
 $agg$tmp54 = sp + 724|0;
 $ref$tmp58 = sp + 712|0;
 $agg$tmp64 = sp + 708|0;
 $cleanup$cond = sp + 897|0;
 $ref$tmp67 = sp + 696|0;
 $cleanup$cond70 = sp + 896|0;
 $agg$tmp$ensured = sp + 576|0;
 $agg$tmp89 = sp + 552|0;
 $agg$tmp90 = sp + 528|0;
 $agg$tmp$ensured98 = sp + 480|0;
 $agg$tmp100 = sp + 456|0;
 $agg$tmp101 = sp + 432|0;
 $agg$tmp$ensured109 = sp + 384|0;
 $agg$tmp111 = sp + 360|0;
 $agg$tmp$ensured116 = sp + 312|0;
 $agg$tmp118 = sp + 288|0;
 $agg$tmp119 = sp + 264|0;
 $agg$tmp$ensured127 = sp + 216|0;
 $agg$tmp129 = sp + 192|0;
 $agg$tmp130 = sp + 168|0;
 $agg$tmp$ensured138 = sp + 120|0;
 $agg$tmp140 = sp + 96|0;
 $agg$tmp141 = sp + 72|0;
 $agg$tmp$ensured154 = sp + 24|0;
 $agg$tmp156 = sp;
 $this$addr = $this;
 $this1 = $this$addr;
 $options = ((($this1)) + 24|0); //@line 497 "hierarchy.cpp"
 __ZNK10emscripten3valixIA5_cEES0_RKT_($agg$tmp,$options,2355); //@line 497 "hierarchy.cpp"
 $this$addr$i = $ref$tmp;
 $__s$addr$i = 2221;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $0 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $1 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 __THREW__ = 0;
 $call$i173 = (invoke_ii(123,($1|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 10;
  } else {
   __THREW__ = 0;
   invoke_viii(162,($this1$i|0),($0|0),($call$i173|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    label = 10;
   } else {
    __THREW__ = 0;
    $call = (invoke_iiii(163,($this1|0),($agg$tmp|0),($ref$tmp|0))|0); //@line 497 "hierarchy.cpp"
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     $18 = ___cxa_find_matching_catch_2()|0;
     $19 = tempRet0;
     $exn$slot = $18; //@line 559 "hierarchy.cpp"
     $ehselector$slot = $19; //@line 559 "hierarchy.cpp"
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 497 "hierarchy.cpp"
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 497 "hierarchy.cpp"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 497 "hierarchy.cpp"
    L7: do {
     if ($call) {
      $options5 = ((($this1)) + 24|0); //@line 499 "hierarchy.cpp"
      __ZNK10emscripten3valixIA5_cEES0_RKT_($temp$lvalue,$options5,2355); //@line 499 "hierarchy.cpp"
      HEAP32[$ref$tmp6>>2] = 0; //@line 499 "hierarchy.cpp"
      __THREW__ = 0;
      invoke_viii(164,($ref$tmp4|0),($temp$lvalue|0),($ref$tmp6|0)); //@line 499 "hierarchy.cpp"
      $8 = __THREW__; __THREW__ = 0;
      $9 = $8&1;
      do {
       if ($9) {
        $20 = ___cxa_find_matching_catch_2()|0;
        $21 = tempRet0;
        $exn$slot = $20; //@line 559 "hierarchy.cpp"
        $ehselector$slot = $21; //@line 559 "hierarchy.cpp"
       } else {
        __THREW__ = 0;
        $call11 = (+invoke_di(119,($ref$tmp4|0))); //@line 499 "hierarchy.cpp"
        $10 = __THREW__; __THREW__ = 0;
        $11 = $10&1;
        if ($11) {
         $22 = ___cxa_find_matching_catch_2()|0;
         $23 = tempRet0;
         $exn$slot = $22; //@line 559 "hierarchy.cpp"
         $ehselector$slot = $23; //@line 559 "hierarchy.cpp"
         __ZN10emscripten3valD2Ev($ref$tmp4); //@line 499 "hierarchy.cpp"
         break;
        }
        HEAPF64[$this1>>3] = $call11; //@line 499 "hierarchy.cpp"
        __ZN10emscripten3valD2Ev($ref$tmp4); //@line 499 "hierarchy.cpp"
        __ZN10emscripten3valD2Ev($temp$lvalue); //@line 499 "hierarchy.cpp"
        $options16 = ((($this1)) + 24|0); //@line 500 "hierarchy.cpp"
        __ZNK10emscripten3valixIA5_cEES0_RKT_($temp$lvalue15,$options16,2355); //@line 500 "hierarchy.cpp"
        HEAP32[$ref$tmp17>>2] = 1; //@line 500 "hierarchy.cpp"
        __THREW__ = 0;
        invoke_viii(164,($ref$tmp14|0),($temp$lvalue15|0),($ref$tmp17|0)); //@line 500 "hierarchy.cpp"
        $12 = __THREW__; __THREW__ = 0;
        $13 = $12&1;
        do {
         if ($13) {
          $24 = ___cxa_find_matching_catch_2()|0;
          $25 = tempRet0;
          $exn$slot = $24; //@line 559 "hierarchy.cpp"
          $ehselector$slot = $25; //@line 559 "hierarchy.cpp"
         } else {
          __THREW__ = 0;
          $call22 = (+invoke_di(119,($ref$tmp14|0))); //@line 500 "hierarchy.cpp"
          $14 = __THREW__; __THREW__ = 0;
          $15 = $14&1;
          if ($15) {
           $26 = ___cxa_find_matching_catch_2()|0;
           $27 = tempRet0;
           $exn$slot = $26; //@line 559 "hierarchy.cpp"
           $ehselector$slot = $27; //@line 559 "hierarchy.cpp"
           __ZN10emscripten3valD2Ev($ref$tmp14); //@line 500 "hierarchy.cpp"
           break;
          } else {
           $dy = ((($this1)) + 8|0); //@line 500 "hierarchy.cpp"
           HEAPF64[$dy>>3] = $call22; //@line 500 "hierarchy.cpp"
           __ZN10emscripten3valD2Ev($ref$tmp14); //@line 500 "hierarchy.cpp"
           __ZN10emscripten3valD2Ev($temp$lvalue15); //@line 500 "hierarchy.cpp"
           break L7;
          }
         }
        } while(0);
        __ZN10emscripten3valD2Ev($temp$lvalue15); //@line 500 "hierarchy.cpp"
        $exn = $exn$slot; //@line 497 "hierarchy.cpp"
        $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
        ___resumeException($exn|0);
        // unreachable;
       }
      } while(0);
      __ZN10emscripten3valD2Ev($temp$lvalue); //@line 499 "hierarchy.cpp"
      $exn = $exn$slot; //@line 497 "hierarchy.cpp"
      $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
      ___resumeException($exn|0);
      // unreachable;
     }
    } while(0);
    $options26 = ((($this1)) + 24|0); //@line 503 "hierarchy.cpp"
    __ZNK10emscripten3valixIA8_cEES0_RKT_($agg$tmp25,$options26,2360); //@line 503 "hierarchy.cpp"
    $this$addr$i177 = $ref$tmp27;
    $__s$addr$i178 = 2368;
    $this1$i179 = $this$addr$i177;
    $this$addr$i$i176 = $this1$i179;
    $this1$i$i181 = $this$addr$i$i176;
    $this$addr$i$i$i175 = $this1$i$i181;
    $this1$i$i$i182 = $this$addr$i$i$i175;
    $this$addr$i$i$i$i174 = $this1$i$i$i182;
    ;HEAP32[$this1$i$i$i182>>2]=0|0;HEAP32[$this1$i$i$i182+4>>2]=0|0;HEAP32[$this1$i$i$i182+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $28 = $__s$addr$i178; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
    $29 = $__s$addr$i178; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
    __THREW__ = 0;
    $call$i186 = (invoke_ii(123,($29|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
    $30 = __THREW__; __THREW__ = 0;
    $31 = $30&1;
    do {
     if ($31) {
      label = 25;
     } else {
      __THREW__ = 0;
      invoke_viii(162,($this1$i179|0),($28|0),($call$i186|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 25;
      } else {
       __THREW__ = 0;
       $call32 = (invoke_iiii(163,($this1|0),($agg$tmp25|0),($ref$tmp27|0))|0); //@line 503 "hierarchy.cpp"
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        $40 = ___cxa_find_matching_catch_2()|0;
        $41 = tempRet0;
        $exn$slot = $40; //@line 559 "hierarchy.cpp"
        $ehselector$slot = $41; //@line 559 "hierarchy.cpp"
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp27); //@line 503 "hierarchy.cpp"
        break;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp27); //@line 503 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($agg$tmp25); //@line 503 "hierarchy.cpp"
       do {
        if ($call32) {
         $options37 = ((($this1)) + 24|0); //@line 505 "hierarchy.cpp"
         __ZNK10emscripten3valixIA8_cEES0_RKT_($ref$tmp36,$options37,2360); //@line 505 "hierarchy.cpp"
         __THREW__ = 0;
         $call40 = (+invoke_di(119,($ref$tmp36|0))); //@line 505 "hierarchy.cpp"
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if (!($37)) {
          $padding = ((($this1)) + 16|0); //@line 505 "hierarchy.cpp"
          HEAPF64[$padding>>3] = $call40; //@line 505 "hierarchy.cpp"
          __ZN10emscripten3valD2Ev($ref$tmp36); //@line 505 "hierarchy.cpp"
          break;
         }
         $42 = ___cxa_find_matching_catch_2()|0;
         $43 = tempRet0;
         $exn$slot = $42; //@line 559 "hierarchy.cpp"
         $ehselector$slot = $43; //@line 559 "hierarchy.cpp"
         __ZN10emscripten3valD2Ev($ref$tmp36); //@line 505 "hierarchy.cpp"
         $exn = $exn$slot; //@line 497 "hierarchy.cpp"
         $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
         ___resumeException($exn|0);
         // unreachable;
        }
       } while(0);
       $44 = +HEAPF64[$this1>>3]; //@line 508 "hierarchy.cpp"
       $div = $44 / 2.0; //@line 508 "hierarchy.cpp"
       $root = ((($this1)) + 28|0); //@line 508 "hierarchy.cpp"
       $45 = HEAP32[$root>>2]|0; //@line 508 "hierarchy.cpp"
       HEAPF64[$45>>3] = $div; //@line 508 "hierarchy.cpp"
       $dy44 = ((($this1)) + 8|0); //@line 509 "hierarchy.cpp"
       $46 = +HEAPF64[$dy44>>3]; //@line 509 "hierarchy.cpp"
       $div45 = $46 / 2.0; //@line 509 "hierarchy.cpp"
       $root46 = ((($this1)) + 28|0); //@line 509 "hierarchy.cpp"
       $47 = HEAP32[$root46>>2]|0; //@line 509 "hierarchy.cpp"
       $y = ((($47)) + 8|0); //@line 509 "hierarchy.cpp"
       HEAPF64[$y>>3] = $div45; //@line 509 "hierarchy.cpp"
       HEAP32[$agg$tmp47>>2] = $this1; //@line 510 "hierarchy.cpp"
       ;HEAP32[$agg$tmp47$byval_copy>>2]=HEAP32[$agg$tmp47>>2]|0; //@line 510 "hierarchy.cpp"
       __ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE($radiusFunction,$agg$tmp47$byval_copy,0); //@line 510 "hierarchy.cpp"
       HEAP32[$agg$tmp48>>2] = $this1; //@line 517 "hierarchy.cpp"
       __THREW__ = 0;
       ;HEAP32[$agg$tmp48$byval_copy>>2]=HEAP32[$agg$tmp48>>2]|0; //@line 517 "hierarchy.cpp"
       invoke_viii(165,($paddingFunction|0),($agg$tmp48$byval_copy|0),(0|0)); //@line 517 "hierarchy.cpp"
       $48 = __THREW__; __THREW__ = 0;
       $49 = $48&1;
       if ($49) {
        $93 = ___cxa_find_matching_catch_2()|0;
        $94 = tempRet0;
        $exn$slot = $93; //@line 559 "hierarchy.cpp"
        $ehselector$slot = $94; //@line 559 "hierarchy.cpp"
       } else {
        __THREW__ = 0;
        ;HEAP8[$agg$tmp51$byval_copy>>0]=HEAP8[$agg$tmp51>>0]|0; //@line 526 "hierarchy.cpp"
        invoke_viii(166,($zeroFn|0),($agg$tmp51$byval_copy|0),(0|0)); //@line 526 "hierarchy.cpp"
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         $95 = ___cxa_find_matching_catch_2()|0;
         $96 = tempRet0;
         $exn$slot = $95; //@line 559 "hierarchy.cpp"
         $ehselector$slot = $96; //@line 559 "hierarchy.cpp"
        } else {
         $options55 = ((($this1)) + 24|0); //@line 528 "hierarchy.cpp"
         $$expand_i1_val = 0;
         HEAP8[$cleanup$cond>>0] = $$expand_i1_val;
         $$expand_i1_val1 = 0;
         HEAP8[$cleanup$cond70>>0] = $$expand_i1_val1;
         __THREW__ = 0;
         invoke_viii(167,($agg$tmp54|0),($options55|0),(2375|0)); //@line 528 "hierarchy.cpp"
         $52 = __THREW__; __THREW__ = 0;
         $53 = $52&1;
         L45: do {
          if ($53) {
           label = 56;
          } else {
           $this$addr$i191 = $ref$tmp58;
           $__s$addr$i192 = 2382;
           $this1$i193 = $this$addr$i191;
           $this$addr$i$i190 = $this1$i193;
           $this1$i$i195 = $this$addr$i$i190;
           $this$addr$i$i$i189 = $this1$i$i195;
           $this1$i$i$i196 = $this$addr$i$i$i189;
           $this$addr$i$i$i$i188 = $this1$i$i$i196;
           ;HEAP32[$this1$i$i$i196>>2]=0|0;HEAP32[$this1$i$i$i196+4>>2]=0|0;HEAP32[$this1$i$i$i196+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
           $54 = $__s$addr$i192; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
           $55 = $__s$addr$i192; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
           __THREW__ = 0;
           $call$i200 = (invoke_ii(123,($55|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
           $56 = __THREW__; __THREW__ = 0;
           $57 = $56&1;
           if ($57) {
            label = 57;
           } else {
            __THREW__ = 0;
            invoke_viii(162,($this1$i193|0),($54|0),($call$i200|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
            $58 = __THREW__; __THREW__ = 0;
            $59 = $58&1;
            if ($59) {
             label = 57;
            } else {
             __THREW__ = 0;
             $call63 = (invoke_iiii(163,($this1|0),($agg$tmp54|0),($ref$tmp58|0))|0); //@line 528 "hierarchy.cpp"
             $60 = __THREW__; __THREW__ = 0;
             $61 = $60&1;
             L50: do {
              if ($61) {
               label = 58;
              } else {
               L52: do {
                if ($call63) {
                 $72 = 1;
                } else {
                 $options65 = ((($this1)) + 24|0); //@line 529 "hierarchy.cpp"
                 __THREW__ = 0;
                 invoke_viii(167,($agg$tmp64|0),($options65|0),(2375|0)); //@line 529 "hierarchy.cpp"
                 $62 = __THREW__; __THREW__ = 0;
                 $63 = $62&1;
                 if ($63) {
                  label = 58;
                  break L50;
                 }
                 $$expand_i1_val3 = 1; //@line 529 "hierarchy.cpp"
                 HEAP8[$cleanup$cond>>0] = $$expand_i1_val3; //@line 529 "hierarchy.cpp"
                 $this$addr$i205 = $ref$tmp67;
                 $__s$addr$i206 = 3744;
                 $this1$i207 = $this$addr$i205;
                 $this$addr$i$i204 = $this1$i207;
                 $this1$i$i209 = $this$addr$i$i204;
                 $this$addr$i$i$i203 = $this1$i$i209;
                 $this1$i$i$i210 = $this$addr$i$i$i203;
                 $this$addr$i$i$i$i202 = $this1$i$i$i210;
                 ;HEAP32[$this1$i$i$i210>>2]=0|0;HEAP32[$this1$i$i$i210+4>>2]=0|0;HEAP32[$this1$i$i$i210+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
                 $64 = $__s$addr$i206; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
                 $65 = $__s$addr$i206; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
                 __THREW__ = 0;
                 $call$i214 = (invoke_ii(123,($65|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
                 $66 = __THREW__; __THREW__ = 0;
                 $67 = $66&1;
                 do {
                  if ($67) {
                   label = 59;
                  } else {
                   __THREW__ = 0;
                   invoke_viii(162,($this1$i207|0),($64|0),($call$i214|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
                   $68 = __THREW__; __THREW__ = 0;
                   $69 = $68&1;
                   if ($69) {
                    label = 59;
                    break;
                   }
                   $$expand_i1_val5 = 1; //@line 529 "hierarchy.cpp"
                   HEAP8[$cleanup$cond70>>0] = $$expand_i1_val5; //@line 529 "hierarchy.cpp"
                   __THREW__ = 0;
                   $call73 = (invoke_iiii(163,($this1|0),($agg$tmp64|0),($ref$tmp67|0))|0); //@line 529 "hierarchy.cpp"
                   $70 = __THREW__; __THREW__ = 0;
                   $71 = $70&1;
                   if (!($71)) {
                    $72 = $call73;
                    break L52;
                   }
                   $105 = ___cxa_find_matching_catch_2()|0;
                   $106 = tempRet0;
                   $exn$slot = $105; //@line 559 "hierarchy.cpp"
                   $ehselector$slot = $106; //@line 559 "hierarchy.cpp"
                   $cleanup$is_active75$pre_trunc = HEAP8[$cleanup$cond70>>0]|0; //@line 528 "hierarchy.cpp"
                   $cleanup$is_active75 = $cleanup$is_active75$pre_trunc&1; //@line 528 "hierarchy.cpp"
                   if (!($cleanup$is_active75)) {
                    break;
                   }
                   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp67); //@line 528 "hierarchy.cpp"
                  }
                 } while(0);
                 if ((label|0) == 59) {
                  $103 = ___cxa_find_matching_catch_2()|0;
                  $104 = tempRet0;
                  $exn$slot = $103; //@line 559 "hierarchy.cpp"
                  $ehselector$slot = $104; //@line 559 "hierarchy.cpp"
                 }
                 $cleanup$is_active82$pre_trunc = HEAP8[$cleanup$cond>>0]|0; //@line 528 "hierarchy.cpp"
                 $cleanup$is_active82 = $cleanup$is_active82$pre_trunc&1; //@line 528 "hierarchy.cpp"
                 if (!($cleanup$is_active82)) {
                  break L50;
                 }
                 __ZN10emscripten3valD2Ev($agg$tmp64); //@line 528 "hierarchy.cpp"
                 break L50;
                }
               } while(0);
               $cleanup$is_active$pre_trunc = HEAP8[$cleanup$cond70>>0]|0; //@line 528 "hierarchy.cpp"
               $cleanup$is_active = $cleanup$is_active$pre_trunc&1; //@line 528 "hierarchy.cpp"
               if ($cleanup$is_active) {
                __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp67); //@line 528 "hierarchy.cpp"
               }
               $cleanup$is_active78$pre_trunc = HEAP8[$cleanup$cond>>0]|0; //@line 528 "hierarchy.cpp"
               $cleanup$is_active78 = $cleanup$is_active78$pre_trunc&1; //@line 528 "hierarchy.cpp"
               if ($cleanup$is_active78) {
                __ZN10emscripten3valD2Ev($agg$tmp64); //@line 528 "hierarchy.cpp"
               }
               __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp58); //@line 528 "hierarchy.cpp"
               __ZN10emscripten3valD2Ev($agg$tmp54); //@line 528 "hierarchy.cpp"
               $frombool = $72&1; //@line 528 "hierarchy.cpp"
               $hasRadius = $frombool; //@line 528 "hierarchy.cpp"
               $73 = $hasRadius; //@line 531 "hierarchy.cpp"
               $tobool = $73&1; //@line 531 "hierarchy.cpp"
               $root88 = ((($this1)) + 28|0);
               $74 = HEAP32[$root88>>2]|0;
               if ($tobool) {
                __THREW__ = 0;
                invoke_vii(168,($agg$tmp90|0),($radiusFunction|0)); //@line 532 "hierarchy.cpp"
                $75 = __THREW__; __THREW__ = 0;
                $76 = $75&1;
                if ($76) {
                 label = 56;
                 break L45;
                }
                __THREW__ = 0;
                invoke_vii(169,($agg$tmp89|0),($agg$tmp90|0)); //@line 532 "hierarchy.cpp"
                $77 = __THREW__; __THREW__ = 0;
                $78 = $77&1;
                do {
                 if ($78) {
                  $107 = ___cxa_find_matching_catch_2()|0;
                  $108 = tempRet0;
                  $exn$slot = $107; //@line 559 "hierarchy.cpp"
                  $ehselector$slot = $108; //@line 559 "hierarchy.cpp"
                 } else {
                  __THREW__ = 0;
                  invoke_viii(170,($agg$tmp$ensured|0),($74|0),($agg$tmp89|0)); //@line 532 "hierarchy.cpp"
                  $79 = __THREW__; __THREW__ = 0;
                  $80 = $79&1;
                  if ($80) {
                   $109 = ___cxa_find_matching_catch_2()|0;
                   $110 = tempRet0;
                   $exn$slot = $109; //@line 559 "hierarchy.cpp"
                   $ehselector$slot = $110; //@line 559 "hierarchy.cpp"
                   __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp89); //@line 532 "hierarchy.cpp"
                   break;
                  }
                  __ZN5HNodeD2Ev($agg$tmp$ensured); //@line 532 "hierarchy.cpp"
                  __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp89); //@line 532 "hierarchy.cpp"
                  __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp90); //@line 532 "hierarchy.cpp"
                  $root99 = ((($this1)) + 28|0); //@line 533 "hierarchy.cpp"
                  $81 = HEAP32[$root99>>2]|0; //@line 533 "hierarchy.cpp"
                  __THREW__ = 0;
                  invoke_vii(168,($agg$tmp101|0),($paddingFunction|0)); //@line 533 "hierarchy.cpp"
                  $82 = __THREW__; __THREW__ = 0;
                  $83 = $82&1;
                  if ($83) {
                   label = 56;
                   break L45;
                  }
                  __THREW__ = 0;
                  invoke_viid(171,($agg$tmp100|0),($agg$tmp101|0),0.5); //@line 533 "hierarchy.cpp"
                  $84 = __THREW__; __THREW__ = 0;
                  $85 = $84&1;
                  do {
                   if ($85) {
                    $111 = ___cxa_find_matching_catch_2()|0;
                    $112 = tempRet0;
                    $exn$slot = $111; //@line 559 "hierarchy.cpp"
                    $ehselector$slot = $112; //@line 559 "hierarchy.cpp"
                   } else {
                    __THREW__ = 0;
                    invoke_viii(172,($agg$tmp$ensured98|0),($81|0),($agg$tmp100|0)); //@line 533 "hierarchy.cpp"
                    $86 = __THREW__; __THREW__ = 0;
                    $87 = $86&1;
                    if ($87) {
                     $113 = ___cxa_find_matching_catch_2()|0;
                     $114 = tempRet0;
                     $exn$slot = $113; //@line 559 "hierarchy.cpp"
                     $ehselector$slot = $114; //@line 559 "hierarchy.cpp"
                     __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp100); //@line 533 "hierarchy.cpp"
                     break;
                    }
                    __ZN5HNodeD2Ev($agg$tmp$ensured98); //@line 533 "hierarchy.cpp"
                    __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp100); //@line 533 "hierarchy.cpp"
                    __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp101); //@line 533 "hierarchy.cpp"
                    $root110 = ((($this1)) + 28|0); //@line 534 "hierarchy.cpp"
                    $88 = HEAP32[$root110>>2]|0; //@line 534 "hierarchy.cpp"
                    __THREW__ = 0;
                    invoke_vid(173,($agg$tmp111|0),1.0); //@line 534 "hierarchy.cpp"
                    $89 = __THREW__; __THREW__ = 0;
                    $90 = $89&1;
                    if ($90) {
                     label = 56;
                     break L45;
                    }
                    __THREW__ = 0;
                    invoke_viii(170,($agg$tmp$ensured109|0),($88|0),($agg$tmp111|0)); //@line 534 "hierarchy.cpp"
                    $91 = __THREW__; __THREW__ = 0;
                    $92 = $91&1;
                    if ($92) {
                     $115 = ___cxa_find_matching_catch_2()|0;
                     $116 = tempRet0;
                     $exn$slot = $115; //@line 559 "hierarchy.cpp"
                     $ehselector$slot = $116; //@line 559 "hierarchy.cpp"
                     __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp111); //@line 534 "hierarchy.cpp"
                     break L45;
                    }
                    __ZN5HNodeD2Ev($agg$tmp$ensured109); //@line 534 "hierarchy.cpp"
                    __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp111); //@line 534 "hierarchy.cpp"
                    $root168 = ((($this1)) + 28|0); //@line 558 "hierarchy.cpp"
                    $164 = HEAP32[$root168>>2]|0; //@line 558 "hierarchy.cpp"
                    __ZNSt3__28functionIFdP5HNodeEED2Ev($zeroFn); //@line 559 "hierarchy.cpp"
                    __ZNSt3__28functionIFdP5HNodeEED2Ev($paddingFunction); //@line 559 "hierarchy.cpp"
                    __ZNSt3__28functionIFdP5HNodeEED2Ev($radiusFunction); //@line 559 "hierarchy.cpp"
                    STACKTOP = sp;return ($164|0); //@line 559 "hierarchy.cpp"
                   }
                  } while(0);
                  __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp101); //@line 533 "hierarchy.cpp"
                  break L45;
                 }
                } while(0);
                __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp90); //@line 532 "hierarchy.cpp"
                break L45;
               }
               __THREW__ = 0;
               invoke_vii(168,($agg$tmp119|0),($radiusFunction|0)); //@line 536 "hierarchy.cpp"
               $117 = __THREW__; __THREW__ = 0;
               $118 = $117&1;
               if ($118) {
                label = 56;
                break L45;
               }
               __THREW__ = 0;
               invoke_vii(169,($agg$tmp118|0),($agg$tmp119|0)); //@line 536 "hierarchy.cpp"
               $119 = __THREW__; __THREW__ = 0;
               $120 = $119&1;
               do {
                if ($120) {
                 $150 = ___cxa_find_matching_catch_2()|0;
                 $151 = tempRet0;
                 $exn$slot = $150; //@line 559 "hierarchy.cpp"
                 $ehselector$slot = $151; //@line 559 "hierarchy.cpp"
                } else {
                 __THREW__ = 0;
                 invoke_viii(170,($agg$tmp$ensured116|0),($74|0),($agg$tmp118|0)); //@line 536 "hierarchy.cpp"
                 $121 = __THREW__; __THREW__ = 0;
                 $122 = $121&1;
                 if ($122) {
                  $152 = ___cxa_find_matching_catch_2()|0;
                  $153 = tempRet0;
                  $exn$slot = $152; //@line 559 "hierarchy.cpp"
                  $ehselector$slot = $153; //@line 559 "hierarchy.cpp"
                  __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp118); //@line 536 "hierarchy.cpp"
                  break;
                 }
                 __ZN5HNodeD2Ev($agg$tmp$ensured116); //@line 536 "hierarchy.cpp"
                 __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp118); //@line 536 "hierarchy.cpp"
                 __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp119); //@line 536 "hierarchy.cpp"
                 $root128 = ((($this1)) + 28|0); //@line 541 "hierarchy.cpp"
                 $123 = HEAP32[$root128>>2]|0; //@line 541 "hierarchy.cpp"
                 __THREW__ = 0;
                 invoke_vii(168,($agg$tmp130|0),($zeroFn|0)); //@line 541 "hierarchy.cpp"
                 $124 = __THREW__; __THREW__ = 0;
                 $125 = $124&1;
                 if ($125) {
                  label = 56;
                  break L45;
                 }
                 __THREW__ = 0;
                 invoke_viid(171,($agg$tmp129|0),($agg$tmp130|0),1.0); //@line 541 "hierarchy.cpp"
                 $126 = __THREW__; __THREW__ = 0;
                 $127 = $126&1;
                 do {
                  if ($127) {
                   $154 = ___cxa_find_matching_catch_2()|0;
                   $155 = tempRet0;
                   $exn$slot = $154; //@line 559 "hierarchy.cpp"
                   $ehselector$slot = $155; //@line 559 "hierarchy.cpp"
                  } else {
                   __THREW__ = 0;
                   invoke_viii(172,($agg$tmp$ensured127|0),($123|0),($agg$tmp129|0)); //@line 541 "hierarchy.cpp"
                   $128 = __THREW__; __THREW__ = 0;
                   $129 = $128&1;
                   if ($129) {
                    $156 = ___cxa_find_matching_catch_2()|0;
                    $157 = tempRet0;
                    $exn$slot = $156; //@line 559 "hierarchy.cpp"
                    $ehselector$slot = $157; //@line 559 "hierarchy.cpp"
                    __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp129); //@line 541 "hierarchy.cpp"
                    break;
                   }
                   __ZN5HNodeD2Ev($agg$tmp$ensured127); //@line 541 "hierarchy.cpp"
                   __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp129); //@line 541 "hierarchy.cpp"
                   __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp130); //@line 541 "hierarchy.cpp"
                   $root139 = ((($this1)) + 28|0); //@line 546 "hierarchy.cpp"
                   $130 = HEAP32[$root139>>2]|0; //@line 546 "hierarchy.cpp"
                   __THREW__ = 0;
                   invoke_vii(168,($agg$tmp141|0),($paddingFunction|0)); //@line 546 "hierarchy.cpp"
                   $131 = __THREW__; __THREW__ = 0;
                   $132 = $131&1;
                   if ($132) {
                    label = 56;
                    break L45;
                   }
                   $root143 = ((($this1)) + 28|0); //@line 546 "hierarchy.cpp"
                   $133 = HEAP32[$root143>>2]|0; //@line 546 "hierarchy.cpp"
                   $r = ((($133)) + 16|0); //@line 546 "hierarchy.cpp"
                   $134 = +HEAPF64[$r>>3]; //@line 546 "hierarchy.cpp"
                   $135 = +HEAPF64[$this1>>3]; //@line 546 "hierarchy.cpp"
                   $dy145 = ((($this1)) + 8|0); //@line 546 "hierarchy.cpp"
                   $136 = +HEAPF64[$dy145>>3]; //@line 546 "hierarchy.cpp"
                   $call146 = (+_fmin($135,$136)); //@line 546 "hierarchy.cpp"
                   $div147 = $134 / $call146; //@line 546 "hierarchy.cpp"
                   __THREW__ = 0;
                   invoke_viid(171,($agg$tmp140|0),($agg$tmp141|0),(+$div147)); //@line 546 "hierarchy.cpp"
                   $137 = __THREW__; __THREW__ = 0;
                   $138 = $137&1;
                   do {
                    if ($138) {
                     $158 = ___cxa_find_matching_catch_2()|0;
                     $159 = tempRet0;
                     $exn$slot = $158; //@line 559 "hierarchy.cpp"
                     $ehselector$slot = $159; //@line 559 "hierarchy.cpp"
                    } else {
                     __THREW__ = 0;
                     invoke_viii(172,($agg$tmp$ensured138|0),($130|0),($agg$tmp140|0)); //@line 546 "hierarchy.cpp"
                     $139 = __THREW__; __THREW__ = 0;
                     $140 = $139&1;
                     if ($140) {
                      $160 = ___cxa_find_matching_catch_2()|0;
                      $161 = tempRet0;
                      $exn$slot = $160; //@line 559 "hierarchy.cpp"
                      $ehselector$slot = $161; //@line 559 "hierarchy.cpp"
                      __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp140); //@line 546 "hierarchy.cpp"
                      break;
                     }
                     __ZN5HNodeD2Ev($agg$tmp$ensured138); //@line 546 "hierarchy.cpp"
                     __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp140); //@line 546 "hierarchy.cpp"
                     __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp141); //@line 546 "hierarchy.cpp"
                     $root155 = ((($this1)) + 28|0); //@line 551 "hierarchy.cpp"
                     $141 = HEAP32[$root155>>2]|0; //@line 551 "hierarchy.cpp"
                     $142 = +HEAPF64[$this1>>3]; //@line 551 "hierarchy.cpp"
                     $dy158 = ((($this1)) + 8|0); //@line 551 "hierarchy.cpp"
                     $143 = +HEAPF64[$dy158>>3]; //@line 551 "hierarchy.cpp"
                     $call159 = (+_fmin($142,$143)); //@line 551 "hierarchy.cpp"
                     $root160 = ((($this1)) + 28|0); //@line 551 "hierarchy.cpp"
                     $144 = HEAP32[$root160>>2]|0; //@line 551 "hierarchy.cpp"
                     $r161 = ((($144)) + 16|0); //@line 551 "hierarchy.cpp"
                     $145 = +HEAPF64[$r161>>3]; //@line 551 "hierarchy.cpp"
                     $mul = 2.0 * $145; //@line 551 "hierarchy.cpp"
                     $div162 = $call159 / $mul; //@line 551 "hierarchy.cpp"
                     __THREW__ = 0;
                     invoke_vid(173,($agg$tmp156|0),(+$div162)); //@line 551 "hierarchy.cpp"
                     $146 = __THREW__; __THREW__ = 0;
                     $147 = $146&1;
                     if ($147) {
                      label = 56;
                      break L45;
                     }
                     __THREW__ = 0;
                     invoke_viii(170,($agg$tmp$ensured154|0),($141|0),($agg$tmp156|0)); //@line 551 "hierarchy.cpp"
                     $148 = __THREW__; __THREW__ = 0;
                     $149 = $148&1;
                     if ($149) {
                      $162 = ___cxa_find_matching_catch_2()|0;
                      $163 = tempRet0;
                      $exn$slot = $162; //@line 559 "hierarchy.cpp"
                      $ehselector$slot = $163; //@line 559 "hierarchy.cpp"
                      __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp156); //@line 551 "hierarchy.cpp"
                      break L45;
                     }
                     __ZN5HNodeD2Ev($agg$tmp$ensured154); //@line 551 "hierarchy.cpp"
                     __ZNSt3__28functionIFvP5HNodeEED2Ev($agg$tmp156); //@line 551 "hierarchy.cpp"
                     $root168 = ((($this1)) + 28|0); //@line 558 "hierarchy.cpp"
                     $164 = HEAP32[$root168>>2]|0; //@line 558 "hierarchy.cpp"
                     __ZNSt3__28functionIFdP5HNodeEED2Ev($zeroFn); //@line 559 "hierarchy.cpp"
                     __ZNSt3__28functionIFdP5HNodeEED2Ev($paddingFunction); //@line 559 "hierarchy.cpp"
                     __ZNSt3__28functionIFdP5HNodeEED2Ev($radiusFunction); //@line 559 "hierarchy.cpp"
                     STACKTOP = sp;return ($164|0); //@line 559 "hierarchy.cpp"
                    }
                   } while(0);
                   __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp141); //@line 546 "hierarchy.cpp"
                   break L45;
                  }
                 } while(0);
                 __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp130); //@line 541 "hierarchy.cpp"
                 break L45;
                }
               } while(0);
               __ZNSt3__28functionIFdP5HNodeEED2Ev($agg$tmp119); //@line 536 "hierarchy.cpp"
               break L45;
              }
             } while(0);
             if ((label|0) == 58) {
              $101 = ___cxa_find_matching_catch_2()|0;
              $102 = tempRet0;
              $exn$slot = $101; //@line 559 "hierarchy.cpp"
              $ehselector$slot = $102; //@line 559 "hierarchy.cpp"
             }
             __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp58); //@line 528 "hierarchy.cpp"
            }
           }
           if ((label|0) == 57) {
            $99 = ___cxa_find_matching_catch_2()|0;
            $100 = tempRet0;
            $exn$slot = $99; //@line 559 "hierarchy.cpp"
            $ehselector$slot = $100; //@line 559 "hierarchy.cpp"
           }
           __ZN10emscripten3valD2Ev($agg$tmp54); //@line 528 "hierarchy.cpp"
          }
         } while(0);
         if ((label|0) == 56) {
          $97 = ___cxa_find_matching_catch_2()|0;
          $98 = tempRet0;
          $exn$slot = $97; //@line 559 "hierarchy.cpp"
          $ehselector$slot = $98; //@line 559 "hierarchy.cpp"
         }
         __ZNSt3__28functionIFdP5HNodeEED2Ev($zeroFn); //@line 559 "hierarchy.cpp"
        }
        __ZNSt3__28functionIFdP5HNodeEED2Ev($paddingFunction); //@line 559 "hierarchy.cpp"
       }
       __ZNSt3__28functionIFdP5HNodeEED2Ev($radiusFunction); //@line 559 "hierarchy.cpp"
       $exn = $exn$slot; //@line 497 "hierarchy.cpp"
       $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
       ___resumeException($exn|0);
       // unreachable;
      }
     }
    } while(0);
    if ((label|0) == 25) {
     $38 = ___cxa_find_matching_catch_2()|0;
     $39 = tempRet0;
     $exn$slot = $38; //@line 559 "hierarchy.cpp"
     $ehselector$slot = $39; //@line 559 "hierarchy.cpp"
    }
    __ZN10emscripten3valD2Ev($agg$tmp25); //@line 503 "hierarchy.cpp"
    $exn = $exn$slot; //@line 497 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 10) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  $exn$slot = $16; //@line 559 "hierarchy.cpp"
  $ehselector$slot = $17; //@line 559 "hierarchy.cpp"
 }
 __ZN10emscripten3valD2Ev($agg$tmp); //@line 497 "hierarchy.cpp"
 $exn = $exn$slot; //@line 497 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 497 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__213__vector_baseIP6HBasisNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0;
 var $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__end_$i$i = 0, $__end_2$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i5$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp1$i$i$i = 0, $cmp = 0, $cmp$i$i = 0;
 var $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i14 = 0, $this$addr$i$i4 = 0, $this$addr$i$i7 = 0, $this$addr$i15 = 0, $this$addr$i8 = 0;
 var $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i11 = 0, $this1$i$i$i18 = 0, $this1$i$i10 = 0, $this1$i$i17 = 0, $this1$i16 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $agg$tmp1$i$i$i = sp;
 $agg$tmp$i$i$i = sp + 116|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=(0|0); //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $1 = HEAP32[$this1$i>>2]|0; //@line 369 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $1;
 $this1$i$i = $this$addr$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $3 = HEAP32[$__end_$i$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i = ($2|0)!=($3|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i)) {
   break;
  }
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i = $__end_cap_$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $this$addr$i$i$i$i$i = $this1$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $__end_2$i$i = ((($this1$i$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $4 = HEAP32[$__end_2$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i = ((($4)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i>>2] = $incdec$ptr$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i = $incdec$ptr$i$i;
  $5 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i = $this1$i$i$i$i$i;
  $__p$addr$i5$i$i = $5;
  $6 = $__a$addr$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $__a$addr$i$i$i$i = $6;
  $__p$addr$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i = $8;
  $__p$addr$i$i$i$i$i = $9;
 }
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i6 = $this1$i$i10;
 $this1$i$i$i11 = $this$addr$i$i$i6;
 $10 = HEAP32[$this1>>2]|0; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $11 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i16>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $11; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i11;
 $__p$addr$i = $10;
 $__n$addr$i = $sub$ptr$div$i;
 $13 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $14 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i4 = $13;
 $__p$addr$i$i = $14;
 $$addr$i$i = $15;
 $16 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $16;
 $17 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($17); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__28functionIFdP5HNodeEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__f_ = 0, $__f_2 = 0, $__f_5 = 0, $cmp = 0, $this$addr = 0, $this1 = 0, $tobool = 0, $vtable = 0, $vtable6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $0 = HEAP32[$__f_>>2]|0; //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($0|0)==($this1|0); //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_2 = ((($this1)) + 16|0);
 $1 = HEAP32[$__f_2>>2]|0;
 if ($cmp) {
  $vtable = HEAP32[$1>>2]|0; //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $2 = ((($vtable)) + 16|0); //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $3 = HEAP32[$2>>2]|0; //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  FUNCTION_TABLE_vi[$3 & 255]($1); //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $tobool = ($1|0)!=(0|0); //@line 1847 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $__f_5 = ((($this1)) + 16|0); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $4 = HEAP32[$__f_5>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $vtable6 = HEAP32[$4>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $5 = ((($vtable6)) + 20|0); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $6 = HEAP32[$5>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 FUNCTION_TABLE_vi[$6 & 255]($4); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZN6HBasisC2Ev($this) {
 $this = $this|0;
 var $r = 0, $this$addr = 0, $this1 = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 HEAPF64[$this1>>3] = 0.0; //@line 17 "hierarchy.cpp"
 $y = ((($this1)) + 8|0); //@line 18 "hierarchy.cpp"
 HEAPF64[$y>>3] = 0.0; //@line 18 "hierarchy.cpp"
 $r = ((($this1)) + 16|0); //@line 19 "hierarchy.cpp"
 HEAPF64[$r>>3] = 0.0; //@line 19 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 13 "hierarchy.cpp"
}
function __ZNK10emscripten3valixIA6_cEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPKc($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3val2asIdJEEET_DpT0_($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $call = 0, $call2 = 0.0, $call3 = 0.0, $destructors = 0, $dr = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $result = 0.0, $sel = 0, $targetType = 0, $this$addr = 0;
 var $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $targetType = sp + 28|0;
 $destructors = sp + 20|0;
 $dr = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdEE8getTypesEv($targetType)|0); //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$call>>2]|0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (+__emval_as(($0|0),($1|0),($destructors|0))); //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $result = $call2; //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$destructors>>2]|0; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal17DestructorsRunnerC2EPNS0_15_EM_DESTRUCTORSE($dr,$2); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $result; //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call3 = (+invoke_dd(176,(+$3))); //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $exn$slot = $6; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $7; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $exn = $exn$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $sel = $ehselector$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  STACKTOP = sp;return (+$call3); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 return +(0.0);
}
function __ZNK10emscripten3valixIA9_cEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPKc($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3val6typeofEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $call = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__emval_typeof(($0|0))|0); //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPNS_8internal7_EM_VALE($agg$result,$call); //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNK10emscripten3val2asINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEJEEET_DpT0_($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $call = 0, $call2 = 0.0, $destructors = 0, $dr = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $result = 0.0, $sel = 0, $targetType = 0, $this$addr = 0, $this1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $targetType = sp + 28|0;
 $destructors = sp + 20|0;
 $dr = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($targetType)|0); //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$call>>2]|0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (+__emval_as(($0|0),($1|0),($destructors|0))); //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $result = $call2; //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$destructors>>2]|0; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal17DestructorsRunnerC2EPNS0_15_EM_DESTRUCTORSE($dr,$2); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $result; //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 invoke_vid(177,($agg$result|0),(+$3)); //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $exn$slot = $6; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $7; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $exn = $exn$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $sel = $ehselector$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  STACKTOP = sp;return; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
}
function __ZN10emscripten14vecFromJSArrayINS_3valEEENSt3__26vectorIT_NS2_9allocatorIS4_EEEES1_($agg$result,$v) {
 $agg$result = $agg$result|0;
 $v = $v|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__annotator$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_3$i = 0, $__end_6$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i19 = 0, $__end_cap_$i12$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0;
 var $__p$addr$i$i$i$i = 0, $__p$addr$i16$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i11 = 0, $__t$addr$i$i$i$i12 = 0, $__t$addr$i18$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__x$addr$i = 0, $agg$tmp$i$i = 0, $agg$tmp1$i$i = 0, $call = 0, $cmp = 0, $cmp$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0;
 var $i = 0, $inc = 0, $incdec$ptr$i = 0, $l = 0, $nrvo = 0, $nrvo$val = 0, $nrvo$val$pre_trunc = 0, $ref$tmp = 0, $ref$tmp1 = 0, $ref$tmp2 = 0, $sel = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i13 = 0, $this$addr$i$i$i14 = 0, $this$addr$i$i$i15$i = 0, $this$addr$i$i$i8$i = 0;
 var $this$addr$i$i15 = 0, $this$addr$i$i9$i = 0, $this$addr$i10$i = 0, $this$addr$i16 = 0, $this$addr$i3$i$i = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i21 = 0, $this1$i$i$i14$i = 0, $this1$i$i$i20 = 0, $this1$i$i13$i = 0, $this1$i$i18 = 0, $this1$i11$i = 0, $this1$i17 = 0, $this1$i4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 166|0;
 $__annotator$i = sp + 165|0;
 $__t1$addr$i$i$i$i = sp + 56|0;
 $__t1$addr$i$i$i = sp + 44|0;
 $ref$tmp = sp + 24|0;
 $nrvo = sp + 164|0;
 $i = sp + 12|0;
 $ref$tmp1 = sp + 8|0;
 $ref$tmp2 = sp + 4|0;
 __ZNK10emscripten3valixIA7_cEES0_RKT_($ref$tmp,$v,2329); //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_ii(178,($ref$tmp|0))|0); //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $35 = ___cxa_find_matching_catch_2()|0;
  $36 = tempRet0;
  $exn$slot = $35; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $36; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten3valD2Ev($ref$tmp); //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $exn = $exn$slot; //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $sel = $ehselector$slot; //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  ___resumeException($exn|0);
  // unreachable;
 }
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $l = $call; //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $$expand_i1_val = 0; //@line 500 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP8[$nrvo>>0] = $$expand_i1_val; //@line 500 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $this$addr$i = $agg$result;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $2 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $3;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $4 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $5; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$i>>2] = 0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 while(1) {
  $6 = HEAP32[$i>>2]|0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $7 = $l; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $cmp = ($6>>>0)<($7>>>0); //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  if (!($cmp)) {
   label = 15;
   break;
  }
  __THREW__ = 0;
  invoke_viii(179,($ref$tmp2|0),($v|0),($i|0)); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if ($9) {
   label = 11;
   break;
  }
  __THREW__ = 0;
  invoke_vii(180,($ref$tmp1|0),($ref$tmp2|0)); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 12;
   break;
  }
  $this$addr$i16 = $agg$result;
  $__x$addr$i = $ref$tmp1;
  $this1$i17 = $this$addr$i16;
  $__end_$i = ((($this1$i17)) + 4|0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $12 = HEAP32[$__end_$i>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i15 = $this1$i17;
  $this1$i$i18 = $this$addr$i$i15;
  $__end_cap_$i$i19 = ((($this1$i$i18)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i14 = $__end_cap_$i$i19;
  $this1$i$i$i20 = $this$addr$i$i$i14;
  $this$addr$i$i$i$i13 = $this1$i$i$i20;
  $this1$i$i$i$i21 = $this$addr$i$i$i$i13;
  $13 = HEAP32[$this1$i$i$i$i21>>2]|0; //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i = ($12>>>0)<($13>>>0); //@line 1604 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if ($cmp$i) {
   __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i,$this1$i17,1); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $this$addr$i10$i = $this1$i17;
   $this1$i11$i = $this$addr$i10$i;
   $__end_cap_$i12$i = ((($this1$i11$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $this$addr$i$i9$i = $__end_cap_$i12$i;
   $this1$i$i13$i = $this$addr$i$i9$i;
   $this$addr$i$i$i8$i = $this1$i$i13$i;
   $this1$i$i$i14$i = $this$addr$i$i$i8$i;
   $__end_3$i = ((($this1$i17)) + 4|0); //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $14 = HEAP32[$__end_3$i>>2]|0; //@line 1608 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__p$addr$i$i = $14;
   $15 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $16 = $__x$addr$i; //@line 1609 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__t$addr$i18$i = $16;
   $17 = $__t$addr$i18$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $__a$addr$i$i = $this1$i$i$i14$i;
   $__p$addr$i16$i = $15;
   $__args$addr$i$i = $17;
   $18 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $19 = $__p$addr$i16$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $20 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i = $20;
   $21 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
   $__a$addr$i$i$i = $18;
   $__p$addr$i$i$i = $19;
   $__args$addr$i$i$i = $21;
   $22 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $23 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $24 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i12 = $24;
   $25 = $__t$addr$i$i$i$i12; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $this$addr$i$i$i15$i = $22;
   $__p$addr$i$i$i$i = $23;
   $__args$addr$i$i$i$i = $25;
   $26 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $27 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i$i11 = $27;
   $28 = $__t$addr$i$i$i$i$i11; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   __ZN10emscripten3valC2EOS0_($26,$28); //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i); //@line 1610 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__end_6$i = ((($this1$i17)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $29 = HEAP32[$__end_6$i>>2]|0; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $incdec$ptr$i = ((($29)) + 4|0); //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   HEAP32[$__end_6$i>>2] = $incdec$ptr$i; //@line 1611 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  } else {
   $30 = $__x$addr$i; //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__t$addr$i$i = $30;
   $31 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   __THREW__ = 0;
   invoke_vii(181,($this1$i17|0),($31|0)); //@line 1614 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    label = 13;
    break;
   }
  }
  __ZN10emscripten3valD2Ev($ref$tmp1); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $34 = HEAP32[$i>>2]|0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $inc = (($34) + 1)|0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  HEAP32[$i>>2] = $inc; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 if ((label|0) == 11) {
  $37 = ___cxa_find_matching_catch_2()|0;
  $38 = tempRet0;
  $exn$slot = $37; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $38; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 else if ((label|0) == 12) {
  $39 = ___cxa_find_matching_catch_2()|0;
  $40 = tempRet0;
  $exn$slot = $39; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $40; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  label = 14;
 }
 else if ((label|0) == 13) {
  $41 = ___cxa_find_matching_catch_2()|0;
  $42 = tempRet0;
  $exn$slot = $41; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $42; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten3valD2Ev($ref$tmp1); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  label = 14;
 }
 else if ((label|0) == 15) {
  $$expand_i1_val2 = 1; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  HEAP8[$nrvo>>0] = $$expand_i1_val2; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $nrvo$val$pre_trunc = HEAP8[$nrvo>>0]|0; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $nrvo$val = $nrvo$val$pre_trunc&1; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  if ($nrvo$val) {
   STACKTOP = sp;return; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
  __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEED2Ev($agg$result); //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  STACKTOP = sp;return; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 if ((label|0) == 14) {
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 502 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEED2Ev($agg$result); //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 498 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZN5HNodeC2EN10emscripten3valEPS_($this,$node,$parent_) {
 $this = $this|0;
 $node = $node|0;
 $parent_ = $parent_|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $agg$tmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $parent = 0, $parent_$addr = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp = sp + 8|0;
 $this$addr = $this;
 $parent_$addr = $parent_;
 $this1 = $this$addr;
 __ZN10emscripten3valC2ERKS0_($agg$tmp,$node); //@line 39 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(116,($this1|0),($agg$tmp|0)); //@line 39 "hierarchy.cpp"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  $exn$slot = $3; //@line 42 "hierarchy.cpp"
  $ehselector$slot = $4; //@line 42 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($agg$tmp); //@line 39 "hierarchy.cpp"
  $exn = $exn$slot; //@line 39 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 39 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten3valD2Ev($agg$tmp); //@line 39 "hierarchy.cpp"
  $2 = $parent_$addr; //@line 41 "hierarchy.cpp"
  $parent = ((($this1)) + 44|0); //@line 41 "hierarchy.cpp"
  HEAP32[$parent>>2] = $2; //@line 41 "hierarchy.cpp"
  STACKTOP = sp;return; //@line 42 "hierarchy.cpp"
 }
}
function __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__213__vector_baseIN10emscripten3valENS_9allocatorIS2_EEED2Ev($this1); //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__213__vector_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 458 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN10emscripten3valC2EPKc($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $call = 0, $this$addr = 0, $this1 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $v$addr = $v;
 $this1 = $this$addr;
 $0 = $v$addr; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__emval_new_cstring(($0|0))|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $call; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten3valC2EPNS_8internal7_EM_VALE($this,$handle) {
 $this = $this|0;
 $handle = $handle|0;
 var $0 = 0, $handle$addr = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $handle$addr = $handle;
 $this1 = $this$addr;
 $0 = $handle$addr; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $0; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal17DestructorsRunnerC2EPNS0_15_EM_DESTRUCTORSE($this,$d) {
 $this = $this|0;
 $d = $d|0;
 var $0 = 0, $d$addr = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $d$addr = $d;
 $this1 = $this$addr;
 $0 = $d$addr; //@line 122 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $0; //@line 122 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 123 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal19fromGenericWireTypeIdEET_d($g) {
 $g = +$g;
 var $0 = 0.0, $1 = 0.0, $call = 0.0, $call1 = 0.0, $g$addr = 0.0, $wt = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $g$addr = $g;
 $0 = $g$addr; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (+__ZN10emscripten8internal24GenericWireTypeConverterIdE4fromEd($0)); //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $wt = $call; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $wt; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call1 = (+__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($1)); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return (+$call1); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal17DestructorsRunnerD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 invoke_vi(182,($0|0)); //@line 125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_3(0|0)|0;
  $4 = tempRet0;
  ___clang_call_terminate($3); //@line 125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  // unreachable; //@line 125 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 } else {
  STACKTOP = sp;return; //@line 126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (888|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal24GenericWireTypeConverterIdE4fromEd($wt) {
 $wt = +$wt;
 var $0 = 0.0, $wt$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return (+$0); //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($v) {
 $v = +$v;
 var $0 = 0.0, $v$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return (+$0); //@line 241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNSt3__211char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $__s$addr = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__s$addr = $__s;
 $0 = $__s$addr; //@line 647 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $call = (_strlen($0)|0); //@line 647 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 STACKTOP = sp;return ($call|0); //@line 647 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19fromGenericWireTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_d($agg$result,$g) {
 $agg$result = $agg$result|0;
 $g = +$g;
 var $0 = 0.0, $1 = 0, $call = 0, $g$addr = 0.0, $wt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $g$addr = $g;
 $0 = $g$addr; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZN10emscripten8internal24GenericWireTypeConverterIPNS0_11BindingTypeINSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEUt_EE4fromEd($0)|0); //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $wt = $call; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $wt; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($agg$result,$1); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (892|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal24GenericWireTypeConverterIPNS0_11BindingTypeINSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEUt_EE4fromEd($wt) {
 $wt = +$wt;
 var $0 = 0.0, $1 = 0, $conv = 0, $wt$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $conv = (~~(($0))>>>0); //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $conv; //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return ($1|0); //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($agg$result,$v) {
 $agg$result = $agg$result|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__n$addr$i = 0, $__s$addr$i = 0, $data = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $data = ((($0)) + 4|0); //@line 272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $1 = $v$addr; //@line 272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $2 = HEAP32[$1>>2]|0; //@line 272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $this$addr$i = $agg$result;
 $__s$addr$i = $data;
 $__n$addr$i = $2;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__s$addr$i; //@line 2086 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $4 = $__n$addr$i; //@line 2086 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this1$i,$3,$4); //@line 2086 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 STACKTOP = sp;return; //@line 272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten3valixIA7_cEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPKc($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3val2asIjJEEET_DpT0_($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $call = 0, $call2 = 0.0, $call3 = 0, $destructors = 0, $dr = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $result = 0.0, $sel = 0, $targetType = 0, $this$addr = 0;
 var $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $targetType = sp + 28|0;
 $destructors = sp + 20|0;
 $dr = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjEE8getTypesEv($targetType)|0); //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$call>>2]|0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (+__emval_as(($0|0),($1|0),($destructors|0))); //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $result = $call2; //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$destructors>>2]|0; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal17DestructorsRunnerC2EPNS0_15_EM_DESTRUCTORSE($dr,$2); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $result; //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call3 = (invoke_id(183,(+$3))|0); //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $exn$slot = $6; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $7; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $exn = $exn$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $sel = $ehselector$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  STACKTOP = sp;return ($call3|0); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
 return (0)|0;
}
function __ZNK10emscripten3valixIjEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2IRKjEEOT_($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3val2asIS0_JEEET_DpT0_($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $call = 0, $call2 = 0.0, $destructors = 0, $dr = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $result = 0.0, $sel = 0, $targetType = 0, $this$addr = 0, $this1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $targetType = sp + 28|0;
 $destructors = sp + 20|0;
 $dr = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valEEE8getTypesEv($targetType)|0); //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$call>>2]|0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (+__emval_as(($0|0),($1|0),($destructors|0))); //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $result = $call2; //@line 430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$destructors>>2]|0; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal17DestructorsRunnerC2EPNS0_15_EM_DESTRUCTORSE($dr,$2); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $result; //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 invoke_vid(184,($agg$result|0),(+$3)); //@line 435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $exn$slot = $6; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $ehselector$slot = $7; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $exn = $exn$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $sel = $ehselector$slot; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten8internal17DestructorsRunnerD2Ev($dr); //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  STACKTOP = sp;return; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 }
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19fromGenericWireTypeIjEET_d($g) {
 $g = +$g;
 var $0 = 0.0, $1 = 0, $call = 0, $call1 = 0, $g$addr = 0.0, $wt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $g$addr = $g;
 $0 = $g$addr; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZN10emscripten8internal24GenericWireTypeConverterIjE4fromEd($0)|0); //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $wt = $call; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $wt; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call1 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($1)|0); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return ($call1|0); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (896|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal24GenericWireTypeConverterIjE4fromEd($wt) {
 $wt = +$wt;
 var $0 = 0.0, $conv = 0, $wt$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $conv = (~~(($0))>>>0); //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return ($conv|0); //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($v) {
 $v = $v|0;
 var $0 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 237 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 237 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $$addr = 0, $__n$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $__n$addr = $__n;
 STACKTOP = sp;return; //@line 880 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 881 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i27 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0, $__end_$i20 = 0;
 var $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i$i = 0, $__ms$i = 0, $__new_size$addr$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i28 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i25 = 0, $sub$ptr$lhs$cast$i = 0;
 var $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i22 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i23 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i24 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i13 = 0, $this$addr$i10 = 0;
 var $this$addr$i14 = 0, $this$addr$i18 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i17 = 0, $this1$i$i16 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 201|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 200|0;
 $__new_size$addr$i = sp + 80|0;
 $ref$tmp$i = sp + 68|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $__end_$i = ((($this1$i11)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i11>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + 1)|0; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i15 = $this$addr$i14;
 $call$i = (__ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE8max_sizeEv($this1$i15)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($2>>>0)>($3>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i15); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i13 = $this1$i15;
 $this1$i$i16 = $this$addr$i$i13;
 $this$addr$i$i$i12 = $this1$i$i16;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $this$addr$i$i$i$i = $this1$i$i$i17;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i$i17>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($7>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($6>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $8 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $8; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $9 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $9<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $10 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $11 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $10;
  $__b$addr$i$i$i = $11;
  $12 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $13 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i;
  $__x$addr$i$i$i$i = $12;
  $__y$addr$i$i$i$i = $13;
  $14 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $15 = HEAP32[$14>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $16 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $17 = HEAP32[$16>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($15>>>0)<($17>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $18 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $19 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $18 : $19; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $20 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $20; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $21 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i20 = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__end_$i20>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i22 = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i23 = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i24 = (($sub$ptr$lhs$cast$i22) - ($sub$ptr$rhs$cast$i23))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i25 = (($sub$ptr$sub$i24|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__a; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIN10emscripten3valERNS_9allocatorIS2_EEEC2EjjS5_($__v,$21,$sub$ptr$div$i25,$24); //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = $__a; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($__v)) + 8|0); //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = HEAP32[$__end_>>2]|0; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i = $26;
 $27 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $28 = $__x$addr; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__t$addr$i = $28;
 $29 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $25;
 $__p$addr$i28 = $27;
 $__args$addr$i = $29;
 $30 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $31 = $__p$addr$i28; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $32 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $32;
 $33 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i27 = $30;
 $__p$addr$i$i = $31;
 $__args$addr$i$i = $33;
 $34 = $__a$addr$i$i27; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $35 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $36 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $36;
 $37 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i26 = $34;
 $__p$addr$i$i$i = $35;
 $__args$addr$i$i$i = $37;
 $38 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $39 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $39;
 $40 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten3valC2EOS0_($38,$40); //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_7 = ((($__v)) + 8|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $41 = HEAP32[$__end_7>>2]|0; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $incdec$ptr = ((($41)) + 4|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_7>>2] = $incdec$ptr; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(185,($this1|0),($__v|0)); //@line 1577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $42 = __THREW__; __THREW__ = 0;
 $43 = $42&1;
 if ($43) {
  $44 = ___cxa_find_matching_catch_2()|0;
  $45 = tempRet0;
  $exn$slot = $44; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $45; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIN10emscripten3valERNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__214__split_bufferIN10emscripten3valERNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZN10emscripten3valC2EOS0_($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $this$addr = 0, $this1 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $v$addr = $v;
 $this1 = $this$addr;
 $0 = $v$addr; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$0>>2]|0; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $1; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = $v$addr; //@line 335 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$2>>2] = 0; //@line 335 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 336 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNSt3__214__split_bufferIN10emscripten3valERNS_9allocatorIS2_EEEC2EjjS5_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a$addr = 0, $__a$addr$i = 0, $__begin_ = 0, $__cap$addr = 0, $__end_ = 0, $__end_cap_ = 0, $__end_cap_$i = 0, $__end_cap_$i19 = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__second_$i$i = 0, $__second_$i$i$i = 0, $__size$addr$i$i$i = 0, $__start$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t1$addr$i = 0;
 var $__t1$addr$i$i = 0, $__t2$addr$i = 0, $__t2$addr$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $cond = 0, $exception$i$i = 0, $mul$i$i = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i15 = 0, $this$addr$i$i12 = 0, $this$addr$i$i16 = 0;
 var $this$addr$i$i7 = 0, $this$addr$i17 = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i21 = 0, $this1$i$i10 = 0, $this1$i$i13 = 0, $this1$i$i20 = 0, $this1$i18 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i = sp + 36|0;
 $__t1$addr$i = sp + 20|0;
 $this$addr = $this;
 $__cap$addr = $__cap;
 $__start$addr = $__start;
 $__a$addr = $__a;
 $this1 = $this$addr;
 $__end_cap_ = ((($this1)) + 12|0); //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = $__a$addr; //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $__end_cap_;
 HEAP32[$__t1$addr$i>>2] = 0;
 $__t2$addr$i = $0;
 $this1$i = $this$addr$i;
 $__t$addr$i$i = $__t1$addr$i;
 $1 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = HEAP32[$1>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__t2$addr$i; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i = $3;
 $4 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i = $this1$i;
 HEAP32[$__t1$addr$i$i>>2] = $2;
 $__t2$addr$i$i = $4;
 $this1$i$i = $this$addr$i$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $5 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = HEAP32[$5>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i>>2] = $6; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i = ((($this1$i$i)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__t2$addr$i$i; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i = $7;
 $8 = $__t$addr$i3$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__second_$i$i>>2] = $8; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($9|0)!=(0); //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $this$addr$i17 = $this1;
   $this1$i18 = $this$addr$i17;
   $__end_cap_$i19 = ((($this1$i18)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i16 = $__end_cap_$i19;
   $this1$i$i20 = $this$addr$i$i16;
   $this$addr$i$i$i15 = $this1$i$i20;
   $this1$i$i$i21 = $this$addr$i$i$i15;
   $__second_$i$i$i = ((($this1$i$i$i21)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $10 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i = $ref$i$i$i;
   $__n$addr$i = $10;
   $11 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $12 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i12 = $11;
   $__n$addr$i$i = $12;
   $$addr$i$i = 0;
   $this1$i$i13 = $this$addr$i$i12;
   $13 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i11 = $this1$i$i13;
   $cmp$i$i = ($13>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   } else {
    $14 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $mul$i$i = $14<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__size$addr$i$i$i = $mul$i$i;
    $15 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $call$i$i$i = (__Znwj($15)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $cond = $call$i$i$i;
    break;
   }
  } else {
   $cond = 0;
  }
 } while(0);
 HEAP32[$this1>>2] = $cond; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $16 = HEAP32[$this1>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $17 = $__start$addr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr = (($16) + ($17<<2)|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_ = ((($this1)) + 8|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_ = ((($this1)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $18 = HEAP32[$this1>>2]|0; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $19 = $__cap$addr; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr5 = (($18) + ($19<<2)|0); //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i = $this1$i$i10;
 $this1$i$i$i = $this$addr$i$i$i;
 HEAP32[$this1$i$i$i>>2] = $add$ptr5; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__begin1$addr$i = 0, $__begin_2 = 0, $__begin_4 = 0, $__begin_9 = 0, $__end1$addr$i = 0, $__end2$addr$i = 0, $__end_ = 0, $__end_$i = 0, $__end_5 = 0, $__end_6 = 0, $__end_cap_$i = 0;
 var $__end_cap_$i25 = 0, $__end_cap_$i32 = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i3$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i17 = 0, $__t$addr$i$i38 = 0, $__t$addr$i$i4$i = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i16 = 0, $__t$addr$i3$i37 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i15 = 0, $__t$addr$i4$i36 = 0, $__t$i = 0;
 var $__t$i20 = 0, $__t$i41 = 0, $__v$addr = 0, $__x$addr$i = 0, $__x$addr$i$i = 0, $__x$addr$i18 = 0, $__x$addr$i39 = 0, $__y$addr$i = 0, $__y$addr$i19 = 0, $__y$addr$i40 = 0, $add$ptr$i = 0, $agg$tmp$i$i = 0, $agg$tmp1$i$i = 0, $cmp$i = 0, $incdec$ptr$i = 0, $incdec$ptr2$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0;
 var $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i21 = 0, $this$addr$i$i$i28 = 0, $this$addr$i$i22 = 0, $this$addr$i$i29 = 0, $this$addr$i11 = 0, $this$addr$i13 = 0, $this$addr$i23 = 0, $this$addr$i30 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i27 = 0, $this1$i$i$i34 = 0, $this1$i$i26 = 0;
 var $this1$i$i33 = 0, $this1$i14 = 0, $this1$i24 = 0, $this1$i31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $__t$i41 = sp + 180|0;
 $__t$i20 = sp + 132|0;
 $__t$i = sp + 104|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 204|0;
 $this$addr = $this;
 $__v$addr = $__v;
 $this1 = $this$addr;
 __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE17__annotate_deleteEv($this1); //@line 891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $0 = HEAP32[$this1>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__v$addr; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_2 = ((($2)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i;
 $__begin1$addr$i = $0;
 $__end1$addr$i = $1;
 $__end2$addr$i = $__begin_2;
 while(1) {
  $3 = $__end1$addr$i; //@line 1616 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $4 = $__begin1$addr$i; //@line 1616 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $cmp$i = ($3|0)!=($4|0); //@line 1616 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if (!($cmp$i)) {
   break;
  }
  $5 = $__a$addr$i; //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $6 = $__end2$addr$i; //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = HEAP32[$6>>2]|0; //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $add$ptr$i = ((($7)) + -4|0); //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__p$addr$i$i = $add$ptr$i;
  $8 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__end1$addr$i; //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $incdec$ptr$i = ((($9)) + -4|0); //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end1$addr$i = $incdec$ptr$i; //@line 1618 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__x$addr$i$i = $incdec$ptr$i;
  $10 = $__x$addr$i$i; //@line 264 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/utility"
  $__t$addr$i$i4$i = $10;
  $11 = $__t$addr$i$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $__a$addr$i$i = $5;
  $__p$addr$i3$i = $8;
  $__args$addr$i$i = $11;
  $12 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $13 = $__p$addr$i3$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $14 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $14;
  $15 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $12;
  $__p$addr$i$i$i = $13;
  $__args$addr$i$i$i = $15;
  $16 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $17 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $18 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $18;
  $19 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i$i = $16;
  $__p$addr$i$i$i$i = $17;
  $__args$addr$i$i$i$i = $19;
  $20 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $21 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i$i = $21;
  $22 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  __ZN10emscripten3valC2ERKS0_($20,$22); //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $23 = $__end2$addr$i; //@line 1619 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $24 = HEAP32[$23>>2]|0; //@line 1619 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $incdec$ptr2$i = ((($24)) + -4|0); //@line 1619 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$23>>2] = $incdec$ptr2$i; //@line 1619 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $25 = $__v$addr; //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_4 = ((($25)) + 4|0); //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i = $this1;
 $__y$addr$i = $__begin_4;
 $26 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $26;
 $27 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $28 = HEAP32[$27>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i>>2] = $28; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $29 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i = $29;
 $30 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $31 = HEAP32[$30>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $32 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$32>>2] = $31; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $__t$i;
 $33 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $34 = HEAP32[$33>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $35 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$35>>2] = $34; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__end_5 = ((($this1)) + 4|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $36 = $__v$addr; //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_6 = ((($36)) + 8|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i39 = $__end_5;
 $__y$addr$i40 = $__end_6;
 $37 = $__x$addr$i39; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i38 = $37;
 $38 = $__t$addr$i$i38; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $39 = HEAP32[$38>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i41>>2] = $39; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $40 = $__y$addr$i40; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i36 = $40;
 $41 = $__t$addr$i4$i36; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $42 = HEAP32[$41>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $43 = $__x$addr$i39; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$43>>2] = $42; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i37 = $__t$i41;
 $44 = $__t$addr$i3$i37; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $45 = HEAP32[$44>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $46 = $__y$addr$i40; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$46>>2] = $45; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i30 = $this1;
 $this1$i31 = $this$addr$i30;
 $__end_cap_$i32 = ((($this1$i31)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i29 = $__end_cap_$i32;
 $this1$i$i33 = $this$addr$i$i29;
 $this$addr$i$i$i28 = $this1$i$i33;
 $this1$i$i$i34 = $this$addr$i$i$i28;
 $47 = $__v$addr; //@line 895 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i23 = $47;
 $this1$i24 = $this$addr$i23;
 $__end_cap_$i25 = ((($this1$i24)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i22 = $__end_cap_$i25;
 $this1$i$i26 = $this$addr$i$i22;
 $this$addr$i$i$i21 = $this1$i$i26;
 $this1$i$i$i27 = $this$addr$i$i$i21;
 $__x$addr$i18 = $this1$i$i$i34;
 $__y$addr$i19 = $this1$i$i$i27;
 $48 = $__x$addr$i18; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i17 = $48;
 $49 = $__t$addr$i$i17; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $50 = HEAP32[$49>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i20>>2] = $50; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $51 = $__y$addr$i19; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i15 = $51;
 $52 = $__t$addr$i4$i15; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $53 = HEAP32[$52>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $54 = $__x$addr$i18; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$54>>2] = $53; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i16 = $__t$i20;
 $55 = $__t$addr$i3$i16; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $56 = HEAP32[$55>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $57 = $__y$addr$i19; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$57>>2] = $56; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $58 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_9 = ((($58)) + 4|0); //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $59 = HEAP32[$__begin_9>>2]|0; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $60 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$60>>2] = $59; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $__end_$i = ((($this1$i14)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $61 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $62 = HEAP32[$this1$i14>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $61; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $62; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE14__annotate_newEj($this1,$sub$ptr$div$i); //@line 897 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i11 = $this1;
 STACKTOP = sp;return; //@line 899 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__214__split_bufferIN10emscripten3valERNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__new_last$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0;
 var $__second_$i$i$i = 0, $__second_$i$i$i$i$i$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $agg$tmp2$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i10 = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i12 = 0, $this$addr$i$i18 = 0, $this$addr$i$i5 = 0, $this$addr$i13 = 0, $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i17 = 0, $this1$i$i$i16 = 0, $this1$i$i$i9 = 0;
 var $this1$i$i15 = 0, $this1$i$i8 = 0, $this1$i14 = 0, $this1$i7 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i$i$i$i = sp + 8|0;
 $agg$tmp$i$i$i$i = sp + 133|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 132|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $0;
 $this1$i$i = $this$addr$i$i;
 $1 = $__new_last$addr$i$i; //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $__new_last$addr$i$i$i = $1;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i$i; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__end_$i$i$i>>2]|0; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i$i$i = ($2|0)!=($3|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__second_$i$i$i$i$i$i = ((($this1$i$i$i$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $ref$i$i$i$i$i$i = HEAP32[$__second_$i$i$i$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_2$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i$i$i = ((($4)) + -4|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $5 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $5;
  $6 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $6;
  $__p$addr$i$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $8;
  $__p$addr$i$i$i$i$i$i = $9;
  $10 = $__p$addr$i$i$i$i$i$i; //@line 1803 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZN10emscripten3valD2Ev($10); //@line 1803 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $11 = HEAP32[$this1>>2]|0; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $tobool = ($11|0)!=(0|0); //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $__second_$i$i$i = ((($this1$i$i$i9)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = HEAP32[$this1>>2]|0; //@line 343 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $this$addr$i$i12 = $this1$i14;
 $this1$i$i15 = $this$addr$i$i12;
 $__end_cap_$i$i = ((($this1$i$i15)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i11 = $__end_cap_$i$i;
 $this1$i$i$i16 = $this$addr$i$i$i11;
 $this$addr$i$i$i$i10 = $this1$i$i$i16;
 $this1$i$i$i$i17 = $this$addr$i$i$i$i10;
 $13 = HEAP32[$this1$i$i$i$i17>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $14 = HEAP32[$this1$i14>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $13; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $14; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $12;
 $__n$addr$i = $sub$ptr$div$i;
 $15 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $17 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i18 = $15;
 $__p$addr$i$i = $16;
 $$addr$i$i = $17;
 $18 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $18;
 $19 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($19); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i9 = 0, $__a$addr$i11 = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__end_cap_$i = 0;
 var $__x$addr$i$i$i = 0, $__y$addr$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i12 = 0, $agg$tmp1$i = 0, $agg$tmp1$i10 = 0, $cmp$i$i$i = 0, $cond$lvalue$i$i2D = 0, $div = 0, $ref$tmp = 0, $ref$tmp3 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $agg$tmp1$i10 = sp + 8|0;
 $agg$tmp$i12 = sp + 77|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 76|0;
 $ref$tmp = sp + 16|0;
 $ref$tmp3 = sp + 12|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a$addr$i = $this1$i$i$i;
 $0 = $__a$addr$i; //@line 1540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $0;
 $1 = $__a$addr$i$i; //@line 1678 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i6 = $1;
 HEAP32[$ref$tmp>>2] = 1073741823; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div = (4294967295 / 2)&-1; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$ref$tmp3>>2] = $div; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i11 = $ref$tmp;
 $__b$addr$i = $ref$tmp3;
 $2 = $__a$addr$i11; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $3 = $__b$addr$i; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 ;HEAP8[$agg$tmp1$i10>>0]=HEAP8[$agg$tmp$i12>>0]|0;
 $__a$addr$i$i9 = $2;
 $__b$addr$i$i = $3;
 $4 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $5 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $this$addr$i$i$i8 = $agg$tmp1$i10;
 $__x$addr$i$i$i = $4;
 $__y$addr$i$i$i = $5;
 $6 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $7 = HEAP32[$6>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $8 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $9 = HEAP32[$8>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i$i = ($7>>>0)<($9>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $10 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $11 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cond$lvalue$i$i2D = $cmp$i$i$i ? $10 : $11; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $12 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return ($12|0); //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i35 = 0, $__p$addr$i$i = 0, $__p$addr$i$i10 = 0, $__p$addr$i$i16 = 0;
 var $__p$addr$i$i23 = 0, $add$ptr = 0, $add$ptr6 = 0, $add$ptr9 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i43 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i40 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i41 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i42 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0;
 var $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i27 = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i30 = 0, $this$addr$i11 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i24 = 0, $this$addr$i31 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i37 = 0, $this1$i$i$i$i36 = 0;
 var $this1$i$i$i34 = 0, $this1$i$i33 = 0, $this1$i12 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0, $this1$i25 = 0, $this1$i32 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i11 = $this1;
 $this1$i12 = $this$addr$i11;
 $2 = HEAP32[$this1$i12>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i10 = $2;
 $3 = $__p$addr$i$i10; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i31 = $this1;
 $this1$i32 = $this$addr$i31;
 $this$addr$i$i30 = $this1$i32;
 $this1$i$i33 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i33;
 $this1$i$i$i34 = $this$addr$i$i$i29;
 $__end_cap_$i$i$i35 = ((($this1$i$i$i34)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i28 = $__end_cap_$i$i$i35;
 $this1$i$i$i$i36 = $this$addr$i$i$i$i28;
 $this$addr$i$i$i$i$i27 = $this1$i$i$i$i36;
 $this1$i$i$i$i$i37 = $this$addr$i$i$i$i$i27;
 $4 = HEAP32[$this1$i$i$i$i$i37>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i40 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i41 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i42 = (($sub$ptr$lhs$cast$i$i40) - ($sub$ptr$rhs$cast$i$i41))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i43 = (($sub$ptr$sub$i$i42|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i43<<2)|0); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $6 = HEAP32[$this1$i25>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i23 = $6;
 $7 = $__p$addr$i$i23; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $__end_$i = ((($this1$i21)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i21>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $8; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $9; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $10 = HEAP32[$this1$i18>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i16 = $10;
 $11 = $__p$addr$i$i16; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $this$addr$i$i = $this1$i15;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $12 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $13; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr9 = (($11) + ($sub$ptr$div$i$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr9); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 850 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__current_size$addr = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i31 = 0, $__p$addr$i$i = 0, $__p$addr$i$i13 = 0, $__p$addr$i$i19 = 0, $__p$addr$i$i9 = 0;
 var $add$ptr = 0, $add$ptr6 = 0, $add$ptr8 = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i39 = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i36 = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i37 = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i38 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i23 = 0, $this$addr$i$i$i$i24 = 0, $this$addr$i$i$i25 = 0;
 var $this$addr$i$i26 = 0, $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i27 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i33 = 0, $this1$i$i$i$i32 = 0, $this1$i$i$i30 = 0, $this1$i$i29 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0;
 var $this1$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $__current_size$addr = $__current_size;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $2 = HEAP32[$this1$i11>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i9 = $2;
 $3 = $__p$addr$i$i9; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i27 = $this1;
 $this1$i28 = $this$addr$i27;
 $this$addr$i$i26 = $this1$i28;
 $this1$i$i29 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i29;
 $this1$i$i$i30 = $this$addr$i$i$i25;
 $__end_cap_$i$i$i31 = ((($this1$i$i$i30)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i24 = $__end_cap_$i$i$i31;
 $this1$i$i$i$i32 = $this$addr$i$i$i$i24;
 $this$addr$i$i$i$i$i23 = $this1$i$i$i$i32;
 $this1$i$i$i$i$i33 = $this$addr$i$i$i$i$i23;
 $4 = HEAP32[$this1$i$i$i$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i29>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i36 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i37 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i38 = (($sub$ptr$lhs$cast$i$i36) - ($sub$ptr$rhs$cast$i$i37))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i39 = (($sub$ptr$sub$i$i38|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i39<<2)|0); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $6 = HEAP32[$this1$i21>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i19 = $6;
 $7 = $__p$addr$i$i19; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $this$addr$i$i = $this1$i18;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $8 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $8; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $9; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i$i<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $10 = HEAP32[$this1$i15>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i13 = $10;
 $11 = $__p$addr$i$i13; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__current_size$addr; //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr8 = (($11) + ($12<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr8); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $__beg$addr = 0, $__end$addr = 0, $__new_mid$addr = 0, $__old_mid$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__beg$addr = $__beg;
 $__end$addr = $__end;
 $__old_mid$addr = $__old_mid;
 $__new_mid$addr = $__new_mid;
 STACKTOP = sp;return; //@line 839 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN10emscripten3valC2IRKjEEOT_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $__t$addr$i = 0, $argv = 0, $call2 = 0, $call3 = 0, $call4 = 0, $this$addr = 0, $this1 = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $argv = sp;
 $this$addr = $this;
 $value$addr = $value;
 $this1 = $this$addr;
 $0 = $value$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten8internal12WireTypePackIJRKjEEC2ES3_($argv,$1); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (__ZN10emscripten8internal6TypeIDIRKjE3getEv()|0); //@line 322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call3 = (__ZNK10emscripten8internal12WireTypePackIJRKjEEcvPKvEv($argv)|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call4 = (__emval_take_value(($call2|0),($call3|0))|0); //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $call4; //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 324 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal12WireTypePackIJRKjEEC2ES3_($this,$args) {
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $args$addr = 0, $call1$i = 0, $cursor = 0, $cursor$addr$i = 0, $first$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $cursor = sp;
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$cursor>>2] = $this1$i; //@line 221 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = $args$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $cursor$addr$i = $cursor;
 $first$addr$i = $1;
 $2 = $cursor$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $first$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call1$i = (__ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($4)|0); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal20writeGenericWireTypeIjEEvRPNS0_15GenericWireTypeET_($2,$call1$i); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $5 = $cursor$addr$i; //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($5); //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal6TypeIDIRKjE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIRKjE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WireTypePackIJRKjEEcvPKvEv($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 STACKTOP = sp;return ($this1$i|0); //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal20writeGenericWireTypeIjEEvRPNS0_15GenericWireTypeET_($cursor,$wt) {
 $cursor = $cursor|0;
 $wt = $wt|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $cursor$addr = 0, $incdec$ptr = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $cursor$addr = $cursor;
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $cursor$addr; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$1>>2]|0; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$2>>2] = $0; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $cursor$addr; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = HEAP32[$3>>2]|0; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $incdec$ptr = ((($4)) + 8|0); //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$3>>2] = $incdec$ptr; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 237 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $1 = HEAP32[$0>>2]|0; //@line 237 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($1|0); //@line 237 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($0) {
 $0 = $0|0;
 var $$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$addr = $0;
 STACKTOP = sp;return; //@line 210 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11LightTypeIDIRKjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (832|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS_3valEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19fromGenericWireTypeINS_3valEEET_d($agg$result,$g) {
 $agg$result = $agg$result|0;
 $g = +$g;
 var $0 = 0.0, $1 = 0, $call = 0, $g$addr = 0.0, $wt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $g$addr = $g;
 $0 = $g$addr; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call = (__ZN10emscripten8internal24GenericWireTypeConverterIPNS0_7_EM_VALEE4fromEd($0)|0); //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $wt = $call; //@line 152 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $wt; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal11BindingTypeINS_3valEE12fromWireTypeEPNS0_7_EM_VALE($agg$result,$1); //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 153 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS_3valEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (900|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal24GenericWireTypeConverterIPNS0_7_EM_VALEE4fromEd($wt) {
 $wt = +$wt;
 var $0 = 0.0, $1 = 0, $conv = 0, $wt$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $conv = (~~(($0))>>>0); //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $conv; //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return ($1|0); //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeINS_3valEE12fromWireTypeEPNS0_7_EM_VALE($agg$result,$v) {
 $agg$result = $agg$result|0;
 $v = $v|0;
 var $0 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3val14take_ownershipEPNS_8internal7_EM_VALE($agg$result,$0); //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten3val14take_ownershipEPNS_8internal7_EM_VALE($agg$result,$e) {
 $agg$result = $agg$result|0;
 $e = $e|0;
 var $0 = 0, $e$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $e$addr = $e;
 $0 = $e$addr; //@line 304 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPNS_8internal7_EM_VALE($agg$result,$0); //@line 304 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 304 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $$addr = 0, $__n$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $__n$addr = $__n;
 STACKTOP = sp;return; //@line 880 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 881 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i27 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0;
 var $__end_$i20 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i$i = 0, $__ms$i = 0, $__new_size$addr$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i28 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i25 = 0;
 var $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i22 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i23 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i24 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i13 = 0;
 var $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i18 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i17 = 0, $this1$i$i16 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 201|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 200|0;
 $__new_size$addr$i = sp + 80|0;
 $ref$tmp$i = sp + 68|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $__end_$i = ((($this1$i11)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i11>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + 1)|0; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i15 = $this$addr$i14;
 $call$i = (__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this1$i15)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($2>>>0)>($3>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i15); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i13 = $this1$i15;
 $this1$i$i16 = $this$addr$i$i13;
 $this$addr$i$i$i12 = $this1$i$i16;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $this$addr$i$i$i$i = $this1$i$i$i17;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i$i17>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($7>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($6>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $8 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $8; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $9 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $9<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $10 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $11 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $10;
  $__b$addr$i$i$i = $11;
  $12 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $13 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i;
  $__x$addr$i$i$i$i = $12;
  $__y$addr$i$i$i$i = $13;
  $14 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $15 = HEAP32[$14>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $16 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $17 = HEAP32[$16>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($15>>>0)<($17>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $18 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $19 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $18 : $19; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $20 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $20; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $21 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i20 = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__end_$i20>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i22 = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i23 = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i24 = (($sub$ptr$lhs$cast$i22) - ($sub$ptr$rhs$cast$i23))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i25 = (($sub$ptr$sub$i24|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__a; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEEC2EjjS5_($__v,$21,$sub$ptr$div$i25,$24); //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = $__a; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($__v)) + 8|0); //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = HEAP32[$__end_>>2]|0; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i = $26;
 $27 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $28 = $__x$addr; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__t$addr$i = $28;
 $29 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $25;
 $__p$addr$i28 = $27;
 $__args$addr$i = $29;
 $30 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $31 = $__p$addr$i28; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $32 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $32;
 $33 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i27 = $30;
 $__p$addr$i$i = $31;
 $__args$addr$i$i = $33;
 $34 = $__a$addr$i$i27; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $35 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $36 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $36;
 $37 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i26 = $34;
 $__p$addr$i$i$i = $35;
 $__args$addr$i$i$i = $37;
 $38 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $39 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $39;
 $40 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$38>>2] = $41; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_7 = ((($__v)) + 8|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $42 = HEAP32[$__end_7>>2]|0; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $incdec$ptr = ((($42)) + 4|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_7>>2] = $incdec$ptr; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(186,($this1|0),($__v|0)); //@line 1577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $45 = ___cxa_find_matching_catch_2()|0;
  $46 = tempRet0;
  $exn$slot = $45; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $46; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEEC2EjjS5_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a$addr = 0, $__a$addr$i = 0, $__begin_ = 0, $__cap$addr = 0, $__end_ = 0, $__end_cap_ = 0, $__end_cap_$i = 0, $__end_cap_$i19 = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__second_$i$i = 0, $__second_$i$i$i = 0, $__size$addr$i$i$i = 0, $__start$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t1$addr$i = 0;
 var $__t1$addr$i$i = 0, $__t2$addr$i = 0, $__t2$addr$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $cond = 0, $exception$i$i = 0, $mul$i$i = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i15 = 0, $this$addr$i$i12 = 0, $this$addr$i$i16 = 0;
 var $this$addr$i$i7 = 0, $this$addr$i17 = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i21 = 0, $this1$i$i10 = 0, $this1$i$i13 = 0, $this1$i$i20 = 0, $this1$i18 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i = sp + 36|0;
 $__t1$addr$i = sp + 20|0;
 $this$addr = $this;
 $__cap$addr = $__cap;
 $__start$addr = $__start;
 $__a$addr = $__a;
 $this1 = $this$addr;
 $__end_cap_ = ((($this1)) + 12|0); //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = $__a$addr; //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $__end_cap_;
 HEAP32[$__t1$addr$i>>2] = 0;
 $__t2$addr$i = $0;
 $this1$i = $this$addr$i;
 $__t$addr$i$i = $__t1$addr$i;
 $1 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = HEAP32[$1>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__t2$addr$i; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i = $3;
 $4 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i = $this1$i;
 HEAP32[$__t1$addr$i$i>>2] = $2;
 $__t2$addr$i$i = $4;
 $this1$i$i = $this$addr$i$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $5 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = HEAP32[$5>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i>>2] = $6; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i = ((($this1$i$i)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__t2$addr$i$i; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i = $7;
 $8 = $__t$addr$i3$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__second_$i$i>>2] = $8; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($9|0)!=(0); //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $this$addr$i17 = $this1;
   $this1$i18 = $this$addr$i17;
   $__end_cap_$i19 = ((($this1$i18)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i16 = $__end_cap_$i19;
   $this1$i$i20 = $this$addr$i$i16;
   $this$addr$i$i$i15 = $this1$i$i20;
   $this1$i$i$i21 = $this$addr$i$i$i15;
   $__second_$i$i$i = ((($this1$i$i$i21)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $10 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i = $ref$i$i$i;
   $__n$addr$i = $10;
   $11 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $12 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i12 = $11;
   $__n$addr$i$i = $12;
   $$addr$i$i = 0;
   $this1$i$i13 = $this$addr$i$i12;
   $13 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i11 = $this1$i$i13;
   $cmp$i$i = ($13>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   } else {
    $14 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $mul$i$i = $14<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__size$addr$i$i$i = $mul$i$i;
    $15 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $call$i$i$i = (__Znwj($15)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $cond = $call$i$i$i;
    break;
   }
  } else {
   $cond = 0;
  }
 } while(0);
 HEAP32[$this1>>2] = $cond; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $16 = HEAP32[$this1>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $17 = $__start$addr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr = (($16) + ($17<<2)|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_ = ((($this1)) + 8|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_ = ((($this1)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $18 = HEAP32[$this1>>2]|0; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $19 = $__cap$addr; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr5 = (($18) + ($19<<2)|0); //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i = $this1$i$i10;
 $this1$i$i$i = $this$addr$i$i$i;
 HEAP32[$this1$i$i$i>>2] = $add$ptr5; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_Np$i = 0, $__a$addr$i = 0, $__begin1$addr$i = 0, $__begin_2 = 0, $__begin_4 = 0, $__begin_9 = 0, $__end1$addr$i = 0, $__end2$addr$i = 0, $__end_ = 0;
 var $__end_$i = 0, $__end_5 = 0, $__end_6 = 0, $__end_cap_$i = 0, $__end_cap_$i23 = 0, $__end_cap_$i30 = 0, $__t$addr$i$i = 0, $__t$addr$i$i36 = 0, $__t$addr$i$i42 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i35 = 0, $__t$addr$i3$i41 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i34 = 0, $__t$addr$i4$i40 = 0, $__t$i = 0, $__t$i39 = 0, $__t$i45 = 0, $__v$addr = 0, $__x$addr$i = 0;
 var $__x$addr$i37 = 0, $__x$addr$i43 = 0, $__y$addr$i = 0, $__y$addr$i38 = 0, $__y$addr$i44 = 0, $add$ptr$i = 0, $cmp$i = 0, $idx$neg$i = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i18 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i15 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i16 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i17 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0;
 var $this$addr$i$i$i = 0, $this$addr$i$i$i19 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i20 = 0, $this$addr$i$i27 = 0, $this$addr$i11 = 0, $this$addr$i13 = 0, $this$addr$i21 = 0, $this$addr$i28 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i25 = 0, $this1$i$i$i32 = 0, $this1$i$i24 = 0, $this1$i$i31 = 0, $this1$i14 = 0, $this1$i22 = 0, $this1$i29 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $__t$i45 = sp + 120|0;
 $__t$i39 = sp + 96|0;
 $__t$i = sp + 48|0;
 $this$addr = $this;
 $__v$addr = $__v;
 $this1 = $this$addr;
 __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE17__annotate_deleteEv($this1); //@line 891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $0 = HEAP32[$this1>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__v$addr; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_2 = ((($2)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i;
 $__begin1$addr$i = $0;
 $__end1$addr$i = $1;
 $__end2$addr$i = $__begin_2;
 $3 = $__end1$addr$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__begin1$addr$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$lhs$cast$i = $3; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$rhs$cast$i = $4; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $_Np$i = $sub$ptr$div$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $_Np$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__end2$addr$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = HEAP32[$6>>2]|0; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $idx$neg$i = (0 - ($5))|0; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $add$ptr$i = (($7) + ($idx$neg$i<<2)|0); //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$6>>2] = $add$ptr$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = $_Np$i; //@line 1637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $cmp$i = ($8|0)>(0); //@line 1637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $9 = $__end2$addr$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = HEAP32[$9>>2]|0; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $11 = $__begin1$addr$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $12 = $_Np$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i = $12<<2; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  _memcpy(($10|0),($11|0),($mul$i|0))|0; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $13 = $__v$addr; //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_4 = ((($13)) + 4|0); //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i43 = $this1;
 $__y$addr$i44 = $__begin_4;
 $14 = $__x$addr$i43; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i42 = $14;
 $15 = $__t$addr$i$i42; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $16 = HEAP32[$15>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i45>>2] = $16; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $17 = $__y$addr$i44; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i40 = $17;
 $18 = $__t$addr$i4$i40; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $19 = HEAP32[$18>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $20 = $__x$addr$i43; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$20>>2] = $19; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i41 = $__t$i45;
 $21 = $__t$addr$i3$i41; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $22 = HEAP32[$21>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $23 = $__y$addr$i44; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$23>>2] = $22; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__end_5 = ((($this1)) + 4|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__v$addr; //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_6 = ((($24)) + 8|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i37 = $__end_5;
 $__y$addr$i38 = $__end_6;
 $25 = $__x$addr$i37; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i36 = $25;
 $26 = $__t$addr$i$i36; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $27 = HEAP32[$26>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i39>>2] = $27; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $28 = $__y$addr$i38; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i34 = $28;
 $29 = $__t$addr$i4$i34; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $30 = HEAP32[$29>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $31 = $__x$addr$i37; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$31>>2] = $30; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i35 = $__t$i39;
 $32 = $__t$addr$i3$i35; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $33 = HEAP32[$32>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $34 = $__y$addr$i38; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$34>>2] = $33; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i28 = $this1;
 $this1$i29 = $this$addr$i28;
 $__end_cap_$i30 = ((($this1$i29)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i27 = $__end_cap_$i30;
 $this1$i$i31 = $this$addr$i$i27;
 $this$addr$i$i$i26 = $this1$i$i31;
 $this1$i$i$i32 = $this$addr$i$i$i26;
 $35 = $__v$addr; //@line 895 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i21 = $35;
 $this1$i22 = $this$addr$i21;
 $__end_cap_$i23 = ((($this1$i22)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i20 = $__end_cap_$i23;
 $this1$i$i24 = $this$addr$i$i20;
 $this$addr$i$i$i19 = $this1$i$i24;
 $this1$i$i$i25 = $this$addr$i$i$i19;
 $__x$addr$i = $this1$i$i$i32;
 $__y$addr$i = $this1$i$i$i25;
 $36 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $36;
 $37 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $38 = HEAP32[$37>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i>>2] = $38; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $39 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i = $39;
 $40 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $42 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$42>>2] = $41; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $__t$i;
 $43 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $44 = HEAP32[$43>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $45 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$45>>2] = $44; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $46 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_9 = ((($46)) + 4|0); //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $47 = HEAP32[$__begin_9>>2]|0; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $48 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$48>>2] = $47; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $__end_$i = ((($this1$i14)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $49 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $50 = HEAP32[$this1$i14>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i15 = $49; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i16 = $50; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i17 = (($sub$ptr$lhs$cast$i15) - ($sub$ptr$rhs$cast$i16))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i18 = (($sub$ptr$sub$i17|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE14__annotate_newEj($this1,$sub$ptr$div$i18); //@line 897 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i11 = $this1;
 STACKTOP = sp;return; //@line 899 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__new_last$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $__second_$i$i$i = 0;
 var $__second_$i$i$i$i$i$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $agg$tmp2$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i10 = 0, $this$addr$i$i14 = 0, $this$addr$i$i5 = 0, $this$addr$i15 = 0, $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i18 = 0, $this1$i$i$i9 = 0, $this1$i$i17 = 0;
 var $this1$i$i8 = 0, $this1$i16 = 0, $this1$i7 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i$i$i$i = sp + 8|0;
 $agg$tmp$i$i$i$i = sp + 133|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 132|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $0;
 $this1$i$i = $this$addr$i$i;
 $1 = $__new_last$addr$i$i; //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $__new_last$addr$i$i$i = $1;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i$i; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__end_$i$i$i>>2]|0; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i$i$i = ($2|0)!=($3|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__second_$i$i$i$i$i$i = ((($this1$i$i$i$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $ref$i$i$i$i$i$i = HEAP32[$__second_$i$i$i$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_2$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i$i$i = ((($4)) + -4|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $5 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $5;
  $6 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $6;
  $__p$addr$i$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $8;
  $__p$addr$i$i$i$i$i$i = $9;
 }
 $10 = HEAP32[$this1>>2]|0; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $tobool = ($10|0)!=(0|0); //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $__second_$i$i$i = ((($this1$i$i$i9)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = HEAP32[$this1>>2]|0; //@line 343 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $12 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $13 = HEAP32[$this1$i16>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $12; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $13; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $11;
 $__n$addr$i = $sub$ptr$div$i;
 $14 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i10 = $14;
 $__p$addr$i$i = $15;
 $$addr$i$i = $16;
 $17 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $17;
 $18 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($18); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i9 = 0, $__a$addr$i11 = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__end_cap_$i = 0;
 var $__x$addr$i$i$i = 0, $__y$addr$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i12 = 0, $agg$tmp1$i = 0, $agg$tmp1$i10 = 0, $cmp$i$i$i = 0, $cond$lvalue$i$i2D = 0, $div = 0, $ref$tmp = 0, $ref$tmp3 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $agg$tmp1$i10 = sp + 8|0;
 $agg$tmp$i12 = sp + 77|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 76|0;
 $ref$tmp = sp + 16|0;
 $ref$tmp3 = sp + 12|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a$addr$i = $this1$i$i$i;
 $0 = $__a$addr$i; //@line 1540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $0;
 $1 = $__a$addr$i$i; //@line 1678 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i6 = $1;
 HEAP32[$ref$tmp>>2] = 1073741823; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div = (4294967295 / 2)&-1; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$ref$tmp3>>2] = $div; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i11 = $ref$tmp;
 $__b$addr$i = $ref$tmp3;
 $2 = $__a$addr$i11; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $3 = $__b$addr$i; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 ;HEAP8[$agg$tmp1$i10>>0]=HEAP8[$agg$tmp$i12>>0]|0;
 $__a$addr$i$i9 = $2;
 $__b$addr$i$i = $3;
 $4 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $5 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $this$addr$i$i$i8 = $agg$tmp1$i10;
 $__x$addr$i$i$i = $4;
 $__y$addr$i$i$i = $5;
 $6 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $7 = HEAP32[$6>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $8 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $9 = HEAP32[$8>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i$i = ($7>>>0)<($9>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $10 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $11 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cond$lvalue$i$i2D = $cmp$i$i$i ? $10 : $11; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $12 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return ($12|0); //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i35 = 0, $__p$addr$i$i = 0, $__p$addr$i$i10 = 0, $__p$addr$i$i16 = 0;
 var $__p$addr$i$i23 = 0, $add$ptr = 0, $add$ptr6 = 0, $add$ptr9 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i43 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i40 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i41 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i42 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0;
 var $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i27 = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i30 = 0, $this$addr$i11 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i24 = 0, $this$addr$i31 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i37 = 0, $this1$i$i$i$i36 = 0;
 var $this1$i$i$i34 = 0, $this1$i$i33 = 0, $this1$i12 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0, $this1$i25 = 0, $this1$i32 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i11 = $this1;
 $this1$i12 = $this$addr$i11;
 $2 = HEAP32[$this1$i12>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i10 = $2;
 $3 = $__p$addr$i$i10; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i31 = $this1;
 $this1$i32 = $this$addr$i31;
 $this$addr$i$i30 = $this1$i32;
 $this1$i$i33 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i33;
 $this1$i$i$i34 = $this$addr$i$i$i29;
 $__end_cap_$i$i$i35 = ((($this1$i$i$i34)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i28 = $__end_cap_$i$i$i35;
 $this1$i$i$i$i36 = $this$addr$i$i$i$i28;
 $this$addr$i$i$i$i$i27 = $this1$i$i$i$i36;
 $this1$i$i$i$i$i37 = $this$addr$i$i$i$i$i27;
 $4 = HEAP32[$this1$i$i$i$i$i37>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i40 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i41 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i42 = (($sub$ptr$lhs$cast$i$i40) - ($sub$ptr$rhs$cast$i$i41))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i43 = (($sub$ptr$sub$i$i42|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i43<<2)|0); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $6 = HEAP32[$this1$i25>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i23 = $6;
 $7 = $__p$addr$i$i23; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $__end_$i = ((($this1$i21)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i21>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $8; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $9; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $10 = HEAP32[$this1$i18>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i16 = $10;
 $11 = $__p$addr$i$i16; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $this$addr$i$i = $this1$i15;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $12 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $13; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr9 = (($11) + ($sub$ptr$div$i$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr9); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 850 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__current_size$addr = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i31 = 0, $__p$addr$i$i = 0, $__p$addr$i$i13 = 0, $__p$addr$i$i19 = 0, $__p$addr$i$i9 = 0;
 var $add$ptr = 0, $add$ptr6 = 0, $add$ptr8 = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i39 = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i36 = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i37 = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i38 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i23 = 0, $this$addr$i$i$i$i24 = 0, $this$addr$i$i$i25 = 0;
 var $this$addr$i$i26 = 0, $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i27 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i33 = 0, $this1$i$i$i$i32 = 0, $this1$i$i$i30 = 0, $this1$i$i29 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0;
 var $this1$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $__current_size$addr = $__current_size;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $2 = HEAP32[$this1$i11>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i9 = $2;
 $3 = $__p$addr$i$i9; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i27 = $this1;
 $this1$i28 = $this$addr$i27;
 $this$addr$i$i26 = $this1$i28;
 $this1$i$i29 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i29;
 $this1$i$i$i30 = $this$addr$i$i$i25;
 $__end_cap_$i$i$i31 = ((($this1$i$i$i30)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i24 = $__end_cap_$i$i$i31;
 $this1$i$i$i$i32 = $this$addr$i$i$i$i24;
 $this$addr$i$i$i$i$i23 = $this1$i$i$i$i32;
 $this1$i$i$i$i$i33 = $this$addr$i$i$i$i$i23;
 $4 = HEAP32[$this1$i$i$i$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i29>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i36 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i37 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i38 = (($sub$ptr$lhs$cast$i$i36) - ($sub$ptr$rhs$cast$i$i37))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i39 = (($sub$ptr$sub$i$i38|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i39<<2)|0); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $6 = HEAP32[$this1$i21>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i19 = $6;
 $7 = $__p$addr$i$i19; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $this$addr$i$i = $this1$i18;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $8 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $8; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $9; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i$i<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $10 = HEAP32[$this1$i15>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i13 = $10;
 $11 = $__p$addr$i$i13; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__current_size$addr; //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr8 = (($11) + ($12<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr8); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $__beg$addr = 0, $__end$addr = 0, $__new_mid$addr = 0, $__old_mid$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__beg$addr = $__beg;
 $__end$addr = $__end;
 $__old_mid$addr = $__old_mid;
 $__new_mid$addr = $__new_mid;
 STACKTOP = sp;return; //@line 839 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__213__vector_baseIN10emscripten3valENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__a$addr$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__end_$i$i = 0, $__end_2$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i5$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp1$i$i$i = 0, $cmp = 0;
 var $cmp$i$i = 0, $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i10 = 0, $this$addr$i$i14 = 0, $this$addr$i$i5 = 0, $this$addr$i15 = 0;
 var $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i18 = 0, $this1$i$i$i9 = 0, $this1$i$i17 = 0, $this1$i$i8 = 0, $this1$i16 = 0, $this1$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $agg$tmp1$i$i$i = sp;
 $agg$tmp$i$i$i = sp + 116|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=(0|0); //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $1 = HEAP32[$this1$i>>2]|0; //@line 369 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $1;
 $this1$i$i = $this$addr$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $3 = HEAP32[$__end_$i$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i = ($2|0)!=($3|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i)) {
   break;
  }
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i = $__end_cap_$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $this$addr$i$i$i$i$i = $this1$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $__end_2$i$i = ((($this1$i$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $4 = HEAP32[$__end_2$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i = ((($4)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i>>2] = $incdec$ptr$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i = $incdec$ptr$i$i;
  $5 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i = $this1$i$i$i$i$i;
  $__p$addr$i5$i$i = $5;
  $6 = $__a$addr$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $__a$addr$i$i$i$i = $6;
  $__p$addr$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i = $8;
  $__p$addr$i$i$i$i$i = $9;
  $10 = $__p$addr$i$i$i$i$i; //@line 1803 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZN10emscripten3valD2Ev($10); //@line 1803 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $11 = HEAP32[$this1>>2]|0; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $12 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = HEAP32[$this1$i16>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $13; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i9;
 $__p$addr$i = $11;
 $__n$addr$i = $sub$ptr$div$i;
 $14 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i10 = $14;
 $__p$addr$i$i = $15;
 $$addr$i$i = $16;
 $17 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $17;
 $18 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($18); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__213__vector_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0;
 var $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__end_$i$i = 0, $__end_2$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i5$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp1$i$i$i = 0, $cmp = 0, $cmp$i$i = 0;
 var $incdec$ptr$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i14 = 0, $this$addr$i$i4 = 0, $this$addr$i$i7 = 0, $this$addr$i15 = 0, $this$addr$i8 = 0;
 var $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i11 = 0, $this1$i$i$i18 = 0, $this1$i$i10 = 0, $this1$i$i17 = 0, $this1$i16 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $agg$tmp1$i$i$i = sp;
 $agg$tmp$i$i$i = sp + 116|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=(0|0); //@line 450 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $1 = HEAP32[$this1$i>>2]|0; //@line 369 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $1;
 $this1$i$i = $this$addr$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $3 = HEAP32[$__end_$i$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i = ($2|0)!=($3|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i)) {
   break;
  }
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i = $__end_cap_$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $this$addr$i$i$i$i$i = $this1$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $__end_2$i$i = ((($this1$i$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $4 = HEAP32[$__end_2$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i = ((($4)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i>>2] = $incdec$ptr$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i = $incdec$ptr$i$i;
  $5 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i = $this1$i$i$i$i$i;
  $__p$addr$i5$i$i = $5;
  $6 = $__a$addr$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $__a$addr$i$i$i$i = $6;
  $__p$addr$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i = $8;
  $__p$addr$i$i$i$i$i = $9;
 }
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i6 = $this1$i$i10;
 $this1$i$i$i11 = $this$addr$i$i$i6;
 $10 = HEAP32[$this1>>2]|0; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $11 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i16>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $11; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i11;
 $__p$addr$i = $10;
 $__n$addr$i = $sub$ptr$div$i;
 $13 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $14 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i4 = $13;
 $__p$addr$i$i = $14;
 $$addr$i$i = $15;
 $16 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $16;
 $17 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($17); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN10emscripten3valC2IRS0_EEOT_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $__t$addr$i = 0, $argv = 0, $call2 = 0, $call3 = 0, $call4 = 0, $this$addr = 0, $this1 = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $argv = sp;
 $this$addr = $this;
 $value$addr = $value;
 $this1 = $this$addr;
 $0 = $value$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten8internal12WireTypePackIJRNS_3valEEEC2ES3_($argv,$1); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (__ZN10emscripten8internal6TypeIDIRNS_3valEE3getEv()|0); //@line 322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call3 = (__ZNK10emscripten8internal12WireTypePackIJRNS_3valEEEcvPKvEv($argv)|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call4 = (__emval_take_value(($call2|0),($call3|0))|0); //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $call4; //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 324 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal12WireTypePackIJRNS_3valEEEC2ES3_($this,$args) {
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $args$addr = 0, $call1$i = 0, $cursor = 0, $cursor$addr$i = 0, $first$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $cursor = sp;
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$cursor>>2] = $this1$i; //@line 221 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = $args$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $cursor$addr$i = $cursor;
 $first$addr$i = $1;
 $2 = $cursor$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $first$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call1$i = (__ZN10emscripten8internal11BindingTypeINS_3valEE10toWireTypeERKS2_($4)|0); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal20writeGenericWireTypeINS0_7_EM_VALEEEvRPNS0_15GenericWireTypeEPT_($2,$call1$i); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $5 = $cursor$addr$i; //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($5); //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal6TypeIDIRNS_3valEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIRNS_3valEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WireTypePackIJRNS_3valEEEcvPKvEv($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 STACKTOP = sp;return ($this1$i|0); //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal20writeGenericWireTypeINS0_7_EM_VALEEEvRPNS0_15GenericWireTypeEPT_($cursor,$wt) {
 $cursor = $cursor|0;
 $wt = $wt|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $cursor$addr = 0, $incdec$ptr = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $cursor$addr = $cursor;
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $cursor$addr; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$1>>2]|0; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$2>>2] = $0; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $cursor$addr; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = HEAP32[$3>>2]|0; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $incdec$ptr = ((($4)) + 8|0); //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$3>>2] = $incdec$ptr; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 194 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeINS_3valEE10toWireTypeERKS2_($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = HEAP32[$0>>2]|0; //@line 487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __emval_incref(($1|0)); //@line 487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = $v$addr; //@line 488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = HEAP32[$2>>2]|0; //@line 488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return ($3|0); //@line 488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11LightTypeIDIRNS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (40|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN9Hierarchy6isTypeEN10emscripten3valERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this,$value,$type) {
 $this = $this|0;
 $value = $value|0;
 $type = $type|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lhs$addr$i = 0, $__lhs_sz$i = 0, $__lp$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i69$i = 0;
 var $__r$addr$i$i$i$i$i = 0, $__r$addr$i$i$i$i74$i = 0, $__rhs$addr$i = 0, $__rp$i = 0, $__size_$i23$i$i = 0, $__size_$i23$i42$i = 0, $__x$addr$i$i$i$i$i$i = 0, $__x$addr$i$i$i$i$i73$i = 0, $and$i$i = 0, $and$i$i$i = 0, $and$i$i$i$i = 0, $and$i$i$i93$i = 0, $and$i$i34$i = 0, $call6$i = 0, $cmp$i = 0, $cmp11$i = 0, $cmp7$i = 0, $cmp7$i$expand_i1_val = 0, $cmp9$i = 0, $cond$i$i = 0;
 var $cond$i$i$i = 0, $cond$i$i112$i = 0, $cond$i53$i = 0, $conv$i = 0, $conv$i$i = 0, $conv$i$i$i = 0, $conv$i$i$i$i = 0, $conv$i$i$i92$i = 0, $conv$i$i33$i = 0, $conv$i14$i$i = 0, $conv$i14$i51$i = 0, $conv10$i = 0, $dec$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr$i = 0, $incdec$ptr14$i = 0, $ref$tmp = 0, $ref$tmp2 = 0;
 var $retval$i = 0, $sel = 0, $this$addr = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i$i78$i = 0, $this$addr$i$i$i$i21$i = 0, $this$addr$i$i$i$i55$i = 0, $this$addr$i$i$i$i79$i = 0, $this$addr$i$i$i13$i$i$i = 0, $this$addr$i$i$i13$i$i70$i = 0, $this$addr$i$i$i15$i$i = 0, $this$addr$i$i$i15$i15$i = 0, $this$addr$i$i$i22$i = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i$i4$i$i75$i = 0;
 var $this$addr$i$i$i4$i18$i = 0, $this$addr$i$i$i56$i = 0, $this$addr$i$i$i63$i = 0, $this$addr$i$i$i80$i = 0, $this$addr$i$i14$i$i$i = 0, $this$addr$i$i14$i$i71$i = 0, $this$addr$i$i16$i$i = 0, $this$addr$i$i16$i16$i = 0, $this$addr$i$i23$i = 0, $this$addr$i$i5$i$i = 0, $this$addr$i$i5$i$i$i = 0, $this$addr$i$i5$i$i76$i = 0, $this$addr$i$i5$i19$i = 0, $this$addr$i$i57$i = 0, $this$addr$i$i64$i = 0, $this$addr$i$i81$i = 0, $this$addr$i15$i$i$i = 0, $this$addr$i15$i$i72$i = 0, $this$addr$i17$i$i = 0, $this$addr$i17$i17$i = 0;
 var $this$addr$i24$i = 0, $this$addr$i58$i = 0, $this$addr$i6$i$i = 0, $this$addr$i6$i$i$i = 0, $this$addr$i6$i$i77$i = 0, $this$addr$i6$i20$i = 0, $this$addr$i65$i = 0, $this$addr$i82$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i$i88$i = 0, $this1$i$i$i$i29$i = 0, $this1$i$i$i$i62$i = 0, $this1$i$i$i$i87$i = 0, $this1$i$i$i10$i$i = 0, $this1$i$i$i10$i$i$i = 0, $this1$i$i$i10$i$i106$i = 0;
 var $this1$i$i$i10$i47$i = 0, $this1$i$i$i19$i$i$i = 0, $this1$i$i$i19$i$i98$i = 0, $this1$i$i$i21$i$i = 0, $this1$i$i$i21$i39$i = 0, $this1$i$i$i28$i = 0, $this1$i$i$i61$i = 0, $this1$i$i$i68$i = 0, $this1$i$i$i85$i = 0, $this1$i$i18$i$i$i = 0, $this1$i$i18$i$i97$i = 0, $this1$i$i20$i$i = 0, $this1$i$i20$i38$i = 0, $this1$i$i26$i = 0, $this1$i$i60$i = 0, $this1$i$i67$i = 0, $this1$i$i84$i = 0, $this1$i$i9$i$i = 0, $this1$i$i9$i$i$i = 0, $this1$i$i9$i$i105$i = 0;
 var $this1$i$i9$i46$i = 0, $this1$i16$i$i$i = 0, $this1$i16$i$i95$i = 0, $this1$i18$i$i = 0, $this1$i18$i36$i = 0, $this1$i25$i = 0, $this1$i59$i = 0, $this1$i66$i = 0, $this1$i7$i$i = 0, $this1$i7$i$i$i = 0, $this1$i7$i$i103$i = 0, $this1$i7$i44$i = 0, $this1$i83$i = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, $tobool$i$i$i$i = 0, $tobool$i$i$i94$i = 0, $tobool$i$i35$i = 0, $type$addr = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $retval$i = sp + 256|0;
 $ref$tmp = sp + 12|0;
 $ref$tmp2 = sp + 8|0;
 $this$addr = $this;
 $type$addr = $type;
 __ZNK10emscripten3val6typeofEv($ref$tmp2,$value); //@line 485 "hierarchy.cpp"
 __THREW__ = 0;
 invoke_vii(122,($ref$tmp|0),($ref$tmp2|0)); //@line 485 "hierarchy.cpp"
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $49 = ___cxa_find_matching_catch_2()|0;
  $50 = tempRet0;
  $exn$slot = $49; //@line 486 "hierarchy.cpp"
  $ehselector$slot = $50; //@line 486 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 485 "hierarchy.cpp"
  $exn = $exn$slot; //@line 485 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 485 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 $2 = $type$addr; //@line 485 "hierarchy.cpp"
 $__lhs$addr$i = $ref$tmp;
 $__rhs$addr$i = $2;
 $3 = $__lhs$addr$i; //@line 3818 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $this$addr$i$i = $3;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $4 = ((($this1$i$i$i$i$i)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $5 = HEAP8[$4>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $conv$i$i$i = $5&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $and$i$i$i = $conv$i$i$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $tobool$i$i$i = ($and$i$i$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($tobool$i$i$i) {
  $this$addr$i17$i$i = $this1$i$i;
  $this1$i18$i$i = $this$addr$i17$i$i;
  $this$addr$i$i16$i$i = $this1$i18$i$i;
  $this1$i$i20$i$i = $this$addr$i$i16$i$i;
  $this$addr$i$i$i15$i$i = $this1$i$i20$i$i;
  $this1$i$i$i21$i$i = $this$addr$i$i$i15$i$i;
  $__size_$i23$i$i = ((($this1$i$i$i21$i$i)) + 4|0); //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $6 = HEAP32[$__size_$i23$i$i>>2]|0; //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i$i = $6;
 } else {
  $this$addr$i6$i$i = $this1$i$i;
  $this1$i7$i$i = $this$addr$i6$i$i;
  $this$addr$i$i5$i$i = $this1$i7$i$i;
  $this1$i$i9$i$i = $this$addr$i$i5$i$i;
  $this$addr$i$i$i4$i$i = $this1$i$i9$i$i;
  $this1$i$i$i10$i$i = $this$addr$i$i$i4$i$i;
  $7 = ((($this1$i$i$i10$i$i)) + 11|0); //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $8 = HEAP8[$7>>0]|0; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $conv$i14$i$i = $8&255; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i$i = $conv$i14$i$i;
 }
 $__lhs_sz$i = $cond$i$i; //@line 3818 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $9 = $__lhs_sz$i; //@line 3819 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $10 = $__rhs$addr$i; //@line 3819 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $this$addr$i24$i = $10;
 $this1$i25$i = $this$addr$i24$i;
 $this$addr$i$i23$i = $this1$i25$i;
 $this1$i$i26$i = $this$addr$i$i23$i;
 $this$addr$i$i$i22$i = $this1$i$i26$i;
 $this1$i$i$i28$i = $this$addr$i$i$i22$i;
 $this$addr$i$i$i$i21$i = $this1$i$i$i28$i;
 $this1$i$i$i$i29$i = $this$addr$i$i$i$i21$i;
 $11 = ((($this1$i$i$i$i29$i)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $12 = HEAP8[$11>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $conv$i$i33$i = $12&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $and$i$i34$i = $conv$i$i33$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $tobool$i$i35$i = ($and$i$i34$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($tobool$i$i35$i) {
  $this$addr$i17$i17$i = $this1$i25$i;
  $this1$i18$i36$i = $this$addr$i17$i17$i;
  $this$addr$i$i16$i16$i = $this1$i18$i36$i;
  $this1$i$i20$i38$i = $this$addr$i$i16$i16$i;
  $this$addr$i$i$i15$i15$i = $this1$i$i20$i38$i;
  $this1$i$i$i21$i39$i = $this$addr$i$i$i15$i15$i;
  $__size_$i23$i42$i = ((($this1$i$i$i21$i39$i)) + 4|0); //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $13 = HEAP32[$__size_$i23$i42$i>>2]|0; //@line 1797 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i53$i = $13;
 } else {
  $this$addr$i6$i20$i = $this1$i25$i;
  $this1$i7$i44$i = $this$addr$i6$i20$i;
  $this$addr$i$i5$i19$i = $this1$i7$i44$i;
  $this1$i$i9$i46$i = $this$addr$i$i5$i19$i;
  $this$addr$i$i$i4$i18$i = $this1$i$i9$i46$i;
  $this1$i$i$i10$i47$i = $this$addr$i$i$i4$i18$i;
  $14 = ((($this1$i$i$i10$i47$i)) + 11|0); //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $15 = HEAP8[$14>>0]|0; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $conv$i14$i51$i = $15&255; //@line 1769 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i53$i = $conv$i14$i51$i;
 }
 $cmp$i = ($9|0)!=($cond$i53$i|0); //@line 3819 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($cmp$i) {
  $$expand_i1_val = 0; //@line 3820 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  HEAP8[$retval$i>>0] = $$expand_i1_val; //@line 3820 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $$pre_trunc = HEAP8[$retval$i>>0]|0; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $48 = $$pre_trunc&1; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 485 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 485 "hierarchy.cpp"
  STACKTOP = sp;return ($48|0); //@line 485 "hierarchy.cpp"
 }
 $16 = $__lhs$addr$i; //@line 3821 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $this$addr$i58$i = $16;
 $this1$i59$i = $this$addr$i58$i;
 $this$addr$i$i57$i = $this1$i59$i;
 $this1$i$i60$i = $this$addr$i$i57$i;
 $this$addr$i$i$i56$i = $this1$i$i60$i;
 $this1$i$i$i61$i = $this$addr$i$i$i56$i;
 $this$addr$i$i$i$i55$i = $this1$i$i$i61$i;
 $this1$i$i$i$i62$i = $this$addr$i$i$i$i55$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i62$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $17 = ((($this1$i$i$i$i$i$i)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $18 = HEAP8[$17>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $conv$i$i$i$i = $18&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $and$i$i$i$i = $conv$i$i$i$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $tobool$i$i$i$i = ($and$i$i$i$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($tobool$i$i$i$i) {
  $this$addr$i15$i$i$i = $this1$i$i60$i;
  $this1$i16$i$i$i = $this$addr$i15$i$i$i;
  $this$addr$i$i14$i$i$i = $this1$i16$i$i$i;
  $this1$i$i18$i$i$i = $this$addr$i$i14$i$i$i;
  $this$addr$i$i$i13$i$i$i = $this1$i$i18$i$i$i;
  $this1$i$i$i19$i$i$i = $this$addr$i$i$i13$i$i$i;
  $19 = HEAP32[$this1$i$i$i19$i$i$i>>2]|0; //@line 1817 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i$i$i = $19;
 } else {
  $this$addr$i6$i$i$i = $this1$i$i60$i;
  $this1$i7$i$i$i = $this$addr$i6$i$i$i;
  $this$addr$i$i5$i$i$i = $this1$i7$i$i$i;
  $this1$i$i9$i$i$i = $this$addr$i$i5$i$i$i;
  $this$addr$i$i$i4$i$i$i = $this1$i$i9$i$i$i;
  $this1$i$i$i10$i$i$i = $this$addr$i$i$i4$i$i$i;
  $__r$addr$i$i$i$i$i = $this1$i$i$i10$i$i$i;
  $20 = $__r$addr$i$i$i$i$i; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__x$addr$i$i$i$i$i$i = $20;
  $21 = $__x$addr$i$i$i$i$i$i; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $cond$i$i$i = $21;
 }
 $__p$addr$i$i$i = $cond$i$i$i;
 $22 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__lp$i = $22; //@line 3821 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $23 = $__rhs$addr$i; //@line 3822 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $this$addr$i82$i = $23;
 $this1$i83$i = $this$addr$i82$i;
 $this$addr$i$i81$i = $this1$i83$i;
 $this1$i$i84$i = $this$addr$i$i81$i;
 $this$addr$i$i$i80$i = $this1$i$i84$i;
 $this1$i$i$i85$i = $this$addr$i$i$i80$i;
 $this$addr$i$i$i$i79$i = $this1$i$i$i85$i;
 $this1$i$i$i$i87$i = $this$addr$i$i$i$i79$i;
 $this$addr$i$i$i$i$i78$i = $this1$i$i$i$i87$i;
 $this1$i$i$i$i$i88$i = $this$addr$i$i$i$i$i78$i;
 $24 = ((($this1$i$i$i$i$i88$i)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $25 = HEAP8[$24>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $conv$i$i$i92$i = $25&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $and$i$i$i93$i = $conv$i$i$i92$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $tobool$i$i$i94$i = ($and$i$i$i93$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($tobool$i$i$i94$i) {
  $this$addr$i15$i$i72$i = $this1$i$i84$i;
  $this1$i16$i$i95$i = $this$addr$i15$i$i72$i;
  $this$addr$i$i14$i$i71$i = $this1$i16$i$i95$i;
  $this1$i$i18$i$i97$i = $this$addr$i$i14$i$i71$i;
  $this$addr$i$i$i13$i$i70$i = $this1$i$i18$i$i97$i;
  $this1$i$i$i19$i$i98$i = $this$addr$i$i$i13$i$i70$i;
  $26 = HEAP32[$this1$i$i$i19$i$i98$i>>2]|0; //@line 1817 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cond$i$i112$i = $26;
 } else {
  $this$addr$i6$i$i77$i = $this1$i$i84$i;
  $this1$i7$i$i103$i = $this$addr$i6$i$i77$i;
  $this$addr$i$i5$i$i76$i = $this1$i7$i$i103$i;
  $this1$i$i9$i$i105$i = $this$addr$i$i5$i$i76$i;
  $this$addr$i$i$i4$i$i75$i = $this1$i$i9$i$i105$i;
  $this1$i$i$i10$i$i106$i = $this$addr$i$i$i4$i$i75$i;
  $__r$addr$i$i$i$i74$i = $this1$i$i$i10$i$i106$i;
  $27 = $__r$addr$i$i$i$i74$i; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__x$addr$i$i$i$i$i73$i = $27;
  $28 = $__x$addr$i$i$i$i$i73$i; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $cond$i$i112$i = $28;
 }
 $__p$addr$i$i69$i = $cond$i$i112$i;
 $29 = $__p$addr$i$i69$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__rp$i = $29; //@line 3822 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $30 = $__lhs$addr$i; //@line 3823 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $this$addr$i65$i = $30;
 $this1$i66$i = $this$addr$i65$i;
 $this$addr$i$i64$i = $this1$i66$i;
 $this1$i$i67$i = $this$addr$i$i64$i;
 $this$addr$i$i$i63$i = $this1$i$i67$i;
 $this1$i$i$i68$i = $this$addr$i$i$i63$i;
 $31 = ((($this1$i$i$i68$i)) + 11|0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $32 = HEAP8[$31>>0]|0; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $conv$i$i = $32&255; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $and$i$i = $conv$i$i & 128; //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $tobool$i$i = ($and$i$i|0)!=(0); //@line 1735 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($tobool$i$i) {
  $33 = $__lp$i; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $34 = $__rp$i; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $35 = $__lhs_sz$i; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  __THREW__ = 0;
  $call6$i = (invoke_iiii(187,($33|0),($34|0),($35|0))|0); //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $36 = __THREW__; __THREW__ = 0;
  $37 = $36&1;
  if ($37) {
   $46 = ___cxa_find_matching_catch_3(0|0)|0;
   $47 = tempRet0;
   ___clang_call_terminate($46); //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
   // unreachable; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  }
  $cmp7$i = ($call6$i|0)==(0); //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cmp7$i$expand_i1_val = $cmp7$i&1; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  HEAP8[$retval$i>>0] = $cmp7$i$expand_i1_val; //@line 3824 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $$pre_trunc = HEAP8[$retval$i>>0]|0; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $48 = $$pre_trunc&1; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 485 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 485 "hierarchy.cpp"
  STACKTOP = sp;return ($48|0); //@line 485 "hierarchy.cpp"
 }
 while(1) {
  $38 = $__lhs_sz$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cmp9$i = ($38|0)!=(0); //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  if (!($cmp9$i)) {
   label = 23;
   break;
  }
  $39 = $__lp$i; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $40 = HEAP8[$39>>0]|0; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $conv$i = $40 << 24 >> 24; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $41 = $__rp$i; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $42 = HEAP8[$41>>0]|0; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $conv10$i = $42 << 24 >> 24; //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $cmp11$i = ($conv$i|0)!=($conv10$i|0); //@line 3826 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  if ($cmp11$i) {
   label = 21;
   break;
  }
  $43 = $__lhs_sz$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $dec$i = (($43) + -1)|0; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $__lhs_sz$i = $dec$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $44 = $__lp$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $incdec$ptr$i = ((($44)) + 1|0); //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $__lp$i = $incdec$ptr$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $45 = $__rp$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $incdec$ptr14$i = ((($45)) + 1|0); //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $__rp$i = $incdec$ptr14$i; //@line 3825 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 }
 if ((label|0) == 21) {
  $$expand_i1_val3 = 0; //@line 3827 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  HEAP8[$retval$i>>0] = $$expand_i1_val3; //@line 3827 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $$pre_trunc = HEAP8[$retval$i>>0]|0; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $48 = $$pre_trunc&1; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 485 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 485 "hierarchy.cpp"
  STACKTOP = sp;return ($48|0); //@line 485 "hierarchy.cpp"
 }
 else if ((label|0) == 23) {
  $$expand_i1_val5 = 1; //@line 3828 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  HEAP8[$retval$i>>0] = $$expand_i1_val5; //@line 3828 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $$pre_trunc = HEAP8[$retval$i>>0]|0; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  $48 = $$pre_trunc&1; //@line 3829 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 485 "hierarchy.cpp"
  __ZN10emscripten3valD2Ev($ref$tmp2); //@line 485 "hierarchy.cpp"
  STACKTOP = sp;return ($48|0); //@line 485 "hierarchy.cpp"
 }
 return (0)|0;
}
function __ZNK10emscripten3valixIA5_cEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPKc($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3valixIiEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2IRKiEEOT_($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNK10emscripten3valixIA8_cEES0_RKT_($agg$result,$this,$key) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $key$addr = 0, $ref$tmp = 0, $sel = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $this$addr = $this;
 $key$addr = $key;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $key$addr; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPKc($ref$tmp,$1); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$ref$tmp>>2]|0; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __THREW__ = 0;
 $call = (invoke_iii(174,($0|0),($2|0))|0); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if (!($4)) {
  __THREW__ = 0;
  invoke_vii(175,($agg$result|0),($call|0)); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if (!($6)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
   STACKTOP = sp;return; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
  }
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $exn$slot = $7; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $ehselector$slot = $8; //@line 398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $exn = $exn$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $sel = $ehselector$slot; //@line 397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0;
 var $__f_4 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i19$i = 0, $__t$addr$i$i21$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i27$i = 0, $__t$addr$i3$i$i$i = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp10$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp211$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp612$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0;
 var $retval$i$i = 0, $retval$i22$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i17$i = 0, $this$addr$i$i$i18$i = 0, $this$addr$i$i15$i = 0, $this$addr$i$i20$i = 0, $this$addr$i13$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i25$i = 0, $this1$i$i$i24$i = 0;
 var $this1$i$i23$i = 0, $this1$i14$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 226|0;
 $agg$tmp2$i$i$i = sp + 225|0;
 $agg$tmp3$i$i$i = sp + 224|0;
 $agg$tmp4$i$i$i = sp + 223|0;
 $retval$i22$i = sp + 164|0;
 $retval$i$i = sp + 222|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 221|0;
 $agg$tmp2$i$i = sp + 120|0;
 $agg$tmp3$i$i = sp + 220|0;
 $agg$tmp5$i$i = sp + 219|0;
 $agg$tmp6$i$i = sp + 218|0;
 $agg$tmp612$i = sp + 16|0;
 $agg$tmp211$i = sp + 8|0;
 $agg$tmp10$i = sp;
 $agg$tmp$i = sp + 217|0;
 $agg$tmp2$i = sp + 104|0;
 $agg$tmp6$i = sp + 216|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $__t$addr$i = $__f;
 $1 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i = $this1;
 $__f$addr$i = $1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i>>2] = (912); //@line 1464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i)) + 4|0); //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $2 = $__f$addr$i; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i27$i = $2;
 $3 = $__t$addr$i27$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $4;
 $5 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i22$i;
 $__u$addr$i$i$i = $5;
 $this1$i$i23$i = $this$addr$i$i20$i;
 $6 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i19$i = $6;
 $7 = $__t$addr$i$i$i19$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i18$i = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $7;
 $this1$i$i$i24$i = $this$addr$i$i$i18$i;
 $8 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $8;
 $9 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i17$i = $this1$i$i$i24$i;
 $__t$addr$i2$i$i$i$i = $9;
 $this1$i$i$i$i25$i = $this$addr$i$i$i$i17$i;
 $10 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $10;
 $11 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i25$i>>2] = $11; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $12 = HEAP32[$retval$i22$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $12; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i$i15$i = $retval$i$i;
 ;HEAP8[$agg$tmp612$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;
 ;HEAP8[$agg$tmp211$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp211$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp211$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp211$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp10$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i13$i = $__f_$i;
 $this1$i14$i = $this$addr$i13$i;
 $__t$addr$i$i$i = $agg$tmp211$i;
 $13 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$13>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp612$i;
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i14$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $__t$addr$i3$i$i$i = $agg$tmp28$i$i;
 $14 = $__t$addr$i3$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $14;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i = $ref$i$i$i$i$i;
 $15 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$15>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 16|0); //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_4>>2] = $this1; //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E0_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0;
 var $__f_4 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i19$i = 0, $__t$addr$i$i21$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i27$i = 0, $__t$addr$i3$i$i$i = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp10$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp211$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp612$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0;
 var $retval$i$i = 0, $retval$i22$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i17$i = 0, $this$addr$i$i$i18$i = 0, $this$addr$i$i15$i = 0, $this$addr$i$i20$i = 0, $this$addr$i13$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i25$i = 0, $this1$i$i$i24$i = 0;
 var $this1$i$i23$i = 0, $this1$i14$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 226|0;
 $agg$tmp2$i$i$i = sp + 225|0;
 $agg$tmp3$i$i$i = sp + 224|0;
 $agg$tmp4$i$i$i = sp + 223|0;
 $retval$i22$i = sp + 164|0;
 $retval$i$i = sp + 222|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 221|0;
 $agg$tmp2$i$i = sp + 120|0;
 $agg$tmp3$i$i = sp + 220|0;
 $agg$tmp5$i$i = sp + 219|0;
 $agg$tmp6$i$i = sp + 218|0;
 $agg$tmp612$i = sp + 16|0;
 $agg$tmp211$i = sp + 8|0;
 $agg$tmp10$i = sp;
 $agg$tmp$i = sp + 217|0;
 $agg$tmp2$i = sp + 104|0;
 $agg$tmp6$i = sp + 216|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $__t$addr$i = $__f;
 $1 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i = $this1;
 $__f$addr$i = $1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i>>2] = (1004); //@line 1464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i)) + 4|0); //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $2 = $__f$addr$i; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i27$i = $2;
 $3 = $__t$addr$i27$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $4;
 $5 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i22$i;
 $__u$addr$i$i$i = $5;
 $this1$i$i23$i = $this$addr$i$i20$i;
 $6 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i19$i = $6;
 $7 = $__t$addr$i$i$i19$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i18$i = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $7;
 $this1$i$i$i24$i = $this$addr$i$i$i18$i;
 $8 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $8;
 $9 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i17$i = $this1$i$i$i24$i;
 $__t$addr$i2$i$i$i$i = $9;
 $this1$i$i$i$i25$i = $this$addr$i$i$i$i17$i;
 $10 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $10;
 $11 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i25$i>>2] = $11; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $12 = HEAP32[$retval$i22$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $12; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i$i15$i = $retval$i$i;
 ;HEAP8[$agg$tmp612$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;
 ;HEAP8[$agg$tmp211$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp211$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp211$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp211$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp10$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i13$i = $__f_$i;
 $this1$i14$i = $this$addr$i13$i;
 $__t$addr$i$i$i = $agg$tmp211$i;
 $13 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$13>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp612$i;
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i14$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $__t$addr$i3$i$i$i = $agg$tmp28$i$i;
 $14 = $__t$addr$i3$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $14;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i = $ref$i$i$i$i$i;
 $15 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$15>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 16|0); //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_4>>2] = $this1; //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E1_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE($this,$__f,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $0 = $0|0;
 var $$addr = 0, $$addr$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_4 = 0;
 var $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i19$i = 0, $__t$addr$i$i21$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i27$i = 0, $__t$addr$i3$i$i$i = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp10$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0;
 var $agg$tmp2$i$i$i = 0, $agg$tmp211$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp510$i$i = 0, $agg$tmp6$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp612$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0, $retval$i$i = 0;
 var $retval$i22$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i17$i = 0, $this$addr$i$i$i18$i = 0, $this$addr$i$i15$i = 0, $this$addr$i$i20$i = 0, $this$addr$i13$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i25$i = 0, $this1$i$i$i24$i = 0, $this1$i$i23$i = 0;
 var $this1$i14$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 226|0;
 $agg$tmp2$i$i$i = sp + 225|0;
 $agg$tmp3$i$i$i = sp + 224|0;
 $agg$tmp4$i$i$i = sp + 223|0;
 $retval$i22$i = sp + 164|0;
 $retval$i$i = sp + 222|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 221|0;
 $agg$tmp2$i$i = sp + 120|0;
 $agg$tmp3$i$i = sp + 220|0;
 $agg$tmp5$i$i = sp + 219|0;
 $agg$tmp6$i$i = sp + 218|0;
 $agg$tmp612$i = sp + 16|0;
 $agg$tmp211$i = sp + 8|0;
 $agg$tmp10$i = sp;
 $agg$tmp$i = sp + 217|0;
 $agg$tmp2$i = sp + 104|0;
 $agg$tmp6$i = sp + 216|0;
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_>>2] = 0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $$addr$i = $__f;
 $__t$addr$i = $__f;
 $1 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i = $this1;
 $__f$addr$i = $1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i>>2] = (1048); //@line 1464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i)) + 4|0); //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $2 = $__f$addr$i; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i27$i = $2;
 $3 = $__t$addr$i27$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $4;
 $5 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i22$i;
 $__u$addr$i$i$i = $5;
 $this1$i$i23$i = $this$addr$i$i20$i;
 $6 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i19$i = $6;
 $7 = $__t$addr$i$i$i19$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i18$i = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $7;
 $this1$i$i$i24$i = $this$addr$i$i$i18$i;
 $8 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $8;
 $9 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i17$i = $this1$i$i$i24$i;
 $__t$addr$i2$i$i$i$i = $9;
 $this1$i$i$i$i25$i = $this$addr$i$i$i$i17$i;
 $10 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $10;
 $11 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i25$i>>2] = $11; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $12 = HEAP32[$retval$i22$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $12; //@line 1463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i$i15$i = $retval$i$i;
 ;HEAP8[$agg$tmp612$i>>0]=HEAP8[$agg$tmp6$i>>0]|0;
 ;HEAP8[$agg$tmp211$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp211$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp211$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp211$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp10$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i13$i = $__f_$i;
 $this1$i14$i = $this$addr$i13$i;
 $__t$addr$i$i$i = $agg$tmp211$i;
 $13 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$13>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp612$i;
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i14$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp28$i$i;
 $14 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $14;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i3$i$i$i = $ref$i$i$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 $__f_4 = ((($this1)) + 16|0); //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$__f_4>>2] = $this1; //@line 1743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZN5HNode10eachBeforeENSt3__28functionIFvPS_EEE($agg$result,$this,$callback) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $callback = $callback|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i$i = 0, $__end_$i = 0, $__end_$i18 = 0, $__n$addr$i = 0, $__size_$i$i = 0, $__start_$i = 0, $__start_2$i = 0, $add$ptr$i = 0, $add$ptr3$i = 0, $arrayidx$i = 0, $children = 0;
 var $children5 = 0, $children7 = 0, $cmp = 0, $cmp$i = 0, $cmp$i24 = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $lnot = 0, $node = 0, $nodes = 0, $ref$tmp = 0, $rem$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0;
 var $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i20 = 0, $this$addr$i14 = 0, $this$addr$i16 = 0, $this$addr$i21 = 0, $this$addr$i25 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i23 = 0, $this1$i15 = 0, $this1$i17 = 0, $this1$i22 = 0;
 var $this1$i26 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $nodes = sp + 24|0;
 $ref$tmp = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 HEAP32[$ref$tmp>>2] = $this1; //@line 52 "hierarchy.cpp"
 __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEEC2EjRKS2_($nodes,1,$ref$tmp); //@line 52 "hierarchy.cpp"
 L1: while(1) {
  $this$addr$i = $nodes;
  $this1$i = $this$addr$i;
  $this$addr$i$i = $this1$i;
  $this1$i$i = $this$addr$i$i;
  $__begin_$i$i = ((($this1$i$i)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $0 = HEAP32[$__begin_$i$i>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__start_$i = ((($this1$i)) + 16|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $1 = HEAP32[$__start_$i>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $div$i = (($1>>>0) / 1024)&-1; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr$i = (($0) + ($div$i<<2)|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $2 = HEAP32[$add$ptr$i>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__start_2$i = ((($this1$i)) + 16|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $3 = HEAP32[$__start_2$i>>2]|0; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $rem$i = (($3>>>0) % 1024)&-1; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr3$i = (($2) + ($rem$i<<2)|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $4 = HEAP32[$add$ptr3$i>>2]|0; //@line 56 "hierarchy.cpp"
  $node = $4; //@line 56 "hierarchy.cpp"
  __THREW__ = 0;
  invoke_vi(188,($nodes|0)); //@line 57 "hierarchy.cpp"
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if ($6) {
   label = 9;
   break;
  }
  $7 = $node; //@line 58 "hierarchy.cpp"
  __THREW__ = 0;
  invoke_vii(189,($callback|0),($7|0)); //@line 58 "hierarchy.cpp"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if ($9) {
   label = 9;
   break;
  }
  $10 = $node; //@line 59 "hierarchy.cpp"
  $children = ((($10)) + 32|0); //@line 59 "hierarchy.cpp"
  $this$addr$i14 = $children;
  $this1$i15 = $this$addr$i14;
  $11 = HEAP32[$this1$i15>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i = ((($this1$i15)) + 4|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $12 = HEAP32[$__end_$i>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i = ($11|0)==($12|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  L5: do {
   if (!($cmp$i)) {
    $i = 0; //@line 61 "hierarchy.cpp"
    while(1) {
     $13 = $i; //@line 61 "hierarchy.cpp"
     $14 = $node; //@line 61 "hierarchy.cpp"
     $children5 = ((($14)) + 32|0); //@line 61 "hierarchy.cpp"
     $this$addr$i16 = $children5;
     $this1$i17 = $this$addr$i16;
     $__end_$i18 = ((($this1$i17)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $15 = HEAP32[$__end_$i18>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $16 = HEAP32[$this1$i17>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$lhs$cast$i = $15; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$rhs$cast$i = $16; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $cmp = ($13>>>0)<($sub$ptr$div$i>>>0); //@line 61 "hierarchy.cpp"
     if (!($cmp)) {
      break L5;
     }
     $17 = $node; //@line 62 "hierarchy.cpp"
     $children7 = ((($17)) + 32|0); //@line 62 "hierarchy.cpp"
     $18 = $i; //@line 62 "hierarchy.cpp"
     $this$addr$i25 = $children7;
     $__n$addr$i = $18;
     $this1$i26 = $this$addr$i25;
     $19 = HEAP32[$this1$i26>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $20 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $arrayidx$i = (($19) + ($20<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     __THREW__ = 0;
     invoke_vii(190,($nodes|0),($arrayidx$i|0)); //@line 62 "hierarchy.cpp"
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if ($22) {
      label = 9;
      break L1;
     }
     $23 = $i; //@line 61 "hierarchy.cpp"
     $inc = (($23) + 1)|0; //@line 61 "hierarchy.cpp"
     $i = $inc; //@line 61 "hierarchy.cpp"
    }
   }
  } while(0);
  $this$addr$i21 = $nodes;
  $this1$i22 = $this$addr$i21;
  $this$addr$i$i20 = $this1$i22;
  $this1$i$i23 = $this$addr$i$i20;
  $__size_$i$i = ((($this1$i$i23)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i$i$i = $__size_$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $26 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i24 = ($26|0)==(0); //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $lnot = $cmp$i24 ^ 1; //@line 65 "hierarchy.cpp"
  if (!($lnot)) {
   label = 11;
   break;
  }
 }
 if ((label|0) == 9) {
  $24 = ___cxa_find_matching_catch_2()|0;
  $25 = tempRet0;
  $exn$slot = $24; //@line 68 "hierarchy.cpp"
  $ehselector$slot = $25; //@line 68 "hierarchy.cpp"
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 68 "hierarchy.cpp"
  $exn = $exn$slot; //@line 68 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 68 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __THREW__ = 0;
  invoke_vii(191,($agg$result|0),($this1|0)); //@line 67 "hierarchy.cpp"
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $exn$slot = $24; //@line 68 "hierarchy.cpp"
   $ehselector$slot = $25; //@line 68 "hierarchy.cpp"
   __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 68 "hierarchy.cpp"
   $exn = $exn$slot; //@line 68 "hierarchy.cpp"
   $sel = $ehselector$slot; //@line 68 "hierarchy.cpp"
   ___resumeException($exn|0);
   // unreachable;
  } else {
   __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 68 "hierarchy.cpp"
   STACKTOP = sp;return; //@line 68 "hierarchy.cpp"
  }
 }
}
function __ZN5HNodeD2Ev($this) {
 $this = $this|0;
 var $children = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $children = ((($this1)) + 32|0); //@line 22 "hierarchy.cpp"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children); //@line 22 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 22 "hierarchy.cpp"
}
function __ZNSt3__28functionIFvP5HNodeEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__f_ = 0, $__f_2 = 0, $__f_5 = 0, $cmp = 0, $this$addr = 0, $this1 = 0, $tobool = 0, $vtable = 0, $vtable6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $0 = HEAP32[$__f_>>2]|0; //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($0|0)==($this1|0); //@line 1845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_2 = ((($this1)) + 16|0);
 $1 = HEAP32[$__f_2>>2]|0;
 if ($cmp) {
  $vtable = HEAP32[$1>>2]|0; //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $2 = ((($vtable)) + 16|0); //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $3 = HEAP32[$2>>2]|0; //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  FUNCTION_TABLE_vi[$3 & 255]($1); //@line 1846 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $tobool = ($1|0)!=(0|0); //@line 1847 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $__f_5 = ((($this1)) + 16|0); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $4 = HEAP32[$__f_5>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $vtable6 = HEAP32[$4>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $5 = ((($vtable6)) + 20|0); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $6 = HEAP32[$5>>2]|0; //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 FUNCTION_TABLE_vi[$6 & 255]($4); //@line 1848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZN5HNode9eachAfterENSt3__28functionIFvPS_EEE($agg$result,$this,$callback) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $callback = $callback|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i$i = 0, $__begin_$i$i$i = 0, $__begin_$i$i63 = 0, $__end_$i = 0, $__end_$i$i$i = 0, $__end_$i31 = 0, $__end_cap_$i$i$i = 0, $__n$addr$i = 0, $__size_ = 0, $__size_$i$i = 0, $__size_$i$i39 = 0, $__size_$i$i53 = 0, $__start_$i = 0;
 var $__start_$i$i = 0, $__start_$i64 = 0, $__start_2$i = 0, $__start_2$i67 = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i2$i$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__t1$addr$i$i$i$i$i = 0, $__t1$addr$i$i5$i$i = 0, $add$ptr$i = 0, $add$ptr$i66 = 0, $add$ptr3$i = 0, $add$ptr3$i69 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $arrayidx$i = 0, $children = 0;
 var $children5 = 0, $children7 = 0, $cmp = 0, $cmp$i = 0, $cmp$i43 = 0, $cmp$i57 = 0, $div$i = 0, $div$i65 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $lnot = 0, $lnot19 = 0, $next = 0, $node = 0, $nodes = 0, $ref$tmp = 0, $rem$i = 0;
 var $rem$i68 = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i33 = 0, $this$addr$i$i$i$i47 = 0, $this$addr$i$i$i3$i$i = 0, $this$addr$i$i$i34 = 0, $this$addr$i$i$i48 = 0, $this$addr$i$i23 = 0, $this$addr$i$i35 = 0;
 var $this$addr$i$i4$i$i = 0, $this$addr$i$i49 = 0, $this$addr$i$i58 = 0, $this$addr$i24 = 0, $this$addr$i27 = 0, $this$addr$i29 = 0, $this$addr$i36 = 0, $this$addr$i44 = 0, $this$addr$i50 = 0, $this$addr$i59 = 0, $this$addr$i6$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i41 = 0, $this1$i$i$i$i55 = 0, $this1$i$i$i40 = 0;
 var $this1$i$i$i54 = 0, $this1$i$i26 = 0, $this1$i$i38 = 0, $this1$i$i52 = 0, $this1$i$i62 = 0, $this1$i$i8$i$i = 0, $this1$i25 = 0, $this1$i28 = 0, $this1$i30 = 0, $this1$i37 = 0, $this1$i45 = 0, $this1$i51 = 0, $this1$i60 = 0, $this1$i7$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $agg$tmp$byval_copy = sp + 216|0;
 $__t1$addr$i$i5$i$i = sp + 136|0;
 $__t1$addr$i$i$i = sp + 124|0;
 $__t1$addr$i$i$i$i$i = sp + 108|0;
 $__t1$addr$i$i$i$i = sp + 96|0;
 $nodes = sp + 56|0;
 $agg$tmp = sp + 48|0;
 $ref$tmp = sp + 40|0;
 $next = sp + 16|0;
 $node = sp + 12|0;
 $this$addr = $this;
 $this1 = $this$addr;
 HEAP32[$ref$tmp>>2] = $this1; //@line 73 "hierarchy.cpp"
 HEAP32[$agg$tmp>>2] = $ref$tmp; //@line 73 "hierarchy.cpp"
 $__size_ = ((($agg$tmp)) + 4|0); //@line 73 "hierarchy.cpp"
 HEAP32[$__size_>>2] = 1; //@line 73 "hierarchy.cpp"
 ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0;HEAP32[$agg$tmp$byval_copy+4>>2]=HEAP32[$agg$tmp+4>>2]|0; //@line 73 "hierarchy.cpp"
 __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEEC2ESt16initializer_listIS2_E($nodes,$agg$tmp$byval_copy); //@line 73 "hierarchy.cpp"
 $this$addr$i = $next;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 HEAP32[$this1$i$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_$i$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_$i$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 12|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = 0;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $0 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 HEAP32[$__t1$addr$i$i$i$i$i>>2] = $1;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $__t$addr$i$i$i$i$i$i = $__t1$addr$i$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__start_$i$i = ((($this1$i$i)) + 16|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__start_$i$i>>2] = 0; //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__size_$i$i = ((($this1$i$i)) + 20|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i6$i$i = $__size_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i7$i$i = $this$addr$i6$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $4 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i4$i$i = $this1$i7$i$i;
 HEAP32[$__t1$addr$i$i5$i$i>>2] = $5;
 $this1$i$i8$i$i = $this$addr$i$i4$i$i;
 $this$addr$i$i$i3$i$i = $this1$i$i8$i$i;
 $__t$addr$i$i$i2$i$i = $__t1$addr$i$i5$i$i;
 $6 = $__t$addr$i$i$i2$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $7 = HEAP32[$6>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i8$i$i>>2] = $7; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 L1: while(1) {
  $this$addr$i24 = $nodes;
  $this1$i25 = $this$addr$i24;
  $this$addr$i$i23 = $this1$i25;
  $this1$i$i26 = $this$addr$i$i23;
  $__begin_$i$i = ((($this1$i$i26)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $8 = HEAP32[$__begin_$i$i>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__start_$i = ((($this1$i25)) + 16|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $9 = HEAP32[$__start_$i>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $div$i = (($9>>>0) / 1024)&-1; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr$i = (($8) + ($div$i<<2)|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $10 = HEAP32[$add$ptr$i>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__start_2$i = ((($this1$i25)) + 16|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $11 = HEAP32[$__start_2$i>>2]|0; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $rem$i = (($11>>>0) % 1024)&-1; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr3$i = (($10) + ($rem$i<<2)|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $12 = HEAP32[$add$ptr3$i>>2]|0; //@line 78 "hierarchy.cpp"
  HEAP32[$node>>2] = $12; //@line 78 "hierarchy.cpp"
  __THREW__ = 0;
  invoke_vii(190,($next|0),($node|0)); //@line 79 "hierarchy.cpp"
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  if ($14) {
   label = 9;
   break;
  }
  __THREW__ = 0;
  invoke_vi(188,($nodes|0)); //@line 80 "hierarchy.cpp"
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 9;
   break;
  }
  $17 = HEAP32[$node>>2]|0; //@line 81 "hierarchy.cpp"
  $children = ((($17)) + 32|0); //@line 81 "hierarchy.cpp"
  $this$addr$i27 = $children;
  $this1$i28 = $this$addr$i27;
  $18 = HEAP32[$this1$i28>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i = ((($this1$i28)) + 4|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $19 = HEAP32[$__end_$i>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i = ($18|0)==($19|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  L5: do {
   if (!($cmp$i)) {
    $i = 0; //@line 83 "hierarchy.cpp"
    while(1) {
     $20 = $i; //@line 83 "hierarchy.cpp"
     $21 = HEAP32[$node>>2]|0; //@line 83 "hierarchy.cpp"
     $children5 = ((($21)) + 32|0); //@line 83 "hierarchy.cpp"
     $this$addr$i29 = $children5;
     $this1$i30 = $this$addr$i29;
     $__end_$i31 = ((($this1$i30)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $22 = HEAP32[$__end_$i31>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $23 = HEAP32[$this1$i30>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$lhs$cast$i = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$rhs$cast$i = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $cmp = ($20>>>0)<($sub$ptr$div$i>>>0); //@line 83 "hierarchy.cpp"
     if (!($cmp)) {
      break L5;
     }
     $24 = HEAP32[$node>>2]|0; //@line 84 "hierarchy.cpp"
     $children7 = ((($24)) + 32|0); //@line 84 "hierarchy.cpp"
     $25 = $i; //@line 84 "hierarchy.cpp"
     $this$addr$i44 = $children7;
     $__n$addr$i = $25;
     $this1$i45 = $this$addr$i44;
     $26 = HEAP32[$this1$i45>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $27 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $arrayidx$i = (($26) + ($27<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     __THREW__ = 0;
     invoke_vii(190,($nodes|0),($arrayidx$i|0)); //@line 84 "hierarchy.cpp"
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      label = 9;
      break L1;
     }
     $30 = $i; //@line 83 "hierarchy.cpp"
     $inc = (($30) + 1)|0; //@line 83 "hierarchy.cpp"
     $i = $inc; //@line 83 "hierarchy.cpp"
    }
   }
  } while(0);
  $this$addr$i50 = $nodes;
  $this1$i51 = $this$addr$i50;
  $this$addr$i$i49 = $this1$i51;
  $this1$i$i52 = $this$addr$i$i49;
  $__size_$i$i53 = ((($this1$i$i52)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i$i$i48 = $__size_$i$i53;
  $this1$i$i$i54 = $this$addr$i$i$i48;
  $this$addr$i$i$i$i47 = $this1$i$i$i54;
  $this1$i$i$i$i55 = $this$addr$i$i$i$i47;
  $33 = HEAP32[$this1$i$i$i$i55>>2]|0; //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i57 = ($33|0)==(0); //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $lnot = $cmp$i57 ^ 1; //@line 87 "hierarchy.cpp"
  if (!($lnot)) {
   label = 11;
   break;
  }
 }
 if ((label|0) == 9) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $exn$slot = $31; //@line 96 "hierarchy.cpp"
  $ehselector$slot = $32; //@line 96 "hierarchy.cpp"
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($next); //@line 96 "hierarchy.cpp"
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 96 "hierarchy.cpp"
  $exn = $exn$slot; //@line 96 "hierarchy.cpp"
  $sel = $ehselector$slot; //@line 96 "hierarchy.cpp"
  ___resumeException($exn|0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  while(1) {
   label = 0;
   $this$addr$i59 = $next;
   $this1$i60 = $this$addr$i59;
   $this$addr$i$i58 = $this1$i60;
   $this1$i$i62 = $this$addr$i$i58;
   $__begin_$i$i63 = ((($this1$i$i62)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $34 = HEAP32[$__begin_$i$i63>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__start_$i64 = ((($this1$i60)) + 16|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $35 = HEAP32[$__start_$i64>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $div$i65 = (($35>>>0) / 1024)&-1; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $add$ptr$i66 = (($34) + ($div$i65<<2)|0); //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $36 = HEAP32[$add$ptr$i66>>2]|0; //@line 1766 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__start_2$i67 = ((($this1$i60)) + 16|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $37 = HEAP32[$__start_2$i67>>2]|0; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $rem$i68 = (($37>>>0) % 1024)&-1; //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $add$ptr3$i69 = (($36) + ($rem$i68<<2)|0); //@line 1767 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $38 = HEAP32[$add$ptr3$i69>>2]|0; //@line 90 "hierarchy.cpp"
   HEAP32[$node>>2] = $38; //@line 90 "hierarchy.cpp"
   __THREW__ = 0;
   invoke_vi(188,($next|0)); //@line 91 "hierarchy.cpp"
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if ($40) {
    label = 9;
    break;
   }
   $41 = HEAP32[$node>>2]|0; //@line 92 "hierarchy.cpp"
   __THREW__ = 0;
   invoke_vii(189,($callback|0),($41|0)); //@line 92 "hierarchy.cpp"
   $42 = __THREW__; __THREW__ = 0;
   $43 = $42&1;
   if ($43) {
    label = 9;
    break;
   }
   $this$addr$i36 = $next;
   $this1$i37 = $this$addr$i36;
   $this$addr$i$i35 = $this1$i37;
   $this1$i$i38 = $this$addr$i$i35;
   $__size_$i$i39 = ((($this1$i$i38)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $this$addr$i$i$i34 = $__size_$i$i39;
   $this1$i$i$i40 = $this$addr$i$i$i34;
   $this$addr$i$i$i$i33 = $this1$i$i$i40;
   $this1$i$i$i$i41 = $this$addr$i$i$i$i33;
   $44 = HEAP32[$this1$i$i$i$i41>>2]|0; //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp$i43 = ($44|0)==(0); //@line 1322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $lnot19 = $cmp$i43 ^ 1; //@line 93 "hierarchy.cpp"
   if ($lnot19) {
    label = 11;
   } else {
    label = 14;
    break;
   }
  }
  if ((label|0) == 9) {
   $31 = ___cxa_find_matching_catch_2()|0;
   $32 = tempRet0;
   $exn$slot = $31; //@line 96 "hierarchy.cpp"
   $ehselector$slot = $32; //@line 96 "hierarchy.cpp"
   __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($next); //@line 96 "hierarchy.cpp"
   __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 96 "hierarchy.cpp"
   $exn = $exn$slot; //@line 96 "hierarchy.cpp"
   $sel = $ehselector$slot; //@line 96 "hierarchy.cpp"
   ___resumeException($exn|0);
   // unreachable;
  }
  else if ((label|0) == 14) {
   __THREW__ = 0;
   invoke_vii(191,($agg$result|0),($this1|0)); //@line 95 "hierarchy.cpp"
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    $31 = ___cxa_find_matching_catch_2()|0;
    $32 = tempRet0;
    $exn$slot = $31; //@line 96 "hierarchy.cpp"
    $ehselector$slot = $32; //@line 96 "hierarchy.cpp"
    __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($next); //@line 96 "hierarchy.cpp"
    __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 96 "hierarchy.cpp"
    $exn = $exn$slot; //@line 96 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 96 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   } else {
    __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($next); //@line 96 "hierarchy.cpp"
    __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($nodes); //@line 96 "hierarchy.cpp"
    STACKTOP = sp;return; //@line 96 "hierarchy.cpp"
   }
  }
 }
}
function __ZNSt3__211char_traitsIcE7compareEPKcS3_j($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__n$addr = 0, $__s1$addr = 0, $__s2$addr = 0, $call = 0, $cmp = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__s1$addr = $__s1;
 $__s2$addr = $__s2;
 $__n$addr = $__n;
 $0 = $__n$addr; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $cmp = ($0|0)==(0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 if ($cmp) {
  $cond = 0;
  STACKTOP = sp;return ($cond|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 }
 $1 = $__s1$addr; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $2 = $__s2$addr; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $3 = $__n$addr; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $call = (_memcmp($1,$2,$3)|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $cond = $call;
 STACKTOP = sp;return ($cond|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
}
function __ZN10emscripten3valC2IRKiEEOT_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $__t$addr$i = 0, $argv = 0, $call2 = 0, $call3 = 0, $call4 = 0, $this$addr = 0, $this1 = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $argv = sp;
 $this$addr = $this;
 $value$addr = $value;
 $this1 = $this$addr;
 $0 = $value$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten8internal12WireTypePackIJRKiEEC2ES3_($argv,$1); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (__ZN10emscripten8internal6TypeIDIRKiE3getEv()|0); //@line 322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call3 = (__ZNK10emscripten8internal12WireTypePackIJRKiEEcvPKvEv($argv)|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call4 = (__emval_take_value(($call2|0),($call3|0))|0); //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $call4; //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 324 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal12WireTypePackIJRKiEEC2ES3_($this,$args) {
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $args$addr = 0, $call1$i = 0, $cursor = 0, $cursor$addr$i = 0, $first$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $cursor = sp;
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$cursor>>2] = $this1$i; //@line 221 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = $args$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $cursor$addr$i = $cursor;
 $first$addr$i = $1;
 $2 = $cursor$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $first$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call1$i = (__ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($4)|0); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal20writeGenericWireTypeIiEEvRPNS0_15GenericWireTypeET_($2,$call1$i); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $5 = $cursor$addr$i; //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($5); //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal6TypeIDIRKiE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIRKiE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WireTypePackIJRKiEEcvPKvEv($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 STACKTOP = sp;return ($this1$i|0); //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal20writeGenericWireTypeIiEEvRPNS0_15GenericWireTypeET_($cursor,$wt) {
 $cursor = $cursor|0;
 $wt = $wt|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $cursor$addr = 0, $incdec$ptr = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $cursor$addr = $cursor;
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $cursor$addr; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$1>>2]|0; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$2>>2] = $0; //@line 205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $cursor$addr; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = HEAP32[$3>>2]|0; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $incdec$ptr = ((($4)) + 8|0); //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$3>>2] = $incdec$ptr; //@line 206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 236 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $1 = HEAP32[$0>>2]|0; //@line 236 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($1|0); //@line 236 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIRKiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (824|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i109 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i23 = 0;
 var $__a$addr$i99 = 0, $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i48 = 0;
 var $__size$addr$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i27$i = 0, $__t$addr$i$i$i$i30$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i20$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i22$i = 0, $__t$addr$i$i42$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0, $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i29$i = 0, $__t$addr$i26$i = 0, $__t$addr$i3$i$i = 0;
 var $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i44$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i32$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i38$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i39$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i35$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i40$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i34$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i41$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i33$i = 0, $agg$tmp5$i = 0;
 var $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i36$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i11$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i43$i = 0, $this$addr = 0;
 var $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i28$i = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i31$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i21$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i37$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0;
 var $this$addr$i$i6$i$i$i = 0, $this$addr$i$i64 = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i97 = 0, $this$addr$i108 = 0, $this$addr$i13 = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i26 = 0, $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0;
 var $this$addr$i9$i$i18 = 0, $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i24$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i48$i = 0, $this1$i$i$i105 = 0, $this1$i$i$i37 = 0, $this1$i$i$i47$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i103 = 0, $this1$i$i11$i$i42 = 0, $this1$i$i16$i$i47 = 0, $this1$i$i23$i = 0;
 var $this1$i$i35 = 0, $this1$i$i45$i = 0, $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i$i9$i$i$i = 0, $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0;
 var $this1$i84 = 0, $tobool$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $agg$tmp48$i$i33$i = sp + 136|0;
 $agg$tmp37$i$i34$i = sp + 128|0;
 $agg$tmp26$i$i35$i = sp + 120|0;
 $agg$tmp5$i$i36$i = sp + 112|0;
 $agg$tmp$i$i38$i = sp + 593|0;
 $agg$tmp2$i$i39$i = sp + 592|0;
 $agg$tmp3$i$i40$i = sp + 591|0;
 $agg$tmp4$i$i41$i = sp + 590|0;
 $retval$i43$i = sp + 532|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 589|0;
 $agg$tmp2$i$i$i = sp + 588|0;
 $agg$tmp3$i$i$i = sp + 587|0;
 $agg$tmp4$i$i$i = sp + 586|0;
 $retval$i$i = sp + 480|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 585|0;
 $agg$tmp2$i$i = sp + 432|0;
 $agg$tmp3$i$i96 = sp + 428|0;
 $agg$tmp5$i$i = sp + 584|0;
 $agg$tmp6$i$i = sp + 583|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 582|0;
 $agg$tmp2$i101 = sp + 408|0;
 $agg$tmp5$i = sp + 404|0;
 $__t1$addr$i$i$i = sp + 340|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 328|0;
 $agg$tmp$i$i = sp + 320|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 296|0;
 $__a = sp + 581|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp6 = sp + 580|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(536870911); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $1<<3; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 4|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i108 = $ref$tmp6;
 $$addr$i109 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (912); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 4|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i44$i = $15;
 $16 = $__t$addr$i44$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i42$i = $16;
 $17 = $__t$addr$i$i42$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i37$i = $retval$i43$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i45$i = $this$addr$i$i37$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i33$i>>0]=HEAP8[$agg$tmp4$i$i41$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i34$i>>0]=HEAP8[$agg$tmp3$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i35$i>>0]=HEAP8[$agg$tmp2$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i36$i>>0]=HEAP8[$agg$tmp$i$i38$i>>0]|0;
 $this$addr$i$i$i31$i = $this1$i$i45$i;
 $__u$addr$i$i$i32$i = $18;
 $this1$i$i$i47$i = $this$addr$i$i$i31$i;
 $19 = $__u$addr$i$i$i32$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i30$i = $19;
 $20 = $__t$addr$i$i$i$i30$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i28$i = $this1$i$i$i47$i;
 $__t$addr$i2$i$i$i29$i = $20;
 $this1$i$i$i$i48$i = $this$addr$i$i$i$i28$i;
 $21 = $__t$addr$i2$i$i$i29$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i27$i = $21;
 $22 = $__t$addr$i$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i48$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i43$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i26$i = $24;
 $25 = $__t$addr$i26$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i90 = $25;
 $26 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i22$i = $26;
 $27 = $__t$addr$i$i22$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i21$i = $retval$i$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i23$i = $this$addr$i$i21$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i20$i = $28;
 $29 = $__t$addr$i$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $29;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $30 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $30;
 $31 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $31;
 $this1$i$i$i$i24$i = $this$addr$i$i$i$i19$i;
 $32 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $32;
 $33 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i24$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $this1$i$i$i105 = $this$addr$i$i$i93;
 $__t$addr$i$i$i$i92 = $agg$tmp39$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $38 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $38;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $39 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i105>>2]=HEAP32[$39>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i83 = $__hold;
 $this1$i84 = $this$addr$i83;
 $this$addr$i$i82 = $this1$i84;
 $this1$i$i86 = $this$addr$i$i82;
 $this$addr$i$i$i81 = $this1$i$i86;
 $this1$i$i$i87 = $this$addr$i$i$i81;
 $40 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $40; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i84;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $41 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i33 = $__hold;
 $this1$i34 = $this$addr$i33;
 $this$addr$i$i30 = $this1$i34;
 $__p$addr$i$i31 = 0;
 $this1$i$i35 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i35;
 $this1$i$i$i37 = $this$addr$i$i$i29;
 $this$addr$i$i$i$i28 = $this1$i$i$i37;
 $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
 $42 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i32 = $42; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $43 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i18 = $this1$i$i35;
 $this1$i10$i$i41 = $this$addr$i9$i$i18;
 $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
 $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
 HEAP32[$this1$i$i11$i$i42>>2] = $43; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $44 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i44 = ($44|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i44)) {
  STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i16 = $this1$i$i35;
 $this1$i15$i$i46 = $this$addr$i14$i$i16;
 $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
 $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
 $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
 $__p$addr$i$i$i27 = $45;
 $this1$i7$i$i49 = $this$addr$i6$i$i26;
 $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $46 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $47 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i23 = $ref$i$i$i51;
 $__p$addr$i$i$i$i24 = $46;
 $__n$addr$i$i$i$i25 = $47;
 $48 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $50 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i20 = $48;
 $__p$addr$i$i$i$i$i21 = $49;
 $$addr$i$i$i$i$i22 = $50;
 $51 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i19 = $51;
 $52 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($52); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0, $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0;
 var $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0;
 var $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0;
 var $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i11$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i6$i$i$i = 0, $this$addr$i$i8 = 0;
 var $this$addr$i16$i = 0, $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0, $this1$i$i$i45$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i$i9$i$i$i = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 319|0;
 $agg$tmp2$i$i37$i = sp + 318|0;
 $agg$tmp3$i$i38$i = sp + 317|0;
 $agg$tmp4$i$i39$i = sp + 316|0;
 $retval$i41$i = sp + 260|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 315|0;
 $agg$tmp2$i$i$i = sp + 314|0;
 $agg$tmp3$i$i$i = sp + 313|0;
 $agg$tmp4$i$i$i = sp + 312|0;
 $retval$i$i = sp + 216|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 311|0;
 $agg$tmp2$i$i = sp + 168|0;
 $agg$tmp3$i$i = sp + 164|0;
 $agg$tmp5$i$i = sp + 310|0;
 $agg$tmp6$i$i = sp + 309|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 308|0;
 $agg$tmp2$i = sp + 144|0;
 $agg$tmp5$i = sp + 140|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (912); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 4|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $1;
 $2 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $2;
 $3 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $3;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $4 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $4;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $5 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $5;
 $6 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $6;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $7 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $7;
 $8 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $10;
 $11 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $11;
 $12 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $12;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $13 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $13;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $14 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $14;
 $15 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $15;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $16 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $16;
 $17 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp39$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $22 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $22;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $23 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$23>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7destroyEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EEclEOS4_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $call3 = 0.0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call3 = (+__ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE_S5_EEEdDpOT_($this1$i$i,$1)); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return (+$call3); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 112;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 4|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (112|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__baseIFdP5HNodeEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__baseIFdP5HNodeEED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 __ZdlPv($this1); //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE_S5_EEEdDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i5 = 0, $call2$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i5 = $2;
 $3 = $__t$addr$i5; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $6;
 $7 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call2$i = (+__ZZN9Hierarchy4packEvENKUlP5HNodeE_clES1_($5,$8)); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 STACKTOP = sp;return (+$call2$i); //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZN9Hierarchy4packEvENKUlP5HNodeE_clES1_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s$addr$i = 0, $agg$tmp = 0, $call = 0, $call$i15 = 0, $call10 = 0.0, $call13 = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $node$addr = 0, $options = 0, $options5 = 0, $ref$tmp = 0, $ref$tmp4 = 0, $retval = 0.0, $sel = 0;
 var $temp$lvalue = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $value = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $node$addr = sp + 40|0;
 $agg$tmp = sp + 36|0;
 $ref$tmp = sp + 24|0;
 $ref$tmp4 = sp + 12|0;
 $temp$lvalue = sp + 8|0;
 $this$addr = $this;
 HEAP32[$node$addr>>2] = $node;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0;
 $options = ((($0)) + 24|0); //@line 511 "hierarchy.cpp"
 __ZNK10emscripten3valixIA7_cEES0_RKT_($agg$tmp,$options,2375); //@line 511 "hierarchy.cpp"
 $this$addr$i = $ref$tmp;
 $__s$addr$i = 2382;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $1 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $2 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 __THREW__ = 0;
 $call$i15 = (invoke_ii(123,($2|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 8;
  } else {
   __THREW__ = 0;
   invoke_viii(162,($this1$i|0),($1|0),($call$i15|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    label = 8;
   } else {
    __THREW__ = 0;
    $call = (invoke_iiii(163,($0|0),($agg$tmp|0),($ref$tmp|0))|0); //@line 511 "hierarchy.cpp"
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $15 = ___cxa_find_matching_catch_2()|0;
     $16 = tempRet0;
     $exn$slot = $15; //@line 515 "hierarchy.cpp"
     $ehselector$slot = $16; //@line 515 "hierarchy.cpp"
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 511 "hierarchy.cpp"
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 511 "hierarchy.cpp"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 511 "hierarchy.cpp"
    if (!($call)) {
     $21 = HEAP32[$node$addr>>2]|0; //@line 514 "hierarchy.cpp"
     $value = ((($21)) + 24|0); //@line 514 "hierarchy.cpp"
     $22 = +HEAPF64[$value>>3]; //@line 514 "hierarchy.cpp"
     $call13 = (+Math_sqrt((+$22))); //@line 514 "hierarchy.cpp"
     $retval = $call13; //@line 514 "hierarchy.cpp"
     $23 = $retval; //@line 515 "hierarchy.cpp"
     STACKTOP = sp;return (+$23); //@line 515 "hierarchy.cpp"
    }
    $options5 = ((($0)) + 24|0); //@line 512 "hierarchy.cpp"
    __ZNK10emscripten3valixIA7_cEES0_RKT_($temp$lvalue,$options5,2375); //@line 512 "hierarchy.cpp"
    __THREW__ = 0;
    invoke_viii(192,($ref$tmp4|0),($temp$lvalue|0),($node$addr|0)); //@line 512 "hierarchy.cpp"
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    do {
     if ($10) {
      $17 = ___cxa_find_matching_catch_2()|0;
      $18 = tempRet0;
      $exn$slot = $17; //@line 515 "hierarchy.cpp"
      $ehselector$slot = $18; //@line 515 "hierarchy.cpp"
     } else {
      __THREW__ = 0;
      $call10 = (+invoke_di(119,($ref$tmp4|0))); //@line 512 "hierarchy.cpp"
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $19 = ___cxa_find_matching_catch_2()|0;
       $20 = tempRet0;
       $exn$slot = $19; //@line 515 "hierarchy.cpp"
       $ehselector$slot = $20; //@line 515 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($ref$tmp4); //@line 512 "hierarchy.cpp"
       break;
      }
      $retval = $call10; //@line 512 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($ref$tmp4); //@line 512 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($temp$lvalue); //@line 512 "hierarchy.cpp"
      $23 = $retval; //@line 515 "hierarchy.cpp"
      STACKTOP = sp;return (+$23); //@line 515 "hierarchy.cpp"
     }
    } while(0);
    __ZN10emscripten3valD2Ev($temp$lvalue); //@line 512 "hierarchy.cpp"
    $exn = $exn$slot; //@line 511 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 511 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $exn$slot = $13; //@line 515 "hierarchy.cpp"
  $ehselector$slot = $14; //@line 515 "hierarchy.cpp"
 }
 __ZN10emscripten3valD2Ev($agg$tmp); //@line 511 "hierarchy.cpp"
 $exn = $exn$slot; //@line 511 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 511 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return +(0.0);
}
function __ZN10emscripten3valclIJRP5HNodeEEES0_DpOT_($agg$result,$this,$args) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $__t$addr$i = 0, $args$addr = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $0 = $args$addr; //@line 412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZNK10emscripten3val12internalCallIPFPNS_8internal7_EM_VALES4_jPKPKvS6_EJRP5HNodeEEES0_T_DpOT0_($agg$result,$this1,193,$1); //@line 412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNK10emscripten3val12internalCallIPFPNS_8internal7_EM_VALES4_jPKPKvS6_EJRP5HNodeEEES0_T_DpOT0_($agg$result,$this,$impl,$args) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $impl = $impl|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__t$addr$i = 0, $argList = 0, $args$addr = 0, $argv = 0, $call2 = 0, $call3 = 0, $call4 = 0, $call5 = 0, $impl$addr = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $argList = sp + 24|0;
 $argv = sp;
 $this$addr = $this;
 $impl$addr = $impl;
 $args$addr = $args;
 $this1 = $this$addr;
 $0 = $args$addr; //@line 468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten8internal12WireTypePackIJRP5HNodeEEC2ES4_($argv,$1); //@line 468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = $impl$addr; //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = HEAP32[$this1>>2]|0; //@line 471 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJRP5HNodeEE8getCountEv($argList)|0); //@line 472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call3 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJRP5HNodeEE8getTypesEv($argList)|0); //@line 473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call4 = (__ZNK10emscripten8internal12WireTypePackIJRP5HNodeEEcvPKvEv($argv)|0); //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call5 = (FUNCTION_TABLE_iiiii[$2 & 255]($3,$call2,$call3,$call4)|0); //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten3valC2EPNS_8internal7_EM_VALE($agg$result,$call5); //@line 469 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 469 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal12WireTypePackIJRP5HNodeEEC2ES4_($this,$args) {
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $args$addr = 0, $call1$i = 0, $cursor = 0, $cursor$addr$i = 0, $first$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $cursor = sp;
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$cursor>>2] = $this1$i; //@line 221 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = $args$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $cursor$addr$i = $cursor;
 $first$addr$i = $1;
 $2 = $cursor$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $first$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call1$i = (__ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_($5)|0); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal20writeGenericWireTypeI5HNodeEEvRPNS0_15GenericWireTypeEPT_($2,$call1$i); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $6 = $cursor$addr$i; //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($6); //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJRP5HNodeEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 1; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJRP5HNodeEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJRP5HNodeEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WireTypePackIJRP5HNodeEEcvPKvEv($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 STACKTOP = sp;return ($this1$i|0); //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal20writeGenericWireTypeI5HNodeEEvRPNS0_15GenericWireTypeEPT_($cursor,$wt) {
 $cursor = $cursor|0;
 $wt = $wt|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $cursor$addr = 0, $incdec$ptr = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $cursor$addr = $cursor;
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $1 = $cursor$addr; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $2 = HEAP32[$1>>2]|0; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$2>>2] = $0; //@line 192 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $cursor$addr; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $4 = HEAP32[$3>>2]|0; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $incdec$ptr = ((($4)) + 8|0); //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$3>>2] = $incdec$ptr; //@line 193 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 194 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_($p) {
 $p = $p|0;
 var $0 = 0, $p$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $p$addr = $p;
 $0 = $p$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJRP5HNodeEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (992|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i109 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i23 = 0;
 var $__a$addr$i99 = 0, $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i48 = 0;
 var $__size$addr$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i27$i = 0, $__t$addr$i$i$i$i30$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i20$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i22$i = 0, $__t$addr$i$i42$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0, $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i29$i = 0, $__t$addr$i26$i = 0, $__t$addr$i3$i$i = 0;
 var $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i44$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i32$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i38$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i39$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i35$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i40$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i34$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i41$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i33$i = 0, $agg$tmp5$i = 0;
 var $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i36$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i11$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i43$i = 0, $this$addr = 0;
 var $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i28$i = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i31$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i21$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i37$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0;
 var $this$addr$i$i6$i$i$i = 0, $this$addr$i$i64 = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i97 = 0, $this$addr$i108 = 0, $this$addr$i13 = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i26 = 0, $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0;
 var $this$addr$i9$i$i18 = 0, $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i24$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i48$i = 0, $this1$i$i$i105 = 0, $this1$i$i$i37 = 0, $this1$i$i$i47$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i103 = 0, $this1$i$i11$i$i42 = 0, $this1$i$i16$i$i47 = 0, $this1$i$i23$i = 0;
 var $this1$i$i35 = 0, $this1$i$i45$i = 0, $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i$i9$i$i$i = 0, $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0;
 var $this1$i84 = 0, $tobool$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $agg$tmp48$i$i33$i = sp + 136|0;
 $agg$tmp37$i$i34$i = sp + 128|0;
 $agg$tmp26$i$i35$i = sp + 120|0;
 $agg$tmp5$i$i36$i = sp + 112|0;
 $agg$tmp$i$i38$i = sp + 593|0;
 $agg$tmp2$i$i39$i = sp + 592|0;
 $agg$tmp3$i$i40$i = sp + 591|0;
 $agg$tmp4$i$i41$i = sp + 590|0;
 $retval$i43$i = sp + 532|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 589|0;
 $agg$tmp2$i$i$i = sp + 588|0;
 $agg$tmp3$i$i$i = sp + 587|0;
 $agg$tmp4$i$i$i = sp + 586|0;
 $retval$i$i = sp + 480|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 585|0;
 $agg$tmp2$i$i = sp + 432|0;
 $agg$tmp3$i$i96 = sp + 428|0;
 $agg$tmp5$i$i = sp + 584|0;
 $agg$tmp6$i$i = sp + 583|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 582|0;
 $agg$tmp2$i101 = sp + 408|0;
 $agg$tmp5$i = sp + 404|0;
 $__t1$addr$i$i$i = sp + 340|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 328|0;
 $agg$tmp$i$i = sp + 320|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 296|0;
 $__a = sp + 581|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp6 = sp + 580|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(536870911); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $1<<3; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 4|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i108 = $ref$tmp6;
 $$addr$i109 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (1004); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 4|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i44$i = $15;
 $16 = $__t$addr$i44$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i42$i = $16;
 $17 = $__t$addr$i$i42$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i37$i = $retval$i43$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i45$i = $this$addr$i$i37$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i33$i>>0]=HEAP8[$agg$tmp4$i$i41$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i34$i>>0]=HEAP8[$agg$tmp3$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i35$i>>0]=HEAP8[$agg$tmp2$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i36$i>>0]=HEAP8[$agg$tmp$i$i38$i>>0]|0;
 $this$addr$i$i$i31$i = $this1$i$i45$i;
 $__u$addr$i$i$i32$i = $18;
 $this1$i$i$i47$i = $this$addr$i$i$i31$i;
 $19 = $__u$addr$i$i$i32$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i30$i = $19;
 $20 = $__t$addr$i$i$i$i30$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i28$i = $this1$i$i$i47$i;
 $__t$addr$i2$i$i$i29$i = $20;
 $this1$i$i$i$i48$i = $this$addr$i$i$i$i28$i;
 $21 = $__t$addr$i2$i$i$i29$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i27$i = $21;
 $22 = $__t$addr$i$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i48$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i43$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i26$i = $24;
 $25 = $__t$addr$i26$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i90 = $25;
 $26 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i22$i = $26;
 $27 = $__t$addr$i$i22$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i21$i = $retval$i$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i23$i = $this$addr$i$i21$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i20$i = $28;
 $29 = $__t$addr$i$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $29;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $30 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $30;
 $31 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $31;
 $this1$i$i$i$i24$i = $this$addr$i$i$i$i19$i;
 $32 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $32;
 $33 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i24$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $this1$i$i$i105 = $this$addr$i$i$i93;
 $__t$addr$i$i$i$i92 = $agg$tmp39$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $38 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $38;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $39 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i105>>2]=HEAP32[$39>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i83 = $__hold;
 $this1$i84 = $this$addr$i83;
 $this$addr$i$i82 = $this1$i84;
 $this1$i$i86 = $this$addr$i$i82;
 $this$addr$i$i$i81 = $this1$i$i86;
 $this1$i$i$i87 = $this$addr$i$i$i81;
 $40 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $40; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i84;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $41 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i33 = $__hold;
 $this1$i34 = $this$addr$i33;
 $this$addr$i$i30 = $this1$i34;
 $__p$addr$i$i31 = 0;
 $this1$i$i35 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i35;
 $this1$i$i$i37 = $this$addr$i$i$i29;
 $this$addr$i$i$i$i28 = $this1$i$i$i37;
 $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
 $42 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i32 = $42; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $43 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i18 = $this1$i$i35;
 $this1$i10$i$i41 = $this$addr$i9$i$i18;
 $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
 $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
 HEAP32[$this1$i$i11$i$i42>>2] = $43; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $44 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i44 = ($44|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i44)) {
  STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i16 = $this1$i$i35;
 $this1$i15$i$i46 = $this$addr$i14$i$i16;
 $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
 $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
 $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
 $__p$addr$i$i$i27 = $45;
 $this1$i7$i$i49 = $this$addr$i6$i$i26;
 $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $46 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $47 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i23 = $ref$i$i$i51;
 $__p$addr$i$i$i$i24 = $46;
 $__n$addr$i$i$i$i25 = $47;
 $48 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $50 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i20 = $48;
 $__p$addr$i$i$i$i$i21 = $49;
 $$addr$i$i$i$i$i22 = $50;
 $51 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i19 = $51;
 $52 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($52); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0, $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0;
 var $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0;
 var $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0;
 var $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i11$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i6$i$i$i = 0, $this$addr$i$i8 = 0;
 var $this$addr$i16$i = 0, $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0, $this1$i$i$i45$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i$i9$i$i$i = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 319|0;
 $agg$tmp2$i$i37$i = sp + 318|0;
 $agg$tmp3$i$i38$i = sp + 317|0;
 $agg$tmp4$i$i39$i = sp + 316|0;
 $retval$i41$i = sp + 260|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 315|0;
 $agg$tmp2$i$i$i = sp + 314|0;
 $agg$tmp3$i$i$i = sp + 313|0;
 $agg$tmp4$i$i$i = sp + 312|0;
 $retval$i$i = sp + 216|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 311|0;
 $agg$tmp2$i$i = sp + 168|0;
 $agg$tmp3$i$i = sp + 164|0;
 $agg$tmp5$i$i = sp + 310|0;
 $agg$tmp6$i$i = sp + 309|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 308|0;
 $agg$tmp2$i = sp + 144|0;
 $agg$tmp5$i = sp + 140|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (1004); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 4|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $1;
 $2 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $2;
 $3 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $3;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $4 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $4;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $5 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $5;
 $6 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $6;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $7 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $7;
 $8 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $10;
 $11 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $11;
 $12 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $12;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $13 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $13;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $14 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $14;
 $15 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $15;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $16 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $16;
 $17 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp39$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $22 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $22;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $23 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$23>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7destroyEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EEclEOS4_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $call3 = 0.0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call3 = (+__ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE0_S5_EEEdDpOT_($this1$i$i,$1)); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return (+$call3); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 136;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 4|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (136|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE0_S5_EEEdDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i5 = 0, $call2$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i5 = $2;
 $3 = $__t$addr$i5; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $6;
 $7 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call2$i = (+__ZZN9Hierarchy4packEvENKUlP5HNodeE0_clES1_($5,$8)); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 STACKTOP = sp;return (+$call2$i); //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZN9Hierarchy4packEvENKUlP5HNodeE0_clES1_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__s$addr$i = 0, $agg$tmp = 0, $call = 0, $call$i14 = 0, $call10 = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $node$addr = 0, $options = 0, $options5 = 0, $padding = 0, $ref$tmp = 0, $ref$tmp4 = 0, $retval = 0.0, $sel = 0, $temp$lvalue = 0;
 var $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $node$addr = sp + 40|0;
 $agg$tmp = sp + 36|0;
 $ref$tmp = sp + 24|0;
 $ref$tmp4 = sp + 12|0;
 $temp$lvalue = sp + 8|0;
 $this$addr = $this;
 HEAP32[$node$addr>>2] = $node;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0;
 $options = ((($0)) + 24|0); //@line 518 "hierarchy.cpp"
 __ZNK10emscripten3valixIA8_cEES0_RKT_($agg$tmp,$options,2360); //@line 518 "hierarchy.cpp"
 $this$addr$i = $ref$tmp;
 $__s$addr$i = 2382;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $this$addr$i$i$i$i = $this1$i$i$i;
 ;HEAP32[$this1$i$i$i>>2]=0|0;HEAP32[$this1$i$i$i+4>>2]=0|0;HEAP32[$this1$i$i$i+8>>2]=0|0; //@line 2250 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $1 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $2 = $__s$addr$i; //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 __THREW__ = 0;
 $call$i14 = (invoke_ii(123,($2|0))|0); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 8;
  } else {
   __THREW__ = 0;
   invoke_viii(162,($this1$i|0),($1|0),($call$i14|0)); //@line 2063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/string"
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    label = 8;
   } else {
    __THREW__ = 0;
    $call = (invoke_iiii(163,($0|0),($agg$tmp|0),($ref$tmp|0))|0); //@line 518 "hierarchy.cpp"
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $15 = ___cxa_find_matching_catch_2()|0;
     $16 = tempRet0;
     $exn$slot = $15; //@line 524 "hierarchy.cpp"
     $ehselector$slot = $16; //@line 524 "hierarchy.cpp"
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 518 "hierarchy.cpp"
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ref$tmp); //@line 518 "hierarchy.cpp"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 518 "hierarchy.cpp"
    if (!($call)) {
     $padding = ((($0)) + 16|0); //@line 523 "hierarchy.cpp"
     $21 = +HEAPF64[$padding>>3]; //@line 523 "hierarchy.cpp"
     $retval = $21; //@line 523 "hierarchy.cpp"
     $22 = $retval; //@line 524 "hierarchy.cpp"
     STACKTOP = sp;return (+$22); //@line 524 "hierarchy.cpp"
    }
    $options5 = ((($0)) + 24|0); //@line 520 "hierarchy.cpp"
    __ZNK10emscripten3valixIA8_cEES0_RKT_($temp$lvalue,$options5,2360); //@line 520 "hierarchy.cpp"
    __THREW__ = 0;
    invoke_viii(192,($ref$tmp4|0),($temp$lvalue|0),($node$addr|0)); //@line 520 "hierarchy.cpp"
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    do {
     if ($10) {
      $17 = ___cxa_find_matching_catch_2()|0;
      $18 = tempRet0;
      $exn$slot = $17; //@line 524 "hierarchy.cpp"
      $ehselector$slot = $18; //@line 524 "hierarchy.cpp"
     } else {
      __THREW__ = 0;
      $call10 = (+invoke_di(119,($ref$tmp4|0))); //@line 520 "hierarchy.cpp"
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $19 = ___cxa_find_matching_catch_2()|0;
       $20 = tempRet0;
       $exn$slot = $19; //@line 524 "hierarchy.cpp"
       $ehselector$slot = $20; //@line 524 "hierarchy.cpp"
       __ZN10emscripten3valD2Ev($ref$tmp4); //@line 520 "hierarchy.cpp"
       break;
      }
      $retval = $call10; //@line 520 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($ref$tmp4); //@line 520 "hierarchy.cpp"
      __ZN10emscripten3valD2Ev($temp$lvalue); //@line 520 "hierarchy.cpp"
      $22 = $retval; //@line 524 "hierarchy.cpp"
      STACKTOP = sp;return (+$22); //@line 524 "hierarchy.cpp"
     }
    } while(0);
    __ZN10emscripten3valD2Ev($temp$lvalue); //@line 520 "hierarchy.cpp"
    $exn = $exn$slot; //@line 518 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 518 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $exn$slot = $13; //@line 524 "hierarchy.cpp"
  $ehselector$slot = $14; //@line 524 "hierarchy.cpp"
 }
 __ZN10emscripten3valD2Ev($agg$tmp); //@line 518 "hierarchy.cpp"
 $exn = $exn$slot; //@line 518 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 518 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
 return +(0.0);
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i108 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i23 = 0, $__a$addr$i99 = 0;
 var $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i48 = 0, $__size$addr$i$i = 0;
 var $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i27$i = 0, $__t$addr$i$i$i$i30$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i20$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i22$i = 0, $__t$addr$i$i42$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0, $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i29$i = 0, $__t$addr$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i$i$i = 0;
 var $__t$addr$i4$i$i = 0, $__t$addr$i44$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i32$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i38$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0;
 var $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i39$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i35$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i40$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i34$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i41$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i33$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0;
 var $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i36$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i11$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i43$i = 0, $this$addr = 0, $this$addr$i = 0;
 var $this$addr$i$i = 0, $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i28$i = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i31$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i21$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i37$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0, $this$addr$i$i6$i$i$i = 0;
 var $this$addr$i$i64 = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i97 = 0, $this$addr$i107 = 0, $this$addr$i13 = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i26 = 0, $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0, $this$addr$i9$i$i18 = 0;
 var $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i24$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i48$i = 0, $this1$i$i$i37 = 0, $this1$i$i$i47$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i103 = 0, $this1$i$i11$i$i42 = 0, $this1$i$i16$i$i47 = 0, $this1$i$i23$i = 0, $this1$i$i35 = 0, $this1$i$i45$i = 0;
 var $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i$i9$i$i$i = 0, $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0, $this1$i84 = 0, $tobool$i$i44 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $agg$tmp48$i$i33$i = sp + 136|0;
 $agg$tmp37$i$i34$i = sp + 128|0;
 $agg$tmp26$i$i35$i = sp + 120|0;
 $agg$tmp5$i$i36$i = sp + 112|0;
 $agg$tmp$i$i38$i = sp + 593|0;
 $agg$tmp2$i$i39$i = sp + 592|0;
 $agg$tmp3$i$i40$i = sp + 591|0;
 $agg$tmp4$i$i41$i = sp + 590|0;
 $retval$i43$i = sp + 532|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 589|0;
 $agg$tmp2$i$i$i = sp + 588|0;
 $agg$tmp3$i$i$i = sp + 587|0;
 $agg$tmp4$i$i$i = sp + 586|0;
 $retval$i$i = sp + 480|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 585|0;
 $agg$tmp2$i$i = sp + 432|0;
 $agg$tmp3$i$i96 = sp + 428|0;
 $agg$tmp5$i$i = sp + 584|0;
 $agg$tmp6$i$i = sp + 583|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 582|0;
 $agg$tmp2$i101 = sp + 408|0;
 $agg$tmp5$i = sp + 404|0;
 $__t1$addr$i$i$i = sp + 340|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 328|0;
 $agg$tmp$i$i = sp + 320|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 296|0;
 $__a = sp + 581|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp6 = sp + 580|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(536870911); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $1<<3; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 4|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i107 = $ref$tmp6;
 $$addr$i108 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (1048); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 4|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i44$i = $15;
 $16 = $__t$addr$i44$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i42$i = $16;
 $17 = $__t$addr$i$i42$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i37$i = $retval$i43$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i45$i = $this$addr$i$i37$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i33$i>>0]=HEAP8[$agg$tmp4$i$i41$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i34$i>>0]=HEAP8[$agg$tmp3$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i35$i>>0]=HEAP8[$agg$tmp2$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i36$i>>0]=HEAP8[$agg$tmp$i$i38$i>>0]|0;
 $this$addr$i$i$i31$i = $this1$i$i45$i;
 $__u$addr$i$i$i32$i = $18;
 $this1$i$i$i47$i = $this$addr$i$i$i31$i;
 $19 = $__u$addr$i$i$i32$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i30$i = $19;
 $20 = $__t$addr$i$i$i$i30$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i28$i = $this1$i$i$i47$i;
 $__t$addr$i2$i$i$i29$i = $20;
 $this1$i$i$i$i48$i = $this$addr$i$i$i$i28$i;
 $21 = $__t$addr$i2$i$i$i29$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i27$i = $21;
 $22 = $__t$addr$i$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i48$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i43$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i26$i = $24;
 $25 = $__t$addr$i26$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i90 = $25;
 $26 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i22$i = $26;
 $27 = $__t$addr$i$i22$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i21$i = $retval$i$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i23$i = $this$addr$i$i21$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i20$i = $28;
 $29 = $__t$addr$i$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $29;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $30 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $30;
 $31 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $31;
 $this1$i$i$i$i24$i = $this$addr$i$i$i$i19$i;
 $32 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $32;
 $33 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i24$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $__t$addr$i$i$i$i92 = $agg$tmp28$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp39$i$i;
 $38 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $38;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $this$addr$i83 = $__hold;
 $this1$i84 = $this$addr$i83;
 $this$addr$i$i82 = $this1$i84;
 $this1$i$i86 = $this$addr$i$i82;
 $this$addr$i$i$i81 = $this1$i$i86;
 $this1$i$i$i87 = $this$addr$i$i$i81;
 $39 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $39; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i84;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $40 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i33 = $__hold;
 $this1$i34 = $this$addr$i33;
 $this$addr$i$i30 = $this1$i34;
 $__p$addr$i$i31 = 0;
 $this1$i$i35 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i35;
 $this1$i$i$i37 = $this$addr$i$i$i29;
 $this$addr$i$i$i$i28 = $this1$i$i$i37;
 $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
 $41 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i32 = $41; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $42 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i18 = $this1$i$i35;
 $this1$i10$i$i41 = $this$addr$i9$i$i18;
 $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
 $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
 HEAP32[$this1$i$i11$i$i42>>2] = $42; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $43 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i44 = ($43|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i44)) {
  STACKTOP = sp;return ($40|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i16 = $this1$i$i35;
 $this1$i15$i$i46 = $this$addr$i14$i$i16;
 $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
 $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
 $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $44 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
 $__p$addr$i$i$i27 = $44;
 $this1$i7$i$i49 = $this$addr$i6$i$i26;
 $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $46 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i23 = $ref$i$i$i51;
 $__p$addr$i$i$i$i24 = $45;
 $__n$addr$i$i$i$i25 = $46;
 $47 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $48 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i20 = $47;
 $__p$addr$i$i$i$i$i21 = $48;
 $$addr$i$i$i$i$i22 = $49;
 $50 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i19 = $50;
 $51 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($51); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return ($40|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0, $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i12$i$i$i = 0;
 var $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0, $agg$tmp26$i$i$i = 0;
 var $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0;
 var $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i11$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i6$i$i$i = 0, $this$addr$i$i8 = 0, $this$addr$i16$i = 0;
 var $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0, $this1$i$i$i45$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i$i9$i$i$i = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 319|0;
 $agg$tmp2$i$i37$i = sp + 318|0;
 $agg$tmp3$i$i38$i = sp + 317|0;
 $agg$tmp4$i$i39$i = sp + 316|0;
 $retval$i41$i = sp + 260|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 315|0;
 $agg$tmp2$i$i$i = sp + 314|0;
 $agg$tmp3$i$i$i = sp + 313|0;
 $agg$tmp4$i$i$i = sp + 312|0;
 $retval$i$i = sp + 216|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 311|0;
 $agg$tmp2$i$i = sp + 168|0;
 $agg$tmp3$i$i = sp + 164|0;
 $agg$tmp5$i$i = sp + 310|0;
 $agg$tmp6$i$i = sp + 309|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 308|0;
 $agg$tmp2$i = sp + 144|0;
 $agg$tmp5$i = sp + 140|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 4|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (956); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (1048); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 4|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $1;
 $2 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $2;
 $3 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $3;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $4 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $4;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $5 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $5;
 $6 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $6;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $7 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $7;
 $8 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $10;
 $11 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $11;
 $12 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $12;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $13 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $13;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $14 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $14;
 $15 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $15;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $16 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $16;
 $17 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $__t$addr$i$i$i$i = $agg$tmp28$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp39$i$i;
 $22 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $22;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7destroyEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EEclEOS4_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $call3 = 0.0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 4|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call3 = (+__ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE1_S5_EEEdDpOT_($this1$i$i,$1)); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return (+$call3); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 160;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 4|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (160|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__228__invoke_void_return_wrapperIdE6__callIJRZN9Hierarchy4packEvEUlP5HNodeE1_S5_EEEdDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i5 = 0, $call2$i = 0, $conv = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i5 = $2;
 $3 = $__t$addr$i5; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $6;
 $7 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $call2$i = (__ZZN9Hierarchy4packEvENKUlP5HNodeE1_clES1_($5,$8)|0); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $conv = (+($call2$i|0)); //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 STACKTOP = sp;return (+$conv); //@line 328 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZN9Hierarchy4packEvENKUlP5HNodeE1_clES1_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $node$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $node$addr = $node;
 STACKTOP = sp;return 0; //@line 526 "hierarchy.cpp"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEEC2EjRKS2_($this,$__n,$__v) {
 $this = $this|0;
 $__n = $__n|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i$i = 0, $__end_$i$i = 0, $__end_cap_$i$i = 0, $__n$addr = 0, $__size_$i = 0;
 var $__start_$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i2$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__t1$addr$i$i5$i = 0, $__v$addr = 0, $cmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $sel = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i3$i = 0, $this$addr$i$i4$i = 0, $this$addr$i6$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i8$i = 0, $this1$i7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $__t1$addr$i$i5$i = sp + 68|0;
 $__t1$addr$i$i = sp + 56|0;
 $__t1$addr$i$i$i$i = sp + 40|0;
 $__t1$addr$i$i$i = sp + 28|0;
 $this$addr = $this;
 $__n$addr = $__n;
 $__v$addr = $__v;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i = ((($this1$i$i)) + 4|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_$i$i = ((($this1$i$i)) + 8|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_cap_$i$i = ((($this1$i$i)) + 12|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $0 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $1;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__start_$i = ((($this1$i)) + 16|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__start_$i>>2] = 0; //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__size_$i = ((($this1$i)) + 20|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i6$i = $__size_$i;
 HEAP32[$__t1$addr$i$i>>2] = 0;
 $this1$i7$i = $this$addr$i6$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $4 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i4$i = $this1$i7$i;
 HEAP32[$__t1$addr$i$i5$i>>2] = $5;
 $this1$i$i8$i = $this$addr$i$i4$i;
 $this$addr$i$i$i3$i = $this1$i$i8$i;
 $__t$addr$i$i$i2$i = $__t1$addr$i$i5$i;
 $6 = $__t$addr$i$i$i2$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $7 = HEAP32[$6>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i8$i>>2] = $7; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = $__n$addr; //@line 1484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($8>>>0)>(0); //@line 1484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 $9 = $__n$addr; //@line 1485 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $10 = $__v$addr; //@line 1485 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 __THREW__ = 0;
 invoke_viii(194,($this1|0),($9|0),($10|0)); //@line 1485 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $exn$slot = $13; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $ehselector$slot = $14; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $exn = $exn$slot; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sel = $ehselector$slot; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE9pop_frontEv($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i35 = 0, $__begin_$i = 0, $__begin_$i$i$i = 0, $__begin_$i22 = 0, $__begin_$i25 = 0, $__n$addr$i = 0, $__new_begin$addr$i$i = 0, $__new_begin$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i34 = 0;
 var $__p$addr$i36 = 0, $__p$addr$i38 = 0, $__ptr$addr$i$i$i = 0, $__size_$i = 0, $__size_$i30 = 0, $__start_ = 0, $__start_11 = 0, $__start_3 = 0, $__start_7 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr4 = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp2$i$i = 0, $cmp = 0, $dec = 0, $div = 0, $inc = 0;
 var $rem = 0, $sub = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i33 = 0, $this$addr$i$i13 = 0, $this$addr$i$i18 = 0, $this$addr$i$i27 = 0, $this$addr$i14 = 0, $this$addr$i20 = 0, $this$addr$i23 = 0, $this$addr$i28 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0;
 var $this1$i$i$i17 = 0, $this1$i$i$i32 = 0, $this1$i$i16 = 0, $this1$i$i31 = 0, $this1$i15 = 0, $this1$i21 = 0, $this1$i24 = 0, $this1$i29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 129|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 128|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 2567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $0 = $__a; //@line 2568 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $__begin_$i22 = ((($this1$i21)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$__begin_$i22>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__start_ = ((($this1)) + 16|0); //@line 2569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $2 = HEAP32[$__start_>>2]|0; //@line 2569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $div = (($2>>>0) / 1024)&-1; //@line 2569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$ptr = (($1) + ($div<<2)|0); //@line 2568 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $3 = HEAP32[$add$ptr>>2]|0; //@line 2568 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__start_3 = ((($this1)) + 16|0); //@line 2570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $4 = HEAP32[$__start_3>>2]|0; //@line 2570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $rem = (($4>>>0) % 1024)&-1; //@line 2570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$ptr4 = (($3) + ($rem<<2)|0); //@line 2569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__p$addr$i38 = $add$ptr4;
 $5 = $__p$addr$i38; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i35 = $0;
 $__p$addr$i36 = $5;
 $6 = $__a$addr$i35; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__p$addr$i36; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $6;
 $__p$addr$i$i34 = $7;
 $8 = $__a$addr$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__p$addr$i$i34; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i33 = $8;
 $__p$addr$i$i$i = $9;
 $this$addr$i28 = $this1;
 $this1$i29 = $this$addr$i28;
 $__size_$i30 = ((($this1$i29)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i27 = $__size_$i30;
 $this1$i$i31 = $this$addr$i$i27;
 $this$addr$i$i$i26 = $this1$i$i31;
 $this1$i$i$i32 = $this$addr$i$i$i26;
 $10 = HEAP32[$this1$i$i$i32>>2]|0; //@line 2571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $dec = (($10) + -1)|0; //@line 2571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$this1$i$i$i32>>2] = $dec; //@line 2571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__start_7 = ((($this1)) + 16|0); //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $11 = HEAP32[$__start_7>>2]|0; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $inc = (($11) + 1)|0; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__start_7>>2] = $inc; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($inc>>>0)>=(2048); //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 2578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 $12 = $__a; //@line 2574 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i23 = $this1;
 $this1$i24 = $this$addr$i23;
 $__begin_$i25 = ((($this1$i24)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $13 = HEAP32[$__begin_$i25>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $14 = HEAP32[$13>>2]|0; //@line 2574 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__a$addr$i = $12;
 $__p$addr$i = $14;
 $__n$addr$i = 1024;
 $15 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $17 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i18 = $15;
 $__p$addr$i$i = $16;
 $$addr$i$i = $17;
 $18 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $18;
 $19 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($19); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $__begin_$i = ((($this1$i15)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $20 = HEAP32[$__begin_$i>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr$i = ((($20)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i13 = $this1$i15;
 $__new_begin$addr$i$i = $add$ptr$i;
 $this1$i$i16 = $this$addr$i$i13;
 $21 = $__new_begin$addr$i$i; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i12 = $this1$i$i16;
 $__new_begin$addr$i$i$i = $21;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $22 = $__new_begin$addr$i$i$i; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i$i = ((($this1$i$i$i17)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_$i$i$i>>2] = $22; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__start_11 = ((($this1)) + 16|0); //@line 2576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $23 = HEAP32[$__start_11>>2]|0; //@line 2576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub = (($23) - 1024)|0; //@line 2576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__start_11>>2] = $sub; //@line 2576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 2578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNKSt3__28functionIFvP5HNodeEEclES2_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr = 0, $__f_ = 0, $__f_2 = 0, $__t$addr$i = 0, $cmp = 0, $exception = 0, $this$addr = 0, $this1 = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__arg$addr = sp;
 $this$addr = $this;
 HEAP32[$__arg$addr>>2] = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $0 = HEAP32[$__f_>>2]|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($0|0)==(0|0); //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if ($cmp) {
  $exception = (___cxa_allocate_exception(4)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ;HEAP32[$exception>>2]=0|0; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  __ZNSt3__217bad_function_callC2Ev($exception); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___cxa_throw(($exception|0),(168|0),(31|0)); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  // unreachable; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $__f_2 = ((($this1)) + 16|0); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $1 = HEAP32[$__f_2>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $vtable = HEAP32[$1>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $2 = ((($vtable)) + 24|0); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $3 = HEAP32[$2>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__t$addr$i = $__arg$addr;
  $4 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  FUNCTION_TABLE_vii[$3 & 255]($1,$4); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE9push_backERKS2_($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__begin_$i$i$i = 0, $__begin_$i7$i$i = 0, $__end_$i$i$i = 0, $__end_$i6$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__ptr_$i = 0, $__size_$i = 0, $__size_$i$i = 0, $__size_$i10 = 0;
 var $__start_$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v$addr = 0, $__x$addr$i = 0, $add$i = 0, $agg$tmp$i = 0, $agg$tmp1$i = 0, $cmp = 0, $cmp$i$i = 0, $cond$i$i = 0, $inc = 0, $mul$i$i = 0, $sub$i = 0, $sub$i$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i11$i$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i8$i$i = 0;
 var $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i9$i$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i10$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i17 = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i18 = 0, $this$addr$i$i3$i = 0, $this$addr$i$i7 = 0, $this$addr$i15 = 0, $this$addr$i19 = 0, $this$addr$i4$i = 0, $this$addr$i4$i$i = 0, $this$addr$i8 = 0;
 var $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i12 = 0, $this1$i$i$i22 = 0, $this1$i$i11 = 0, $this1$i$i21 = 0, $this1$i$i6$i = 0, $this1$i16 = 0, $this1$i20 = 0, $this1$i5$i = 0, $this1$i5$i$i = 0, $this1$i9 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 136|0;
 $tmp = sp + 8|0;
 $this$addr = $this;
 $__v$addr = $__v;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1801 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i19 = $this1;
 $this1$i20 = $this$addr$i19;
 $this$addr$i$i18 = $this1$i20;
 $this1$i$i21 = $this$addr$i$i18;
 $this$addr$i$i$i17 = $this1$i$i21;
 $this1$i$i$i22 = $this$addr$i$i$i17;
 $__end_$i$i$i = ((($this1$i$i$i22)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__end_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i$i = ((($this1$i$i$i22)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$__begin_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i$i$i = $0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i$i$i = $1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i$i = ($sub$ptr$div$i$i$i|0)==(0); //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp$i$i) {
  $cond$i$i = 0;
 } else {
  $this$addr$i4$i$i = $this1$i$i21;
  $this1$i5$i$i = $this$addr$i4$i$i;
  $__end_$i6$i$i = ((($this1$i5$i$i)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $2 = HEAP32[$__end_$i6$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i7$i$i = ((($this1$i5$i$i)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__begin_$i7$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i8$i$i = $2; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i9$i$i = $3; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i10$i$i = (($sub$ptr$lhs$cast$i8$i$i) - ($sub$ptr$rhs$cast$i9$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i11$i$i = (($sub$ptr$sub$i10$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $mul$i$i = $sub$ptr$div$i11$i$i<<10; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$i$i = (($mul$i$i) - 1)|0; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cond$i$i = $sub$i$i;
 }
 $__start_$i = ((($this1$i20)) + 16|0); //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $4 = HEAP32[$__start_$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i4$i = $this1$i20;
 $this1$i5$i = $this$addr$i4$i;
 $__size_$i$i = ((($this1$i5$i)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i3$i = $__size_$i$i;
 $this1$i$i6$i = $this$addr$i$i3$i;
 $this$addr$i$i$i$i = $this1$i$i6$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $5 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$i = (($4) + ($5))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub$i = (($cond$i$i) - ($add$i))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($sub$i|0)==(0); //@line 1802 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp) {
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE19__add_back_capacityEv($this1); //@line 1803 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 $6 = $__a; //@line 1805 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE3endEv($tmp,$this1); //@line 1805 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i15 = $tmp;
 $this1$i16 = $this$addr$i15;
 $__ptr_$i = ((($this1$i16)) + 4|0); //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $7 = HEAP32[$__ptr_$i>>2]|0; //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__x$addr$i = $7;
 $8 = $__x$addr$i; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = $__v$addr; //@line 1805 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__a$addr$i = $6;
 $__p$addr$i = $8;
 $__args$addr$i = $9;
 $10 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $12;
 $13 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $10;
 $__p$addr$i$i = $11;
 $__args$addr$i$i = $13;
 $14 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $16;
 $17 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i13 = $14;
 $__p$addr$i$i$i = $15;
 $__args$addr$i$i$i = $17;
 $18 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $19 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $19;
 $20 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $21 = HEAP32[$20>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$18>>2] = $21; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__size_$i10 = ((($this1$i9)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i7 = $__size_$i10;
 $this1$i$i11 = $this$addr$i$i7;
 $this$addr$i$i$i6 = $this1$i$i11;
 $this1$i$i$i12 = $this$addr$i$i$i6;
 $22 = HEAP32[$this1$i$i$i12>>2]|0; //@line 1806 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $inc = (($22) + 1)|0; //@line 1806 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$this1$i$i$i12>>2] = $inc; //@line 1806 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 1807 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZN5HNodeC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $children = 0, $children3 = 0, $parent = 0, $parent4 = 0, $this$addr = 0, $this1 = 0, $value = 0, $value2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $$addr; //@line 22 "hierarchy.cpp"
 ;HEAP32[$this1>>2]=HEAP32[$1>>2]|0;HEAP32[$this1+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$this1+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$this1+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$this1+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$this1+20>>2]=HEAP32[$1+20>>2]|0; //@line 22 "hierarchy.cpp"
 $value = ((($this1)) + 24|0); //@line 22 "hierarchy.cpp"
 $2 = $$addr; //@line 22 "hierarchy.cpp"
 $value2 = ((($2)) + 24|0); //@line 22 "hierarchy.cpp"
 $3 = +HEAPF64[$value2>>3]; //@line 22 "hierarchy.cpp"
 HEAPF64[$value>>3] = $3; //@line 22 "hierarchy.cpp"
 $children = ((($this1)) + 32|0); //@line 22 "hierarchy.cpp"
 $4 = $$addr; //@line 22 "hierarchy.cpp"
 $children3 = ((($4)) + 32|0); //@line 22 "hierarchy.cpp"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEC2ERKS5_($children,$children3); //@line 22 "hierarchy.cpp"
 $parent = ((($this1)) + 44|0); //@line 22 "hierarchy.cpp"
 $5 = $$addr; //@line 22 "hierarchy.cpp"
 $parent4 = ((($5)) + 44|0); //@line 22 "hierarchy.cpp"
 $6 = HEAP32[$parent4>>2]|0; //@line 22 "hierarchy.cpp"
 HEAP32[$parent>>2] = $6; //@line 22 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 22 "hierarchy.cpp"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 1190 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 1190 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE8__appendEjRKS2_($this,$__n,$__v) {
 $this = $this|0;
 $__n = $__n|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__args$addr$i = 0, $__args$addr$i$i = 0;
 var $__args$addr$i$i$i = 0, $__back_capacity = 0, $__begin_$i$i$i = 0, $__begin_$i7$i$i = 0, $__end_$i$i$i = 0, $__end_$i6$i$i = 0, $__i = 0, $__n$addr = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__ptr_$i = 0, $__ptr_$i20 = 0, $__ptr_5$i = 0, $__size_$i = 0, $__size_$i$i = 0, $__size_$i11 = 0, $__start_$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0;
 var $__t$addr$i$i$i$i = 0, $__v$addr = 0, $__x$addr$i = 0, $add$i = 0, $agg$tmp$i = 0, $agg$tmp1$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cond$i$i = 0, $dec = 0, $inc = 0, $incdec$ptr$i = 0, $incdec$ptr3$i = 0, $mul$i$i = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0;
 var $sub$ptr$div$i11$i$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i8$i$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i9$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i10$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i16 = 0, $this$addr$i$i$i21 = 0, $this$addr$i$i$i7 = 0, $this$addr$i$i22 = 0, $this$addr$i$i3$i = 0;
 var $this$addr$i$i8 = 0, $this$addr$i14 = 0, $this$addr$i18 = 0, $this$addr$i23 = 0, $this$addr$i4$i = 0, $this$addr$i4$i$i = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i13 = 0, $this1$i$i$i26 = 0, $this1$i$i12 = 0, $this1$i$i25 = 0, $this1$i$i6$i = 0, $this1$i10 = 0, $this1$i15 = 0, $this1$i19 = 0;
 var $this1$i24 = 0, $this1$i5$i = 0, $this1$i5$i$i = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 148|0;
 $__i = sp + 8|0;
 $this$addr = $this;
 $__n$addr = $__n;
 $__v$addr = $__v;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 2267 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i23 = $this1;
 $this1$i24 = $this$addr$i23;
 $this$addr$i$i22 = $this1$i24;
 $this1$i$i25 = $this$addr$i$i22;
 $this$addr$i$i$i21 = $this1$i$i25;
 $this1$i$i$i26 = $this$addr$i$i$i21;
 $__end_$i$i$i = ((($this1$i$i$i26)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__end_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i$i = ((($this1$i$i$i26)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$__begin_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i$i$i = $0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i$i$i = $1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i$i = ($sub$ptr$div$i$i$i|0)==(0); //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp$i$i) {
  $cond$i$i = 0;
 } else {
  $this$addr$i4$i$i = $this1$i$i25;
  $this1$i5$i$i = $this$addr$i4$i$i;
  $__end_$i6$i$i = ((($this1$i5$i$i)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $2 = HEAP32[$__end_$i6$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i7$i$i = ((($this1$i5$i$i)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__begin_$i7$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i8$i$i = $2; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i9$i$i = $3; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i10$i$i = (($sub$ptr$lhs$cast$i8$i$i) - ($sub$ptr$rhs$cast$i9$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i11$i$i = (($sub$ptr$sub$i10$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $mul$i$i = $sub$ptr$div$i11$i$i<<10; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$i$i = (($mul$i$i) - 1)|0; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cond$i$i = $sub$i$i;
 }
 $__start_$i = ((($this1$i24)) + 16|0); //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $4 = HEAP32[$__start_$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i4$i = $this1$i24;
 $this1$i5$i = $this$addr$i4$i;
 $__size_$i$i = ((($this1$i5$i)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i3$i = $__size_$i$i;
 $this1$i$i6$i = $this$addr$i$i3$i;
 $this$addr$i$i$i$i = $this1$i$i6$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $5 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$i = (($4) + ($5))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub$i = (($cond$i$i) - ($add$i))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__back_capacity = $sub$i; //@line 2268 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $6 = $__n$addr; //@line 2269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $7 = $__back_capacity; //@line 2269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($6>>>0)>($7>>>0); //@line 2269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp) {
  $8 = $__n$addr; //@line 2270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $9 = $__back_capacity; //@line 2270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub = (($8) - ($9))|0; //@line 2270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE19__add_back_capacityEj($this1,$sub); //@line 2270 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE3endEv($__i,$this1); //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $10 = $__n$addr; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $tobool = ($10|0)!=(0); //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($tobool)) {
   break;
  }
  $11 = $__a; //@line 2273 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i18 = $__i;
  $this1$i19 = $this$addr$i18;
  $__ptr_$i20 = ((($this1$i19)) + 4|0); //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $12 = HEAP32[$__ptr_$i20>>2]|0; //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__x$addr$i = $12;
  $13 = $__x$addr$i; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $14 = $__v$addr; //@line 2273 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i = $11;
  $__p$addr$i = $13;
  $__args$addr$i = $14;
  $15 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $16 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $17 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i = $17;
  $18 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
  $__a$addr$i$i = $15;
  $__p$addr$i$i = $16;
  $__args$addr$i$i = $18;
  $19 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $20 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $21 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $21;
  $22 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i16 = $19;
  $__p$addr$i$i$i = $20;
  $__args$addr$i$i$i = $22;
  $23 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $24 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $24;
  $25 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $26 = HEAP32[$25>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$23>>2] = $26; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $27 = $__n$addr; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $dec = (($27) + -1)|0; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__n$addr = $dec; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i14 = $__i;
  $this1$i15 = $this$addr$i14;
  $__ptr_$i = ((($this1$i15)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $28 = HEAP32[$__ptr_$i>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr$i = ((($28)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__ptr_$i>>2] = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $29 = HEAP32[$this1$i15>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $30 = HEAP32[$29>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$lhs$cast$i = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$rhs$cast$i = $30; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i = ($sub$ptr$div$i|0)==(1024); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if ($cmp$i) {
   $31 = HEAP32[$this1$i15>>2]|0; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $incdec$ptr3$i = ((($31)) + 4|0); //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$this1$i15>>2] = $incdec$ptr3$i; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $32 = HEAP32[$this1$i15>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $33 = HEAP32[$32>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__ptr_5$i = ((($this1$i15)) + 4|0); //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__ptr_5$i>>2] = $33; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  $this$addr$i9 = $this1;
  $this1$i10 = $this$addr$i9;
  $__size_$i11 = ((($this1$i10)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i$i8 = $__size_$i11;
  $this1$i$i12 = $this$addr$i$i8;
  $this$addr$i$i$i7 = $this1$i$i12;
  $this1$i$i$i13 = $this$addr$i$i$i7;
  $34 = HEAP32[$this1$i$i$i13>>2]|0; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $inc = (($34) + 1)|0; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$this1$i$i$i13>>2] = $inc; //@line 2272 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 STACKTOP = sp;return; //@line 2274 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__begin_$i = 0, $__e = 0, $__end_$i = 0, $__i = 0, $__n$addr$i = 0, $__p$addr$i = 0;
 var $__p$addr$i$i = 0, $__ptr$addr$i$i$i = 0, $__size_$i = 0, $cmp = 0, $incdec$ptr = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i11 = 0, $this$addr$i7 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i10 = 0, $this1$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE5clearEv($this1); //@line 1108 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__i = $0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i7 = $this1;
 $this1$i8 = $this$addr$i7;
 $__end_$i = ((($this1$i8)) + 8|0); //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$__end_$i>>2]|0; //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__e = $1; //@line 1110 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $2 = $__i; //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $3 = $__e; //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp = ($2|0)!=($3|0); //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp)) {
   break;
  }
  $this$addr$i9 = $this1;
  $this1$i10 = $this$addr$i9;
  $__size_$i = ((($this1$i10)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i$i = $__size_$i;
  $this1$i$i = $this$addr$i$i;
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $4 = $__i; //@line 1112 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $5 = HEAP32[$4>>2]|0; //@line 1112 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i = $this1$i$i$i;
  $__p$addr$i = $5;
  $__n$addr$i = 1024;
  $6 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $8 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i11 = $6;
  $__p$addr$i$i = $7;
  $$addr$i$i = $8;
  $9 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i = $9;
  $10 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($10); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $11 = $__i; //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr = ((($11)) + 4|0); //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__i = $incdec$ptr; //@line 1111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEED2Ev($this1); //@line 1113 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 1113 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__new_last$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $agg$tmp2$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i$i = 0;
 var $this$addr$i$i10 = 0, $this$addr$i$i14 = 0, $this$addr$i$i5 = 0, $this$addr$i15 = 0, $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i18 = 0, $this1$i$i$i9 = 0, $this1$i$i17 = 0, $this1$i$i8 = 0, $this1$i16 = 0, $this1$i7 = 0, $tobool = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i$i$i$i = sp + 8|0;
 $agg$tmp$i$i$i$i = sp + 133|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 132|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $0;
 $this1$i$i = $this$addr$i$i;
 $1 = $__new_last$addr$i$i; //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $__new_last$addr$i$i$i = $1;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i$i; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__end_$i$i$i>>2]|0; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i$i$i = ($2|0)!=($3|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__end_2$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i$i$i = ((($4)) + -4|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $5 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $this1$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $5;
  $6 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $6;
  $__p$addr$i$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $8;
  $__p$addr$i$i$i$i$i$i = $9;
 }
 $10 = HEAP32[$this1>>2]|0; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $tobool = ($10|0)!=(0|0); //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $11 = HEAP32[$this1>>2]|0; //@line 343 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $12 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $13 = HEAP32[$this1$i16>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $12; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $13; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $this1$i$i$i9;
 $__p$addr$i = $11;
 $__n$addr$i = $sub$ptr$div$i;
 $14 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i10 = $14;
 $__p$addr$i$i = $15;
 $$addr$i$i = $16;
 $17 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $17;
 $18 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($18); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE19__add_back_capacityEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$addr$i$i = 0, $$addr$i$i462 = 0, $$addr$i$i746 = 0, $$addr$i$i767 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0;
 var $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i291 = 0, $__a$addr$i$i$i566 = 0, $__a$addr$i$i187 = 0, $__a$addr$i$i296 = 0, $__a$addr$i$i571 = 0, $__a$addr$i$i716 = 0, $__a$addr$i$i97$i = 0, $__a$addr$i$i97$i233 = 0, $__a$addr$i$i97$i508 = 0, $__a$addr$i454 = 0, $__a$addr$i463 = 0, $__a$addr$i719 = 0, $__a$addr$i747 = 0, $__a$addr$i768 = 0, $__a$addr$i99$i = 0, $__a$addr$i99$i236 = 0, $__a$addr$i99$i511 = 0;
 var $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__args$addr$i$i$i$i289 = 0, $__args$addr$i$i$i$i564 = 0, $__args$addr$i$i$i293 = 0, $__args$addr$i$i$i568 = 0, $__args$addr$i$i298 = 0, $__args$addr$i$i573 = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__b$addr$i$i$i234 = 0, $__b$addr$i$i$i509 = 0, $__b$addr$i$i186 = 0, $__b$addr$i$i237 = 0, $__b$addr$i$i512 = 0, $__b$addr$i$i717 = 0, $__b$addr$i720 = 0, $__begin_ = 0;
 var $__begin_$i = 0, $__begin_$i$i$i = 0, $__begin_$i$i$i222 = 0, $__begin_$i$i$i497 = 0, $__begin_$i175 = 0, $__begin_$i183 = 0, $__begin_$i201 = 0, $__begin_$i208 = 0, $__begin_$i218 = 0, $__begin_$i323 = 0, $__begin_$i432 = 0, $__begin_$i476 = 0, $__begin_$i483 = 0, $__begin_$i493 = 0, $__begin_$i598 = 0, $__begin_$i708 = 0, $__begin_$i730 = 0, $__begin_$i761 = 0, $__begin_$i773 = 0, $__begin_11$i = 0;
 var $__begin_11$i350 = 0, $__begin_11$i625 = 0, $__begin_122 = 0, $__begin_24$i = 0, $__begin_24$i376 = 0, $__begin_24$i651 = 0, $__begin_31$i = 0, $__begin_31$i385 = 0, $__begin_31$i660 = 0, $__begin_32$i = 0, $__begin_32$i386 = 0, $__begin_32$i661 = 0, $__begin_4$i = 0, $__begin_4$i327 = 0, $__begin_4$i602 = 0, $__begin_6$i = 0, $__begin_6$i335 = 0, $__begin_6$i610 = 0, $__begin_8$i = 0, $__begin_8$i337 = 0;
 var $__begin_8$i612 = 0, $__buf = 0, $__c$i = 0, $__c$i307 = 0, $__c$i582 = 0, $__d$i = 0, $__d$i306 = 0, $__d$i581 = 0, $__ds = 0, $__end_ = 0, $__end_$i = 0, $__end_$i178 = 0, $__end_$i197 = 0, $__end_$i316 = 0, $__end_$i431 = 0, $__end_$i447 = 0, $__end_$i475 = 0, $__end_$i591 = 0, $__end_$i707 = 0, $__end_$i729 = 0;
 var $__end_$i764 = 0, $__end_10$i = 0, $__end_10$i349 = 0, $__end_10$i624 = 0, $__end_124 = 0, $__end_26$i = 0, $__end_26$i380 = 0, $__end_26$i655 = 0, $__end_33$i = 0, $__end_33$i387 = 0, $__end_33$i662 = 0, $__end_34$i = 0, $__end_34$i388 = 0, $__end_34$i663 = 0, $__end_39$i = 0, $__end_39$i406 = 0, $__end_39$i681 = 0, $__end_41$i = 0, $__end_41$i408 = 0, $__end_41$i683 = 0;
 var $__end_7$i = 0, $__end_7$i336 = 0, $__end_7$i611 = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i318 = 0, $__end_cap_$i$i420 = 0, $__end_cap_$i$i443 = 0, $__end_cap_$i$i593 = 0, $__end_cap_$i$i696 = 0, $__end_cap_$i113$i = 0, $__end_cap_$i113$i373 = 0, $__end_cap_$i113$i648 = 0, $__end_cap_$i149 = 0, $__end_cap_$i50$i = 0, $__end_cap_$i50$i403 = 0, $__end_cap_$i50$i678 = 0, $__end_cap_$i57$i = 0, $__end_cap_$i57$i355 = 0, $__end_cap_$i57$i630 = 0;
 var $__end_cap_$i66$i = 0, $__end_cap_$i66$i395 = 0, $__end_cap_$i66$i670 = 0, $__end_cap_$i739 = 0, $__end_cap_$i74$i = 0, $__end_cap_$i74$i390 = 0, $__end_cap_$i74$i665 = 0, $__first$addr$i$i = 0, $__first$addr$i$i$i = 0, $__first$addr$i$i$i274 = 0, $__first$addr$i$i$i549 = 0, $__first$addr$i$i279 = 0, $__first$addr$i$i554 = 0, $__front_capacity = 0, $__i = 0, $__i$addr$i$i$i = 0, $__i$addr$i$i$i278 = 0, $__i$addr$i$i$i553 = 0, $__i$addr$i4$i$i = 0, $__i$addr$i4$i$i273 = 0;
 var $__i$addr$i4$i$i548 = 0, $__i$addr$i5$i$i = 0, $__i$addr$i5$i$i272 = 0, $__i$addr$i5$i$i547 = 0, $__i108 = 0, $__last$addr$i$i = 0, $__last$addr$i$i$i = 0, $__last$addr$i$i$i275 = 0, $__last$addr$i$i$i550 = 0, $__last$addr$i$i280 = 0, $__last$addr$i$i555 = 0, $__n$addr = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__n$addr$i$i461 = 0, $__n$addr$i$i745 = 0, $__n$addr$i455 = 0, $__n$addr$i464 = 0, $__n$addr$i748 = 0, $__n$addr$i769 = 0;
 var $__n$i$i$i = 0, $__n$i$i$i277 = 0, $__n$i$i$i552 = 0, $__nb = 0, $__new_begin$addr$i$i = 0, $__new_begin$addr$i$i$i = 0, $__new_begin$addr$i$i$i210 = 0, $__new_begin$addr$i$i$i485 = 0, $__new_begin$addr$i$i213 = 0, $__new_begin$addr$i$i488 = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i288 = 0, $__p$addr$i$i$i$i563 = 0, $__p$addr$i$i$i292 = 0, $__p$addr$i$i$i567 = 0, $__p$addr$i$i297 = 0, $__p$addr$i$i572 = 0;
 var $__p$addr$i$i766 = 0, $__p$addr$i45$i = 0, $__p$addr$i45$i285 = 0, $__p$addr$i45$i560 = 0, $__pt = 0, $__pt53 = 0, $__ptr$addr$i$i$i = 0, $__result$addr$i$i = 0, $__result$addr$i$i$i = 0, $__result$addr$i$i$i276 = 0, $__result$addr$i$i$i551 = 0, $__result$addr$i$i281 = 0, $__result$addr$i$i556 = 0, $__second_$i$i$i$i = 0, $__second_$i$i$i116$i = 0, $__size$addr$i$i$i = 0, $__size$addr$i$i$i458 = 0, $__size$addr$i$i$i742 = 0, $__size_$i = 0, $__start_ = 0;
 var $__start_$i = 0, $__start_128 = 0, $__start_44 = 0, $__start_48 = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i286 = 0, $__t$addr$i$i$i$i$i561 = 0, $__t$addr$i$i$i$i290 = 0, $__t$addr$i$i$i$i565 = 0, $__t$addr$i$i$i295 = 0, $__t$addr$i$i$i570 = 0, $__t$addr$i$i155 = 0, $__t$addr$i$i161 = 0, $__t$addr$i$i167 = 0, $__t$addr$i$i61$i = 0, $__t$addr$i$i61$i265 = 0, $__t$addr$i$i61$i540 = 0;
 var $__t$addr$i$i80$i = 0, $__t$addr$i$i80$i253 = 0, $__t$addr$i$i80$i528 = 0, $__t$addr$i$i86$i = 0, $__t$addr$i$i86$i247 = 0, $__t$addr$i$i86$i522 = 0, $__t$addr$i$i92$i = 0, $__t$addr$i$i92$i241 = 0, $__t$addr$i$i92$i516 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i$i264 = 0, $__t$addr$i3$i$i539 = 0, $__t$addr$i3$i154 = 0, $__t$addr$i3$i160 = 0, $__t$addr$i3$i166 = 0, $__t$addr$i3$i79$i = 0, $__t$addr$i3$i79$i252 = 0, $__t$addr$i3$i79$i527 = 0, $__t$addr$i3$i85$i = 0;
 var $__t$addr$i3$i85$i246 = 0, $__t$addr$i3$i85$i521 = 0, $__t$addr$i3$i91$i = 0, $__t$addr$i3$i91$i240 = 0, $__t$addr$i3$i91$i515 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i4$i$i263 = 0, $__t$addr$i4$i$i538 = 0, $__t$addr$i4$i153 = 0, $__t$addr$i4$i159 = 0, $__t$addr$i4$i165 = 0, $__t$addr$i4$i78$i = 0, $__t$addr$i4$i78$i251 = 0, $__t$addr$i4$i78$i526 = 0, $__t$addr$i4$i84$i = 0, $__t$addr$i4$i84$i245 = 0, $__t$addr$i4$i84$i520 = 0, $__t$addr$i4$i90$i = 0, $__t$addr$i4$i90$i239 = 0;
 var $__t$addr$i4$i90$i514 = 0, $__t$i = 0, $__t$i$i = 0, $__t$i$i268 = 0, $__t$i$i543 = 0, $__t$i158 = 0, $__t$i164 = 0, $__t$i170 = 0, $__t$i194 = 0, $__t$i310 = 0, $__t$i585 = 0, $__t$i83$i = 0, $__t$i83$i256 = 0, $__t$i83$i531 = 0, $__t$i89$i = 0, $__t$i89$i250 = 0, $__t$i89$i525 = 0, $__t$i95$i = 0, $__t$i95$i244 = 0, $__t$i95$i519 = 0;
 var $__x$addr$i = 0, $__x$addr$i$i = 0, $__x$addr$i$i$i = 0, $__x$addr$i$i$i$i = 0, $__x$addr$i$i$i$i231 = 0, $__x$addr$i$i$i$i506 = 0, $__x$addr$i$i$i714 = 0, $__x$addr$i$i266 = 0, $__x$addr$i$i541 = 0, $__x$addr$i103$i = 0, $__x$addr$i103$i229 = 0, $__x$addr$i103$i504 = 0, $__x$addr$i106$i = 0, $__x$addr$i106$i227 = 0, $__x$addr$i106$i502 = 0, $__x$addr$i156 = 0, $__x$addr$i162 = 0, $__x$addr$i168 = 0, $__x$addr$i193 = 0, $__x$addr$i305 = 0;
 var $__x$addr$i580 = 0, $__x$addr$i81$i = 0, $__x$addr$i81$i254 = 0, $__x$addr$i81$i529 = 0, $__x$addr$i87$i = 0, $__x$addr$i87$i248 = 0, $__x$addr$i87$i523 = 0, $__x$addr$i93$i = 0, $__x$addr$i93$i242 = 0, $__x$addr$i93$i517 = 0, $__y$addr$i = 0, $__y$addr$i$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i$i$i$i = 0, $__y$addr$i$i$i$i232 = 0, $__y$addr$i$i$i$i507 = 0, $__y$addr$i$i$i715 = 0, $__y$addr$i$i267 = 0, $__y$addr$i$i542 = 0, $__y$addr$i157 = 0;
 var $__y$addr$i163 = 0, $__y$addr$i169 = 0, $__y$addr$i82$i = 0, $__y$addr$i82$i255 = 0, $__y$addr$i82$i530 = 0, $__y$addr$i88$i = 0, $__y$addr$i88$i249 = 0, $__y$addr$i88$i524 = 0, $__y$addr$i94$i = 0, $__y$addr$i94$i243 = 0, $__y$addr$i94$i518 = 0, $add = 0, $add$i = 0, $add$i202 = 0, $add$i333 = 0, $add$i608 = 0, $add$ptr$i = 0, $add$ptr$i$i$i = 0, $add$ptr$i$i$i348 = 0, $add$ptr$i$i$i623 = 0;
 var $add$ptr$i204 = 0, $add$ptr$i219 = 0, $add$ptr$i339 = 0, $add$ptr$i494 = 0, $add$ptr$i614 = 0, $add$ptr13$i = 0, $add$ptr13$i352 = 0, $add$ptr13$i627 = 0, $add45 = 0, $add70 = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i188 = 0, $agg$tmp$i$i214 = 0, $agg$tmp$i$i299 = 0, $agg$tmp$i$i489 = 0, $agg$tmp$i$i574 = 0, $agg$tmp$i100$i = 0, $agg$tmp$i100$i238 = 0, $agg$tmp$i100$i513 = 0;
 var $agg$tmp$i195 = 0, $agg$tmp$i195$byval_copy = 0, $agg$tmp$i311 = 0, $agg$tmp$i311$byval_copy = 0, $agg$tmp$i586 = 0, $agg$tmp$i586$byval_copy = 0, $agg$tmp$i721 = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $agg$tmp1$i$i294 = 0, $agg$tmp1$i$i569 = 0, $agg$tmp1$i718 = 0, $agg$tmp1$i98$i = 0, $agg$tmp1$i98$i235 = 0, $agg$tmp1$i98$i510 = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i211 = 0, $agg$tmp2$i$i486 = 0, $agg$tmp25$i = 0, $agg$tmp25$i$byval_copy = 0;
 var $agg$tmp25$i314 = 0, $agg$tmp25$i314$byval_copy = 0, $agg$tmp25$i589 = 0, $agg$tmp25$i589$byval_copy = 0, $call$i$i$i = 0, $call$i$i$i471 = 0, $call$i$i$i755757 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i$i = 0, $cmp$i$i$i$i366 = 0, $cmp$i$i$i$i641 = 0, $cmp$i$i$i205 = 0, $cmp$i$i$i344 = 0, $cmp$i$i$i619 = 0, $cmp$i$i$i723 = 0, $cmp$i$i467 = 0, $cmp$i$i751 = 0;
 var $cmp$i136 = 0, $cmp$i200 = 0, $cmp$i322 = 0, $cmp$i597 = 0, $cmp114 = 0, $cmp17 = 0, $cmp2$i = 0, $cmp2$i325 = 0, $cmp2$i600 = 0, $cmp20 = 0, $cmp24 = 0, $cmp32 = 0, $cmp41 = 0, $cmp51 = 0, $cmp7 = 0, $cmp78 = 0, $cmp89 = 0, $cmp96 = 0, $cond$lvalue$i$i$i2D = 0, $cond$lvalue$i$i$i3702D = 0;
 var $cond$lvalue$i$i$i6452D = 0, $cond$lvalue$i$i2D = 0, $cond$lvalue$i$i7262D = 0, $conv = 0, $conv$i = 0, $conv42 = 0, $dec = 0, $dec106 = 0, $dec29 = 0, $dec38 = 0, $dec59 = 0, $dec84 = 0, $div = 0, $div$i = 0, $div$i203 = 0, $div$i334 = 0, $div$i609 = 0, $div22$i = 0, $div22$i371 = 0, $div22$i646 = 0;
 var $ehselector$slot = 0, $ehselector$slot$i = 0, $ehselector$slot$i313 = 0, $ehselector$slot$i588 = 0, $exception$i$i = 0, $exception$i$i468 = 0, $exception$i$i752 = 0, $exn = 0, $exn$i = 0, $exn$i$sink = 0, $exn$i410 = 0, $exn$i685 = 0, $exn$slot = 0, $exn$slot$i = 0, $exn$slot$i312 = 0, $exn$slot$i587 = 0, $exn132 = 0, $idx$neg$i = 0, $idx$neg$i338 = 0, $idx$neg$i613 = 0;
 var $idx$neg12$i = 0, $idx$neg12$i351 = 0, $idx$neg12$i626 = 0, $inc = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i409 = 0, $incdec$ptr$i684 = 0, $incdec$ptr116 = 0, $mul = 0, $mul$i = 0, $mul$i$i = 0, $mul$i$i$i = 0, $mul$i$i$i346 = 0, $mul$i$i$i621 = 0, $mul$i$i470 = 0, $mul$i$i754 = 0, $mul$i364 = 0, $mul$i639 = 0, $mul47 = 0;
 var $mul62 = 0, $mul66 = 0, $ref$i$i$i$i = 0, $ref$i$i$i117$i = 0, $ref$tmp = 0, $ref$tmp$i = 0, $ref$tmp$i308 = 0, $ref$tmp$i583 = 0, $ref$tmp20$i = 0, $ref$tmp20$i309 = 0, $ref$tmp20$i584 = 0, $ref$tmp35 = 0, $ref$tmp63 = 0, $ref$tmp67 = 0, $ref$tmp80 = 0, $rem$i = 0, $sel = 0, $sel$i = 0, $sel$i$sink = 0, $sel$i411 = 0;
 var $sel$i686 = 0, $sub = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i$i$i343 = 0, $sub$ptr$div$i$i$i618 = 0, $sub$ptr$div$i332 = 0, $sub$ptr$div$i428 = 0, $sub$ptr$div$i436 = 0, $sub$ptr$div$i451 = 0, $sub$ptr$div$i480 = 0, $sub$ptr$div$i607 = 0, $sub$ptr$div$i704 = 0, $sub$ptr$div$i712 = 0, $sub$ptr$div$i734 = 0, $sub$ptr$div19$i = 0, $sub$ptr$div19$i363 = 0, $sub$ptr$div19$i638 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0;
 var $sub$ptr$lhs$cast$i$i$i340 = 0, $sub$ptr$lhs$cast$i$i$i615 = 0, $sub$ptr$lhs$cast$i329 = 0, $sub$ptr$lhs$cast$i425 = 0, $sub$ptr$lhs$cast$i433 = 0, $sub$ptr$lhs$cast$i448 = 0, $sub$ptr$lhs$cast$i477 = 0, $sub$ptr$lhs$cast$i604 = 0, $sub$ptr$lhs$cast$i701 = 0, $sub$ptr$lhs$cast$i709 = 0, $sub$ptr$lhs$cast$i731 = 0, $sub$ptr$lhs$cast16$i = 0, $sub$ptr$lhs$cast16$i360 = 0, $sub$ptr$lhs$cast16$i635 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i$i$i341 = 0, $sub$ptr$rhs$cast$i$i$i616 = 0, $sub$ptr$rhs$cast$i330 = 0, $sub$ptr$rhs$cast$i426 = 0;
 var $sub$ptr$rhs$cast$i434 = 0, $sub$ptr$rhs$cast$i449 = 0, $sub$ptr$rhs$cast$i478 = 0, $sub$ptr$rhs$cast$i605 = 0, $sub$ptr$rhs$cast$i702 = 0, $sub$ptr$rhs$cast$i710 = 0, $sub$ptr$rhs$cast$i732 = 0, $sub$ptr$rhs$cast17$i = 0, $sub$ptr$rhs$cast17$i361 = 0, $sub$ptr$rhs$cast17$i636 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i$i$i342 = 0, $sub$ptr$sub$i$i$i617 = 0, $sub$ptr$sub$i331 = 0, $sub$ptr$sub$i427 = 0, $sub$ptr$sub$i435 = 0, $sub$ptr$sub$i450 = 0, $sub$ptr$sub$i479 = 0, $sub$ptr$sub$i606 = 0;
 var $sub$ptr$sub$i703 = 0, $sub$ptr$sub$i711 = 0, $sub$ptr$sub$i733 = 0, $sub$ptr$sub18$i = 0, $sub$ptr$sub18$i362 = 0, $sub$ptr$sub18$i637 = 0, $sub129 = 0, $sub16 = 0, $sub43 = 0, $sub49 = 0, $sub6 = 0, $sub74 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i301 = 0, $this$addr$i$i$i$i414 = 0, $this$addr$i$i$i$i437 = 0;
 var $this$addr$i$i$i$i576 = 0, $this$addr$i$i$i$i690 = 0, $this$addr$i$i$i109$i = 0, $this$addr$i$i$i109$i223 = 0, $this$addr$i$i$i109$i498 = 0, $this$addr$i$i$i139 = 0, $this$addr$i$i$i145 = 0, $this$addr$i$i$i171 = 0, $this$addr$i$i$i179 = 0, $this$addr$i$i$i190 = 0, $this$addr$i$i$i209 = 0, $this$addr$i$i$i302 = 0, $this$addr$i$i$i415 = 0, $this$addr$i$i$i43$i = 0, $this$addr$i$i$i43$i287 = 0, $this$addr$i$i$i43$i562 = 0, $this$addr$i$i$i438 = 0, $this$addr$i$i$i452 = 0, $this$addr$i$i$i459 = 0, $this$addr$i$i$i46$i = 0;
 var $this$addr$i$i$i46$i282 = 0, $this$addr$i$i$i46$i557 = 0, $this$addr$i$i$i484 = 0, $this$addr$i$i$i53$i = 0, $this$addr$i$i$i53$i269 = 0, $this$addr$i$i$i53$i544 = 0, $this$addr$i$i$i577 = 0, $this$addr$i$i$i62$i = 0, $this$addr$i$i$i62$i260 = 0, $this$addr$i$i$i62$i535 = 0, $this$addr$i$i$i691 = 0, $this$addr$i$i$i70$i = 0, $this$addr$i$i$i70$i257 = 0, $this$addr$i$i$i70$i532 = 0, $this$addr$i$i$i713 = 0, $this$addr$i$i$i735 = 0, $this$addr$i$i$i743 = 0, $this$addr$i$i$i96$i = 0, $this$addr$i$i$i96$i230 = 0, $this$addr$i$i$i96$i505 = 0;
 var $this$addr$i$i110$i = 0, $this$addr$i$i110$i224 = 0, $this$addr$i$i110$i499 = 0, $this$addr$i$i140 = 0, $this$addr$i$i146 = 0, $this$addr$i$i180 = 0, $this$addr$i$i191 = 0, $this$addr$i$i212 = 0, $this$addr$i$i303 = 0, $this$addr$i$i416 = 0, $this$addr$i$i439 = 0, $this$addr$i$i453 = 0, $this$addr$i$i460 = 0, $this$addr$i$i47$i = 0, $this$addr$i$i47$i283 = 0, $this$addr$i$i47$i558 = 0, $this$addr$i$i487 = 0, $this$addr$i$i54$i = 0, $this$addr$i$i54$i270 = 0, $this$addr$i$i54$i545 = 0;
 var $this$addr$i$i578 = 0, $this$addr$i$i63$i = 0, $this$addr$i$i63$i261 = 0, $this$addr$i$i63$i536 = 0, $this$addr$i$i692 = 0, $this$addr$i$i71$i = 0, $this$addr$i$i71$i258 = 0, $this$addr$i$i71$i533 = 0, $this$addr$i$i736 = 0, $this$addr$i$i744 = 0, $this$addr$i$i765 = 0, $this$addr$i102$i = 0, $this$addr$i102$i228 = 0, $this$addr$i102$i503 = 0, $this$addr$i105$i = 0, $this$addr$i105$i226 = 0, $this$addr$i105$i501 = 0, $this$addr$i111$i = 0, $this$addr$i111$i225 = 0, $this$addr$i111$i500 = 0;
 var $this$addr$i134 = 0, $this$addr$i137 = 0, $this$addr$i141 = 0, $this$addr$i147 = 0, $this$addr$i173 = 0, $this$addr$i176 = 0, $this$addr$i181 = 0, $this$addr$i192 = 0, $this$addr$i206 = 0, $this$addr$i216 = 0, $this$addr$i304 = 0, $this$addr$i417 = 0, $this$addr$i429 = 0, $this$addr$i440 = 0, $this$addr$i473 = 0, $this$addr$i48$i = 0, $this$addr$i48$i284 = 0, $this$addr$i48$i559 = 0, $this$addr$i481 = 0, $this$addr$i491 = 0;
 var $this$addr$i55$i = 0, $this$addr$i55$i271 = 0, $this$addr$i55$i546 = 0, $this$addr$i579 = 0, $this$addr$i64$i = 0, $this$addr$i64$i262 = 0, $this$addr$i64$i537 = 0, $this$addr$i693 = 0, $this$addr$i705 = 0, $this$addr$i72$i = 0, $this$addr$i72$i259 = 0, $this$addr$i72$i534 = 0, $this$addr$i727 = 0, $this$addr$i737 = 0, $this$addr$i759 = 0, $this$addr$i762 = 0, $this$addr$i771 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i320 = 0, $this1$i$i$i$i422 = 0, $this1$i$i$i$i445 = 0, $this1$i$i$i$i595 = 0, $this1$i$i$i$i698 = 0, $this1$i$i$i115$i = 0, $this1$i$i$i115$i375 = 0, $this1$i$i$i115$i650 = 0, $this1$i$i$i144 = 0, $this1$i$i$i151 = 0, $this1$i$i$i185 = 0, $this1$i$i$i199 = 0, $this1$i$i$i221 = 0, $this1$i$i$i319 = 0, $this1$i$i$i421 = 0, $this1$i$i$i444 = 0, $this1$i$i$i496 = 0, $this1$i$i$i52$i = 0;
 var $this1$i$i$i52$i405 = 0, $this1$i$i$i52$i680 = 0, $this1$i$i$i59$i = 0, $this1$i$i$i59$i357 = 0, $this1$i$i$i59$i632 = 0, $this1$i$i$i594 = 0, $this1$i$i$i68$i = 0, $this1$i$i$i68$i397 = 0, $this1$i$i$i68$i672 = 0, $this1$i$i$i697 = 0, $this1$i$i$i741 = 0, $this1$i$i$i76$i = 0, $this1$i$i$i76$i392 = 0, $this1$i$i$i76$i667 = 0, $this1$i$i114$i = 0, $this1$i$i114$i374 = 0, $this1$i$i114$i649 = 0, $this1$i$i143 = 0, $this1$i$i150 = 0, $this1$i$i184 = 0;
 var $this1$i$i198 = 0, $this1$i$i220 = 0, $this1$i$i317 = 0, $this1$i$i419 = 0, $this1$i$i442 = 0, $this1$i$i456 = 0, $this1$i$i465 = 0, $this1$i$i495 = 0, $this1$i$i51$i = 0, $this1$i$i51$i404 = 0, $this1$i$i51$i679 = 0, $this1$i$i58$i = 0, $this1$i$i58$i356 = 0, $this1$i$i58$i631 = 0, $this1$i$i592 = 0, $this1$i$i67$i = 0, $this1$i$i67$i396 = 0, $this1$i$i67$i671 = 0, $this1$i$i695 = 0, $this1$i$i740 = 0;
 var $this1$i$i749 = 0, $this1$i$i75$i = 0, $this1$i$i75$i391 = 0, $this1$i$i75$i666 = 0, $this1$i104$i = 0, $this1$i104$i381 = 0, $this1$i104$i656 = 0, $this1$i107$i = 0, $this1$i107$i377 = 0, $this1$i107$i652 = 0, $this1$i112$i = 0, $this1$i112$i372 = 0, $this1$i112$i647 = 0, $this1$i135 = 0, $this1$i138 = 0, $this1$i142 = 0, $this1$i148 = 0, $this1$i174 = 0, $this1$i177 = 0, $this1$i182 = 0;
 var $this1$i196 = 0, $this1$i207 = 0, $this1$i217 = 0, $this1$i315 = 0, $this1$i418 = 0, $this1$i430 = 0, $this1$i441 = 0, $this1$i474 = 0, $this1$i482 = 0, $this1$i49$i = 0, $this1$i49$i402 = 0, $this1$i49$i677 = 0, $this1$i492 = 0, $this1$i56$i = 0, $this1$i56$i354 = 0, $this1$i56$i629 = 0, $this1$i590 = 0, $this1$i65$i = 0, $this1$i65$i394 = 0, $this1$i65$i669 = 0;
 var $this1$i694 = 0, $this1$i706 = 0, $this1$i728 = 0, $this1$i73$i = 0, $this1$i73$i389 = 0, $this1$i73$i664 = 0, $this1$i738 = 0, $this1$i760 = 0, $this1$i763 = 0, $this1$i772 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1776|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1776|0);
 $agg$tmp25$i$byval_copy = sp + 1760|0;
 $agg$tmp$i195$byval_copy = sp + 1756|0;
 $agg$tmp25$i589$byval_copy = sp + 1752|0;
 $agg$tmp$i586$byval_copy = sp + 1748|0;
 $agg$tmp25$i314$byval_copy = sp + 1744|0;
 $agg$tmp$i311$byval_copy = sp + 1740|0;
 $agg$tmp1$i718 = sp + 80|0;
 $agg$tmp$i721 = sp + 1774|0;
 $agg$tmp1$i98$i510 = sp + 72|0;
 $agg$tmp$i100$i513 = sp + 1773|0;
 $__t$i95$i519 = sp + 1528|0;
 $__t$i89$i525 = sp + 1504|0;
 $__t$i83$i531 = sp + 1480|0;
 $__t$i$i543 = sp + 1432|0;
 $agg$tmp1$i$i569 = sp + 64|0;
 $agg$tmp$i$i574 = sp + 1772|0;
 $ref$tmp$i583 = sp + 1284|0;
 $ref$tmp20$i584 = sp + 1280|0;
 $__t$i585 = sp + 1260|0;
 $agg$tmp$i586 = sp + 1256|0;
 $agg$tmp25$i589 = sp + 1244|0;
 $agg$tmp2$i$i486 = sp + 56|0;
 $agg$tmp$i$i489 = sp + 1771|0;
 $agg$tmp1$i98$i235 = sp + 48|0;
 $agg$tmp$i100$i238 = sp + 1770|0;
 $__t$i95$i244 = sp + 1044|0;
 $__t$i89$i250 = sp + 1020|0;
 $__t$i83$i256 = sp + 996|0;
 $__t$i$i268 = sp + 948|0;
 $agg$tmp1$i$i294 = sp + 40|0;
 $agg$tmp$i$i299 = sp + 1769|0;
 $ref$tmp$i308 = sp + 800|0;
 $ref$tmp20$i309 = sp + 796|0;
 $__t$i310 = sp + 776|0;
 $agg$tmp$i311 = sp + 772|0;
 $agg$tmp25$i314 = sp + 760|0;
 $agg$tmp2$i$i211 = sp + 32|0;
 $agg$tmp$i$i214 = sp + 1768|0;
 $agg$tmp1$i98$i = sp + 24|0;
 $agg$tmp$i100$i = sp + 1767|0;
 $__t$i95$i = sp + 656|0;
 $__t$i89$i = sp + 632|0;
 $__t$i83$i = sp + 608|0;
 $__t$i$i = sp + 560|0;
 $agg$tmp1$i$i = sp + 16|0;
 $agg$tmp$i$i188 = sp + 1766|0;
 $ref$tmp$i = sp + 412|0;
 $ref$tmp20$i = sp + 408|0;
 $__t$i194 = sp + 388|0;
 $agg$tmp$i195 = sp + 384|0;
 $agg$tmp25$i = sp + 372|0;
 $agg$tmp2$i$i = sp + 8|0;
 $agg$tmp$i$i = sp + 1765|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 1764|0;
 $__t$i170 = sp + 292|0;
 $__t$i164 = sp + 268|0;
 $__t$i158 = sp + 244|0;
 $__t$i = sp + 196|0;
 $__nb = sp + 156|0;
 $__front_capacity = sp + 152|0;
 $__pt = sp + 148|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp35 = sp + 140|0;
 $__pt53 = sp + 136|0;
 $__buf = sp + 112|0;
 $ref$tmp63 = sp + 108|0;
 $ref$tmp67 = sp + 104|0;
 $ref$tmp80 = sp + 100|0;
 $this$addr = $this;
 $__n$addr = $__n;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 2482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $0 = $__n$addr; //@line 2483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i134 = $this1;
 $this1$i135 = $this$addr$i134;
 $__end_$i = ((($this1$i135)) + 8|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$__end_$i>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i = ((($this1$i135)) + 4|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $2 = HEAP32[$__begin_$i>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i = ($1|0)==($2|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $conv = $cmp$i&1; //@line 2483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add = (($0) + ($conv))|0; //@line 2483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__n$addr$i = $add;
 $3 = $__n$addr$i; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $div$i = (($3>>>0) / 1024)&-1; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $4 = $__n$addr$i; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $rem$i = (($4>>>0) % 1024)&-1; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp$i136 = ($rem$i|0)!=(0); //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $conv$i = $cmp$i136&1; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$i = (($div$i) + ($conv$i))|0; //@line 1397 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__nb>>2] = $add$i; //@line 2483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i137 = $this1;
 $this1$i138 = $this$addr$i137;
 $__start_$i = ((($this1$i138)) + 16|0); //@line 1407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $5 = HEAP32[$__start_$i>>2]|0; //@line 1407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $div = (($5>>>0) / 1024)&-1; //@line 2485 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__front_capacity>>2] = $div; //@line 2485 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__a$addr$i = $__front_capacity;
 $__b$addr$i = $__nb;
 $6 = $__a$addr$i; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $7 = $__b$addr$i; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $6;
 $__b$addr$i$i = $7;
 $8 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $9 = $__a$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $this$addr$i$i$i171 = $agg$tmp1$i;
 $__x$addr$i$i$i = $8;
 $__y$addr$i$i$i = $9;
 $10 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $11 = HEAP32[$10>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $12 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $13 = HEAP32[$12>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i$i = ($11>>>0)<($13>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $14 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $15 = $__a$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cond$lvalue$i$i2D = $cmp$i$i$i ? $14 : $15; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $16 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 2486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__front_capacity>>2] = $16; //@line 2486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $17 = HEAP32[$__front_capacity>>2]|0; //@line 2487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $18 = HEAP32[$__nb>>2]|0; //@line 2487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub = (($18) - ($17))|0; //@line 2487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__nb>>2] = $sub; //@line 2487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $19 = HEAP32[$__nb>>2]|0; //@line 2489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($19|0)==(0); //@line 2489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp) {
  $20 = HEAP32[$__front_capacity>>2]|0; //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $mul = $20<<10; //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__start_ = ((($this1)) + 16|0); //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $21 = HEAP32[$__start_>>2]|0; //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub6 = (($21) - ($mul))|0; //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__start_>>2] = $sub6; //@line 2491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  L3: while(1) {
   $22 = HEAP32[$__front_capacity>>2]|0; //@line 2492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp7 = ($22>>>0)>(0); //@line 2492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if (!($cmp7)) {
    label = 63;
    break;
   }
   $this$addr$i206 = $this1;
   $this1$i207 = $this$addr$i206;
   $__begin_$i208 = ((($this1$i207)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $23 = HEAP32[$__begin_$i208>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $24 = HEAP32[$23>>2]|0; //@line 2494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__pt>>2] = $24; //@line 2494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $this$addr$i216 = $this1;
   $this1$i217 = $this$addr$i216;
   $__begin_$i218 = ((($this1$i217)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $25 = HEAP32[$__begin_$i218>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $add$ptr$i219 = ((($25)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i212 = $this1$i217;
   $__new_begin$addr$i$i213 = $add$ptr$i219;
   $this1$i$i220 = $this$addr$i$i212;
   $26 = $__new_begin$addr$i$i213; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   ;HEAP8[$agg$tmp2$i$i211>>0]=HEAP8[$agg$tmp$i$i214>>0]|0;
   $this$addr$i$i$i209 = $this1$i$i220;
   $__new_begin$addr$i$i$i210 = $26;
   $this1$i$i$i221 = $this$addr$i$i$i209;
   $27 = $__new_begin$addr$i$i$i210; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__begin_$i$i$i222 = ((($this1$i$i$i221)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__begin_$i$i$i222>>2] = $27; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i304 = $this1;
   $__x$addr$i305 = $__pt;
   $this1$i315 = $this$addr$i304;
   $__end_$i316 = ((($this1$i315)) + 8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $28 = HEAP32[$__end_$i316>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i303 = $this1$i315;
   $this1$i$i317 = $this$addr$i$i303;
   $__end_cap_$i$i318 = ((($this1$i$i317)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i$i302 = $__end_cap_$i$i318;
   $this1$i$i$i319 = $this$addr$i$i$i302;
   $this$addr$i$i$i$i301 = $this1$i$i$i319;
   $this1$i$i$i$i320 = $this$addr$i$i$i$i301;
   $29 = HEAP32[$this1$i$i$i$i320>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp$i322 = ($28|0)==($29|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   do {
    if ($cmp$i322) {
     $__begin_$i323 = ((($this1$i315)) + 4|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $30 = HEAP32[$__begin_$i323>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $31 = HEAP32[$this1$i315>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $cmp2$i325 = ($30>>>0)>($31>>>0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     if (!($cmp2$i325)) {
      $this$addr$i55$i271 = $this1$i315;
      $this1$i56$i354 = $this$addr$i55$i271;
      $__end_cap_$i57$i355 = ((($this1$i56$i354)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i54$i270 = $__end_cap_$i57$i355;
      $this1$i$i58$i356 = $this$addr$i$i54$i270;
      $this$addr$i$i$i53$i269 = $this1$i$i58$i356;
      $this1$i$i$i59$i357 = $this$addr$i$i$i53$i269;
      $55 = HEAP32[$this1$i$i$i59$i357>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $56 = HEAP32[$this1$i315>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$lhs$cast16$i360 = $55; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$rhs$cast17$i361 = $56; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$sub18$i362 = (($sub$ptr$lhs$cast16$i360) - ($sub$ptr$rhs$cast17$i361))|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$div19$i363 = (($sub$ptr$sub18$i362|0) / 4)&-1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $mul$i364 = $sub$ptr$div19$i363<<1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp$i308>>2] = $mul$i364; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp20$i309>>2] = 1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__a$addr$i99$i236 = $ref$tmp$i308;
      $__b$addr$i$i237 = $ref$tmp20$i309;
      $57 = $__a$addr$i99$i236; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $58 = $__b$addr$i$i237; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      ;HEAP8[$agg$tmp1$i98$i235>>0]=HEAP8[$agg$tmp$i100$i238>>0]|0;
      $__a$addr$i$i97$i233 = $57;
      $__b$addr$i$i$i234 = $58;
      $59 = $__a$addr$i$i97$i233; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $60 = $__b$addr$i$i$i234; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $this$addr$i$i$i96$i230 = $agg$tmp1$i98$i235;
      $__x$addr$i$i$i$i231 = $59;
      $__y$addr$i$i$i$i232 = $60;
      $61 = $__x$addr$i$i$i$i231; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $62 = HEAP32[$61>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $63 = $__y$addr$i$i$i$i232; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $64 = HEAP32[$63>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cmp$i$i$i$i366 = ($62>>>0)<($64>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $65 = $__b$addr$i$i$i234; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $66 = $__a$addr$i$i97$i233; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cond$lvalue$i$i$i3702D = $cmp$i$i$i$i366 ? $65 : $66; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $67 = HEAP32[$cond$lvalue$i$i$i3702D>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__c$i307 = $67; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $68 = $__c$i307; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $69 = $__c$i307; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $div22$i371 = (($69>>>0) / 4)&-1; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i111$i225 = $this1$i315;
      $this1$i112$i372 = $this$addr$i111$i225;
      $__end_cap_$i113$i373 = ((($this1$i112$i372)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i110$i224 = $__end_cap_$i113$i373;
      $this1$i$i114$i374 = $this$addr$i$i110$i224;
      $this$addr$i$i$i109$i223 = $this1$i$i114$i374;
      $this1$i$i$i115$i375 = $this$addr$i$i$i109$i223;
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t$i310,$68,$div22$i371,$this1$i$i$i115$i375); //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_24$i376 = ((($this1$i315)) + 4|0); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $70 = HEAP32[$__begin_24$i376>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i105$i226 = $agg$tmp$i311;
      $__x$addr$i106$i227 = $70;
      $this1$i107$i377 = $this$addr$i105$i226;
      $71 = $__x$addr$i106$i227; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i107$i377>>2] = $71; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      $__end_26$i380 = ((($this1$i315)) + 8|0); //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $72 = HEAP32[$__end_26$i380>>2]|0; //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i102$i228 = $agg$tmp25$i314;
      $__x$addr$i103$i229 = $72;
      $this1$i104$i381 = $this$addr$i102$i228;
      $73 = $__x$addr$i103$i229; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i104$i381>>2] = $73; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      __THREW__ = 0;
      ;HEAP32[$agg$tmp$i311$byval_copy>>2]=HEAP32[$agg$tmp$i311>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      ;HEAP32[$agg$tmp25$i314$byval_copy>>2]=HEAP32[$agg$tmp25$i314>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      invoke_viii(195,($__t$i310|0),($agg$tmp$i311$byval_copy|0),($agg$tmp25$i314$byval_copy|0)); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $74 = __THREW__; __THREW__ = 0;
      $75 = $74&1;
      if ($75) {
       label = 11;
       break L3;
      }
      $__x$addr$i93$i242 = $this1$i315;
      $__y$addr$i94$i243 = $__t$i310;
      $76 = $__x$addr$i93$i242; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i92$i241 = $76;
      $77 = $__t$addr$i$i92$i241; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $78 = HEAP32[$77>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i95$i244>>2] = $78; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $79 = $__y$addr$i94$i243; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i90$i239 = $79;
      $80 = $__t$addr$i4$i90$i239; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $81 = HEAP32[$80>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $82 = $__x$addr$i93$i242; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$82>>2] = $81; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i91$i240 = $__t$i95$i244;
      $83 = $__t$addr$i3$i91$i240; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $84 = HEAP32[$83>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $85 = $__y$addr$i94$i243; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$85>>2] = $84; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_31$i385 = ((($this1$i315)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_32$i386 = ((($__t$i310)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i87$i248 = $__begin_31$i385;
      $__y$addr$i88$i249 = $__begin_32$i386;
      $86 = $__x$addr$i87$i248; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i86$i247 = $86;
      $87 = $__t$addr$i$i86$i247; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $88 = HEAP32[$87>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i89$i250>>2] = $88; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $89 = $__y$addr$i88$i249; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i84$i245 = $89;
      $90 = $__t$addr$i4$i84$i245; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $91 = HEAP32[$90>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $92 = $__x$addr$i87$i248; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$92>>2] = $91; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i85$i246 = $__t$i89$i250;
      $93 = $__t$addr$i3$i85$i246; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $94 = HEAP32[$93>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $95 = $__y$addr$i88$i249; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$95>>2] = $94; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_33$i387 = ((($this1$i315)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_34$i388 = ((($__t$i310)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i81$i254 = $__end_33$i387;
      $__y$addr$i82$i255 = $__end_34$i388;
      $96 = $__x$addr$i81$i254; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i80$i253 = $96;
      $97 = $__t$addr$i$i80$i253; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $98 = HEAP32[$97>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i83$i256>>2] = $98; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $99 = $__y$addr$i82$i255; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i78$i251 = $99;
      $100 = $__t$addr$i4$i78$i251; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $101 = HEAP32[$100>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $102 = $__x$addr$i81$i254; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$102>>2] = $101; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i79$i252 = $__t$i83$i256;
      $103 = $__t$addr$i3$i79$i252; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $104 = HEAP32[$103>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $105 = $__y$addr$i82$i255; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$105>>2] = $104; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i72$i259 = $this1$i315;
      $this1$i73$i389 = $this$addr$i72$i259;
      $__end_cap_$i74$i390 = ((($this1$i73$i389)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i71$i258 = $__end_cap_$i74$i390;
      $this1$i$i75$i391 = $this$addr$i$i71$i258;
      $this$addr$i$i$i70$i257 = $this1$i$i75$i391;
      $this1$i$i$i76$i392 = $this$addr$i$i$i70$i257;
      $this$addr$i64$i262 = $__t$i310;
      $this1$i65$i394 = $this$addr$i64$i262;
      $__end_cap_$i66$i395 = ((($this1$i65$i394)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i63$i261 = $__end_cap_$i66$i395;
      $this1$i$i67$i396 = $this$addr$i$i63$i261;
      $this$addr$i$i$i62$i260 = $this1$i$i67$i396;
      $this1$i$i$i68$i397 = $this$addr$i$i$i62$i260;
      $__x$addr$i$i266 = $this1$i$i$i76$i392;
      $__y$addr$i$i267 = $this1$i$i$i68$i397;
      $106 = $__x$addr$i$i266; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i61$i265 = $106;
      $107 = $__t$addr$i$i61$i265; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $108 = HEAP32[$107>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i$i268>>2] = $108; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $109 = $__y$addr$i$i267; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i$i263 = $109;
      $110 = $__t$addr$i4$i$i263; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $111 = HEAP32[$110>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $112 = $__x$addr$i$i266; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$112>>2] = $111; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i$i264 = $__t$i$i268;
      $113 = $__t$addr$i3$i$i264; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $114 = HEAP32[$113>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $115 = $__y$addr$i$i267; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$115>>2] = $114; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i310); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     }
     $__begin_4$i327 = ((($this1$i315)) + 4|0); //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $32 = HEAP32[$__begin_4$i327>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $33 = HEAP32[$this1$i315>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast$i329 = $32; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast$i330 = $33; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub$i331 = (($sub$ptr$lhs$cast$i329) - ($sub$ptr$rhs$cast$i330))|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div$i332 = (($sub$ptr$sub$i331|0) / 4)&-1; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i306 = $sub$ptr$div$i332; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $34 = $__d$i306; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$i333 = (($34) + 1)|0; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div$i334 = (($add$i333|0) / 2)&-1; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i306 = $div$i334; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_6$i335 = ((($this1$i315)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $35 = HEAP32[$__begin_6$i335>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_7$i336 = ((($this1$i315)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $36 = HEAP32[$__end_7$i336>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_8$i337 = ((($this1$i315)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $37 = HEAP32[$__begin_8$i337>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $38 = $__d$i306; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg$i338 = (0 - ($38))|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr$i339 = (($37) + ($idx$neg$i338<<2)|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__first$addr$i$i279 = $35;
     $__last$addr$i$i280 = $36;
     $__result$addr$i$i281 = $add$ptr$i339;
     $39 = $__first$addr$i$i279; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i$i$i278 = $39;
     $40 = $__i$addr$i$i$i278; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $41 = $__last$addr$i$i280; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i5$i$i272 = $41;
     $42 = $__i$addr$i5$i$i272; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $43 = $__result$addr$i$i281; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i4$i$i273 = $43;
     $44 = $__i$addr$i4$i$i273; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__first$addr$i$i$i274 = $40;
     $__last$addr$i$i$i275 = $42;
     $__result$addr$i$i$i276 = $44;
     $45 = $__last$addr$i$i$i275; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $46 = $__first$addr$i$i$i274; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$lhs$cast$i$i$i340 = $45; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$rhs$cast$i$i$i341 = $46; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$sub$i$i$i342 = (($sub$ptr$lhs$cast$i$i$i340) - ($sub$ptr$rhs$cast$i$i$i341))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$div$i$i$i343 = (($sub$ptr$sub$i$i$i342|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__n$i$i$i277 = $sub$ptr$div$i$i$i343; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $47 = $__n$i$i$i277; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i344 = ($47>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     if ($cmp$i$i$i344) {
      $48 = $__result$addr$i$i$i276; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $49 = $__first$addr$i$i$i274; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $50 = $__n$i$i$i277; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $mul$i$i$i346 = $50<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      _memmove(($48|0),($49|0),($mul$i$i$i346|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     }
     $51 = $__result$addr$i$i$i276; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $52 = $__n$i$i$i277; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i$i348 = (($51) + ($52<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__end_10$i349 = ((($this1$i315)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__end_10$i349>>2] = $add$ptr$i$i$i348; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $53 = $__d$i306; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_11$i350 = ((($this1$i315)) + 4|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $54 = HEAP32[$__begin_11$i350>>2]|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg12$i351 = (0 - ($53))|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr13$i352 = (($54) + ($idx$neg12$i351<<2)|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__begin_11$i350>>2] = $add$ptr13$i352; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    }
   } while(0);
   $this$addr$i48$i284 = $this1$i315;
   $this1$i49$i402 = $this$addr$i48$i284;
   $__end_cap_$i50$i403 = ((($this1$i49$i402)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i47$i283 = $__end_cap_$i50$i403;
   $this1$i$i51$i404 = $this$addr$i$i47$i283;
   $this$addr$i$i$i46$i282 = $this1$i$i51$i404;
   $this1$i$i$i52$i405 = $this$addr$i$i$i46$i282;
   $__end_39$i406 = ((($this1$i315)) + 8|0); //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $118 = HEAP32[$__end_39$i406>>2]|0; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__p$addr$i45$i285 = $118;
   $119 = $__p$addr$i45$i285; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $120 = $__x$addr$i305; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i$i296 = $this1$i$i$i52$i405;
   $__p$addr$i$i297 = $119;
   $__args$addr$i$i298 = $120;
   $121 = $__a$addr$i$i296; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $122 = $__p$addr$i$i297; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $123 = $__args$addr$i$i298; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i295 = $123;
   $124 = $__t$addr$i$i$i295; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   ;HEAP8[$agg$tmp1$i$i294>>0]=HEAP8[$agg$tmp$i$i299>>0]|0;
   $__a$addr$i$i$i291 = $121;
   $__p$addr$i$i$i292 = $122;
   $__args$addr$i$i$i293 = $124;
   $125 = $__a$addr$i$i$i291; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $126 = $__p$addr$i$i$i292; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $127 = $__args$addr$i$i$i293; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i290 = $127;
   $128 = $__t$addr$i$i$i$i290; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $this$addr$i$i$i43$i287 = $125;
   $__p$addr$i$i$i$i288 = $126;
   $__args$addr$i$i$i$i289 = $128;
   $129 = $__p$addr$i$i$i$i288; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $130 = $__args$addr$i$i$i$i289; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i$i286 = $130;
   $131 = $__t$addr$i$i$i$i$i286; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $132 = HEAP32[$131>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   HEAP32[$129>>2] = $132; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__end_41$i408 = ((($this1$i315)) + 8|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $133 = HEAP32[$__end_41$i408>>2]|0; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $incdec$ptr$i409 = ((($133)) + 4|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__end_41$i408>>2] = $incdec$ptr$i409; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $134 = HEAP32[$__front_capacity>>2]|0; //@line 2492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $dec = (($134) + -1)|0; //@line 2492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__front_capacity>>2] = $dec; //@line 2492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  if ((label|0) == 11) {
   $116 = ___cxa_find_matching_catch_2()|0;
   $117 = tempRet0;
   $exn$slot$i312 = $116; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $ehselector$slot$i313 = $117; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i310); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $exn$i410 = $exn$slot$i312; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sel$i411 = $ehselector$slot$i313; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   ___resumeException($exn$i410|0);
   // unreachable;
  }
  else if ((label|0) == 63) {
   STACKTOP = sp;return; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
 }
 $135 = HEAP32[$__nb>>2]|0; //@line 2500 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i417 = $this1;
 $this1$i418 = $this$addr$i417;
 $this$addr$i$i416 = $this1$i418;
 $this1$i$i419 = $this$addr$i$i416;
 $__end_cap_$i$i420 = ((($this1$i$i419)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i415 = $__end_cap_$i$i420;
 $this1$i$i$i421 = $this$addr$i$i$i415;
 $this$addr$i$i$i$i414 = $this1$i$i$i421;
 $this1$i$i$i$i422 = $this$addr$i$i$i$i414;
 $136 = HEAP32[$this1$i$i$i$i422>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $137 = HEAP32[$this1$i418>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i425 = $136; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i426 = $137; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i427 = (($sub$ptr$lhs$cast$i425) - ($sub$ptr$rhs$cast$i426))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i428 = (($sub$ptr$sub$i427|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i429 = $this1;
 $this1$i430 = $this$addr$i429;
 $__end_$i431 = ((($this1$i430)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $138 = HEAP32[$__end_$i431>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i432 = ((($this1$i430)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $139 = HEAP32[$__begin_$i432>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i433 = $138; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i434 = $139; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i435 = (($sub$ptr$lhs$cast$i433) - ($sub$ptr$rhs$cast$i434))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i436 = (($sub$ptr$sub$i435|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub16 = (($sub$ptr$div$i428) - ($sub$ptr$div$i436))|0; //@line 2500 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp17 = ($135>>>0)<=($sub16>>>0); //@line 2500 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp17) {
  while(1) {
   $140 = HEAP32[$__nb>>2]|0; //@line 2504 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp20 = ($140>>>0)>(0); //@line 2504 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if (!($cmp20)) {
    break;
   }
   $this$addr$i440 = $this1;
   $this1$i441 = $this$addr$i440;
   $this$addr$i$i439 = $this1$i441;
   $this1$i$i442 = $this$addr$i$i439;
   $__end_cap_$i$i443 = ((($this1$i$i442)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i$i438 = $__end_cap_$i$i443;
   $this1$i$i$i444 = $this$addr$i$i$i438;
   $this$addr$i$i$i$i437 = $this1$i$i$i444;
   $this1$i$i$i$i445 = $this$addr$i$i$i$i437;
   $141 = HEAP32[$this1$i$i$i$i445>>2]|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__end_$i447 = ((($this1$i441)) + 8|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $142 = HEAP32[$__end_$i447>>2]|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$lhs$cast$i448 = $141; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$rhs$cast$i449 = $142; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$sub$i450 = (($sub$ptr$lhs$cast$i448) - ($sub$ptr$rhs$cast$i449))|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$div$i451 = (($sub$ptr$sub$i450|0) / 4)&-1; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp24 = ($sub$ptr$div$i451|0)==(0); //@line 2506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if ($cmp24) {
    break;
   }
   $143 = $__a; //@line 2508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__a$addr$i454 = $143;
   $__n$addr$i455 = 1024;
   $144 = $__a$addr$i454; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $145 = $__n$addr$i455; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i453 = $144;
   $__n$addr$i$i = $145;
   $$addr$i$i = 0;
   $this1$i$i456 = $this$addr$i$i453;
   $146 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i452 = $this1$i$i456;
   $cmp$i$i = ($146>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    label = 17;
    break;
   }
   $147 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $mul$i$i = $147<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__size$addr$i$i$i = $mul$i$i;
   $148 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   $call$i$i$i = (__Znwj($148)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   HEAP32[$ref$tmp>>2] = $call$i$i$i; //@line 2508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE9push_backEOS3_($this1,$ref$tmp); //@line 2508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $149 = HEAP32[$__nb>>2]|0; //@line 2504 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $dec29 = (($149) + -1)|0; //@line 2504 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__nb>>2] = $dec29; //@line 2504 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  if ((label|0) == 17) {
   $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  }
  while(1) {
   $150 = HEAP32[$__nb>>2]|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp32 = ($150>>>0)>(0); //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if (!($cmp32)) {
    break;
   }
   $151 = $__a; //@line 2512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__a$addr$i463 = $151;
   $__n$addr$i464 = 1024;
   $152 = $__a$addr$i463; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $153 = $__n$addr$i464; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i460 = $152;
   $__n$addr$i$i461 = $153;
   $$addr$i$i462 = 0;
   $this1$i$i465 = $this$addr$i$i460;
   $154 = $__n$addr$i$i461; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i459 = $this1$i$i465;
   $cmp$i$i467 = ($154>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i467) {
    label = 21;
    break;
   }
   $155 = $__n$addr$i$i461; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $mul$i$i470 = $155<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__size$addr$i$i$i458 = $mul$i$i470;
   $156 = $__size$addr$i$i$i458; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   $call$i$i$i471 = (__Znwj($156)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   HEAP32[$ref$tmp35>>2] = $call$i$i$i471; //@line 2512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE10push_frontEOS3_($this1,$ref$tmp35); //@line 2512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $157 = HEAP32[$__nb>>2]|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $dec38 = (($157) + -1)|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__nb>>2] = $dec38; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $158 = HEAP32[$__front_capacity>>2]|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $inc = (($158) + 1)|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__front_capacity>>2] = $inc; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $this$addr$i473 = $this1;
   $this1$i474 = $this$addr$i473;
   $__end_$i475 = ((($this1$i474)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $159 = HEAP32[$__end_$i475>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__begin_$i476 = ((($this1$i474)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $160 = HEAP32[$__begin_$i476>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$lhs$cast$i477 = $159; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$rhs$cast$i478 = $160; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$sub$i479 = (($sub$ptr$lhs$cast$i477) - ($sub$ptr$rhs$cast$i478))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sub$ptr$div$i480 = (($sub$ptr$sub$i479|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp41 = ($sub$ptr$div$i480|0)==(1); //@line 2511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $conv42 = $cmp41&1; //@line 2511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $sub43 = (1024 - ($conv42))|0; //@line 2511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__start_44 = ((($this1)) + 16|0); //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $161 = HEAP32[$__start_44>>2]|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $add45 = (($161) + ($sub43))|0; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__start_44>>2] = $add45; //@line 2510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  if ((label|0) == 21) {
   $exception$i$i468 = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __ZNSt9bad_allocC2Ev($exception$i$i468); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   ___cxa_throw(($exception$i$i468|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  }
  $162 = HEAP32[$__front_capacity>>2]|0; //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $mul47 = $162<<10; //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__start_48 = ((($this1)) + 16|0); //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $163 = HEAP32[$__start_48>>2]|0; //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub49 = (($163) - ($mul47))|0; //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__start_48>>2] = $sub49; //@line 2514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  L35: while(1) {
   $164 = HEAP32[$__front_capacity>>2]|0; //@line 2515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp51 = ($164>>>0)>(0); //@line 2515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if (!($cmp51)) {
    label = 63;
    break;
   }
   $this$addr$i481 = $this1;
   $this1$i482 = $this$addr$i481;
   $__begin_$i483 = ((($this1$i482)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $165 = HEAP32[$__begin_$i483>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $166 = HEAP32[$165>>2]|0; //@line 2517 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__pt53>>2] = $166; //@line 2517 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $this$addr$i491 = $this1;
   $this1$i492 = $this$addr$i491;
   $__begin_$i493 = ((($this1$i492)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $167 = HEAP32[$__begin_$i493>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $add$ptr$i494 = ((($167)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i487 = $this1$i492;
   $__new_begin$addr$i$i488 = $add$ptr$i494;
   $this1$i$i495 = $this$addr$i$i487;
   $168 = $__new_begin$addr$i$i488; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   ;HEAP8[$agg$tmp2$i$i486>>0]=HEAP8[$agg$tmp$i$i489>>0]|0;
   $this$addr$i$i$i484 = $this1$i$i495;
   $__new_begin$addr$i$i$i485 = $168;
   $this1$i$i$i496 = $this$addr$i$i$i484;
   $169 = $__new_begin$addr$i$i$i485; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__begin_$i$i$i497 = ((($this1$i$i$i496)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__begin_$i$i$i497>>2] = $169; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i579 = $this1;
   $__x$addr$i580 = $__pt53;
   $this1$i590 = $this$addr$i579;
   $__end_$i591 = ((($this1$i590)) + 8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $170 = HEAP32[$__end_$i591>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i578 = $this1$i590;
   $this1$i$i592 = $this$addr$i$i578;
   $__end_cap_$i$i593 = ((($this1$i$i592)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i$i577 = $__end_cap_$i$i593;
   $this1$i$i$i594 = $this$addr$i$i$i577;
   $this$addr$i$i$i$i576 = $this1$i$i$i594;
   $this1$i$i$i$i595 = $this$addr$i$i$i$i576;
   $171 = HEAP32[$this1$i$i$i$i595>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp$i597 = ($170|0)==($171|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   do {
    if ($cmp$i597) {
     $__begin_$i598 = ((($this1$i590)) + 4|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $172 = HEAP32[$__begin_$i598>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $173 = HEAP32[$this1$i590>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $cmp2$i600 = ($172>>>0)>($173>>>0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     if (!($cmp2$i600)) {
      $this$addr$i55$i546 = $this1$i590;
      $this1$i56$i629 = $this$addr$i55$i546;
      $__end_cap_$i57$i630 = ((($this1$i56$i629)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i54$i545 = $__end_cap_$i57$i630;
      $this1$i$i58$i631 = $this$addr$i$i54$i545;
      $this$addr$i$i$i53$i544 = $this1$i$i58$i631;
      $this1$i$i$i59$i632 = $this$addr$i$i$i53$i544;
      $197 = HEAP32[$this1$i$i$i59$i632>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $198 = HEAP32[$this1$i590>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$lhs$cast16$i635 = $197; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$rhs$cast17$i636 = $198; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$sub18$i637 = (($sub$ptr$lhs$cast16$i635) - ($sub$ptr$rhs$cast17$i636))|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$div19$i638 = (($sub$ptr$sub18$i637|0) / 4)&-1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $mul$i639 = $sub$ptr$div19$i638<<1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp$i583>>2] = $mul$i639; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp20$i584>>2] = 1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__a$addr$i99$i511 = $ref$tmp$i583;
      $__b$addr$i$i512 = $ref$tmp20$i584;
      $199 = $__a$addr$i99$i511; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $200 = $__b$addr$i$i512; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      ;HEAP8[$agg$tmp1$i98$i510>>0]=HEAP8[$agg$tmp$i100$i513>>0]|0;
      $__a$addr$i$i97$i508 = $199;
      $__b$addr$i$i$i509 = $200;
      $201 = $__a$addr$i$i97$i508; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $202 = $__b$addr$i$i$i509; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $this$addr$i$i$i96$i505 = $agg$tmp1$i98$i510;
      $__x$addr$i$i$i$i506 = $201;
      $__y$addr$i$i$i$i507 = $202;
      $203 = $__x$addr$i$i$i$i506; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $204 = HEAP32[$203>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $205 = $__y$addr$i$i$i$i507; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $206 = HEAP32[$205>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cmp$i$i$i$i641 = ($204>>>0)<($206>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $207 = $__b$addr$i$i$i509; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $208 = $__a$addr$i$i97$i508; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cond$lvalue$i$i$i6452D = $cmp$i$i$i$i641 ? $207 : $208; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $209 = HEAP32[$cond$lvalue$i$i$i6452D>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__c$i582 = $209; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $210 = $__c$i582; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $211 = $__c$i582; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $div22$i646 = (($211>>>0) / 4)&-1; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i111$i500 = $this1$i590;
      $this1$i112$i647 = $this$addr$i111$i500;
      $__end_cap_$i113$i648 = ((($this1$i112$i647)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i110$i499 = $__end_cap_$i113$i648;
      $this1$i$i114$i649 = $this$addr$i$i110$i499;
      $this$addr$i$i$i109$i498 = $this1$i$i114$i649;
      $this1$i$i$i115$i650 = $this$addr$i$i$i109$i498;
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t$i585,$210,$div22$i646,$this1$i$i$i115$i650); //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_24$i651 = ((($this1$i590)) + 4|0); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $212 = HEAP32[$__begin_24$i651>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i105$i501 = $agg$tmp$i586;
      $__x$addr$i106$i502 = $212;
      $this1$i107$i652 = $this$addr$i105$i501;
      $213 = $__x$addr$i106$i502; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i107$i652>>2] = $213; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      $__end_26$i655 = ((($this1$i590)) + 8|0); //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $214 = HEAP32[$__end_26$i655>>2]|0; //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i102$i503 = $agg$tmp25$i589;
      $__x$addr$i103$i504 = $214;
      $this1$i104$i656 = $this$addr$i102$i503;
      $215 = $__x$addr$i103$i504; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i104$i656>>2] = $215; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      __THREW__ = 0;
      ;HEAP32[$agg$tmp$i586$byval_copy>>2]=HEAP32[$agg$tmp$i586>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      ;HEAP32[$agg$tmp25$i589$byval_copy>>2]=HEAP32[$agg$tmp25$i589>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      invoke_viii(195,($__t$i585|0),($agg$tmp$i586$byval_copy|0),($agg$tmp25$i589$byval_copy|0)); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $216 = __THREW__; __THREW__ = 0;
      $217 = $216&1;
      if ($217) {
       label = 32;
       break L35;
      }
      $__x$addr$i93$i517 = $this1$i590;
      $__y$addr$i94$i518 = $__t$i585;
      $218 = $__x$addr$i93$i517; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i92$i516 = $218;
      $219 = $__t$addr$i$i92$i516; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $220 = HEAP32[$219>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i95$i519>>2] = $220; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $221 = $__y$addr$i94$i518; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i90$i514 = $221;
      $222 = $__t$addr$i4$i90$i514; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $223 = HEAP32[$222>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $224 = $__x$addr$i93$i517; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$224>>2] = $223; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i91$i515 = $__t$i95$i519;
      $225 = $__t$addr$i3$i91$i515; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $226 = HEAP32[$225>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $227 = $__y$addr$i94$i518; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$227>>2] = $226; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_31$i660 = ((($this1$i590)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_32$i661 = ((($__t$i585)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i87$i523 = $__begin_31$i660;
      $__y$addr$i88$i524 = $__begin_32$i661;
      $228 = $__x$addr$i87$i523; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i86$i522 = $228;
      $229 = $__t$addr$i$i86$i522; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $230 = HEAP32[$229>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i89$i525>>2] = $230; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $231 = $__y$addr$i88$i524; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i84$i520 = $231;
      $232 = $__t$addr$i4$i84$i520; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $233 = HEAP32[$232>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $234 = $__x$addr$i87$i523; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$234>>2] = $233; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i85$i521 = $__t$i89$i525;
      $235 = $__t$addr$i3$i85$i521; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $236 = HEAP32[$235>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $237 = $__y$addr$i88$i524; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$237>>2] = $236; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_33$i662 = ((($this1$i590)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_34$i663 = ((($__t$i585)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i81$i529 = $__end_33$i662;
      $__y$addr$i82$i530 = $__end_34$i663;
      $238 = $__x$addr$i81$i529; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i80$i528 = $238;
      $239 = $__t$addr$i$i80$i528; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $240 = HEAP32[$239>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i83$i531>>2] = $240; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $241 = $__y$addr$i82$i530; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i78$i526 = $241;
      $242 = $__t$addr$i4$i78$i526; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $243 = HEAP32[$242>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $244 = $__x$addr$i81$i529; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$244>>2] = $243; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i79$i527 = $__t$i83$i531;
      $245 = $__t$addr$i3$i79$i527; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $246 = HEAP32[$245>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $247 = $__y$addr$i82$i530; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$247>>2] = $246; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i72$i534 = $this1$i590;
      $this1$i73$i664 = $this$addr$i72$i534;
      $__end_cap_$i74$i665 = ((($this1$i73$i664)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i71$i533 = $__end_cap_$i74$i665;
      $this1$i$i75$i666 = $this$addr$i$i71$i533;
      $this$addr$i$i$i70$i532 = $this1$i$i75$i666;
      $this1$i$i$i76$i667 = $this$addr$i$i$i70$i532;
      $this$addr$i64$i537 = $__t$i585;
      $this1$i65$i669 = $this$addr$i64$i537;
      $__end_cap_$i66$i670 = ((($this1$i65$i669)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i63$i536 = $__end_cap_$i66$i670;
      $this1$i$i67$i671 = $this$addr$i$i63$i536;
      $this$addr$i$i$i62$i535 = $this1$i$i67$i671;
      $this1$i$i$i68$i672 = $this$addr$i$i$i62$i535;
      $__x$addr$i$i541 = $this1$i$i$i76$i667;
      $__y$addr$i$i542 = $this1$i$i$i68$i672;
      $248 = $__x$addr$i$i541; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i61$i540 = $248;
      $249 = $__t$addr$i$i61$i540; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $250 = HEAP32[$249>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i$i543>>2] = $250; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $251 = $__y$addr$i$i542; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i$i538 = $251;
      $252 = $__t$addr$i4$i$i538; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $253 = HEAP32[$252>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $254 = $__x$addr$i$i541; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$254>>2] = $253; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i$i539 = $__t$i$i543;
      $255 = $__t$addr$i3$i$i539; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $256 = HEAP32[$255>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $257 = $__y$addr$i$i542; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$257>>2] = $256; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i585); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     }
     $__begin_4$i602 = ((($this1$i590)) + 4|0); //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $174 = HEAP32[$__begin_4$i602>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $175 = HEAP32[$this1$i590>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast$i604 = $174; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast$i605 = $175; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub$i606 = (($sub$ptr$lhs$cast$i604) - ($sub$ptr$rhs$cast$i605))|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div$i607 = (($sub$ptr$sub$i606|0) / 4)&-1; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i581 = $sub$ptr$div$i607; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $176 = $__d$i581; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$i608 = (($176) + 1)|0; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div$i609 = (($add$i608|0) / 2)&-1; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i581 = $div$i609; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_6$i610 = ((($this1$i590)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $177 = HEAP32[$__begin_6$i610>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_7$i611 = ((($this1$i590)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $178 = HEAP32[$__end_7$i611>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_8$i612 = ((($this1$i590)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $179 = HEAP32[$__begin_8$i612>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $180 = $__d$i581; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg$i613 = (0 - ($180))|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr$i614 = (($179) + ($idx$neg$i613<<2)|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__first$addr$i$i554 = $177;
     $__last$addr$i$i555 = $178;
     $__result$addr$i$i556 = $add$ptr$i614;
     $181 = $__first$addr$i$i554; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i$i$i553 = $181;
     $182 = $__i$addr$i$i$i553; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $183 = $__last$addr$i$i555; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i5$i$i547 = $183;
     $184 = $__i$addr$i5$i$i547; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $185 = $__result$addr$i$i556; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i4$i$i548 = $185;
     $186 = $__i$addr$i4$i$i548; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__first$addr$i$i$i549 = $182;
     $__last$addr$i$i$i550 = $184;
     $__result$addr$i$i$i551 = $186;
     $187 = $__last$addr$i$i$i550; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $188 = $__first$addr$i$i$i549; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$lhs$cast$i$i$i615 = $187; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$rhs$cast$i$i$i616 = $188; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$sub$i$i$i617 = (($sub$ptr$lhs$cast$i$i$i615) - ($sub$ptr$rhs$cast$i$i$i616))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$div$i$i$i618 = (($sub$ptr$sub$i$i$i617|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__n$i$i$i552 = $sub$ptr$div$i$i$i618; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $189 = $__n$i$i$i552; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i619 = ($189>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     if ($cmp$i$i$i619) {
      $190 = $__result$addr$i$i$i551; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $191 = $__first$addr$i$i$i549; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $192 = $__n$i$i$i552; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $mul$i$i$i621 = $192<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      _memmove(($190|0),($191|0),($mul$i$i$i621|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     }
     $193 = $__result$addr$i$i$i551; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $194 = $__n$i$i$i552; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i$i623 = (($193) + ($194<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__end_10$i624 = ((($this1$i590)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__end_10$i624>>2] = $add$ptr$i$i$i623; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $195 = $__d$i581; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_11$i625 = ((($this1$i590)) + 4|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $196 = HEAP32[$__begin_11$i625>>2]|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg12$i626 = (0 - ($195))|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr13$i627 = (($196) + ($idx$neg12$i626<<2)|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__begin_11$i625>>2] = $add$ptr13$i627; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    }
   } while(0);
   $this$addr$i48$i559 = $this1$i590;
   $this1$i49$i677 = $this$addr$i48$i559;
   $__end_cap_$i50$i678 = ((($this1$i49$i677)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i47$i558 = $__end_cap_$i50$i678;
   $this1$i$i51$i679 = $this$addr$i$i47$i558;
   $this$addr$i$i$i46$i557 = $this1$i$i51$i679;
   $this1$i$i$i52$i680 = $this$addr$i$i$i46$i557;
   $__end_39$i681 = ((($this1$i590)) + 8|0); //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $260 = HEAP32[$__end_39$i681>>2]|0; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__p$addr$i45$i560 = $260;
   $261 = $__p$addr$i45$i560; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $262 = $__x$addr$i580; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i$i571 = $this1$i$i$i52$i680;
   $__p$addr$i$i572 = $261;
   $__args$addr$i$i573 = $262;
   $263 = $__a$addr$i$i571; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $264 = $__p$addr$i$i572; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $265 = $__args$addr$i$i573; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i570 = $265;
   $266 = $__t$addr$i$i$i570; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   ;HEAP8[$agg$tmp1$i$i569>>0]=HEAP8[$agg$tmp$i$i574>>0]|0;
   $__a$addr$i$i$i566 = $263;
   $__p$addr$i$i$i567 = $264;
   $__args$addr$i$i$i568 = $266;
   $267 = $__a$addr$i$i$i566; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $268 = $__p$addr$i$i$i567; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $269 = $__args$addr$i$i$i568; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i565 = $269;
   $270 = $__t$addr$i$i$i$i565; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $this$addr$i$i$i43$i562 = $267;
   $__p$addr$i$i$i$i563 = $268;
   $__args$addr$i$i$i$i564 = $270;
   $271 = $__p$addr$i$i$i$i563; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $272 = $__args$addr$i$i$i$i564; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i$i561 = $272;
   $273 = $__t$addr$i$i$i$i$i561; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $274 = HEAP32[$273>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   HEAP32[$271>>2] = $274; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__end_41$i683 = ((($this1$i590)) + 8|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $275 = HEAP32[$__end_41$i683>>2]|0; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $incdec$ptr$i684 = ((($275)) + 4|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__end_41$i683>>2] = $incdec$ptr$i684; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $276 = HEAP32[$__front_capacity>>2]|0; //@line 2515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $dec59 = (($276) + -1)|0; //@line 2515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__front_capacity>>2] = $dec59; //@line 2515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  if ((label|0) == 32) {
   $258 = ___cxa_find_matching_catch_2()|0;
   $259 = tempRet0;
   $exn$slot$i587 = $258; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $ehselector$slot$i588 = $259; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i585); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $exn$i685 = $exn$slot$i587; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $sel$i686 = $ehselector$slot$i588; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   ___resumeException($exn$i685|0);
   // unreachable;
  }
  else if ((label|0) == 63) {
   STACKTOP = sp;return; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
 }
 $277 = HEAP32[$__front_capacity>>2]|0; //@line 2525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $mul62 = $277<<10; //@line 2525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__ds = $mul62; //@line 2525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i693 = $this1;
 $this1$i694 = $this$addr$i693;
 $this$addr$i$i692 = $this1$i694;
 $this1$i$i695 = $this$addr$i$i692;
 $__end_cap_$i$i696 = ((($this1$i$i695)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i691 = $__end_cap_$i$i696;
 $this1$i$i$i697 = $this$addr$i$i$i691;
 $this$addr$i$i$i$i690 = $this1$i$i$i697;
 $this1$i$i$i$i698 = $this$addr$i$i$i$i690;
 $278 = HEAP32[$this1$i$i$i$i698>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $279 = HEAP32[$this1$i694>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i701 = $278; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i702 = $279; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i703 = (($sub$ptr$lhs$cast$i701) - ($sub$ptr$rhs$cast$i702))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i704 = (($sub$ptr$sub$i703|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $mul66 = $sub$ptr$div$i704<<1; //@line 2527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$ref$tmp63>>2] = $mul66; //@line 2527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $280 = HEAP32[$__nb>>2]|0; //@line 2528 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i705 = $this1;
 $this1$i706 = $this$addr$i705;
 $__end_$i707 = ((($this1$i706)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $281 = HEAP32[$__end_$i707>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i708 = ((($this1$i706)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $282 = HEAP32[$__begin_$i708>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i709 = $281; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i710 = $282; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i711 = (($sub$ptr$lhs$cast$i709) - ($sub$ptr$rhs$cast$i710))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i712 = (($sub$ptr$sub$i711|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add70 = (($280) + ($sub$ptr$div$i712))|0; //@line 2528 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$ref$tmp67>>2] = $add70; //@line 2528 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__a$addr$i719 = $ref$tmp63;
 $__b$addr$i720 = $ref$tmp67;
 $283 = $__a$addr$i719; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $284 = $__b$addr$i720; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 ;HEAP8[$agg$tmp1$i718>>0]=HEAP8[$agg$tmp$i721>>0]|0;
 $__a$addr$i$i716 = $283;
 $__b$addr$i$i717 = $284;
 $285 = $__a$addr$i$i716; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $286 = $__b$addr$i$i717; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $this$addr$i$i$i713 = $agg$tmp1$i718;
 $__x$addr$i$i$i714 = $285;
 $__y$addr$i$i$i715 = $286;
 $287 = $__x$addr$i$i$i714; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $288 = HEAP32[$287>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $289 = $__y$addr$i$i$i715; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $290 = HEAP32[$289>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i$i723 = ($288>>>0)<($290>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $291 = $__b$addr$i$i717; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $292 = $__a$addr$i$i716; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cond$lvalue$i$i7262D = $cmp$i$i$i723 ? $291 : $292; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $293 = HEAP32[$cond$lvalue$i$i7262D>>2]|0; //@line 2527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i727 = $this1;
 $this1$i728 = $this$addr$i727;
 $__end_$i729 = ((($this1$i728)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $294 = HEAP32[$__end_$i729>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i730 = ((($this1$i728)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $295 = HEAP32[$__begin_$i730>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i731 = $294; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i732 = $295; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i733 = (($sub$ptr$lhs$cast$i731) - ($sub$ptr$rhs$cast$i732))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i734 = (($sub$ptr$sub$i733|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $296 = HEAP32[$__front_capacity>>2]|0; //@line 2529 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub74 = (($sub$ptr$div$i734) - ($296))|0; //@line 2529 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i737 = $this1;
 $this1$i738 = $this$addr$i737;
 $__end_cap_$i739 = ((($this1$i738)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i736 = $__end_cap_$i739;
 $this1$i$i740 = $this$addr$i$i736;
 $this$addr$i$i$i735 = $this1$i$i740;
 $this1$i$i$i741 = $this$addr$i$i$i735;
 __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__buf,$293,$sub74,$this1$i$i$i741); //@line 2527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $297 = HEAP32[$__nb>>2]|0; //@line 2535 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp78 = ($297>>>0)>(0); //@line 2535 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp78)) {
   label = 45;
   break;
  }
  $298 = $__a; //@line 2536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i747 = $298;
  $__n$addr$i748 = 1024;
  $299 = $__a$addr$i747; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $300 = $__n$addr$i748; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i744 = $299;
  $__n$addr$i$i745 = $300;
  $$addr$i$i746 = 0;
  $this1$i$i749 = $this$addr$i$i744;
  $301 = $__n$addr$i$i745; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i743 = $this1$i$i749;
  $cmp$i$i751 = ($301>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if ($cmp$i$i751) {
   label = 37;
   break;
  }
  $303 = $__n$addr$i$i745; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i$i754 = $303<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__size$addr$i$i$i742 = $mul$i$i754;
  $304 = $__size$addr$i$i$i742; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __THREW__ = 0;
  $call$i$i$i755757 = (invoke_ii(126,($304|0))|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $305 = __THREW__; __THREW__ = 0;
  $306 = $305&1;
  if ($306) {
   break;
  }
  HEAP32[$ref$tmp80>>2] = $call$i$i$i755757; //@line 2536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __THREW__ = 0;
  invoke_vii(197,($__buf|0),($ref$tmp80|0)); //@line 2536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $307 = __THREW__; __THREW__ = 0;
  $308 = $307&1;
  if ($308) {
   break;
  }
  $309 = HEAP32[$__nb>>2]|0; //@line 2535 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $dec84 = (($309) + -1)|0; //@line 2535 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__nb>>2] = $dec84; //@line 2535 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 if ((label|0) == 37) {
  $exception$i$i752 = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i$i752); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __THREW__ = 0;
  invoke_viii(196,($exception$i$i752|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $302 = __THREW__; __THREW__ = 0;
 }
 else if ((label|0) == 45) {
  L59: while(1) {
   label = 0;
   $329 = HEAP32[$__front_capacity>>2]|0; //@line 2547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $cmp96 = ($329>>>0)>(0); //@line 2547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   if (!($cmp96)) {
    label = 58;
    break;
   }
   $this$addr$i771 = $this1;
   $this1$i772 = $this$addr$i771;
   $__begin_$i773 = ((($this1$i772)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $330 = HEAP32[$__begin_$i773>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i192 = $__buf;
   $__x$addr$i193 = $330;
   $this1$i196 = $this$addr$i192;
   $__end_$i197 = ((($this1$i196)) + 8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $331 = HEAP32[$__end_$i197>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i191 = $this1$i196;
   $this1$i$i198 = $this$addr$i$i191;
   $__end_cap_$i$i = ((($this1$i$i198)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i$i190 = $__end_cap_$i$i;
   $this1$i$i$i199 = $this$addr$i$i$i190;
   $this$addr$i$i$i$i = $this1$i$i$i199;
   $this1$i$i$i$i = $this$addr$i$i$i$i;
   $332 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp$i200 = ($331|0)==($332|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   do {
    if ($cmp$i200) {
     $__begin_$i201 = ((($this1$i196)) + 4|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $333 = HEAP32[$__begin_$i201>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $334 = HEAP32[$this1$i196>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $cmp2$i = ($333>>>0)>($334>>>0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     if ($cmp2$i) {
      $__begin_4$i = ((($this1$i196)) + 4|0); //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $335 = HEAP32[$__begin_4$i>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $336 = HEAP32[$this1$i196>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$lhs$cast$i = $335; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$rhs$cast$i = $336; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__d$i = $sub$ptr$div$i; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $337 = $__d$i; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $add$i202 = (($337) + 1)|0; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $div$i203 = (($add$i202|0) / 2)&-1; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__d$i = $div$i203; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_6$i = ((($this1$i196)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $338 = HEAP32[$__begin_6$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_7$i = ((($this1$i196)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $339 = HEAP32[$__end_7$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_8$i = ((($this1$i196)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $340 = HEAP32[$__begin_8$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $341 = $__d$i; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $idx$neg$i = (0 - ($341))|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $add$ptr$i204 = (($340) + ($idx$neg$i<<2)|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__first$addr$i$i = $338;
      $__last$addr$i$i = $339;
      $__result$addr$i$i = $add$ptr$i204;
      $342 = $__first$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__i$addr$i$i$i = $342;
      $343 = $__i$addr$i$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $344 = $__last$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__i$addr$i5$i$i = $344;
      $345 = $__i$addr$i5$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $346 = $__result$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__i$addr$i4$i$i = $346;
      $347 = $__i$addr$i4$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__first$addr$i$i$i = $343;
      $__last$addr$i$i$i = $345;
      $__result$addr$i$i$i = $347;
      $348 = $__last$addr$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $349 = $__first$addr$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $sub$ptr$lhs$cast$i$i$i = $348; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $sub$ptr$rhs$cast$i$i$i = $349; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__n$i$i$i = $sub$ptr$div$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $350 = $__n$i$i$i; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cmp$i$i$i205 = ($350>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      if ($cmp$i$i$i205) {
       $351 = $__result$addr$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
       $352 = $__first$addr$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
       $353 = $__n$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
       $mul$i$i$i = $353<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
       _memmove(($351|0),($352|0),($mul$i$i$i|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      }
      $354 = $__result$addr$i$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $355 = $__n$i$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $add$ptr$i$i$i = (($354) + ($355<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $__end_10$i = ((($this1$i196)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$__end_10$i>>2] = $add$ptr$i$i$i; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $356 = $__d$i; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_11$i = ((($this1$i196)) + 4|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $357 = HEAP32[$__begin_11$i>>2]|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $idx$neg12$i = (0 - ($356))|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $add$ptr13$i = (($357) + ($idx$neg12$i<<2)|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$__begin_11$i>>2] = $add$ptr13$i; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     } else {
      $this$addr$i55$i = $this1$i196;
      $this1$i56$i = $this$addr$i55$i;
      $__end_cap_$i57$i = ((($this1$i56$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i54$i = $__end_cap_$i57$i;
      $this1$i$i58$i = $this$addr$i$i54$i;
      $this$addr$i$i$i53$i = $this1$i$i58$i;
      $this1$i$i$i59$i = $this$addr$i$i$i53$i;
      $358 = HEAP32[$this1$i$i$i59$i>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $359 = HEAP32[$this1$i196>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$lhs$cast16$i = $358; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$rhs$cast17$i = $359; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$sub18$i = (($sub$ptr$lhs$cast16$i) - ($sub$ptr$rhs$cast17$i))|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sub$ptr$div19$i = (($sub$ptr$sub18$i|0) / 4)&-1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $mul$i = $sub$ptr$div19$i<<1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      HEAP32[$ref$tmp20$i>>2] = 1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__a$addr$i99$i = $ref$tmp$i;
      $__b$addr$i$i186 = $ref$tmp20$i;
      $360 = $__a$addr$i99$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $361 = $__b$addr$i$i186; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      ;HEAP8[$agg$tmp1$i98$i>>0]=HEAP8[$agg$tmp$i100$i>>0]|0;
      $__a$addr$i$i97$i = $360;
      $__b$addr$i$i$i = $361;
      $362 = $__a$addr$i$i97$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $363 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $this$addr$i$i$i96$i = $agg$tmp1$i98$i;
      $__x$addr$i$i$i$i = $362;
      $__y$addr$i$i$i$i = $363;
      $364 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $365 = HEAP32[$364>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $366 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $367 = HEAP32[$366>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cmp$i$i$i$i = ($365>>>0)<($367>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $368 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $369 = $__a$addr$i$i97$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $368 : $369; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $370 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__c$i = $370; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $371 = $__c$i; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $372 = $__c$i; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $div22$i = (($372>>>0) / 4)&-1; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i111$i = $this1$i196;
      $this1$i112$i = $this$addr$i111$i;
      $__end_cap_$i113$i = ((($this1$i112$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i110$i = $__end_cap_$i113$i;
      $this1$i$i114$i = $this$addr$i$i110$i;
      $this$addr$i$i$i109$i = $this1$i$i114$i;
      $this1$i$i$i115$i = $this$addr$i$i$i109$i;
      $__second_$i$i$i116$i = ((($this1$i$i$i115$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $ref$i$i$i117$i = HEAP32[$__second_$i$i$i116$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      __THREW__ = 0;
      invoke_viiii(200,($__t$i194|0),($371|0),($div22$i|0),($ref$i$i$i117$i|0)); //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $373 = __THREW__; __THREW__ = 0;
      $374 = $373&1;
      if ($374) {
       label = 56;
       break L59;
      }
      $__begin_24$i = ((($this1$i196)) + 4|0); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $375 = HEAP32[$__begin_24$i>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i105$i = $agg$tmp$i195;
      $__x$addr$i106$i = $375;
      $this1$i107$i = $this$addr$i105$i;
      $376 = $__x$addr$i106$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i107$i>>2] = $376; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      $__end_26$i = ((($this1$i196)) + 8|0); //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $377 = HEAP32[$__end_26$i>>2]|0; //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i102$i = $agg$tmp25$i;
      $__x$addr$i103$i = $377;
      $this1$i104$i = $this$addr$i102$i;
      $378 = $__x$addr$i103$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      HEAP32[$this1$i104$i>>2] = $378; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
      __THREW__ = 0;
      ;HEAP32[$agg$tmp$i195$byval_copy>>2]=HEAP32[$agg$tmp$i195>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      ;HEAP32[$agg$tmp25$i$byval_copy>>2]=HEAP32[$agg$tmp25$i>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      invoke_viii(195,($__t$i194|0),($agg$tmp$i195$byval_copy|0),($agg$tmp25$i$byval_copy|0)); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $379 = __THREW__; __THREW__ = 0;
      $380 = $379&1;
      if ($380) {
       label = 54;
       break L59;
      }
      $__x$addr$i93$i = $this1$i196;
      $__y$addr$i94$i = $__t$i194;
      $381 = $__x$addr$i93$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i92$i = $381;
      $382 = $__t$addr$i$i92$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $383 = HEAP32[$382>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i95$i>>2] = $383; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $384 = $__y$addr$i94$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i90$i = $384;
      $385 = $__t$addr$i4$i90$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $386 = HEAP32[$385>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $387 = $__x$addr$i93$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$387>>2] = $386; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i91$i = $__t$i95$i;
      $388 = $__t$addr$i3$i91$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $389 = HEAP32[$388>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $390 = $__y$addr$i94$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$390>>2] = $389; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_31$i = ((($this1$i196)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_32$i = ((($__t$i194)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i87$i = $__begin_31$i;
      $__y$addr$i88$i = $__begin_32$i;
      $391 = $__x$addr$i87$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i86$i = $391;
      $392 = $__t$addr$i$i86$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $393 = HEAP32[$392>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i89$i>>2] = $393; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $394 = $__y$addr$i88$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i84$i = $394;
      $395 = $__t$addr$i4$i84$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $396 = HEAP32[$395>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $397 = $__x$addr$i87$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$397>>2] = $396; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i85$i = $__t$i89$i;
      $398 = $__t$addr$i3$i85$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $399 = HEAP32[$398>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $400 = $__y$addr$i88$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$400>>2] = $399; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_33$i = ((($this1$i196)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_34$i = ((($__t$i194)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i81$i = $__end_33$i;
      $__y$addr$i82$i = $__end_34$i;
      $401 = $__x$addr$i81$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i80$i = $401;
      $402 = $__t$addr$i$i80$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $403 = HEAP32[$402>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i83$i>>2] = $403; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $404 = $__y$addr$i82$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i78$i = $404;
      $405 = $__t$addr$i4$i78$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $406 = HEAP32[$405>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $407 = $__x$addr$i81$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$407>>2] = $406; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i79$i = $__t$i83$i;
      $408 = $__t$addr$i3$i79$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $409 = HEAP32[$408>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $410 = $__y$addr$i82$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$410>>2] = $409; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i72$i = $this1$i196;
      $this1$i73$i = $this$addr$i72$i;
      $__end_cap_$i74$i = ((($this1$i73$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i71$i = $__end_cap_$i74$i;
      $this1$i$i75$i = $this$addr$i$i71$i;
      $this$addr$i$i$i70$i = $this1$i$i75$i;
      $this1$i$i$i76$i = $this$addr$i$i$i70$i;
      $this$addr$i64$i = $__t$i194;
      $this1$i65$i = $this$addr$i64$i;
      $__end_cap_$i66$i = ((($this1$i65$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i63$i = $__end_cap_$i66$i;
      $this1$i$i67$i = $this$addr$i$i63$i;
      $this$addr$i$i$i62$i = $this1$i$i67$i;
      $this1$i$i$i68$i = $this$addr$i$i$i62$i;
      $__x$addr$i$i = $this1$i$i$i76$i;
      $__y$addr$i$i = $this1$i$i$i68$i;
      $411 = $__x$addr$i$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i61$i = $411;
      $412 = $__t$addr$i$i61$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $413 = HEAP32[$412>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i$i>>2] = $413; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $414 = $__y$addr$i$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i$i = $414;
      $415 = $__t$addr$i4$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $416 = HEAP32[$415>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $417 = $__x$addr$i$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$417>>2] = $416; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i$i = $__t$i$i;
      $418 = $__t$addr$i3$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $419 = HEAP32[$418>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $420 = $__y$addr$i$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$420>>2] = $419; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i194); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     }
    }
   } while(0);
   $this$addr$i48$i = $this1$i196;
   $this1$i49$i = $this$addr$i48$i;
   $__end_cap_$i50$i = ((($this1$i49$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i47$i = $__end_cap_$i50$i;
   $this1$i$i51$i = $this$addr$i$i47$i;
   $this$addr$i$i$i46$i = $this1$i$i51$i;
   $this1$i$i$i52$i = $this$addr$i$i$i46$i;
   $__second_$i$i$i$i = ((($this1$i$i$i52$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $ref$i$i$i$i = HEAP32[$__second_$i$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__end_39$i = ((($this1$i196)) + 8|0); //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $423 = HEAP32[$__end_39$i>>2]|0; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__p$addr$i45$i = $423;
   $424 = $__p$addr$i45$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $425 = $__x$addr$i193; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i$i187 = $ref$i$i$i$i;
   $__p$addr$i$i = $424;
   $__args$addr$i$i = $425;
   $426 = $__a$addr$i$i187; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $427 = $__p$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $428 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i = $428;
   $429 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i188>>0]|0;
   $__a$addr$i$i$i = $426;
   $__p$addr$i$i$i = $427;
   $__args$addr$i$i$i = $429;
   $430 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $431 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $432 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i = $432;
   $433 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $this$addr$i$i$i43$i = $430;
   $__p$addr$i$i$i$i = $431;
   $__args$addr$i$i$i$i = $433;
   $434 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $435 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i$i = $435;
   $436 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $437 = HEAP32[$436>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   HEAP32[$434>>2] = $437; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__end_41$i = ((($this1$i196)) + 8|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $438 = HEAP32[$__end_41$i>>2]|0; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $incdec$ptr$i = ((($438)) + 4|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__end_41$i>>2] = $incdec$ptr$i; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i181 = $this1;
   $this1$i182 = $this$addr$i181;
   $__begin_$i183 = ((($this1$i182)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $439 = HEAP32[$__begin_$i183>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $add$ptr$i = ((($439)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i180 = $this1$i182;
   $__new_begin$addr$i$i = $add$ptr$i;
   $this1$i$i184 = $this$addr$i$i180;
   $440 = $__new_begin$addr$i$i; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
   $this$addr$i$i$i179 = $this1$i$i184;
   $__new_begin$addr$i$i$i = $440;
   $this1$i$i$i185 = $this$addr$i$i$i179;
   $441 = $__new_begin$addr$i$i$i; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__begin_$i$i$i = ((($this1$i$i$i185)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   HEAP32[$__begin_$i$i$i>>2] = $441; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $442 = HEAP32[$__front_capacity>>2]|0; //@line 2547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $dec106 = (($442) + -1)|0; //@line 2547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__front_capacity>>2] = $dec106; //@line 2547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   label = 45;
  }
  L73: do {
   if ((label|0) == 54) {
    $421 = ___cxa_find_matching_catch_2()|0;
    $422 = tempRet0;
    $exn$slot$i = $421; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $ehselector$slot$i = $422; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i194); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $exn$i = $exn$slot$i; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sel$i = $ehselector$slot$i; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $exn$i$sink = $exn$i;$sel$i$sink = $sel$i;
   }
   else if ((label|0) == 58) {
    $this$addr$i176 = $this1;
    $this1$i177 = $this$addr$i176;
    $__end_$i178 = ((($this1$i177)) + 8|0); //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $445 = HEAP32[$__end_$i178>>2]|0; //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__i108 = $445; //@line 2552 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    while(1) {
     $446 = $__i108; //@line 2553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $this$addr$i173 = $this1;
     $this1$i174 = $this$addr$i173;
     $__begin_$i175 = ((($this1$i174)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $447 = HEAP32[$__begin_$i175>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $cmp114 = ($446|0)!=($447|0); //@line 2553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     if (!($cmp114)) {
      break;
     }
     $448 = $__i108; //@line 2554 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $incdec$ptr116 = ((($448)) + -4|0); //@line 2554 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $__i108 = $incdec$ptr116; //@line 2554 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     __THREW__ = 0;
     invoke_vii(201,($__buf|0),($incdec$ptr116|0)); //@line 2554 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $449 = __THREW__; __THREW__ = 0;
     $450 = $449&1;
     if ($450) {
      label = 56;
      break L73;
     }
    }
    $__x$addr$i168 = $this1;
    $__y$addr$i169 = $__buf;
    $451 = $__x$addr$i168; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i$i167 = $451;
    $452 = $__t$addr$i$i167; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $453 = HEAP32[$452>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$__t$i170>>2] = $453; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $454 = $__y$addr$i169; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i4$i165 = $454;
    $455 = $__t$addr$i4$i165; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $456 = HEAP32[$455>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $457 = $__x$addr$i168; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$457>>2] = $456; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i3$i166 = $__t$i170;
    $458 = $__t$addr$i3$i166; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $459 = HEAP32[$458>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $460 = $__y$addr$i169; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$460>>2] = $459; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__begin_ = ((($this1)) + 4|0); //@line 2556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $__begin_122 = ((($__buf)) + 4|0); //@line 2556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $__x$addr$i162 = $__begin_;
    $__y$addr$i163 = $__begin_122;
    $461 = $__x$addr$i162; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i$i161 = $461;
    $462 = $__t$addr$i$i161; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $463 = HEAP32[$462>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$__t$i164>>2] = $463; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $464 = $__y$addr$i163; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i4$i159 = $464;
    $465 = $__t$addr$i4$i159; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $466 = HEAP32[$465>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $467 = $__x$addr$i162; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$467>>2] = $466; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i3$i160 = $__t$i164;
    $468 = $__t$addr$i3$i160; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $469 = HEAP32[$468>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $470 = $__y$addr$i163; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$470>>2] = $469; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__end_ = ((($this1)) + 8|0); //@line 2557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $__end_124 = ((($__buf)) + 8|0); //@line 2557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $__x$addr$i156 = $__end_;
    $__y$addr$i157 = $__end_124;
    $471 = $__x$addr$i156; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i$i155 = $471;
    $472 = $__t$addr$i$i155; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $473 = HEAP32[$472>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$__t$i158>>2] = $473; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $474 = $__y$addr$i157; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i4$i153 = $474;
    $475 = $__t$addr$i4$i153; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $476 = HEAP32[$475>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $477 = $__x$addr$i156; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$477>>2] = $476; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i3$i154 = $__t$i158;
    $478 = $__t$addr$i3$i154; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $479 = HEAP32[$478>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $480 = $__y$addr$i157; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$480>>2] = $479; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $this$addr$i147 = $this1;
    $this1$i148 = $this$addr$i147;
    $__end_cap_$i149 = ((($this1$i148)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i146 = $__end_cap_$i149;
    $this1$i$i150 = $this$addr$i$i146;
    $this$addr$i$i$i145 = $this1$i$i150;
    $this1$i$i$i151 = $this$addr$i$i$i145;
    $this$addr$i141 = $__buf;
    $this1$i142 = $this$addr$i141;
    $__end_cap_$i = ((($this1$i142)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i140 = $__end_cap_$i;
    $this1$i$i143 = $this$addr$i$i140;
    $this$addr$i$i$i139 = $this1$i$i143;
    $this1$i$i$i144 = $this$addr$i$i$i139;
    $__x$addr$i = $this1$i$i$i151;
    $__y$addr$i = $this1$i$i$i144;
    $481 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i$i = $481;
    $482 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $483 = HEAP32[$482>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$__t$i>>2] = $483; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $484 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i4$i = $484;
    $485 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $486 = HEAP32[$485>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $487 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$487>>2] = $486; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $__t$addr$i3$i = $__t$i;
    $488 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $489 = HEAP32[$488>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $490 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    HEAP32[$490>>2] = $489; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $491 = $__ds; //@line 2559 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $__start_128 = ((($this1)) + 16|0); //@line 2559 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $492 = HEAP32[$__start_128>>2]|0; //@line 2559 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $sub129 = (($492) - ($491))|0; //@line 2559 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    HEAP32[$__start_128>>2] = $sub129; //@line 2559 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    STACKTOP = sp;return; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   }
  } while(0);
  if ((label|0) == 56) {
   $443 = ___cxa_find_matching_catch_2()|0;
   $444 = tempRet0;
   $exn$i$sink = $443;$sel$i$sink = $444;
  }
  $exn$slot = $exn$i$sink; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $ehselector$slot = $sel$i$sink; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $exn132 = $exn$slot; //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sel = $ehselector$slot; //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  ___resumeException($exn132|0);
  // unreachable;
 }
 $310 = ___cxa_find_matching_catch_3(0|0)|0;
 $311 = tempRet0;
 $exn$slot = $310; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $ehselector$slot = $311; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $exn = $exn$slot; //@line 2538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 (___cxa_begin_catch(($exn|0))|0); //@line 2538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i759 = $__buf;
 $this1$i760 = $this$addr$i759;
 $__begin_$i761 = ((($this1$i760)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $312 = HEAP32[$__begin_$i761>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__i = $312; //@line 2541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $313 = $__i; //@line 2542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i762 = $__buf;
  $this1$i763 = $this$addr$i762;
  $__end_$i764 = ((($this1$i763)) + 8|0); //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $314 = HEAP32[$__end_$i764>>2]|0; //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp89 = ($313|0)!=($314|0); //@line 2542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp89)) {
   break;
  }
  $315 = $__a; //@line 2543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $316 = $__i; //@line 2543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $317 = HEAP32[$316>>2]|0; //@line 2543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i768 = $315;
  $__p$addr$i = $317;
  $__n$addr$i769 = 1024;
  $318 = $__a$addr$i768; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $319 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $320 = $__n$addr$i769; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i765 = $318;
  $__p$addr$i$i766 = $319;
  $$addr$i$i767 = $320;
  $321 = $__p$addr$i$i766; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i = $321;
  $322 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($322); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $323 = $__i; //@line 2542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr = ((($323)) + 4|0); //@line 2542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__i = $incdec$ptr; //@line 2542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 __THREW__ = 0;
 invoke_v(198); //@line 2544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $324 = __THREW__; __THREW__ = 0;
 $325 = ___cxa_find_matching_catch_2()|0;
 $326 = tempRet0;
 $exn$slot = $325; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $ehselector$slot = $326; //@line 2561 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 __THREW__ = 0;
 invoke_v(199); //@line 2545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $327 = __THREW__; __THREW__ = 0;
 $328 = $327&1;
 if ($328) {
  $493 = ___cxa_find_matching_catch_3(0|0)|0;
  $494 = tempRet0;
  ___clang_call_terminate($493); //@line 2545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  // unreachable; //@line 2545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 } else {
  __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $exn132 = $exn$slot; //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sel = $ehselector$slot; //@line 2560 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  ___resumeException($exn132|0);
  // unreachable;
 }
}
function __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE3endEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i = 0, $__begin_$i13 = 0, $__end_$i = 0, $__m$addr$i = 0, $__mp = 0, $__p = 0, $__p$addr$i = 0, $__ptr_$i = 0;
 var $__size_$i = 0, $__start_ = 0, $add = 0, $add$ptr = 0, $add$ptr6 = 0, $cmp$i = 0, $cond = 0, $div = 0, $rem = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i11 = 0, $this$addr$i7 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0;
 var $this1$i10 = 0, $this1$i12 = 0, $this1$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $0 = HEAP32[$this1$i$i$i>>2]|0; //@line 1080 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__start_ = ((($this1)) + 16|0); //@line 1080 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $1 = HEAP32[$__start_>>2]|0; //@line 1080 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add = (($0) + ($1))|0; //@line 1080 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__p = $add; //@line 1080 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i7 = $this1;
 $this1$i8 = $this$addr$i7;
 $__begin_$i = ((($this1$i8)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $2 = HEAP32[$__begin_$i>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $3 = $__p; //@line 1081 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $div = (($3>>>0) / 1024)&-1; //@line 1081 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$ptr = (($2) + ($div<<2)|0); //@line 1081 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__mp = $add$ptr; //@line 1081 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $4 = $__mp; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i11 = $this1;
 $this1$i12 = $this$addr$i11;
 $__end_$i = ((($this1$i12)) + 8|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $5 = HEAP32[$__end_$i>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i13 = ((($this1$i12)) + 4|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $6 = HEAP32[$__begin_$i13>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i = ($5|0)==($6|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if ($cmp$i) {
  $cond = 0;
 } else {
  $7 = $__mp; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $8 = HEAP32[$7>>2]|0; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $9 = $__p; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $rem = (($9>>>0) % 1024)&-1; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr6 = (($8) + ($rem<<2)|0); //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cond = $add$ptr6;
 }
 $this$addr$i9 = $agg$result;
 $__m$addr$i = $4;
 $__p$addr$i = $cond;
 $this1$i10 = $this$addr$i9;
 $10 = $__m$addr$i; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$this1$i10>>2] = $10; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__ptr_$i = ((($this1$i10)) + 4|0); //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $11 = $__p$addr$i; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__ptr_$i>>2] = $11; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 1082 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE9push_backEOS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i98 = 0, $__a$addr$i100 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__begin_ = 0, $__begin_11 = 0, $__begin_24 = 0, $__begin_31 = 0;
 var $__begin_32 = 0, $__begin_4 = 0, $__begin_6 = 0, $__begin_8 = 0, $__c = 0, $__d = 0, $__end_ = 0, $__end_10 = 0, $__end_26 = 0, $__end_33 = 0, $__end_34 = 0, $__end_39 = 0, $__end_42 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i114 = 0, $__end_cap_$i51 = 0, $__end_cap_$i58 = 0, $__end_cap_$i67 = 0, $__end_cap_$i75 = 0;
 var $__first$addr$i = 0, $__first$addr$i$i = 0, $__i$addr$i$i = 0, $__i$addr$i4$i = 0, $__i$addr$i5$i = 0, $__last$addr$i = 0, $__last$addr$i$i = 0, $__n$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i46 = 0, $__result$addr$i = 0, $__result$addr$i$i = 0, $__t = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i62 = 0;
 var $__t$addr$i$i81 = 0, $__t$addr$i$i87 = 0, $__t$addr$i$i93 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i80 = 0, $__t$addr$i3$i86 = 0, $__t$addr$i3$i92 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i79 = 0, $__t$addr$i4$i85 = 0, $__t$addr$i4$i91 = 0, $__t$i = 0, $__t$i84 = 0, $__t$i90 = 0, $__t$i96 = 0, $__x$addr = 0, $__x$addr$i = 0, $__x$addr$i$i$i = 0, $__x$addr$i104 = 0, $__x$addr$i107 = 0;
 var $__x$addr$i82 = 0, $__x$addr$i88 = 0, $__x$addr$i94 = 0, $__y$addr$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i83 = 0, $__y$addr$i89 = 0, $__y$addr$i95 = 0, $add = 0, $add$ptr = 0, $add$ptr$i$i = 0, $add$ptr13 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$i = 0, $agg$tmp$i101 = 0, $agg$tmp1$i = 0, $agg$tmp1$i99 = 0, $agg$tmp25 = 0, $agg$tmp25$byval_copy = 0;
 var $cmp = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp2 = 0, $cond$lvalue$i$i2D = 0, $div = 0, $div22 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $idx$neg = 0, $idx$neg12 = 0, $incdec$ptr = 0, $mul = 0, $mul$i$i = 0, $ref$tmp = 0, $ref$tmp20 = 0, $sel = 0, $sub$ptr$div = 0, $sub$ptr$div$i$i = 0;
 var $sub$ptr$div19 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast16 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast17 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub18 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i110 = 0, $this$addr$i$i$i44 = 0, $this$addr$i$i$i47 = 0, $this$addr$i$i$i54 = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i71 = 0;
 var $this$addr$i$i$i97 = 0, $this$addr$i$i111 = 0, $this$addr$i$i48 = 0, $this$addr$i$i55 = 0, $this$addr$i$i64 = 0, $this$addr$i$i72 = 0, $this$addr$i103 = 0, $this$addr$i106 = 0, $this$addr$i112 = 0, $this$addr$i49 = 0, $this$addr$i56 = 0, $this$addr$i65 = 0, $this$addr$i73 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i116 = 0, $this1$i$i$i53 = 0, $this1$i$i$i60 = 0;
 var $this1$i$i$i69 = 0, $this1$i$i$i77 = 0, $this1$i$i115 = 0, $this1$i$i52 = 0, $this1$i$i59 = 0, $this1$i$i68 = 0, $this1$i$i76 = 0, $this1$i105 = 0, $this1$i108 = 0, $this1$i113 = 0, $this1$i50 = 0, $this1$i57 = 0, $this1$i66 = 0, $this1$i74 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $agg$tmp25$byval_copy = sp + 384|0;
 $agg$tmp$byval_copy = sp + 380|0;
 $agg$tmp1$i99 = sp + 8|0;
 $agg$tmp$i101 = sp + 389|0;
 $__t$i96 = sp + 300|0;
 $__t$i90 = sp + 276|0;
 $__t$i84 = sp + 252|0;
 $__t$i = sp + 204|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 388|0;
 $ref$tmp = sp + 52|0;
 $ref$tmp20 = sp + 48|0;
 $__t = sp + 28|0;
 $agg$tmp = sp + 24|0;
 $agg$tmp25 = sp + 12|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $__end_ = ((($this1)) + 8|0); //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__end_>>2]|0; //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $1 = HEAP32[$this1$i$i$i>>2]|0; //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($0|0)==($1|0); //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $__begin_ = ((($this1)) + 4|0); //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $2 = HEAP32[$__begin_>>2]|0; //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $3 = HEAP32[$this1>>2]|0; //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp2 = ($2>>>0)>($3>>>0); //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   if ($cmp2) {
    $__begin_4 = ((($this1)) + 4|0); //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $4 = HEAP32[$__begin_4>>2]|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $5 = HEAP32[$this1>>2]|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast = $4; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast = $5; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $sub$ptr$div; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $6 = $__d; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add = (($6) + 1)|0; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div = (($add|0) / 2)&-1; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $div; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_6 = ((($this1)) + 4|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $7 = HEAP32[$__begin_6>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_7 = ((($this1)) + 8|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $8 = HEAP32[$__end_7>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_8 = ((($this1)) + 4|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $9 = HEAP32[$__begin_8>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $10 = $__d; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $idx$neg = (0 - ($10))|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr = (($9) + ($idx$neg<<2)|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__first$addr$i = $7;
    $__last$addr$i = $8;
    $__result$addr$i = $add$ptr;
    $11 = $__first$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i$i = $11;
    $12 = $__i$addr$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $13 = $__last$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i5$i = $13;
    $14 = $__i$addr$i5$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $15 = $__result$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i4$i = $15;
    $16 = $__i$addr$i4$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__first$addr$i$i = $12;
    $__last$addr$i$i = $14;
    $__result$addr$i$i = $16;
    $17 = $__last$addr$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $18 = $__first$addr$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$lhs$cast$i$i = $17; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$rhs$cast$i$i = $18; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__n$i$i = $sub$ptr$div$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $19 = $__n$i$i; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i = ($19>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    if ($cmp$i$i) {
     $20 = $__result$addr$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $21 = $__first$addr$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $22 = $__n$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $mul$i$i = $22<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     _memmove(($20|0),($21|0),($mul$i$i|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    }
    $23 = $__result$addr$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $24 = $__n$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $add$ptr$i$i = (($23) + ($24<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__end_10 = ((($this1)) + 8|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__end_10>>2] = $add$ptr$i$i; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $25 = $__d; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_11 = ((($this1)) + 4|0); //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $26 = HEAP32[$__begin_11>>2]|0; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $idx$neg12 = (0 - ($25))|0; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr13 = (($26) + ($idx$neg12<<2)|0); //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__begin_11>>2] = $add$ptr13; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    break;
   } else {
    $this$addr$i56 = $this1;
    $this1$i57 = $this$addr$i56;
    $__end_cap_$i58 = ((($this1$i57)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i55 = $__end_cap_$i58;
    $this1$i$i59 = $this$addr$i$i55;
    $this$addr$i$i$i54 = $this1$i$i59;
    $this1$i$i$i60 = $this$addr$i$i$i54;
    $27 = HEAP32[$this1$i$i$i60>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $28 = HEAP32[$this1>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast16 = $27; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast17 = $28; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub18 = (($sub$ptr$lhs$cast16) - ($sub$ptr$rhs$cast17))|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div19 = (($sub$ptr$sub18|0) / 4)&-1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $mul = $sub$ptr$div19<<1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp>>2] = $mul; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp20>>2] = 1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__a$addr$i100 = $ref$tmp;
    $__b$addr$i = $ref$tmp20;
    $29 = $__a$addr$i100; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $30 = $__b$addr$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    ;HEAP8[$agg$tmp1$i99>>0]=HEAP8[$agg$tmp$i101>>0]|0;
    $__a$addr$i$i98 = $29;
    $__b$addr$i$i = $30;
    $31 = $__a$addr$i$i98; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $32 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $this$addr$i$i$i97 = $agg$tmp1$i99;
    $__x$addr$i$i$i = $31;
    $__y$addr$i$i$i = $32;
    $33 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $34 = HEAP32[$33>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $35 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $36 = HEAP32[$35>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i$i = ($34>>>0)<($36>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $37 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $38 = $__a$addr$i$i98; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cond$lvalue$i$i2D = $cmp$i$i$i ? $37 : $38; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $39 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__c = $39; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $40 = $__c; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $41 = $__c; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div22 = (($41>>>0) / 4)&-1; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i112 = $this1;
    $this1$i113 = $this$addr$i112;
    $__end_cap_$i114 = ((($this1$i113)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i111 = $__end_cap_$i114;
    $this1$i$i115 = $this$addr$i$i111;
    $this$addr$i$i$i110 = $this1$i$i115;
    $this1$i$i$i116 = $this$addr$i$i$i110;
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t,$40,$div22,$this1$i$i$i116); //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_24 = ((($this1)) + 4|0); //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $42 = HEAP32[$__begin_24>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i106 = $agg$tmp;
    $__x$addr$i107 = $42;
    $this1$i108 = $this$addr$i106;
    $43 = $__x$addr$i107; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i108>>2] = $43; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    $__end_26 = ((($this1)) + 8|0); //@line 579 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $44 = HEAP32[$__end_26>>2]|0; //@line 579 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i103 = $agg$tmp25;
    $__x$addr$i104 = $44;
    $this1$i105 = $this$addr$i103;
    $45 = $__x$addr$i104; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i105>>2] = $45; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    __THREW__ = 0;
    ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    ;HEAP32[$agg$tmp25$byval_copy>>2]=HEAP32[$agg$tmp25>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    invoke_viii(195,($__t|0),($agg$tmp$byval_copy|0),($agg$tmp25$byval_copy|0)); //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $exn$slot = $88; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $ehselector$slot = $89; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $exn = $exn$slot; //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sel = $ehselector$slot; //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ___resumeException($exn|0);
     // unreachable;
    } else {
     $__x$addr$i94 = $this1;
     $__y$addr$i95 = $__t;
     $48 = $__x$addr$i94; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i93 = $48;
     $49 = $__t$addr$i$i93; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $50 = HEAP32[$49>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i96>>2] = $50; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $51 = $__y$addr$i95; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i91 = $51;
     $52 = $__t$addr$i4$i91; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $53 = HEAP32[$52>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $54 = $__x$addr$i94; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$54>>2] = $53; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i92 = $__t$i96;
     $55 = $__t$addr$i3$i92; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $56 = HEAP32[$55>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $57 = $__y$addr$i95; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$57>>2] = $56; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__begin_31 = ((($this1)) + 4|0); //@line 581 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_32 = ((($__t)) + 4|0); //@line 581 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i88 = $__begin_31;
     $__y$addr$i89 = $__begin_32;
     $58 = $__x$addr$i88; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i87 = $58;
     $59 = $__t$addr$i$i87; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $60 = HEAP32[$59>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i90>>2] = $60; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $61 = $__y$addr$i89; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i85 = $61;
     $62 = $__t$addr$i4$i85; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $63 = HEAP32[$62>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $64 = $__x$addr$i88; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$64>>2] = $63; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i86 = $__t$i90;
     $65 = $__t$addr$i3$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $66 = HEAP32[$65>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $67 = $__y$addr$i89; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$67>>2] = $66; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__end_33 = ((($this1)) + 8|0); //@line 582 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_34 = ((($__t)) + 8|0); //@line 582 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i82 = $__end_33;
     $__y$addr$i83 = $__end_34;
     $68 = $__x$addr$i82; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i81 = $68;
     $69 = $__t$addr$i$i81; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $70 = HEAP32[$69>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i84>>2] = $70; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $71 = $__y$addr$i83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i79 = $71;
     $72 = $__t$addr$i4$i79; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $73 = HEAP32[$72>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $74 = $__x$addr$i82; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$74>>2] = $73; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i80 = $__t$i84;
     $75 = $__t$addr$i3$i80; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $76 = HEAP32[$75>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $77 = $__y$addr$i83; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$77>>2] = $76; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $this$addr$i73 = $this1;
     $this1$i74 = $this$addr$i73;
     $__end_cap_$i75 = ((($this1$i74)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i72 = $__end_cap_$i75;
     $this1$i$i76 = $this$addr$i$i72;
     $this$addr$i$i$i71 = $this1$i$i76;
     $this1$i$i$i77 = $this$addr$i$i$i71;
     $this$addr$i65 = $__t;
     $this1$i66 = $this$addr$i65;
     $__end_cap_$i67 = ((($this1$i66)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i64 = $__end_cap_$i67;
     $this1$i$i68 = $this$addr$i$i64;
     $this$addr$i$i$i63 = $this1$i$i68;
     $this1$i$i$i69 = $this$addr$i$i$i63;
     $__x$addr$i = $this1$i$i$i77;
     $__y$addr$i = $this1$i$i$i69;
     $78 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i62 = $78;
     $79 = $__t$addr$i$i62; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $80 = HEAP32[$79>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i>>2] = $80; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $81 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i = $81;
     $82 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $83 = HEAP32[$82>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $84 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$84>>2] = $83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i = $__t$i;
     $85 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $86 = HEAP32[$85>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $87 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$87>>2] = $86; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    }
   }
  }
 } while(0);
 $this$addr$i49 = $this1;
 $this1$i50 = $this$addr$i49;
 $__end_cap_$i51 = ((($this1$i50)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i48 = $__end_cap_$i51;
 $this1$i$i52 = $this$addr$i$i48;
 $this$addr$i$i$i47 = $this1$i$i52;
 $this1$i$i$i53 = $this$addr$i$i$i47;
 $__end_39 = ((($this1)) + 8|0); //@line 586 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $90 = HEAP32[$__end_39>>2]|0; //@line 586 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__p$addr$i46 = $90;
 $91 = $__p$addr$i46; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $92 = $__x$addr; //@line 587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__t$addr$i = $92;
 $93 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $this1$i$i$i53;
 $__p$addr$i = $91;
 $__args$addr$i = $93;
 $94 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $95 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $96 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $96;
 $97 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $94;
 $__p$addr$i$i = $95;
 $__args$addr$i$i = $97;
 $98 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $99 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $100 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $100;
 $101 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i44 = $98;
 $__p$addr$i$i$i = $99;
 $__args$addr$i$i$i = $101;
 $102 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $103 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $103;
 $104 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $105 = HEAP32[$104>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$102>>2] = $105; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_42 = ((($this1)) + 8|0); //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $106 = HEAP32[$__end_42>>2]|0; //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $incdec$ptr = ((($106)) + 4|0); //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_42>>2] = $incdec$ptr; //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE10push_frontEOS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i114 = 0, $__a$addr$i116 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__begin_ = 0, $__begin_10 = 0, $__begin_24 = 0;
 var $__begin_31 = 0, $__begin_32 = 0, $__begin_39 = 0, $__begin_43 = 0, $__begin_6 = 0, $__c = 0, $__d = 0, $__end_ = 0, $__end_11 = 0, $__end_26 = 0, $__end_33 = 0, $__end_34 = 0, $__end_5 = 0, $__end_7 = 0, $__end_8 = 0, $__end_cap_$i = 0, $__end_cap_$i102 = 0, $__end_cap_$i123 = 0, $__end_cap_$i52 = 0, $__end_cap_$i59 = 0;
 var $__end_cap_$i68 = 0, $__end_cap_$i76 = 0, $__first$addr$i = 0, $__first$addr$i$i = 0, $__i$addr$i$i = 0, $__i$addr$i4$i = 0, $__i$addr$i5$i = 0, $__last$addr$i = 0, $__last$addr$i$i = 0, $__n$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i47 = 0, $__result$addr$i = 0, $__result$addr$i$i = 0, $__t = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0;
 var $__t$addr$i$i$i$i = 0, $__t$addr$i$i63 = 0, $__t$addr$i$i82 = 0, $__t$addr$i$i88 = 0, $__t$addr$i$i94 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i81 = 0, $__t$addr$i3$i87 = 0, $__t$addr$i3$i93 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i80 = 0, $__t$addr$i4$i86 = 0, $__t$addr$i4$i92 = 0, $__t$i = 0, $__t$i85 = 0, $__t$i91 = 0, $__t$i97 = 0, $__x$addr = 0, $__x$addr$i = 0, $__x$addr$i$i$i = 0;
 var $__x$addr$i107 = 0, $__x$addr$i110 = 0, $__x$addr$i83 = 0, $__x$addr$i89 = 0, $__x$addr$i95 = 0, $__y$addr$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i84 = 0, $__y$addr$i90 = 0, $__y$addr$i96 = 0, $add = 0, $add$ptr = 0, $add$ptr$i$i = 0, $add$ptr12 = 0, $add$ptr40 = 0, $add21 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$i = 0, $agg$tmp$i117 = 0;
 var $agg$tmp1$i = 0, $agg$tmp1$i115 = 0, $agg$tmp25 = 0, $agg$tmp25$byval_copy = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp2 = 0, $cond$lvalue$i$i2D = 0, $div = 0, $div22 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $idx$neg$i$i = 0, $incdec$ptr = 0, $mul = 0, $mul$i$i = 0, $ref$tmp = 0, $ref$tmp19 = 0;
 var $sel = 0, $sub$ptr$div = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div18 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast15 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast16 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub17 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i113 = 0, $this$addr$i$i$i119 = 0, $this$addr$i$i$i45 = 0;
 var $this$addr$i$i$i48 = 0, $this$addr$i$i$i55 = 0, $this$addr$i$i$i64 = 0, $this$addr$i$i$i72 = 0, $this$addr$i$i$i98 = 0, $this$addr$i$i120 = 0, $this$addr$i$i49 = 0, $this$addr$i$i56 = 0, $this$addr$i$i65 = 0, $this$addr$i$i73 = 0, $this$addr$i$i99 = 0, $this$addr$i100 = 0, $this$addr$i106 = 0, $this$addr$i109 = 0, $this$addr$i121 = 0, $this$addr$i50 = 0, $this$addr$i57 = 0, $this$addr$i66 = 0, $this$addr$i74 = 0, $this1 = 0;
 var $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i104 = 0, $this1$i$i$i125 = 0, $this1$i$i$i54 = 0, $this1$i$i$i61 = 0, $this1$i$i$i70 = 0, $this1$i$i$i78 = 0, $this1$i$i103 = 0, $this1$i$i124 = 0, $this1$i$i53 = 0, $this1$i$i60 = 0, $this1$i$i69 = 0, $this1$i$i77 = 0, $this1$i101 = 0, $this1$i108 = 0, $this1$i111 = 0, $this1$i122 = 0, $this1$i51 = 0;
 var $this1$i58 = 0, $this1$i67 = 0, $this1$i75 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $agg$tmp25$byval_copy = sp + 396|0;
 $agg$tmp$byval_copy = sp + 392|0;
 $agg$tmp1$i115 = sp + 8|0;
 $agg$tmp$i117 = sp + 401|0;
 $__t$i97 = sp + 300|0;
 $__t$i91 = sp + 276|0;
 $__t$i85 = sp + 252|0;
 $__t$i = sp + 204|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 400|0;
 $ref$tmp = sp + 52|0;
 $ref$tmp19 = sp + 48|0;
 $__t = sp + 28|0;
 $agg$tmp = sp + 24|0;
 $agg$tmp25 = sp + 12|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $__begin_ = ((($this1)) + 4|0); //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_>>2]|0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$this1>>2]|0; //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($0|0)==($1|0); //@line 501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $__end_ = ((($this1)) + 8|0); //@line 503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $2 = HEAP32[$__end_>>2]|0; //@line 503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i = $this1;
   $this1$i = $this$addr$i;
   $__end_cap_$i = ((($this1$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i = $__end_cap_$i;
   $this1$i$i = $this$addr$i$i;
   $this$addr$i$i$i = $this1$i$i;
   $this1$i$i$i = $this$addr$i$i$i;
   $3 = HEAP32[$this1$i$i$i>>2]|0; //@line 503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp2 = ($2>>>0)<($3>>>0); //@line 503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   if ($cmp2) {
    $this$addr$i57 = $this1;
    $this1$i58 = $this$addr$i57;
    $__end_cap_$i59 = ((($this1$i58)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i56 = $__end_cap_$i59;
    $this1$i$i60 = $this$addr$i$i56;
    $this$addr$i$i$i55 = $this1$i$i60;
    $this1$i$i$i61 = $this$addr$i$i$i55;
    $4 = HEAP32[$this1$i$i$i61>>2]|0; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_5 = ((($this1)) + 8|0); //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $5 = HEAP32[$__end_5>>2]|0; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast = $4; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast = $5; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $sub$ptr$div; //@line 505 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $6 = $__d; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add = (($6) + 1)|0; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div = (($add|0) / 2)&-1; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $div; //@line 506 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_6 = ((($this1)) + 4|0); //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $7 = HEAP32[$__begin_6>>2]|0; //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_7 = ((($this1)) + 8|0); //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $8 = HEAP32[$__end_7>>2]|0; //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_8 = ((($this1)) + 8|0); //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $9 = HEAP32[$__end_8>>2]|0; //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $10 = $__d; //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr = (($9) + ($10<<2)|0); //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__first$addr$i = $7;
    $__last$addr$i = $8;
    $__result$addr$i = $add$ptr;
    $11 = $__first$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i$i = $11;
    $12 = $__i$addr$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $13 = $__last$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i5$i = $13;
    $14 = $__i$addr$i5$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $15 = $__result$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i4$i = $15;
    $16 = $__i$addr$i4$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__first$addr$i$i = $12;
    $__last$addr$i$i = $14;
    $__result$addr$i$i = $16;
    $17 = $__last$addr$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $18 = $__first$addr$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$lhs$cast$i$i = $17; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$rhs$cast$i$i = $18; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__n$i$i = $sub$ptr$div$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $19 = $__n$i$i; //@line 1928 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i = ($19>>>0)>(0); //@line 1928 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    if ($cmp$i$i) {
     $20 = $__n$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $21 = $__result$addr$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $idx$neg$i$i = (0 - ($20))|0; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i = (($21) + ($idx$neg$i$i<<2)|0); //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__result$addr$i$i = $add$ptr$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $22 = $__result$addr$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $23 = $__first$addr$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $24 = $__n$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $mul$i$i = $24<<2; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     _memmove(($22|0),($23|0),($mul$i$i|0))|0; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    }
    $25 = $__result$addr$i$i; //@line 1933 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__begin_10 = ((($this1)) + 4|0); //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__begin_10>>2] = $25; //@line 507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $26 = $__d; //@line 508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_11 = ((($this1)) + 8|0); //@line 508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $27 = HEAP32[$__end_11>>2]|0; //@line 508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr12 = (($27) + ($26<<2)|0); //@line 508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__end_11>>2] = $add$ptr12; //@line 508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    break;
   } else {
    $this$addr$i100 = $this1;
    $this1$i101 = $this$addr$i100;
    $__end_cap_$i102 = ((($this1$i101)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i99 = $__end_cap_$i102;
    $this1$i$i103 = $this$addr$i$i99;
    $this$addr$i$i$i98 = $this1$i$i103;
    $this1$i$i$i104 = $this$addr$i$i$i98;
    $28 = HEAP32[$this1$i$i$i104>>2]|0; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $29 = HEAP32[$this1>>2]|0; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast15 = $28; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast16 = $29; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub17 = (($sub$ptr$lhs$cast15) - ($sub$ptr$rhs$cast16))|0; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div18 = (($sub$ptr$sub17|0) / 4)&-1; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $mul = $sub$ptr$div18<<1; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp>>2] = $mul; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp19>>2] = 1; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__a$addr$i116 = $ref$tmp;
    $__b$addr$i = $ref$tmp19;
    $30 = $__a$addr$i116; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $31 = $__b$addr$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    ;HEAP8[$agg$tmp1$i115>>0]=HEAP8[$agg$tmp$i117>>0]|0;
    $__a$addr$i$i114 = $30;
    $__b$addr$i$i = $31;
    $32 = $__a$addr$i$i114; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $33 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $this$addr$i$i$i113 = $agg$tmp1$i115;
    $__x$addr$i$i$i = $32;
    $__y$addr$i$i$i = $33;
    $34 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $35 = HEAP32[$34>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $36 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $37 = HEAP32[$36>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i$i = ($35>>>0)<($37>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $38 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $39 = $__a$addr$i$i114; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cond$lvalue$i$i2D = $cmp$i$i$i ? $38 : $39; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $40 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__c = $40; //@line 512 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $41 = $__c; //@line 513 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $42 = $__c; //@line 513 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add21 = (($42) + 3)|0; //@line 513 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div22 = (($add21>>>0) / 4)&-1; //@line 513 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i121 = $this1;
    $this1$i122 = $this$addr$i121;
    $__end_cap_$i123 = ((($this1$i122)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i120 = $__end_cap_$i123;
    $this1$i$i124 = $this$addr$i$i120;
    $this$addr$i$i$i119 = $this1$i$i124;
    $this1$i$i$i125 = $this$addr$i$i$i119;
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t,$41,$div22,$this1$i$i$i125); //@line 513 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_24 = ((($this1)) + 4|0); //@line 514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $43 = HEAP32[$__begin_24>>2]|0; //@line 514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i109 = $agg$tmp;
    $__x$addr$i110 = $43;
    $this1$i111 = $this$addr$i109;
    $44 = $__x$addr$i110; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i111>>2] = $44; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    $__end_26 = ((($this1)) + 8|0); //@line 515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $45 = HEAP32[$__end_26>>2]|0; //@line 515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i106 = $agg$tmp25;
    $__x$addr$i107 = $45;
    $this1$i108 = $this$addr$i106;
    $46 = $__x$addr$i107; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i108>>2] = $46; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    __THREW__ = 0;
    ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0; //@line 514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    ;HEAP32[$agg$tmp25$byval_copy>>2]=HEAP32[$agg$tmp25>>2]|0; //@line 514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    invoke_viii(195,($__t|0),($agg$tmp$byval_copy|0),($agg$tmp25$byval_copy|0)); //@line 514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $47 = __THREW__; __THREW__ = 0;
    $48 = $47&1;
    if ($48) {
     $89 = ___cxa_find_matching_catch_2()|0;
     $90 = tempRet0;
     $exn$slot = $89; //@line 525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $ehselector$slot = $90; //@line 525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 520 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $exn = $exn$slot; //@line 520 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sel = $ehselector$slot; //@line 520 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ___resumeException($exn|0);
     // unreachable;
    } else {
     $__x$addr$i95 = $this1;
     $__y$addr$i96 = $__t;
     $49 = $__x$addr$i95; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i94 = $49;
     $50 = $__t$addr$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $51 = HEAP32[$50>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i97>>2] = $51; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $52 = $__y$addr$i96; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i92 = $52;
     $53 = $__t$addr$i4$i92; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $54 = HEAP32[$53>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $55 = $__x$addr$i95; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$55>>2] = $54; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i93 = $__t$i97;
     $56 = $__t$addr$i3$i93; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $57 = HEAP32[$56>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $58 = $__y$addr$i96; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$58>>2] = $57; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__begin_31 = ((($this1)) + 4|0); //@line 517 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_32 = ((($__t)) + 4|0); //@line 517 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i89 = $__begin_31;
     $__y$addr$i90 = $__begin_32;
     $59 = $__x$addr$i89; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i88 = $59;
     $60 = $__t$addr$i$i88; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $61 = HEAP32[$60>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i91>>2] = $61; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $62 = $__y$addr$i90; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i86 = $62;
     $63 = $__t$addr$i4$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $64 = HEAP32[$63>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $65 = $__x$addr$i89; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$65>>2] = $64; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i87 = $__t$i91;
     $66 = $__t$addr$i3$i87; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $67 = HEAP32[$66>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $68 = $__y$addr$i90; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$68>>2] = $67; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__end_33 = ((($this1)) + 8|0); //@line 518 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_34 = ((($__t)) + 8|0); //@line 518 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i83 = $__end_33;
     $__y$addr$i84 = $__end_34;
     $69 = $__x$addr$i83; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i82 = $69;
     $70 = $__t$addr$i$i82; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $71 = HEAP32[$70>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i85>>2] = $71; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $72 = $__y$addr$i84; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i80 = $72;
     $73 = $__t$addr$i4$i80; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $74 = HEAP32[$73>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $75 = $__x$addr$i83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$75>>2] = $74; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i81 = $__t$i85;
     $76 = $__t$addr$i3$i81; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $77 = HEAP32[$76>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $78 = $__y$addr$i84; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$78>>2] = $77; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $this$addr$i74 = $this1;
     $this1$i75 = $this$addr$i74;
     $__end_cap_$i76 = ((($this1$i75)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i73 = $__end_cap_$i76;
     $this1$i$i77 = $this$addr$i$i73;
     $this$addr$i$i$i72 = $this1$i$i77;
     $this1$i$i$i78 = $this$addr$i$i$i72;
     $this$addr$i66 = $__t;
     $this1$i67 = $this$addr$i66;
     $__end_cap_$i68 = ((($this1$i67)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i65 = $__end_cap_$i68;
     $this1$i$i69 = $this$addr$i$i65;
     $this$addr$i$i$i64 = $this1$i$i69;
     $this1$i$i$i70 = $this$addr$i$i$i64;
     $__x$addr$i = $this1$i$i$i78;
     $__y$addr$i = $this1$i$i$i70;
     $79 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i63 = $79;
     $80 = $__t$addr$i$i63; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $81 = HEAP32[$80>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i>>2] = $81; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $82 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i = $82;
     $83 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $84 = HEAP32[$83>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $85 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$85>>2] = $84; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i = $__t$i;
     $86 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $87 = HEAP32[$86>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $88 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$88>>2] = $87; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 520 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    }
   }
  }
 } while(0);
 $this$addr$i50 = $this1;
 $this1$i51 = $this$addr$i50;
 $__end_cap_$i52 = ((($this1$i51)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i49 = $__end_cap_$i52;
 $this1$i$i53 = $this$addr$i$i49;
 $this$addr$i$i$i48 = $this1$i$i53;
 $this1$i$i$i54 = $this$addr$i$i$i48;
 $__begin_39 = ((($this1)) + 4|0); //@line 522 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $91 = HEAP32[$__begin_39>>2]|0; //@line 522 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr40 = ((($91)) + -4|0); //@line 522 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__p$addr$i47 = $add$ptr40;
 $92 = $__p$addr$i47; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $93 = $__x$addr; //@line 523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__t$addr$i = $93;
 $94 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $this1$i$i$i54;
 $__p$addr$i = $92;
 $__args$addr$i = $94;
 $95 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $96 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $97 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $97;
 $98 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $95;
 $__p$addr$i$i = $96;
 $__args$addr$i$i = $98;
 $99 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $100 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $101 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $101;
 $102 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i45 = $99;
 $__p$addr$i$i$i = $100;
 $__args$addr$i$i$i = $102;
 $103 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $104 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $104;
 $105 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $106 = HEAP32[$105>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$103>>2] = $106; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__begin_43 = ((($this1)) + 4|0); //@line 524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $107 = HEAP32[$__begin_43>>2]|0; //@line 524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $incdec$ptr = ((($107)) + -4|0); //@line 524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_43>>2] = $incdec$ptr; //@line 524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 525 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a$addr = 0, $__a$addr$i = 0, $__begin_ = 0, $__cap$addr = 0, $__end_ = 0, $__end_cap_ = 0, $__end_cap_$i = 0, $__end_cap_$i19 = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__second_$i$i = 0, $__second_$i$i$i = 0, $__size$addr$i$i$i = 0, $__start$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t1$addr$i = 0;
 var $__t1$addr$i$i = 0, $__t2$addr$i = 0, $__t2$addr$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $cond = 0, $exception$i$i = 0, $mul$i$i = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i15 = 0, $this$addr$i$i12 = 0, $this$addr$i$i16 = 0;
 var $this$addr$i$i7 = 0, $this$addr$i17 = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i21 = 0, $this1$i$i10 = 0, $this1$i$i13 = 0, $this1$i$i20 = 0, $this1$i18 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i = sp + 36|0;
 $__t1$addr$i = sp + 20|0;
 $this$addr = $this;
 $__cap$addr = $__cap;
 $__start$addr = $__start;
 $__a$addr = $__a;
 $this1 = $this$addr;
 $__end_cap_ = ((($this1)) + 12|0); //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = $__a$addr; //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $__end_cap_;
 HEAP32[$__t1$addr$i>>2] = 0;
 $__t2$addr$i = $0;
 $this1$i = $this$addr$i;
 $__t$addr$i$i = $__t1$addr$i;
 $1 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = HEAP32[$1>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__t2$addr$i; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i = $3;
 $4 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i = $this1$i;
 HEAP32[$__t1$addr$i$i>>2] = $2;
 $__t2$addr$i$i = $4;
 $this1$i$i = $this$addr$i$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $5 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = HEAP32[$5>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i>>2] = $6; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i = ((($this1$i$i)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__t2$addr$i$i; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i = $7;
 $8 = $__t$addr$i3$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__second_$i$i>>2] = $8; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($9|0)!=(0); //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $this$addr$i17 = $this1;
   $this1$i18 = $this$addr$i17;
   $__end_cap_$i19 = ((($this1$i18)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i16 = $__end_cap_$i19;
   $this1$i$i20 = $this$addr$i$i16;
   $this$addr$i$i$i15 = $this1$i$i20;
   $this1$i$i$i21 = $this$addr$i$i$i15;
   $__second_$i$i$i = ((($this1$i$i$i21)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $10 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i = $ref$i$i$i;
   $__n$addr$i = $10;
   $11 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $12 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i12 = $11;
   $__n$addr$i$i = $12;
   $$addr$i$i = 0;
   $this1$i$i13 = $this$addr$i$i12;
   $13 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i11 = $this1$i$i13;
   $cmp$i$i = ($13>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   } else {
    $14 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $mul$i$i = $14<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__size$addr$i$i$i = $mul$i$i;
    $15 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $call$i$i$i = (__Znwj($15)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $cond = $call$i$i$i;
    break;
   }
  } else {
   $cond = 0;
  }
 } while(0);
 HEAP32[$this1>>2] = $cond; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $16 = HEAP32[$this1>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $17 = $__start$addr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr = (($16) + ($17<<2)|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_ = ((($this1)) + 8|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_ = ((($this1)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $18 = HEAP32[$this1>>2]|0; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $19 = $__cap$addr; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr5 = (($18) + ($19<<2)|0); //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i = $this1$i$i10;
 $this1$i$i$i = $this$addr$i$i$i;
 HEAP32[$this1$i$i$i>>2] = $add$ptr5; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE9push_backEOS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i98 = 0, $__a$addr$i100 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__begin_ = 0, $__begin_11 = 0, $__begin_24 = 0, $__begin_31 = 0;
 var $__begin_32 = 0, $__begin_4 = 0, $__begin_6 = 0, $__begin_8 = 0, $__c = 0, $__d = 0, $__end_ = 0, $__end_10 = 0, $__end_26 = 0, $__end_33 = 0, $__end_34 = 0, $__end_39 = 0, $__end_42 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i114 = 0, $__end_cap_$i51 = 0, $__end_cap_$i58 = 0, $__end_cap_$i67 = 0, $__end_cap_$i75 = 0;
 var $__first$addr$i = 0, $__first$addr$i$i = 0, $__i$addr$i$i = 0, $__i$addr$i4$i = 0, $__i$addr$i5$i = 0, $__last$addr$i = 0, $__last$addr$i$i = 0, $__n$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i46 = 0, $__result$addr$i = 0, $__result$addr$i$i = 0, $__second_$i$i$i = 0, $__second_$i$i$i117 = 0, $__t = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0;
 var $__t$addr$i$i$i$i = 0, $__t$addr$i$i62 = 0, $__t$addr$i$i81 = 0, $__t$addr$i$i87 = 0, $__t$addr$i$i93 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i80 = 0, $__t$addr$i3$i86 = 0, $__t$addr$i3$i92 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i79 = 0, $__t$addr$i4$i85 = 0, $__t$addr$i4$i91 = 0, $__t$i = 0, $__t$i84 = 0, $__t$i90 = 0, $__t$i96 = 0, $__x$addr = 0, $__x$addr$i = 0, $__x$addr$i$i$i = 0;
 var $__x$addr$i104 = 0, $__x$addr$i107 = 0, $__x$addr$i82 = 0, $__x$addr$i88 = 0, $__x$addr$i94 = 0, $__y$addr$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i83 = 0, $__y$addr$i89 = 0, $__y$addr$i95 = 0, $add = 0, $add$ptr = 0, $add$ptr$i$i = 0, $add$ptr13 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$i = 0, $agg$tmp$i101 = 0, $agg$tmp1$i = 0, $agg$tmp1$i99 = 0;
 var $agg$tmp25 = 0, $agg$tmp25$byval_copy = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp2 = 0, $cond$lvalue$i$i2D = 0, $div = 0, $div22 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $idx$neg = 0, $idx$neg12 = 0, $incdec$ptr = 0, $mul = 0, $mul$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i118 = 0, $ref$tmp = 0;
 var $ref$tmp20 = 0, $sel = 0, $sub$ptr$div = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div19 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast16 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast17 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub18 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i110 = 0, $this$addr$i$i$i44 = 0;
 var $this$addr$i$i$i47 = 0, $this$addr$i$i$i54 = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i71 = 0, $this$addr$i$i$i97 = 0, $this$addr$i$i111 = 0, $this$addr$i$i48 = 0, $this$addr$i$i55 = 0, $this$addr$i$i64 = 0, $this$addr$i$i72 = 0, $this$addr$i103 = 0, $this$addr$i106 = 0, $this$addr$i112 = 0, $this$addr$i49 = 0, $this$addr$i56 = 0, $this$addr$i65 = 0, $this$addr$i73 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, $this1$i$i$i116 = 0, $this1$i$i$i53 = 0, $this1$i$i$i60 = 0, $this1$i$i$i69 = 0, $this1$i$i$i77 = 0, $this1$i$i115 = 0, $this1$i$i52 = 0, $this1$i$i59 = 0, $this1$i$i68 = 0, $this1$i$i76 = 0, $this1$i105 = 0, $this1$i108 = 0, $this1$i113 = 0, $this1$i50 = 0, $this1$i57 = 0, $this1$i66 = 0, $this1$i74 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $agg$tmp25$byval_copy = sp + 384|0;
 $agg$tmp$byval_copy = sp + 380|0;
 $agg$tmp1$i99 = sp + 8|0;
 $agg$tmp$i101 = sp + 389|0;
 $__t$i96 = sp + 300|0;
 $__t$i90 = sp + 276|0;
 $__t$i84 = sp + 252|0;
 $__t$i = sp + 204|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 388|0;
 $ref$tmp = sp + 52|0;
 $ref$tmp20 = sp + 48|0;
 $__t = sp + 28|0;
 $agg$tmp = sp + 24|0;
 $agg$tmp25 = sp + 12|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $__end_ = ((($this1)) + 8|0); //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__end_>>2]|0; //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $1 = HEAP32[$this1$i$i$i>>2]|0; //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($0|0)==($1|0); //@line 565 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $__begin_ = ((($this1)) + 4|0); //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $2 = HEAP32[$__begin_>>2]|0; //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $3 = HEAP32[$this1>>2]|0; //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp2 = ($2>>>0)>($3>>>0); //@line 567 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   if ($cmp2) {
    $__begin_4 = ((($this1)) + 4|0); //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $4 = HEAP32[$__begin_4>>2]|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $5 = HEAP32[$this1>>2]|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast = $4; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast = $5; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $sub$ptr$div; //@line 569 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $6 = $__d; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add = (($6) + 1)|0; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div = (($add|0) / 2)&-1; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $div; //@line 570 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_6 = ((($this1)) + 4|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $7 = HEAP32[$__begin_6>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_7 = ((($this1)) + 8|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $8 = HEAP32[$__end_7>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_8 = ((($this1)) + 4|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $9 = HEAP32[$__begin_8>>2]|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $10 = $__d; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $idx$neg = (0 - ($10))|0; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr = (($9) + ($idx$neg<<2)|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__first$addr$i = $7;
    $__last$addr$i = $8;
    $__result$addr$i = $add$ptr;
    $11 = $__first$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i$i = $11;
    $12 = $__i$addr$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $13 = $__last$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i5$i = $13;
    $14 = $__i$addr$i5$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $15 = $__result$addr$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i4$i = $15;
    $16 = $__i$addr$i4$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__first$addr$i$i = $12;
    $__last$addr$i$i = $14;
    $__result$addr$i$i = $16;
    $17 = $__last$addr$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $18 = $__first$addr$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$lhs$cast$i$i = $17; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$rhs$cast$i$i = $18; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__n$i$i = $sub$ptr$div$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $19 = $__n$i$i; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i = ($19>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    if ($cmp$i$i) {
     $20 = $__result$addr$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $21 = $__first$addr$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $22 = $__n$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $mul$i$i = $22<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     _memmove(($20|0),($21|0),($mul$i$i|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    }
    $23 = $__result$addr$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $24 = $__n$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $add$ptr$i$i = (($23) + ($24<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__end_10 = ((($this1)) + 8|0); //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__end_10>>2] = $add$ptr$i$i; //@line 571 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $25 = $__d; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_11 = ((($this1)) + 4|0); //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $26 = HEAP32[$__begin_11>>2]|0; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $idx$neg12 = (0 - ($25))|0; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr13 = (($26) + ($idx$neg12<<2)|0); //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__begin_11>>2] = $add$ptr13; //@line 572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    break;
   } else {
    $this$addr$i56 = $this1;
    $this1$i57 = $this$addr$i56;
    $__end_cap_$i58 = ((($this1$i57)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i55 = $__end_cap_$i58;
    $this1$i$i59 = $this$addr$i$i55;
    $this$addr$i$i$i54 = $this1$i$i59;
    $this1$i$i$i60 = $this$addr$i$i$i54;
    $27 = HEAP32[$this1$i$i$i60>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $28 = HEAP32[$this1>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast16 = $27; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast17 = $28; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub18 = (($sub$ptr$lhs$cast16) - ($sub$ptr$rhs$cast17))|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div19 = (($sub$ptr$sub18|0) / 4)&-1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $mul = $sub$ptr$div19<<1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp>>2] = $mul; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp20>>2] = 1; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__a$addr$i100 = $ref$tmp;
    $__b$addr$i = $ref$tmp20;
    $29 = $__a$addr$i100; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $30 = $__b$addr$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    ;HEAP8[$agg$tmp1$i99>>0]=HEAP8[$agg$tmp$i101>>0]|0;
    $__a$addr$i$i98 = $29;
    $__b$addr$i$i = $30;
    $31 = $__a$addr$i$i98; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $32 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $this$addr$i$i$i97 = $agg$tmp1$i99;
    $__x$addr$i$i$i = $31;
    $__y$addr$i$i$i = $32;
    $33 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $34 = HEAP32[$33>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $35 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $36 = HEAP32[$35>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i$i = ($34>>>0)<($36>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $37 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $38 = $__a$addr$i$i98; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cond$lvalue$i$i2D = $cmp$i$i$i ? $37 : $38; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $39 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__c = $39; //@line 576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $40 = $__c; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $41 = $__c; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div22 = (($41>>>0) / 4)&-1; //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i112 = $this1;
    $this1$i113 = $this$addr$i112;
    $__end_cap_$i114 = ((($this1$i113)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i111 = $__end_cap_$i114;
    $this1$i$i115 = $this$addr$i$i111;
    $this$addr$i$i$i110 = $this1$i$i115;
    $this1$i$i$i116 = $this$addr$i$i$i110;
    $__second_$i$i$i117 = ((($this1$i$i$i116)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $ref$i$i$i118 = HEAP32[$__second_$i$i$i117>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t,$40,$div22,$ref$i$i$i118); //@line 577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_24 = ((($this1)) + 4|0); //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $42 = HEAP32[$__begin_24>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i106 = $agg$tmp;
    $__x$addr$i107 = $42;
    $this1$i108 = $this$addr$i106;
    $43 = $__x$addr$i107; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i108>>2] = $43; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    $__end_26 = ((($this1)) + 8|0); //@line 579 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $44 = HEAP32[$__end_26>>2]|0; //@line 579 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i103 = $agg$tmp25;
    $__x$addr$i104 = $44;
    $this1$i105 = $this$addr$i103;
    $45 = $__x$addr$i104; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i105>>2] = $45; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    __THREW__ = 0;
    ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    ;HEAP32[$agg$tmp25$byval_copy>>2]=HEAP32[$agg$tmp25>>2]|0; //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    invoke_viii(195,($__t|0),($agg$tmp$byval_copy|0),($agg$tmp25$byval_copy|0)); //@line 578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $exn$slot = $88; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $ehselector$slot = $89; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $exn = $exn$slot; //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sel = $ehselector$slot; //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ___resumeException($exn|0);
     // unreachable;
    } else {
     $__x$addr$i94 = $this1;
     $__y$addr$i95 = $__t;
     $48 = $__x$addr$i94; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i93 = $48;
     $49 = $__t$addr$i$i93; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $50 = HEAP32[$49>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i96>>2] = $50; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $51 = $__y$addr$i95; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i91 = $51;
     $52 = $__t$addr$i4$i91; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $53 = HEAP32[$52>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $54 = $__x$addr$i94; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$54>>2] = $53; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i92 = $__t$i96;
     $55 = $__t$addr$i3$i92; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $56 = HEAP32[$55>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $57 = $__y$addr$i95; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$57>>2] = $56; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__begin_31 = ((($this1)) + 4|0); //@line 581 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_32 = ((($__t)) + 4|0); //@line 581 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i88 = $__begin_31;
     $__y$addr$i89 = $__begin_32;
     $58 = $__x$addr$i88; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i87 = $58;
     $59 = $__t$addr$i$i87; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $60 = HEAP32[$59>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i90>>2] = $60; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $61 = $__y$addr$i89; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i85 = $61;
     $62 = $__t$addr$i4$i85; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $63 = HEAP32[$62>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $64 = $__x$addr$i88; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$64>>2] = $63; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i86 = $__t$i90;
     $65 = $__t$addr$i3$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $66 = HEAP32[$65>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $67 = $__y$addr$i89; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$67>>2] = $66; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__end_33 = ((($this1)) + 8|0); //@line 582 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_34 = ((($__t)) + 8|0); //@line 582 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i82 = $__end_33;
     $__y$addr$i83 = $__end_34;
     $68 = $__x$addr$i82; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i81 = $68;
     $69 = $__t$addr$i$i81; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $70 = HEAP32[$69>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i84>>2] = $70; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $71 = $__y$addr$i83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i79 = $71;
     $72 = $__t$addr$i4$i79; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $73 = HEAP32[$72>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $74 = $__x$addr$i82; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$74>>2] = $73; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i80 = $__t$i84;
     $75 = $__t$addr$i3$i80; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $76 = HEAP32[$75>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $77 = $__y$addr$i83; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$77>>2] = $76; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $this$addr$i73 = $this1;
     $this1$i74 = $this$addr$i73;
     $__end_cap_$i75 = ((($this1$i74)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i72 = $__end_cap_$i75;
     $this1$i$i76 = $this$addr$i$i72;
     $this$addr$i$i$i71 = $this1$i$i76;
     $this1$i$i$i77 = $this$addr$i$i$i71;
     $this$addr$i65 = $__t;
     $this1$i66 = $this$addr$i65;
     $__end_cap_$i67 = ((($this1$i66)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i64 = $__end_cap_$i67;
     $this1$i$i68 = $this$addr$i$i64;
     $this$addr$i$i$i63 = $this1$i$i68;
     $this1$i$i$i69 = $this$addr$i$i$i63;
     $__x$addr$i = $this1$i$i$i77;
     $__y$addr$i = $this1$i$i$i69;
     $78 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i62 = $78;
     $79 = $__t$addr$i$i62; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $80 = HEAP32[$79>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i>>2] = $80; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $81 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i = $81;
     $82 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $83 = HEAP32[$82>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $84 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$84>>2] = $83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i = $__t$i;
     $85 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $86 = HEAP32[$85>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $87 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$87>>2] = $86; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 584 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    }
   }
  }
 } while(0);
 $this$addr$i49 = $this1;
 $this1$i50 = $this$addr$i49;
 $__end_cap_$i51 = ((($this1$i50)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i48 = $__end_cap_$i51;
 $this1$i$i52 = $this$addr$i$i48;
 $this$addr$i$i$i47 = $this1$i$i52;
 $this1$i$i$i53 = $this$addr$i$i$i47;
 $__second_$i$i$i = ((($this1$i$i$i53)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_39 = ((($this1)) + 8|0); //@line 586 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $90 = HEAP32[$__end_39>>2]|0; //@line 586 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__p$addr$i46 = $90;
 $91 = $__p$addr$i46; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $92 = $__x$addr; //@line 587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__t$addr$i = $92;
 $93 = $__t$addr$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $91;
 $__args$addr$i = $93;
 $94 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $95 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $96 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $96;
 $97 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $94;
 $__p$addr$i$i = $95;
 $__args$addr$i$i = $97;
 $98 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $99 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $100 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $100;
 $101 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i44 = $98;
 $__p$addr$i$i$i = $99;
 $__args$addr$i$i$i = $101;
 $102 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $103 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $103;
 $104 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $105 = HEAP32[$104>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$102>>2] = $105; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_42 = ((($this1)) + 8|0); //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $106 = HEAP32[$__end_42>>2]|0; //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $incdec$ptr = ((($106)) + 4|0); //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_42>>2] = $incdec$ptr; //@line 588 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE10push_frontERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i113 = 0, $__a$addr$i115 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__begin_ = 0, $__begin_10 = 0, $__begin_24 = 0, $__begin_31 = 0;
 var $__begin_32 = 0, $__begin_39 = 0, $__begin_42 = 0, $__begin_6 = 0, $__c = 0, $__d = 0, $__end_ = 0, $__end_11 = 0, $__end_26 = 0, $__end_33 = 0, $__end_34 = 0, $__end_5 = 0, $__end_7 = 0, $__end_8 = 0, $__end_cap_$i = 0, $__end_cap_$i101 = 0, $__end_cap_$i122 = 0, $__end_cap_$i51 = 0, $__end_cap_$i58 = 0, $__end_cap_$i67 = 0;
 var $__end_cap_$i75 = 0, $__first$addr$i = 0, $__first$addr$i$i = 0, $__i$addr$i$i = 0, $__i$addr$i4$i = 0, $__i$addr$i5$i = 0, $__last$addr$i = 0, $__last$addr$i$i = 0, $__n$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i46 = 0, $__result$addr$i = 0, $__result$addr$i$i = 0, $__second_$i$i$i = 0, $__second_$i$i$i125 = 0, $__t = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0;
 var $__t$addr$i$i$i$i = 0, $__t$addr$i$i62 = 0, $__t$addr$i$i81 = 0, $__t$addr$i$i87 = 0, $__t$addr$i$i93 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i80 = 0, $__t$addr$i3$i86 = 0, $__t$addr$i3$i92 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i79 = 0, $__t$addr$i4$i85 = 0, $__t$addr$i4$i91 = 0, $__t$i = 0, $__t$i84 = 0, $__t$i90 = 0, $__t$i96 = 0, $__x$addr = 0, $__x$addr$i = 0, $__x$addr$i$i$i = 0;
 var $__x$addr$i106 = 0, $__x$addr$i109 = 0, $__x$addr$i82 = 0, $__x$addr$i88 = 0, $__x$addr$i94 = 0, $__y$addr$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i83 = 0, $__y$addr$i89 = 0, $__y$addr$i95 = 0, $add = 0, $add$ptr = 0, $add$ptr$i$i = 0, $add$ptr12 = 0, $add$ptr40 = 0, $add21 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$i = 0, $agg$tmp$i116 = 0;
 var $agg$tmp1$i = 0, $agg$tmp1$i114 = 0, $agg$tmp25 = 0, $agg$tmp25$byval_copy = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp2 = 0, $cond$lvalue$i$i2D = 0, $div = 0, $div22 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $idx$neg$i$i = 0, $incdec$ptr = 0, $mul = 0, $mul$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i126 = 0;
 var $ref$tmp = 0, $ref$tmp19 = 0, $sel = 0, $sub$ptr$div = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div18 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast15 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast16 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub17 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i112 = 0;
 var $this$addr$i$i$i118 = 0, $this$addr$i$i$i44 = 0, $this$addr$i$i$i47 = 0, $this$addr$i$i$i54 = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i71 = 0, $this$addr$i$i$i97 = 0, $this$addr$i$i119 = 0, $this$addr$i$i48 = 0, $this$addr$i$i55 = 0, $this$addr$i$i64 = 0, $this$addr$i$i72 = 0, $this$addr$i$i98 = 0, $this$addr$i105 = 0, $this$addr$i108 = 0, $this$addr$i120 = 0, $this$addr$i49 = 0, $this$addr$i56 = 0, $this$addr$i65 = 0, $this$addr$i73 = 0;
 var $this$addr$i99 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i103 = 0, $this1$i$i$i124 = 0, $this1$i$i$i53 = 0, $this1$i$i$i60 = 0, $this1$i$i$i69 = 0, $this1$i$i$i77 = 0, $this1$i$i102 = 0, $this1$i$i123 = 0, $this1$i$i52 = 0, $this1$i$i59 = 0, $this1$i$i68 = 0, $this1$i$i76 = 0, $this1$i100 = 0, $this1$i107 = 0, $this1$i110 = 0;
 var $this1$i121 = 0, $this1$i50 = 0, $this1$i57 = 0, $this1$i66 = 0, $this1$i74 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $agg$tmp25$byval_copy = sp + 392|0;
 $agg$tmp$byval_copy = sp + 388|0;
 $agg$tmp1$i114 = sp + 8|0;
 $agg$tmp$i116 = sp + 397|0;
 $__t$i96 = sp + 296|0;
 $__t$i90 = sp + 272|0;
 $__t$i84 = sp + 248|0;
 $__t$i = sp + 200|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 396|0;
 $ref$tmp = sp + 52|0;
 $ref$tmp19 = sp + 48|0;
 $__t = sp + 28|0;
 $agg$tmp = sp + 24|0;
 $agg$tmp25 = sp + 12|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $__begin_ = ((($this1)) + 4|0); //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_>>2]|0; //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $1 = HEAP32[$this1>>2]|0; //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($0|0)==($1|0); //@line 470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $__end_ = ((($this1)) + 8|0); //@line 472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $2 = HEAP32[$__end_>>2]|0; //@line 472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i = $this1;
   $this1$i = $this$addr$i;
   $__end_cap_$i = ((($this1$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i = $__end_cap_$i;
   $this1$i$i = $this$addr$i$i;
   $this$addr$i$i$i = $this1$i$i;
   $this1$i$i$i = $this$addr$i$i$i;
   $3 = HEAP32[$this1$i$i$i>>2]|0; //@line 472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $cmp2 = ($2>>>0)<($3>>>0); //@line 472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   if ($cmp2) {
    $this$addr$i56 = $this1;
    $this1$i57 = $this$addr$i56;
    $__end_cap_$i58 = ((($this1$i57)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i55 = $__end_cap_$i58;
    $this1$i$i59 = $this$addr$i$i55;
    $this$addr$i$i$i54 = $this1$i$i59;
    $this1$i$i$i60 = $this$addr$i$i$i54;
    $4 = HEAP32[$this1$i$i$i60>>2]|0; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_5 = ((($this1)) + 8|0); //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $5 = HEAP32[$__end_5>>2]|0; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast = $4; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast = $5; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $sub$ptr$div; //@line 474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $6 = $__d; //@line 475 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add = (($6) + 1)|0; //@line 475 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div = (($add|0) / 2)&-1; //@line 475 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__d = $div; //@line 475 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_6 = ((($this1)) + 4|0); //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $7 = HEAP32[$__begin_6>>2]|0; //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_7 = ((($this1)) + 8|0); //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $8 = HEAP32[$__end_7>>2]|0; //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_8 = ((($this1)) + 8|0); //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $9 = HEAP32[$__end_8>>2]|0; //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $10 = $__d; //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr = (($9) + ($10<<2)|0); //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__first$addr$i = $7;
    $__last$addr$i = $8;
    $__result$addr$i = $add$ptr;
    $11 = $__first$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i$i = $11;
    $12 = $__i$addr$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $13 = $__last$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i5$i = $13;
    $14 = $__i$addr$i5$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $15 = $__result$addr$i; //@line 1942 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__i$addr$i4$i = $15;
    $16 = $__i$addr$i4$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__first$addr$i$i = $12;
    $__last$addr$i$i = $14;
    $__result$addr$i$i = $16;
    $17 = $__last$addr$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $18 = $__first$addr$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$lhs$cast$i$i = $17; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$rhs$cast$i$i = $18; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__n$i$i = $sub$ptr$div$i$i; //@line 1927 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $19 = $__n$i$i; //@line 1928 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i = ($19>>>0)>(0); //@line 1928 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    if ($cmp$i$i) {
     $20 = $__n$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $21 = $__result$addr$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $idx$neg$i$i = (0 - ($20))|0; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i = (($21) + ($idx$neg$i$i<<2)|0); //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__result$addr$i$i = $add$ptr$i$i; //@line 1930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $22 = $__result$addr$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $23 = $__first$addr$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $24 = $__n$i$i; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $mul$i$i = $24<<2; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     _memmove(($22|0),($23|0),($mul$i$i|0))|0; //@line 1931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    }
    $25 = $__result$addr$i$i; //@line 1933 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $__begin_10 = ((($this1)) + 4|0); //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__begin_10>>2] = $25; //@line 476 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $26 = $__d; //@line 477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__end_11 = ((($this1)) + 8|0); //@line 477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $27 = HEAP32[$__end_11>>2]|0; //@line 477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add$ptr12 = (($27) + ($26<<2)|0); //@line 477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$__end_11>>2] = $add$ptr12; //@line 477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    break;
   } else {
    $this$addr$i99 = $this1;
    $this1$i100 = $this$addr$i99;
    $__end_cap_$i101 = ((($this1$i100)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i98 = $__end_cap_$i101;
    $this1$i$i102 = $this$addr$i$i98;
    $this$addr$i$i$i97 = $this1$i$i102;
    $this1$i$i$i103 = $this$addr$i$i$i97;
    $28 = HEAP32[$this1$i$i$i103>>2]|0; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $29 = HEAP32[$this1>>2]|0; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$lhs$cast15 = $28; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$rhs$cast16 = $29; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$sub17 = (($sub$ptr$lhs$cast15) - ($sub$ptr$rhs$cast16))|0; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $sub$ptr$div18 = (($sub$ptr$sub17|0) / 4)&-1; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $mul = $sub$ptr$div18<<1; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp>>2] = $mul; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    HEAP32[$ref$tmp19>>2] = 1; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__a$addr$i115 = $ref$tmp;
    $__b$addr$i = $ref$tmp19;
    $30 = $__a$addr$i115; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $31 = $__b$addr$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    ;HEAP8[$agg$tmp1$i114>>0]=HEAP8[$agg$tmp$i116>>0]|0;
    $__a$addr$i$i113 = $30;
    $__b$addr$i$i = $31;
    $32 = $__a$addr$i$i113; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $33 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $this$addr$i$i$i112 = $agg$tmp1$i114;
    $__x$addr$i$i$i = $32;
    $__y$addr$i$i$i = $33;
    $34 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $35 = HEAP32[$34>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $36 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $37 = HEAP32[$36>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cmp$i$i$i = ($35>>>0)<($37>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $38 = $__b$addr$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $39 = $__a$addr$i$i113; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $cond$lvalue$i$i2D = $cmp$i$i$i ? $38 : $39; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
    $40 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__c = $40; //@line 481 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $41 = $__c; //@line 482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $42 = $__c; //@line 482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $add21 = (($42) + 3)|0; //@line 482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $div22 = (($add21>>>0) / 4)&-1; //@line 482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i120 = $this1;
    $this1$i121 = $this$addr$i120;
    $__end_cap_$i122 = ((($this1$i121)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i$i119 = $__end_cap_$i122;
    $this1$i$i123 = $this$addr$i$i119;
    $this$addr$i$i$i118 = $this1$i$i123;
    $this1$i$i$i124 = $this$addr$i$i$i118;
    $__second_$i$i$i125 = ((($this1$i$i$i124)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $ref$i$i$i126 = HEAP32[$__second_$i$i$i125>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t,$41,$div22,$ref$i$i$i126); //@line 482 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $__begin_24 = ((($this1)) + 4|0); //@line 483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $43 = HEAP32[$__begin_24>>2]|0; //@line 483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i108 = $agg$tmp;
    $__x$addr$i109 = $43;
    $this1$i110 = $this$addr$i108;
    $44 = $__x$addr$i109; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i110>>2] = $44; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    $__end_26 = ((($this1)) + 8|0); //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $45 = HEAP32[$__end_26>>2]|0; //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $this$addr$i105 = $agg$tmp25;
    $__x$addr$i106 = $45;
    $this1$i107 = $this$addr$i105;
    $46 = $__x$addr$i106; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    HEAP32[$this1$i107>>2] = $46; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
    __THREW__ = 0;
    ;HEAP32[$agg$tmp$byval_copy>>2]=HEAP32[$agg$tmp>>2]|0; //@line 483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    ;HEAP32[$agg$tmp25$byval_copy>>2]=HEAP32[$agg$tmp25>>2]|0; //@line 483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    invoke_viii(195,($__t|0),($agg$tmp$byval_copy|0),($agg$tmp25$byval_copy|0)); //@line 483 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $47 = __THREW__; __THREW__ = 0;
    $48 = $47&1;
    if ($48) {
     $89 = ___cxa_find_matching_catch_2()|0;
     $90 = tempRet0;
     $exn$slot = $89; //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $ehselector$slot = $90; //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $exn = $exn$slot; //@line 489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sel = $ehselector$slot; //@line 489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ___resumeException($exn|0);
     // unreachable;
    } else {
     $__x$addr$i94 = $this1;
     $__y$addr$i95 = $__t;
     $49 = $__x$addr$i94; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i93 = $49;
     $50 = $__t$addr$i$i93; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $51 = HEAP32[$50>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i96>>2] = $51; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $52 = $__y$addr$i95; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i91 = $52;
     $53 = $__t$addr$i4$i91; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $54 = HEAP32[$53>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $55 = $__x$addr$i94; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$55>>2] = $54; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i92 = $__t$i96;
     $56 = $__t$addr$i3$i92; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $57 = HEAP32[$56>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $58 = $__y$addr$i95; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$58>>2] = $57; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__begin_31 = ((($this1)) + 4|0); //@line 486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_32 = ((($__t)) + 4|0); //@line 486 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i88 = $__begin_31;
     $__y$addr$i89 = $__begin_32;
     $59 = $__x$addr$i88; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i87 = $59;
     $60 = $__t$addr$i$i87; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $61 = HEAP32[$60>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i90>>2] = $61; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $62 = $__y$addr$i89; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i85 = $62;
     $63 = $__t$addr$i4$i85; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $64 = HEAP32[$63>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $65 = $__x$addr$i88; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$65>>2] = $64; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i86 = $__t$i90;
     $66 = $__t$addr$i3$i86; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $67 = HEAP32[$66>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $68 = $__y$addr$i89; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$68>>2] = $67; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__end_33 = ((($this1)) + 8|0); //@line 487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_34 = ((($__t)) + 8|0); //@line 487 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__x$addr$i82 = $__end_33;
     $__y$addr$i83 = $__end_34;
     $69 = $__x$addr$i82; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i81 = $69;
     $70 = $__t$addr$i$i81; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $71 = HEAP32[$70>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i84>>2] = $71; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $72 = $__y$addr$i83; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i79 = $72;
     $73 = $__t$addr$i4$i79; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $74 = HEAP32[$73>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $75 = $__x$addr$i82; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$75>>2] = $74; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i80 = $__t$i84;
     $76 = $__t$addr$i3$i80; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $77 = HEAP32[$76>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $78 = $__y$addr$i83; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$78>>2] = $77; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $this$addr$i73 = $this1;
     $this1$i74 = $this$addr$i73;
     $__end_cap_$i75 = ((($this1$i74)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i72 = $__end_cap_$i75;
     $this1$i$i76 = $this$addr$i$i72;
     $this$addr$i$i$i71 = $this1$i$i76;
     $this1$i$i$i77 = $this$addr$i$i$i71;
     $this$addr$i65 = $__t;
     $this1$i66 = $this$addr$i65;
     $__end_cap_$i67 = ((($this1$i66)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i64 = $__end_cap_$i67;
     $this1$i$i68 = $this$addr$i$i64;
     $this$addr$i$i$i63 = $this1$i$i68;
     $this1$i$i$i69 = $this$addr$i$i$i63;
     $__x$addr$i = $this1$i$i$i77;
     $__y$addr$i = $this1$i$i$i69;
     $79 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i$i62 = $79;
     $80 = $__t$addr$i$i62; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $81 = HEAP32[$80>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$__t$i>>2] = $81; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $82 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i4$i = $82;
     $83 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $84 = HEAP32[$83>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $85 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$85>>2] = $84; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $__t$addr$i3$i = $__t$i;
     $86 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $87 = HEAP32[$86>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     $88 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     HEAP32[$88>>2] = $87; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t); //@line 489 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    }
   }
  }
 } while(0);
 $this$addr$i49 = $this1;
 $this1$i50 = $this$addr$i49;
 $__end_cap_$i51 = ((($this1$i50)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i48 = $__end_cap_$i51;
 $this1$i$i52 = $this$addr$i$i48;
 $this$addr$i$i$i47 = $this1$i$i52;
 $this1$i$i$i53 = $this$addr$i$i$i47;
 $__second_$i$i$i = ((($this1$i$i$i53)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__begin_39 = ((($this1)) + 4|0); //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $91 = HEAP32[$__begin_39>>2]|0; //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr40 = ((($91)) + -4|0); //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__p$addr$i46 = $add$ptr40;
 $92 = $__p$addr$i46; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $93 = $__x$addr; //@line 491 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $92;
 $__args$addr$i = $93;
 $94 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $95 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $96 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $96;
 $97 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $94;
 $__p$addr$i$i = $95;
 $__args$addr$i$i = $97;
 $98 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $99 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $100 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $100;
 $101 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i44 = $98;
 $__p$addr$i$i$i = $99;
 $__args$addr$i$i$i = $101;
 $102 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $103 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $103;
 $104 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $105 = HEAP32[$104>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$102>>2] = $105; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__begin_42 = ((($this1)) + 4|0); //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $106 = HEAP32[$__begin_42>>2]|0; //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $incdec$ptr = ((($106)) + -4|0); //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_42>>2] = $incdec$ptr; //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__new_last$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $__second_$i$i$i = 0;
 var $__second_$i$i$i$i$i$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $agg$tmp2$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i10 = 0, $this$addr$i$i14 = 0, $this$addr$i$i5 = 0, $this$addr$i15 = 0, $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i18 = 0, $this1$i$i$i9 = 0, $this1$i$i17 = 0;
 var $this1$i$i8 = 0, $this1$i16 = 0, $this1$i7 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i$i$i$i = sp + 8|0;
 $agg$tmp$i$i$i$i = sp + 133|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 132|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $0;
 $this1$i$i = $this$addr$i$i;
 $1 = $__new_last$addr$i$i; //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $__new_last$addr$i$i$i = $1;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i$i; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__end_$i$i$i>>2]|0; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i$i$i = ($2|0)!=($3|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__second_$i$i$i$i$i$i = ((($this1$i$i$i$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $ref$i$i$i$i$i$i = HEAP32[$__second_$i$i$i$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_2$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i$i$i = ((($4)) + -4|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $5 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $5;
  $6 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $6;
  $__p$addr$i$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $8;
  $__p$addr$i$i$i$i$i$i = $9;
 }
 $10 = HEAP32[$this1>>2]|0; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $tobool = ($10|0)!=(0|0); //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $__second_$i$i$i = ((($this1$i$i$i9)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = HEAP32[$this1>>2]|0; //@line 343 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $12 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $13 = HEAP32[$this1$i16>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $12; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $13; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $11;
 $__n$addr$i = $sub$ptr$div$i;
 $14 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i10 = $14;
 $__p$addr$i$i = $15;
 $$addr$i$i = $16;
 $17 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $17;
 $18 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($18); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__end_ = 0, $__end_5 = 0, $__end_cap_$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i14 = 0, $__second_$i$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__x$addr$i = 0;
 var $__y$addr$i = 0, $agg$tmp$i = 0, $agg$tmp1$i = 0, $cmp$i = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i9 = 0, $this$addr$i$i15 = 0, $this$addr$i11 = 0, $this$addr$i2$i = 0, $this$addr$i7 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0;
 var $this1$i$i16 = 0, $this1$i12 = 0, $this1$i3$i = 0, $this1$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 100|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__second_$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a = $ref$i$i$i; //@line 265 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 while(1) {
  $__x$addr$i = $__first;
  $__y$addr$i = $__last;
  $0 = $__x$addr$i; //@line 1014 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $this$addr$i$i15 = $0;
  $this1$i$i16 = $this$addr$i$i15;
  $1 = HEAP32[$this1$i$i16>>2]|0; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $2 = $__y$addr$i; //@line 1014 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $this$addr$i2$i = $2;
  $this1$i3$i = $this$addr$i2$i;
  $3 = HEAP32[$this1$i3$i>>2]|0; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $cmp$i = ($1|0)!=($3|0); //@line 1014 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  if (!($cmp$i)) {
   break;
  }
  $4 = $__a; //@line 268 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_ = ((($this1)) + 8|0); //@line 268 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $5 = HEAP32[$__end_>>2]|0; //@line 268 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i14 = $5;
  $6 = $__p$addr$i14; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i11 = $__first;
  $this1$i12 = $this$addr$i11;
  $7 = HEAP32[$this1$i12>>2]|0; //@line 970 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $__a$addr$i = $4;
  $__p$addr$i = $6;
  $__args$addr$i = $7;
  $8 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i = $10;
  $11 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
  $__a$addr$i$i = $8;
  $__p$addr$i$i = $9;
  $__args$addr$i$i = $11;
  $12 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $13 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $14 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $14;
  $15 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i9 = $12;
  $__p$addr$i$i$i = $13;
  $__args$addr$i$i$i = $15;
  $16 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $17 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $17;
  $18 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $19 = HEAP32[$18>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$16>>2] = $19; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_5 = ((($this1)) + 8|0); //@line 269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $20 = HEAP32[$__end_5>>2]|0; //@line 269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr = ((($20)) + 4|0); //@line 269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_5>>2] = $incdec$ptr; //@line 269 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i7 = $__first;
  $this1$i8 = $this$addr$i7;
  $21 = HEAP32[$this1$i8>>2]|0; //@line 973 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $incdec$ptr$i = ((($21)) + 4|0); //@line 973 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  HEAP32[$this1$i8>>2] = $incdec$ptr$i; //@line 973 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 }
 STACKTOP = sp;return; //@line 271 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE5clearEv($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i64 = 0;
 var $__begin_$i = 0, $__begin_$i$i$i = 0, $__begin_$i30 = 0, $__begin_$i39 = 0, $__begin_$i43 = 0, $__e = 0, $__end_$i = 0, $__end_$i42 = 0, $__i = 0, $__n$addr$i = 0, $__new_begin$addr$i$i = 0, $__new_begin$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i63 = 0, $__p$addr$i65 = 0, $__ptr$addr$i$i$i = 0, $__ptr_$i = 0, $__ptr_$i$i = 0;
 var $__ptr_$i57 = 0, $__ptr_1$i$i = 0, $__ptr_5$i = 0, $__size_$i = 0, $__size_$i52 = 0, $__start_23 = 0, $__x$addr$i = 0, $__x$addr$i$i = 0, $__x$addr$i67 = 0, $__y$addr$i = 0, $__y$addr$i$i = 0, $add$ptr$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp2$i$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $incdec$ptr$i = 0;
 var $incdec$ptr3$i = 0, $lnot$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i47 = 0, $sub$ptr$div$i61 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i44 = 0, $sub$ptr$lhs$cast$i58 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i45 = 0, $sub$ptr$rhs$cast$i59 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i46 = 0, $sub$ptr$sub$i60 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i48 = 0;
 var $this$addr$i$i$i62 = 0, $this$addr$i$i27 = 0, $this$addr$i$i33 = 0, $this$addr$i$i49 = 0, $this$addr$i24 = 0, $this$addr$i28 = 0, $this$addr$i35 = 0, $this$addr$i37 = 0, $this$addr$i40 = 0, $this$addr$i50 = 0, $this$addr$i55 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i32 = 0, $this1$i$i$i54 = 0, $this1$i$i31 = 0, $this1$i$i53 = 0, $this1$i25 = 0;
 var $this1$i29 = 0, $this1$i36 = 0, $this1$i38 = 0, $this1$i41 = 0, $this1$i51 = 0, $this1$i56 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 177|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 176|0;
 $__i = sp + 24|0;
 $__e = sp + 16|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1169 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE5beginEv($__i,$this1); //@line 1170 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE3endEv($__e,$this1); //@line 1170 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $__x$addr$i = $__i;
  $__y$addr$i = $__e;
  $0 = $__x$addr$i; //@line 407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $1 = $__y$addr$i; //@line 407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__x$addr$i$i = $0;
  $__y$addr$i$i = $1;
  $2 = $__x$addr$i$i; //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__ptr_$i$i = ((($2)) + 4|0); //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $3 = HEAP32[$__ptr_$i$i>>2]|0; //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $4 = $__y$addr$i$i; //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__ptr_1$i$i = ((($4)) + 4|0); //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $5 = HEAP32[$__ptr_1$i$i>>2]|0; //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i$i = ($3|0)==($5|0); //@line 403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $lnot$i = $cmp$i$i ^ 1; //@line 407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($lnot$i)) {
   break;
  }
  $6 = $__a; //@line 1171 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i35 = $__i;
  $this1$i36 = $this$addr$i35;
  $__ptr_$i = ((($this1$i36)) + 4|0); //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $7 = HEAP32[$__ptr_$i>>2]|0; //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__x$addr$i67 = $7;
  $8 = $__x$addr$i67; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $__a$addr$i64 = $6;
  $__p$addr$i65 = $8;
  $9 = $__a$addr$i64; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = $__p$addr$i65; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
  $__a$addr$i$i = $9;
  $__p$addr$i$i63 = $10;
  $11 = $__a$addr$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $12 = $__p$addr$i$i63; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i62 = $11;
  $__p$addr$i$i$i = $12;
  $this$addr$i55 = $__i;
  $this1$i56 = $this$addr$i55;
  $__ptr_$i57 = ((($this1$i56)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $13 = HEAP32[$__ptr_$i57>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr$i = ((($13)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__ptr_$i57>>2] = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $14 = HEAP32[$this1$i56>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $15 = HEAP32[$14>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$lhs$cast$i58 = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$rhs$cast$i59 = $15; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$sub$i60 = (($sub$ptr$lhs$cast$i58) - ($sub$ptr$rhs$cast$i59))|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$div$i61 = (($sub$ptr$sub$i60|0) / 4)&-1; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i = ($sub$ptr$div$i61|0)==(1024); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp$i)) {
   continue;
  }
  $16 = HEAP32[$this1$i56>>2]|0; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr3$i = ((($16)) + 4|0); //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$this1$i56>>2] = $incdec$ptr3$i; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $17 = HEAP32[$this1$i56>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $18 = HEAP32[$17>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__ptr_5$i = ((($this1$i56)) + 4|0); //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__ptr_5$i>>2] = $18; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 $this$addr$i50 = $this1;
 $this1$i51 = $this$addr$i50;
 $__size_$i52 = ((($this1$i51)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i49 = $__size_$i52;
 $this1$i$i53 = $this$addr$i$i49;
 $this$addr$i$i$i48 = $this1$i$i53;
 $this1$i$i$i54 = $this$addr$i$i$i48;
 HEAP32[$this1$i$i$i54>>2] = 0; //@line 1172 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $this$addr$i40 = $this1;
  $this1$i41 = $this$addr$i40;
  $__end_$i42 = ((($this1$i41)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $19 = HEAP32[$__end_$i42>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i43 = ((($this1$i41)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $20 = HEAP32[$__begin_$i43>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i44 = $19; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i45 = $20; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i46 = (($sub$ptr$lhs$cast$i44) - ($sub$ptr$rhs$cast$i45))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i47 = (($sub$ptr$sub$i46|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp = ($sub$ptr$div$i47>>>0)>(2); //@line 1173 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp)) {
   break;
  }
  $21 = $__a; //@line 1175 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i37 = $this1;
  $this1$i38 = $this$addr$i37;
  $__begin_$i39 = ((($this1$i38)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $22 = HEAP32[$__begin_$i39>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $23 = HEAP32[$22>>2]|0; //@line 1175 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i = $21;
  $__p$addr$i = $23;
  $__n$addr$i = 1024;
  $24 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $25 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $26 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i33 = $24;
  $__p$addr$i$i = $25;
  $$addr$i$i = $26;
  $27 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i = $27;
  $28 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($28); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $this$addr$i28 = $this1;
  $this1$i29 = $this$addr$i28;
  $__begin_$i30 = ((($this1$i29)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $29 = HEAP32[$__begin_$i30>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $add$ptr$i = ((($29)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i27 = $this1$i29;
  $__new_begin$addr$i$i = $add$ptr$i;
  $this1$i$i31 = $this$addr$i$i27;
  $30 = $__new_begin$addr$i$i; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $this$addr$i$i$i26 = $this1$i$i31;
  $__new_begin$addr$i$i$i = $30;
  $this1$i$i$i32 = $this$addr$i$i$i26;
  $31 = $__new_begin$addr$i$i$i; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i$i$i = ((($this1$i$i$i32)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__begin_$i$i$i>>2] = $31; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $__end_$i = ((($this1$i25)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $32 = HEAP32[$__end_$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i = ((($this1$i25)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $33 = HEAP32[$__begin_$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $32; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $33; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 switch ($sub$ptr$div$i|0) {
 case 1:  {
  $$sink = 512;
  break;
 }
 case 2:  {
  $$sink = 1024;
  break;
 }
 default: {
  STACKTOP = sp;return; //@line 1187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 }
 $__start_23 = ((($this1)) + 16|0);
 HEAP32[$__start_23>>2] = $$sink;
 STACKTOP = sp;return; //@line 1187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i = 0, $__begin_$i8 = 0, $__end_$i = 0, $__m$addr$i = 0, $__mp = 0, $__p$addr$i = 0, $__ptr_$i = 0, $__start_ = 0, $__start_4 = 0, $add$ptr = 0;
 var $add$ptr5 = 0, $cmp$i = 0, $cond = 0, $div = 0, $rem = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i6 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i10 = 0, $this1$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__start_ = ((($this1)) + 16|0); //@line 1064 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $1 = HEAP32[$__start_>>2]|0; //@line 1064 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $div = (($1>>>0) / 1024)&-1; //@line 1064 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$ptr = (($0) + ($div<<2)|0); //@line 1064 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__mp = $add$ptr; //@line 1064 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $2 = $__mp; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_$i = ((($this1$i7)) + 8|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $3 = HEAP32[$__end_$i>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i8 = ((($this1$i7)) + 4|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $4 = HEAP32[$__begin_$i8>>2]|0; //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i = ($3|0)==($4|0); //@line 88 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if ($cmp$i) {
  $cond = 0;
 } else {
  $5 = $__mp; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $6 = HEAP32[$5>>2]|0; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__start_4 = ((($this1)) + 16|0); //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $7 = HEAP32[$__start_4>>2]|0; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $rem = (($7>>>0) % 1024)&-1; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $add$ptr5 = (($6) + ($rem<<2)|0); //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cond = $add$ptr5;
 }
 $this$addr$i9 = $agg$result;
 $__m$addr$i = $2;
 $__p$addr$i = $cond;
 $this1$i10 = $this$addr$i9;
 $8 = $__m$addr$i; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$this1$i10>>2] = $8; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__ptr_$i = ((($this1$i10)) + 4|0); //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $9 = $__p$addr$i; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__ptr_$i>>2] = $9; //@line 428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 STACKTOP = sp;return; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__217bad_function_callC2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$this1$i>>2] = (1992); //@line 94 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/exception"
 HEAP32[$this1>>2] = (1092); //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__217bad_function_callD2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__217bad_function_callD0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__217bad_function_callD2Ev($this1); //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1378 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE19__add_back_capacityEv($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $$addr$i$i$i$i$i = 0, $$addr$i$i$i$i$i118 = 0, $$addr$i$i217 = 0, $$addr$i$i478 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__a$addr$i = 0;
 var $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i119 = 0, $__a$addr$i$i$i313 = 0, $__a$addr$i$i318 = 0, $__a$addr$i$i453 = 0, $__a$addr$i$i97$i = 0, $__a$addr$i$i97$i255 = 0, $__a$addr$i218 = 0, $__a$addr$i455 = 0, $__a$addr$i479 = 0, $__a$addr$i491 = 0, $__a$addr$i99$i = 0, $__a$addr$i99$i258 = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__args$addr$i$i$i$i311 = 0, $__args$addr$i$i$i315 = 0;
 var $__args$addr$i$i320 = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__b$addr$i$i$i256 = 0, $__b$addr$i$i259 = 0, $__b$addr$i$i454 = 0, $__begin_ = 0, $__begin_$i = 0, $__begin_$i$i$i = 0, $__begin_$i$i$i244 = 0, $__begin_$i168 = 0, $__begin_$i173 = 0, $__begin_$i230 = 0, $__begin_$i240 = 0, $__begin_$i345 = 0, $__begin_$i462 = 0, $__begin_$i528 = 0, $__begin_$i76 = 0, $__begin_11$i = 0;
 var $__begin_11$i372 = 0, $__begin_24$i = 0, $__begin_24$i398 = 0, $__begin_31$i = 0, $__begin_31$i407 = 0, $__begin_32$i = 0, $__begin_32$i408 = 0, $__begin_4$i = 0, $__begin_4$i349 = 0, $__begin_53 = 0, $__begin_6$i = 0, $__begin_6$i357 = 0, $__begin_8$i = 0, $__begin_8$i359 = 0, $__buf = 0, $__c$i = 0, $__c$i329 = 0, $__d$addr$i = 0, $__d$i = 0, $__d$i328 = 0;
 var $__end_ = 0, $__end_$i = 0, $__end_$i172 = 0, $__end_$i203 = 0, $__end_$i338 = 0, $__end_$i461 = 0, $__end_$i525 = 0, $__end_10$i = 0, $__end_10$i371 = 0, $__end_26$i = 0, $__end_26$i402 = 0, $__end_33$i = 0, $__end_33$i409 = 0, $__end_34$i = 0, $__end_34$i410 = 0, $__end_39$i = 0, $__end_39$i428 = 0, $__end_41$i = 0, $__end_41$i430 = 0, $__end_55 = 0;
 var $__end_7$i = 0, $__end_7$i358 = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i184 = 0, $__end_cap_$i$i199 = 0, $__end_cap_$i$i340 = 0, $__end_cap_$i$i443 = 0, $__end_cap_$i113$i = 0, $__end_cap_$i113$i395 = 0, $__end_cap_$i471 = 0, $__end_cap_$i50$i = 0, $__end_cap_$i50$i425 = 0, $__end_cap_$i57$i = 0, $__end_cap_$i57$i377 = 0, $__end_cap_$i66$i = 0, $__end_cap_$i66$i417 = 0, $__end_cap_$i74$i = 0, $__end_cap_$i74$i412 = 0, $__end_cap_$i89 = 0;
 var $__first$addr$i$i = 0, $__first$addr$i$i$i = 0, $__first$addr$i$i$i296 = 0, $__first$addr$i$i301 = 0, $__hold = 0, $__i = 0, $__i$addr$i$i$i = 0, $__i$addr$i$i$i300 = 0, $__i$addr$i4$i$i = 0, $__i$addr$i4$i$i295 = 0, $__i$addr$i5$i$i = 0, $__i$addr$i5$i$i294 = 0, $__last$addr$i$i = 0, $__last$addr$i$i$i = 0, $__last$addr$i$i$i297 = 0, $__last$addr$i$i302 = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__n$addr$i$i$i$i = 0, $__n$addr$i$i$i$i121 = 0;
 var $__n$addr$i$i216 = 0, $__n$addr$i$i477 = 0, $__n$addr$i219 = 0, $__n$addr$i480 = 0, $__n$i$i$i = 0, $__n$i$i$i299 = 0, $__new_begin$addr$i$i = 0, $__new_begin$addr$i$i$i = 0, $__new_begin$addr$i$i$i232 = 0, $__new_begin$addr$i$i235 = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i117 = 0, $__p$addr$i$i$i$i120 = 0, $__p$addr$i$i$i$i152 = 0, $__p$addr$i$i$i$i310 = 0, $__p$addr$i$i$i123 = 0;
 var $__p$addr$i$i$i153 = 0, $__p$addr$i$i$i314 = 0, $__p$addr$i$i127 = 0, $__p$addr$i$i154 = 0, $__p$addr$i$i319 = 0, $__p$addr$i45$i = 0, $__p$addr$i45$i307 = 0, $__pt = 0, $__pt22 = 0, $__ptr$addr$i$i$i$i$i$i = 0, $__ptr$addr$i$i$i$i$i$i115 = 0, $__result$addr$i$i = 0, $__result$addr$i$i$i = 0, $__result$addr$i$i$i298 = 0, $__result$addr$i$i303 = 0, $__s$addr$i = 0, $__s_$i = 0, $__s_$i$i$i = 0, $__s_$i$i$i148 = 0, $__second_$i$i$i = 0;
 var $__second_$i$i$i$i = 0, $__second_$i$i$i$i144 = 0, $__size$addr$i$i$i = 0, $__size$addr$i$i$i213 = 0, $__size$addr$i$i$i474 = 0, $__size_$i = 0, $__start_ = 0, $__start_$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i308 = 0, $__t$addr$i$i$i$i312 = 0, $__t$addr$i$i$i$i494 = 0, $__t$addr$i$i$i317 = 0, $__t$addr$i$i$i496 = 0, $__t$addr$i$i101 = 0, $__t$addr$i$i107 = 0, $__t$addr$i$i499 = 0;
 var $__t$addr$i$i61$i = 0, $__t$addr$i$i61$i287 = 0, $__t$addr$i$i80$i = 0, $__t$addr$i$i80$i275 = 0, $__t$addr$i$i86$i = 0, $__t$addr$i$i86$i269 = 0, $__t$addr$i$i92$i = 0, $__t$addr$i$i92$i263 = 0, $__t$addr$i$i95 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i3$i$i286 = 0, $__t$addr$i3$i100 = 0, $__t$addr$i3$i106 = 0, $__t$addr$i3$i79$i = 0, $__t$addr$i3$i79$i274 = 0, $__t$addr$i3$i85$i = 0, $__t$addr$i3$i85$i268 = 0, $__t$addr$i3$i91$i = 0;
 var $__t$addr$i3$i91$i262 = 0, $__t$addr$i3$i94 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i4$i$i285 = 0, $__t$addr$i4$i$i493 = 0, $__t$addr$i4$i105 = 0, $__t$addr$i4$i78$i = 0, $__t$addr$i4$i78$i273 = 0, $__t$addr$i4$i84$i = 0, $__t$addr$i4$i84$i267 = 0, $__t$addr$i4$i90$i = 0, $__t$addr$i4$i90$i261 = 0, $__t$addr$i4$i93 = 0, $__t$addr$i4$i99 = 0, $__t$i = 0, $__t$i$i = 0, $__t$i$i290 = 0, $__t$i104 = 0, $__t$i110 = 0;
 var $__t$i162 = 0, $__t$i332 = 0, $__t$i517 = 0, $__t$i83$i = 0, $__t$i83$i278 = 0, $__t$i89$i = 0, $__t$i89$i272 = 0, $__t$i95$i = 0, $__t$i95$i266 = 0, $__t$i98 = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i = 0, $__tmp$i$i128 = 0, $__x$addr$i = 0, $__x$addr$i$i = 0, $__x$addr$i$i$i = 0, $__x$addr$i$i$i$i = 0, $__x$addr$i$i$i$i253 = 0, $__x$addr$i$i288 = 0;
 var $__x$addr$i102 = 0, $__x$addr$i103$i = 0, $__x$addr$i103$i251 = 0, $__x$addr$i106$i = 0, $__x$addr$i106$i249 = 0, $__x$addr$i108 = 0, $__x$addr$i161 = 0, $__x$addr$i327 = 0, $__x$addr$i81$i = 0, $__x$addr$i81$i276 = 0, $__x$addr$i87$i = 0, $__x$addr$i87$i270 = 0, $__x$addr$i93$i = 0, $__x$addr$i93$i264 = 0, $__x$addr$i96 = 0, $__y$addr$i = 0, $__y$addr$i$i = 0, $__y$addr$i$i$i = 0, $__y$addr$i$i$i$i = 0, $__y$addr$i$i$i$i254 = 0;
 var $__y$addr$i$i289 = 0, $__y$addr$i103 = 0, $__y$addr$i109 = 0, $__y$addr$i82$i = 0, $__y$addr$i82$i277 = 0, $__y$addr$i88$i = 0, $__y$addr$i88$i271 = 0, $__y$addr$i94$i = 0, $__y$addr$i94$i265 = 0, $__y$addr$i97 = 0, $add$i = 0, $add$i355 = 0, $add$ptr$i = 0, $add$ptr$i$i$i = 0, $add$ptr$i$i$i370 = 0, $add$ptr$i169 = 0, $add$ptr$i241 = 0, $add$ptr$i361 = 0, $add$ptr13$i = 0, $add$ptr13$i374 = 0;
 var $agg$tmp$i = 0, $agg$tmp$i$byval_copy = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i155 = 0, $agg$tmp$i$i236 = 0, $agg$tmp$i$i321 = 0, $agg$tmp$i$i498 = 0, $agg$tmp$i100$i = 0, $agg$tmp$i100$i260 = 0, $agg$tmp$i333 = 0, $agg$tmp$i333$byval_copy = 0, $agg$tmp$i456 = 0, $agg$tmp$i501 = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $agg$tmp1$i$i316 = 0, $agg$tmp1$i98$i = 0, $agg$tmp1$i98$i257 = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0;
 var $agg$tmp2$i$i233 = 0, $agg$tmp25$i = 0, $agg$tmp25$i$byval_copy = 0, $agg$tmp25$i336 = 0, $agg$tmp25$i336$byval_copy = 0, $agg$tmp3$i$i = 0, $call$i$i$i = 0, $call$i$i$i226 = 0, $call$i$i$i487488 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i$i = 0, $cmp$i$i$i$i388 = 0, $cmp$i$i$i366 = 0, $cmp$i$i$i458 = 0, $cmp$i$i222 = 0, $cmp$i$i483 = 0, $cmp$i344 = 0;
 var $cmp10 = 0, $cmp14 = 0, $cmp2$i = 0, $cmp2$i347 = 0, $cmp48 = 0, $cond$lvalue$i$i$i2D = 0, $cond$lvalue$i$i$i3922D = 0, $cond$lvalue$i$i2D = 0, $div$i = 0, $div$i356 = 0, $div22$i = 0, $div22$i393 = 0, $ehselector$slot = 0, $ehselector$slot$i = 0, $ehselector$slot$i335 = 0, $exception$i$i = 0, $exception$i$i223 = 0, $exception$i$i484 = 0, $exn = 0, $exn$i = 0;
 var $exn$i432 = 0, $exn$slot = 0, $exn$slot$i = 0, $exn$slot$i334 = 0, $idx$neg$i = 0, $idx$neg$i360 = 0, $idx$neg12$i = 0, $idx$neg12$i373 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i431 = 0, $mul = 0, $mul$i = 0, $mul$i$i = 0, $mul$i$i$i = 0, $mul$i$i$i368 = 0, $mul$i$i225 = 0, $mul$i$i486 = 0, $mul$i386 = 0, $ref$i$i$i = 0;
 var $ref$i$i$i147 = 0, $ref$tmp = 0, $ref$tmp$i = 0, $ref$tmp$i330 = 0, $ref$tmp20 = 0, $ref$tmp20$i = 0, $ref$tmp20$i331 = 0, $ref$tmp28 = 0, $ref$tmp31 = 0, $ref$tmp38 = 0, $ref$tmp39 = 0, $sel = 0, $sel$i = 0, $sel$i433 = 0, $sub = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i$i$i365 = 0, $sub$ptr$div$i177 = 0, $sub$ptr$div$i192 = 0;
 var $sub$ptr$div$i207 = 0, $sub$ptr$div$i354 = 0, $sub$ptr$div$i451 = 0, $sub$ptr$div$i466 = 0, $sub$ptr$div19$i = 0, $sub$ptr$div19$i385 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i$i$i362 = 0, $sub$ptr$lhs$cast$i174 = 0, $sub$ptr$lhs$cast$i189 = 0, $sub$ptr$lhs$cast$i204 = 0, $sub$ptr$lhs$cast$i351 = 0, $sub$ptr$lhs$cast$i448 = 0, $sub$ptr$lhs$cast$i463 = 0, $sub$ptr$lhs$cast16$i = 0, $sub$ptr$lhs$cast16$i382 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i$i$i363 = 0;
 var $sub$ptr$rhs$cast$i175 = 0, $sub$ptr$rhs$cast$i190 = 0, $sub$ptr$rhs$cast$i205 = 0, $sub$ptr$rhs$cast$i352 = 0, $sub$ptr$rhs$cast$i449 = 0, $sub$ptr$rhs$cast$i464 = 0, $sub$ptr$rhs$cast17$i = 0, $sub$ptr$rhs$cast17$i383 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i$i$i364 = 0, $sub$ptr$sub$i176 = 0, $sub$ptr$sub$i191 = 0, $sub$ptr$sub$i206 = 0, $sub$ptr$sub$i353 = 0, $sub$ptr$sub$i450 = 0, $sub$ptr$sub$i465 = 0, $sub$ptr$sub18$i = 0, $sub$ptr$sub18$i384 = 0, $this$addr = 0;
 var $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i116 = 0, $this$addr$i$i$i$i124 = 0, $this$addr$i$i$i$i157 = 0, $this$addr$i$i$i$i178 = 0, $this$addr$i$i$i$i193 = 0, $this$addr$i$i$i$i323 = 0, $this$addr$i$i$i$i437 = 0, $this$addr$i$i$i109$i = 0, $this$addr$i$i$i109$i245 = 0, $this$addr$i$i$i125 = 0, $this$addr$i$i$i158 = 0, $this$addr$i$i$i179 = 0, $this$addr$i$i$i194 = 0, $this$addr$i$i$i208 = 0, $this$addr$i$i$i214 = 0;
 var $this$addr$i$i$i231 = 0, $this$addr$i$i$i324 = 0, $this$addr$i$i$i43$i = 0, $this$addr$i$i$i43$i309 = 0, $this$addr$i$i$i438 = 0, $this$addr$i$i$i452 = 0, $this$addr$i$i$i46$i = 0, $this$addr$i$i$i46$i304 = 0, $this$addr$i$i$i467 = 0, $this$addr$i$i$i475 = 0, $this$addr$i$i$i495 = 0, $this$addr$i$i$i506 = 0, $this$addr$i$i$i514 = 0, $this$addr$i$i$i53$i = 0, $this$addr$i$i$i53$i291 = 0, $this$addr$i$i$i62$i = 0, $this$addr$i$i$i62$i282 = 0, $this$addr$i$i$i66 = 0, $this$addr$i$i$i70$i = 0, $this$addr$i$i$i70$i279 = 0;
 var $this$addr$i$i$i72 = 0, $this$addr$i$i$i79 = 0, $this$addr$i$i$i85 = 0, $this$addr$i$i$i96$i = 0, $this$addr$i$i$i96$i252 = 0, $this$addr$i$i110$i = 0, $this$addr$i$i110$i246 = 0, $this$addr$i$i126 = 0, $this$addr$i$i13$i$i = 0, $this$addr$i$i13$i$i111 = 0, $this$addr$i$i159 = 0, $this$addr$i$i180 = 0, $this$addr$i$i195 = 0, $this$addr$i$i209 = 0, $this$addr$i$i215 = 0, $this$addr$i$i234 = 0, $this$addr$i$i325 = 0, $this$addr$i$i4$i = 0, $this$addr$i$i439 = 0, $this$addr$i$i468 = 0;
 var $this$addr$i$i47$i = 0, $this$addr$i$i47$i305 = 0, $this$addr$i$i476 = 0, $this$addr$i$i497 = 0, $this$addr$i$i507 = 0, $this$addr$i$i515 = 0, $this$addr$i$i54$i = 0, $this$addr$i$i54$i292 = 0, $this$addr$i$i63$i = 0, $this$addr$i$i63$i283 = 0, $this$addr$i$i67 = 0, $this$addr$i$i71$i = 0, $this$addr$i$i71$i280 = 0, $this$addr$i$i73 = 0, $this$addr$i$i8$i$i = 0, $this$addr$i$i8$i$i113 = 0, $this$addr$i$i80 = 0, $this$addr$i$i86 = 0, $this$addr$i102$i = 0, $this$addr$i102$i250 = 0;
 var $this$addr$i105$i = 0, $this$addr$i105$i248 = 0, $this$addr$i111$i = 0, $this$addr$i111$i247 = 0, $this$addr$i129 = 0, $this$addr$i14$i$i = 0, $this$addr$i14$i$i112 = 0, $this$addr$i160 = 0, $this$addr$i170 = 0, $this$addr$i181 = 0, $this$addr$i196 = 0, $this$addr$i228 = 0, $this$addr$i238 = 0, $this$addr$i326 = 0, $this$addr$i440 = 0, $this$addr$i459 = 0, $this$addr$i469 = 0, $this$addr$i48$i = 0, $this$addr$i48$i306 = 0, $this$addr$i490 = 0;
 var $this$addr$i5$i = 0, $this$addr$i500 = 0, $this$addr$i508 = 0, $this$addr$i516 = 0, $this$addr$i523 = 0, $this$addr$i526 = 0, $this$addr$i55$i = 0, $this$addr$i55$i293 = 0, $this$addr$i6$i$i = 0, $this$addr$i6$i$i122 = 0, $this$addr$i62 = 0, $this$addr$i64 = 0, $this$addr$i64$i = 0, $this$addr$i64$i284 = 0, $this$addr$i68 = 0, $this$addr$i72$i = 0, $this$addr$i72$i281 = 0, $this$addr$i74 = 0, $this$addr$i81 = 0, $this$addr$i87 = 0;
 var $this$addr$i9$i$i = 0, $this$addr$i9$i$i114 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i134 = 0, $this1$i$i$i$i166 = 0, $this1$i$i$i$i186 = 0, $this1$i$i$i$i201 = 0, $this1$i$i$i$i342 = 0, $this1$i$i$i$i445 = 0, $this1$i$i$i115$i = 0, $this1$i$i$i115$i397 = 0, $this1$i$i$i133 = 0, $this1$i$i$i165 = 0, $this1$i$i$i185 = 0, $this1$i$i$i200 = 0, $this1$i$i$i243 = 0;
 var $this1$i$i$i341 = 0, $this1$i$i$i444 = 0, $this1$i$i$i473 = 0, $this1$i$i$i504 = 0, $this1$i$i$i512 = 0, $this1$i$i$i52$i = 0, $this1$i$i$i52$i427 = 0, $this1$i$i$i521 = 0, $this1$i$i$i59$i = 0, $this1$i$i$i59$i379 = 0, $this1$i$i$i68$i = 0, $this1$i$i$i68$i419 = 0, $this1$i$i$i71 = 0, $this1$i$i$i76$i = 0, $this1$i$i$i76$i414 = 0, $this1$i$i$i78 = 0, $this1$i$i$i84 = 0, $this1$i$i$i91 = 0, $this1$i$i11$i$i = 0, $this1$i$i11$i$i138 = 0;
 var $this1$i$i114$i = 0, $this1$i$i114$i396 = 0, $this1$i$i131 = 0, $this1$i$i16$i$i = 0, $this1$i$i16$i$i143 = 0, $this1$i$i164 = 0, $this1$i$i183 = 0, $this1$i$i198 = 0, $this1$i$i210 = 0, $this1$i$i220 = 0, $this1$i$i242 = 0, $this1$i$i339 = 0, $this1$i$i442 = 0, $this1$i$i472 = 0, $this1$i$i481 = 0, $this1$i$i503 = 0, $this1$i$i51$i = 0, $this1$i$i51$i426 = 0, $this1$i$i511 = 0, $this1$i$i520 = 0;
 var $this1$i$i58$i = 0, $this1$i$i58$i378 = 0, $this1$i$i67$i = 0, $this1$i$i67$i418 = 0, $this1$i$i7$i = 0, $this1$i$i70 = 0, $this1$i$i75$i = 0, $this1$i$i75$i413 = 0, $this1$i$i77 = 0, $this1$i$i83 = 0, $this1$i$i90 = 0, $this1$i10$i$i = 0, $this1$i10$i$i137 = 0, $this1$i104$i = 0, $this1$i104$i403 = 0, $this1$i107$i = 0, $this1$i107$i399 = 0, $this1$i112$i = 0, $this1$i112$i394 = 0, $this1$i130 = 0;
 var $this1$i15$i$i = 0, $this1$i15$i$i142 = 0, $this1$i163 = 0, $this1$i171 = 0, $this1$i182 = 0, $this1$i197 = 0, $this1$i229 = 0, $this1$i239 = 0, $this1$i337 = 0, $this1$i441 = 0, $this1$i460 = 0, $this1$i470 = 0, $this1$i49$i = 0, $this1$i49$i424 = 0, $this1$i492 = 0, $this1$i502 = 0, $this1$i509 = 0, $this1$i518 = 0, $this1$i524 = 0, $this1$i527 = 0;
 var $this1$i56$i = 0, $this1$i56$i376 = 0, $this1$i6$i = 0, $this1$i63 = 0, $this1$i65 = 0, $this1$i65$i = 0, $this1$i65$i416 = 0, $this1$i69 = 0, $this1$i7$i$i = 0, $this1$i7$i$i145 = 0, $this1$i73$i = 0, $this1$i73$i411 = 0, $this1$i75 = 0, $this1$i82 = 0, $this1$i88 = 0, $tobool$i$i = 0, $tobool$i$i140 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1552|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1552|0);
 $agg$tmp25$i336$byval_copy = sp + 1536|0;
 $agg$tmp$i333$byval_copy = sp + 1532|0;
 $agg$tmp25$i$byval_copy = sp + 1528|0;
 $agg$tmp$i$byval_copy = sp + 1524|0;
 $__t1$addr$i$i$i = sp + 1460|0;
 $agg$tmp3$i$i = sp + 64|0;
 $__t1$addr$i$i = sp + 1448|0;
 $agg$tmp$i$i498 = sp + 1440|0;
 $agg$tmp2$i = sp + 56|0;
 $agg$tmp$i501 = sp + 1416|0;
 $agg$tmp1$i = sp + 48|0;
 $agg$tmp$i456 = sp + 1546|0;
 $agg$tmp1$i98$i257 = sp + 40|0;
 $agg$tmp$i100$i260 = sp + 1545|0;
 $__t$i95$i266 = sp + 1236|0;
 $__t$i89$i272 = sp + 1212|0;
 $__t$i83$i278 = sp + 1188|0;
 $__t$i$i290 = sp + 1140|0;
 $agg$tmp1$i$i316 = sp + 32|0;
 $agg$tmp$i$i321 = sp + 1544|0;
 $ref$tmp$i330 = sp + 992|0;
 $ref$tmp20$i331 = sp + 988|0;
 $__t$i332 = sp + 968|0;
 $agg$tmp$i333 = sp + 964|0;
 $agg$tmp25$i336 = sp + 952|0;
 $agg$tmp2$i$i233 = sp + 24|0;
 $agg$tmp$i$i236 = sp + 1543|0;
 $agg$tmp1$i98$i = sp + 16|0;
 $agg$tmp$i100$i = sp + 1542|0;
 $__t$i95$i = sp + 756|0;
 $__t$i89$i = sp + 732|0;
 $__t$i83$i = sp + 708|0;
 $__t$i$i = sp + 660|0;
 $agg$tmp1$i$i = sp + 8|0;
 $agg$tmp$i$i155 = sp + 1541|0;
 $ref$tmp$i = sp + 512|0;
 $ref$tmp20$i = sp + 508|0;
 $__t$i162 = sp + 488|0;
 $agg$tmp$i = sp + 484|0;
 $agg$tmp25$i = sp + 472|0;
 $__t$i110 = sp + 372|0;
 $__t$i104 = sp + 348|0;
 $__t$i98 = sp + 324|0;
 $__t$i = sp + 276|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 1540|0;
 $__pt = sp + 148|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp20 = sp + 140|0;
 $__pt22 = sp + 136|0;
 $__buf = sp + 116|0;
 $ref$tmp28 = sp + 112|0;
 $ref$tmp31 = sp + 108|0;
 $__hold = sp + 96|0;
 $ref$tmp38 = sp + 80|0;
 $ref$tmp39 = sp + 76|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__size_$i = ((($this1$i)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i = $__size_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 2427 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i62 = $this1;
 $this1$i63 = $this$addr$i62;
 $__start_$i = ((($this1$i63)) + 16|0); //@line 1407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $0 = HEAP32[$__start_$i>>2]|0; //@line 1407 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($0>>>0)>=(1024); //@line 2428 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp) {
  $__start_ = ((($this1)) + 16|0); //@line 2430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $1 = HEAP32[$__start_>>2]|0; //@line 2430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub = (($1) - 1024)|0; //@line 2430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__start_>>2] = $sub; //@line 2430 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i64 = $this1;
  $this1$i65 = $this$addr$i64;
  $__begin_$i = ((($this1$i65)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $2 = HEAP32[$__begin_$i>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$2>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__pt>>2] = $3; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i74 = $this1;
  $this1$i75 = $this$addr$i74;
  $__begin_$i76 = ((($this1$i75)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__begin_$i76>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $add$ptr$i = ((($4)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i73 = $this1$i75;
  $__new_begin$addr$i$i = $add$ptr$i;
  $this1$i$i77 = $this$addr$i$i73;
  $5 = $__new_begin$addr$i$i; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $this$addr$i$i$i72 = $this1$i$i77;
  $__new_begin$addr$i$i$i = $5;
  $this1$i$i$i78 = $this$addr$i$i$i72;
  $6 = $__new_begin$addr$i$i$i; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i$i$i = ((($this1$i$i$i78)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__begin_$i$i$i>>2] = $6; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i160 = $this1;
  $__x$addr$i161 = $__pt;
  $this1$i163 = $this$addr$i160;
  $__end_$i = ((($this1$i163)) + 8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $7 = HEAP32[$__end_$i>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i159 = $this1$i163;
  $this1$i$i164 = $this$addr$i$i159;
  $__end_cap_$i$i = ((($this1$i$i164)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i158 = $__end_cap_$i$i;
  $this1$i$i$i165 = $this$addr$i$i$i158;
  $this$addr$i$i$i$i157 = $this1$i$i$i165;
  $this1$i$i$i$i166 = $this$addr$i$i$i$i157;
  $8 = HEAP32[$this1$i$i$i$i166>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i = ($7|0)==($8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  do {
   if ($cmp$i) {
    $__begin_$i168 = ((($this1$i163)) + 4|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $9 = HEAP32[$__begin_$i168>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $10 = HEAP32[$this1$i163>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $cmp2$i = ($9>>>0)>($10>>>0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    if ($cmp2$i) {
     $__begin_4$i = ((($this1$i163)) + 4|0); //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $11 = HEAP32[$__begin_4$i>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $12 = HEAP32[$this1$i163>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast$i = $11; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast$i = $12; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i = $sub$ptr$div$i; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $13 = $__d$i; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$i = (($13) + 1)|0; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div$i = (($add$i|0) / 2)&-1; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i = $div$i; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_6$i = ((($this1$i163)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $14 = HEAP32[$__begin_6$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_7$i = ((($this1$i163)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $15 = HEAP32[$__end_7$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_8$i = ((($this1$i163)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $16 = HEAP32[$__begin_8$i>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $17 = $__d$i; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg$i = (0 - ($17))|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr$i169 = (($16) + ($idx$neg$i<<2)|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__first$addr$i$i = $14;
     $__last$addr$i$i = $15;
     $__result$addr$i$i = $add$ptr$i169;
     $18 = $__first$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i$i$i = $18;
     $19 = $__i$addr$i$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $20 = $__last$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i5$i$i = $20;
     $21 = $__i$addr$i5$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $22 = $__result$addr$i$i; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i4$i$i = $22;
     $23 = $__i$addr$i4$i$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__first$addr$i$i$i = $19;
     $__last$addr$i$i$i = $21;
     $__result$addr$i$i$i = $23;
     $24 = $__last$addr$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $25 = $__first$addr$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$lhs$cast$i$i$i = $24; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$rhs$cast$i$i$i = $25; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__n$i$i$i = $sub$ptr$div$i$i$i; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $26 = $__n$i$i$i; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i = ($26>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     if ($cmp$i$i$i) {
      $27 = $__result$addr$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $28 = $__first$addr$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $29 = $__n$i$i$i; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $mul$i$i$i = $29<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      _memmove(($27|0),($28|0),($mul$i$i$i|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     }
     $30 = $__result$addr$i$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $31 = $__n$i$i$i; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i$i = (($30) + ($31<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__end_10$i = ((($this1$i163)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__end_10$i>>2] = $add$ptr$i$i$i; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $32 = $__d$i; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_11$i = ((($this1$i163)) + 4|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $33 = HEAP32[$__begin_11$i>>2]|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg12$i = (0 - ($32))|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr13$i = (($33) + ($idx$neg12$i<<2)|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__begin_11$i>>2] = $add$ptr13$i; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    } else {
     $this$addr$i55$i = $this1$i163;
     $this1$i56$i = $this$addr$i55$i;
     $__end_cap_$i57$i = ((($this1$i56$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i54$i = $__end_cap_$i57$i;
     $this1$i$i58$i = $this$addr$i$i54$i;
     $this$addr$i$i$i53$i = $this1$i$i58$i;
     $this1$i$i$i59$i = $this$addr$i$i$i53$i;
     $34 = HEAP32[$this1$i$i$i59$i>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $35 = HEAP32[$this1$i163>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast16$i = $34; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast17$i = $35; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub18$i = (($sub$ptr$lhs$cast16$i) - ($sub$ptr$rhs$cast17$i))|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div19$i = (($sub$ptr$sub18$i|0) / 4)&-1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $mul$i = $sub$ptr$div19$i<<1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$ref$tmp20$i>>2] = 1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__a$addr$i99$i = $ref$tmp$i;
     $__b$addr$i$i = $ref$tmp20$i;
     $36 = $__a$addr$i99$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $37 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     ;HEAP8[$agg$tmp1$i98$i>>0]=HEAP8[$agg$tmp$i100$i>>0]|0;
     $__a$addr$i$i97$i = $36;
     $__b$addr$i$i$i = $37;
     $38 = $__a$addr$i$i97$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $39 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $this$addr$i$i$i96$i = $agg$tmp1$i98$i;
     $__x$addr$i$i$i$i = $38;
     $__y$addr$i$i$i$i = $39;
     $40 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $41 = HEAP32[$40>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $42 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $43 = HEAP32[$42>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i$i = ($41>>>0)<($43>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $44 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $45 = $__a$addr$i$i97$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $44 : $45; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $46 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__c$i = $46; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $47 = $__c$i; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $48 = $__c$i; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div22$i = (($48>>>0) / 4)&-1; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i111$i = $this1$i163;
     $this1$i112$i = $this$addr$i111$i;
     $__end_cap_$i113$i = ((($this1$i112$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i110$i = $__end_cap_$i113$i;
     $this1$i$i114$i = $this$addr$i$i110$i;
     $this$addr$i$i$i109$i = $this1$i$i114$i;
     $this1$i$i$i115$i = $this$addr$i$i$i109$i;
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t$i162,$47,$div22$i,$this1$i$i$i115$i); //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_24$i = ((($this1$i163)) + 4|0); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $49 = HEAP32[$__begin_24$i>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i105$i = $agg$tmp$i;
     $__x$addr$i106$i = $49;
     $this1$i107$i = $this$addr$i105$i;
     $50 = $__x$addr$i106$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     HEAP32[$this1$i107$i>>2] = $50; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     $__end_26$i = ((($this1$i163)) + 8|0); //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $51 = HEAP32[$__end_26$i>>2]|0; //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i102$i = $agg$tmp25$i;
     $__x$addr$i103$i = $51;
     $this1$i104$i = $this$addr$i102$i;
     $52 = $__x$addr$i103$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     HEAP32[$this1$i104$i>>2] = $52; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     __THREW__ = 0;
     ;HEAP32[$agg$tmp$i$byval_copy>>2]=HEAP32[$agg$tmp$i>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ;HEAP32[$agg$tmp25$i$byval_copy>>2]=HEAP32[$agg$tmp25$i>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     invoke_viii(195,($__t$i162|0),($agg$tmp$i$byval_copy|0),($agg$tmp25$i$byval_copy|0)); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $95 = ___cxa_find_matching_catch_2()|0;
      $96 = tempRet0;
      $exn$slot$i = $95; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $ehselector$slot$i = $96; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i162); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $exn$i = $exn$slot$i; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sel$i = $ehselector$slot$i; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      ___resumeException($exn$i|0);
      // unreachable;
     } else {
      $__x$addr$i93$i = $this1$i163;
      $__y$addr$i94$i = $__t$i162;
      $55 = $__x$addr$i93$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i92$i = $55;
      $56 = $__t$addr$i$i92$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $57 = HEAP32[$56>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i95$i>>2] = $57; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $58 = $__y$addr$i94$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i90$i = $58;
      $59 = $__t$addr$i4$i90$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $60 = HEAP32[$59>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $61 = $__x$addr$i93$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$61>>2] = $60; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i91$i = $__t$i95$i;
      $62 = $__t$addr$i3$i91$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $63 = HEAP32[$62>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $64 = $__y$addr$i94$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$64>>2] = $63; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_31$i = ((($this1$i163)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_32$i = ((($__t$i162)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i87$i = $__begin_31$i;
      $__y$addr$i88$i = $__begin_32$i;
      $65 = $__x$addr$i87$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i86$i = $65;
      $66 = $__t$addr$i$i86$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $67 = HEAP32[$66>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i89$i>>2] = $67; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $68 = $__y$addr$i88$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i84$i = $68;
      $69 = $__t$addr$i4$i84$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $70 = HEAP32[$69>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $71 = $__x$addr$i87$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$71>>2] = $70; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i85$i = $__t$i89$i;
      $72 = $__t$addr$i3$i85$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $73 = HEAP32[$72>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $74 = $__y$addr$i88$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$74>>2] = $73; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_33$i = ((($this1$i163)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_34$i = ((($__t$i162)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i81$i = $__end_33$i;
      $__y$addr$i82$i = $__end_34$i;
      $75 = $__x$addr$i81$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i80$i = $75;
      $76 = $__t$addr$i$i80$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $77 = HEAP32[$76>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i83$i>>2] = $77; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $78 = $__y$addr$i82$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i78$i = $78;
      $79 = $__t$addr$i4$i78$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $80 = HEAP32[$79>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $81 = $__x$addr$i81$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$81>>2] = $80; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i79$i = $__t$i83$i;
      $82 = $__t$addr$i3$i79$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $83 = HEAP32[$82>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $84 = $__y$addr$i82$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$84>>2] = $83; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i72$i = $this1$i163;
      $this1$i73$i = $this$addr$i72$i;
      $__end_cap_$i74$i = ((($this1$i73$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i71$i = $__end_cap_$i74$i;
      $this1$i$i75$i = $this$addr$i$i71$i;
      $this$addr$i$i$i70$i = $this1$i$i75$i;
      $this1$i$i$i76$i = $this$addr$i$i$i70$i;
      $this$addr$i64$i = $__t$i162;
      $this1$i65$i = $this$addr$i64$i;
      $__end_cap_$i66$i = ((($this1$i65$i)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i63$i = $__end_cap_$i66$i;
      $this1$i$i67$i = $this$addr$i$i63$i;
      $this$addr$i$i$i62$i = $this1$i$i67$i;
      $this1$i$i$i68$i = $this$addr$i$i$i62$i;
      $__x$addr$i$i = $this1$i$i$i76$i;
      $__y$addr$i$i = $this1$i$i$i68$i;
      $85 = $__x$addr$i$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i61$i = $85;
      $86 = $__t$addr$i$i61$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $87 = HEAP32[$86>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i$i>>2] = $87; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $88 = $__y$addr$i$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i$i = $88;
      $89 = $__t$addr$i4$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $90 = HEAP32[$89>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $91 = $__x$addr$i$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$91>>2] = $90; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i$i = $__t$i$i;
      $92 = $__t$addr$i3$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $93 = HEAP32[$92>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $94 = $__y$addr$i$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$94>>2] = $93; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i162); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     }
    }
   }
  } while(0);
  $this$addr$i48$i = $this1$i163;
  $this1$i49$i = $this$addr$i48$i;
  $__end_cap_$i50$i = ((($this1$i49$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i47$i = $__end_cap_$i50$i;
  $this1$i$i51$i = $this$addr$i$i47$i;
  $this$addr$i$i$i46$i = $this1$i$i51$i;
  $this1$i$i$i52$i = $this$addr$i$i$i46$i;
  $__end_39$i = ((($this1$i163)) + 8|0); //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $97 = HEAP32[$__end_39$i>>2]|0; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i45$i = $97;
  $98 = $__p$addr$i45$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $99 = $__x$addr$i161; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__a$addr$i$i = $this1$i$i$i52$i;
  $__p$addr$i$i154 = $98;
  $__args$addr$i$i = $99;
  $100 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $101 = $__p$addr$i$i154; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $102 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $102;
  $103 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i155>>0]|0;
  $__a$addr$i$i$i = $100;
  $__p$addr$i$i$i153 = $101;
  $__args$addr$i$i$i = $103;
  $104 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $105 = $__p$addr$i$i$i153; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $106 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $106;
  $107 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i43$i = $104;
  $__p$addr$i$i$i$i152 = $105;
  $__args$addr$i$i$i$i = $107;
  $108 = $__p$addr$i$i$i$i152; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $109 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i$i = $109;
  $110 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $111 = HEAP32[$110>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$108>>2] = $111; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_41$i = ((($this1$i163)) + 8|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $112 = HEAP32[$__end_41$i>>2]|0; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i = ((($112)) + 4|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_41$i>>2] = $incdec$ptr$i; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  STACKTOP = sp;return; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 $this$addr$i170 = $this1;
 $this1$i171 = $this$addr$i170;
 $__end_$i172 = ((($this1$i171)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $113 = HEAP32[$__end_$i172>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i173 = ((($this1$i171)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $114 = HEAP32[$__begin_$i173>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i174 = $113; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i175 = $114; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i176 = (($sub$ptr$lhs$cast$i174) - ($sub$ptr$rhs$cast$i175))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i177 = (($sub$ptr$sub$i176|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i181 = $this1;
 $this1$i182 = $this$addr$i181;
 $this$addr$i$i180 = $this1$i182;
 $this1$i$i183 = $this$addr$i$i180;
 $__end_cap_$i$i184 = ((($this1$i$i183)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i179 = $__end_cap_$i$i184;
 $this1$i$i$i185 = $this$addr$i$i$i179;
 $this$addr$i$i$i$i178 = $this1$i$i$i185;
 $this1$i$i$i$i186 = $this$addr$i$i$i$i178;
 $115 = HEAP32[$this1$i$i$i$i186>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $116 = HEAP32[$this1$i182>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i189 = $115; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i190 = $116; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i191 = (($sub$ptr$lhs$cast$i189) - ($sub$ptr$rhs$cast$i190))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i192 = (($sub$ptr$sub$i191|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp10 = ($sub$ptr$div$i177>>>0)<($sub$ptr$div$i192>>>0); //@line 2436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp10) {
  $this$addr$i196 = $this1;
  $this1$i197 = $this$addr$i196;
  $this$addr$i$i195 = $this1$i197;
  $this1$i$i198 = $this$addr$i$i195;
  $__end_cap_$i$i199 = ((($this1$i$i198)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i194 = $__end_cap_$i$i199;
  $this1$i$i$i200 = $this$addr$i$i$i194;
  $this$addr$i$i$i$i193 = $this1$i$i$i200;
  $this1$i$i$i$i201 = $this$addr$i$i$i$i193;
  $117 = HEAP32[$this1$i$i$i$i201>>2]|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i203 = ((($this1$i197)) + 8|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $118 = HEAP32[$__end_$i203>>2]|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i204 = $117; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i205 = $118; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i206 = (($sub$ptr$lhs$cast$i204) - ($sub$ptr$rhs$cast$i205))|0; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i207 = (($sub$ptr$sub$i206|0) / 4)&-1; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp14 = ($sub$ptr$div$i207|0)!=(0); //@line 2440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $119 = $__a;
  if ($cmp14) {
   $__a$addr$i = $119;
   $__n$addr$i = 1024;
   $120 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $121 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i209 = $120;
   $__n$addr$i$i = $121;
   $$addr$i$i = 0;
   $this1$i$i210 = $this$addr$i$i209;
   $122 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i208 = $this1$i$i210;
   $cmp$i$i = ($122>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   }
   $123 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $mul$i$i = $123<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__size$addr$i$i$i = $mul$i$i;
   $124 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   $call$i$i$i = (__Znwj($124)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   HEAP32[$ref$tmp>>2] = $call$i$i$i; //@line 2441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE9push_backEOS3_($this1,$ref$tmp); //@line 2441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   STACKTOP = sp;return; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  $__a$addr$i218 = $119;
  $__n$addr$i219 = 1024;
  $125 = $__a$addr$i218; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $126 = $__n$addr$i219; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i215 = $125;
  $__n$addr$i$i216 = $126;
  $$addr$i$i217 = 0;
  $this1$i$i220 = $this$addr$i$i215;
  $127 = $__n$addr$i$i216; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i214 = $this1$i$i220;
  $cmp$i$i222 = ($127>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if ($cmp$i$i222) {
   $exception$i$i223 = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __ZNSt9bad_allocC2Ev($exception$i$i223); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   ___cxa_throw(($exception$i$i223|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  }
  $128 = $__n$addr$i$i216; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i$i225 = $128<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__size$addr$i$i$i213 = $mul$i$i225;
  $129 = $__size$addr$i$i$i213; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $call$i$i$i226 = (__Znwj($129)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  HEAP32[$ref$tmp20>>2] = $call$i$i$i226; //@line 2444 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__214__split_bufferIPP5HNodeNS_9allocatorIS3_EEE10push_frontEOS3_($this1,$ref$tmp20); //@line 2444 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i228 = $this1;
  $this1$i229 = $this$addr$i228;
  $__begin_$i230 = ((($this1$i229)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $130 = HEAP32[$__begin_$i230>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $131 = HEAP32[$130>>2]|0; //@line 2446 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__pt22>>2] = $131; //@line 2446 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i238 = $this1;
  $this1$i239 = $this$addr$i238;
  $__begin_$i240 = ((($this1$i239)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $132 = HEAP32[$__begin_$i240>>2]|0; //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $add$ptr$i241 = ((($132)) + 4|0); //@line 111 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i234 = $this1$i239;
  $__new_begin$addr$i$i235 = $add$ptr$i241;
  $this1$i$i242 = $this$addr$i$i234;
  $133 = $__new_begin$addr$i$i235; //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  ;HEAP8[$agg$tmp2$i$i233>>0]=HEAP8[$agg$tmp$i$i236>>0]|0;
  $this$addr$i$i$i231 = $this1$i$i242;
  $__new_begin$addr$i$i$i232 = $133;
  $this1$i$i$i243 = $this$addr$i$i$i231;
  $134 = $__new_begin$addr$i$i$i232; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i$i$i244 = ((($this1$i$i$i243)) + 4|0); //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__begin_$i$i$i244>>2] = $134; //@line 287 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i326 = $this1;
  $__x$addr$i327 = $__pt22;
  $this1$i337 = $this$addr$i326;
  $__end_$i338 = ((($this1$i337)) + 8|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $135 = HEAP32[$__end_$i338>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i325 = $this1$i337;
  $this1$i$i339 = $this$addr$i$i325;
  $__end_cap_$i$i340 = ((($this1$i$i339)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i324 = $__end_cap_$i$i340;
  $this1$i$i$i341 = $this$addr$i$i$i324;
  $this$addr$i$i$i$i323 = $this1$i$i$i341;
  $this1$i$i$i$i342 = $this$addr$i$i$i$i323;
  $136 = HEAP32[$this1$i$i$i$i342>>2]|0; //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i344 = ($135|0)==($136|0); //@line 534 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  do {
   if ($cmp$i344) {
    $__begin_$i345 = ((($this1$i337)) + 4|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $137 = HEAP32[$__begin_$i345>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $138 = HEAP32[$this1$i337>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    $cmp2$i347 = ($137>>>0)>($138>>>0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
    if ($cmp2$i347) {
     $__begin_4$i349 = ((($this1$i337)) + 4|0); //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $139 = HEAP32[$__begin_4$i349>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $140 = HEAP32[$this1$i337>>2]|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast$i351 = $139; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast$i352 = $140; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub$i353 = (($sub$ptr$lhs$cast$i351) - ($sub$ptr$rhs$cast$i352))|0; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div$i354 = (($sub$ptr$sub$i353|0) / 4)&-1; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i328 = $sub$ptr$div$i354; //@line 538 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $141 = $__d$i328; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$i355 = (($141) + 1)|0; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div$i356 = (($add$i355|0) / 2)&-1; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__d$i328 = $div$i356; //@line 539 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_6$i357 = ((($this1$i337)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $142 = HEAP32[$__begin_6$i357>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__end_7$i358 = ((($this1$i337)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $143 = HEAP32[$__end_7$i358>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_8$i359 = ((($this1$i337)) + 4|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $144 = HEAP32[$__begin_8$i359>>2]|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $145 = $__d$i328; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg$i360 = (0 - ($145))|0; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr$i361 = (($144) + ($idx$neg$i360<<2)|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__first$addr$i$i301 = $142;
     $__last$addr$i$i302 = $143;
     $__result$addr$i$i303 = $add$ptr$i361;
     $146 = $__first$addr$i$i301; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i$i$i300 = $146;
     $147 = $__i$addr$i$i$i300; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $148 = $__last$addr$i$i302; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i5$i$i294 = $148;
     $149 = $__i$addr$i5$i$i294; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $150 = $__result$addr$i$i303; //@line 1902 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__i$addr$i4$i$i295 = $150;
     $151 = $__i$addr$i4$i$i295; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__first$addr$i$i$i296 = $147;
     $__last$addr$i$i$i297 = $149;
     $__result$addr$i$i$i298 = $151;
     $152 = $__last$addr$i$i$i297; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $153 = $__first$addr$i$i$i296; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$lhs$cast$i$i$i362 = $152; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$rhs$cast$i$i$i363 = $153; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$sub$i$i$i364 = (($sub$ptr$lhs$cast$i$i$i362) - ($sub$ptr$rhs$cast$i$i$i363))|0; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $sub$ptr$div$i$i$i365 = (($sub$ptr$sub$i$i$i364|0) / 4)&-1; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__n$i$i$i299 = $sub$ptr$div$i$i$i365; //@line 1891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $154 = $__n$i$i$i299; //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i366 = ($154>>>0)>(0); //@line 1892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     if ($cmp$i$i$i366) {
      $155 = $__result$addr$i$i$i298; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $156 = $__first$addr$i$i$i296; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $157 = $__n$i$i$i299; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      $mul$i$i$i368 = $157<<2; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
      _memmove(($155|0),($156|0),($mul$i$i$i368|0))|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     }
     $158 = $__result$addr$i$i$i298; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $159 = $__n$i$i$i299; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $add$ptr$i$i$i370 = (($158) + ($159<<2)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $__end_10$i371 = ((($this1$i337)) + 8|0); //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__end_10$i371>>2] = $add$ptr$i$i$i370; //@line 540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $160 = $__d$i328; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_11$i372 = ((($this1$i337)) + 4|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $161 = HEAP32[$__begin_11$i372>>2]|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $idx$neg12$i373 = (0 - ($160))|0; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $add$ptr13$i374 = (($161) + ($idx$neg12$i373<<2)|0); //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$__begin_11$i372>>2] = $add$ptr13$i374; //@line 541 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     break;
    } else {
     $this$addr$i55$i293 = $this1$i337;
     $this1$i56$i376 = $this$addr$i55$i293;
     $__end_cap_$i57$i377 = ((($this1$i56$i376)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i54$i292 = $__end_cap_$i57$i377;
     $this1$i$i58$i378 = $this$addr$i$i54$i292;
     $this$addr$i$i$i53$i291 = $this1$i$i58$i378;
     $this1$i$i$i59$i379 = $this$addr$i$i$i53$i291;
     $162 = HEAP32[$this1$i$i$i59$i379>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $163 = HEAP32[$this1$i337>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$lhs$cast16$i382 = $162; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$rhs$cast17$i383 = $163; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$sub18$i384 = (($sub$ptr$lhs$cast16$i382) - ($sub$ptr$rhs$cast17$i383))|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $sub$ptr$div19$i385 = (($sub$ptr$sub18$i384|0) / 4)&-1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $mul$i386 = $sub$ptr$div19$i385<<1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$ref$tmp$i330>>2] = $mul$i386; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     HEAP32[$ref$tmp20$i331>>2] = 1; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__a$addr$i99$i258 = $ref$tmp$i330;
     $__b$addr$i$i259 = $ref$tmp20$i331;
     $164 = $__a$addr$i99$i258; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $165 = $__b$addr$i$i259; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     ;HEAP8[$agg$tmp1$i98$i257>>0]=HEAP8[$agg$tmp$i100$i260>>0]|0;
     $__a$addr$i$i97$i255 = $164;
     $__b$addr$i$i$i256 = $165;
     $166 = $__a$addr$i$i97$i255; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $167 = $__b$addr$i$i$i256; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $this$addr$i$i$i96$i252 = $agg$tmp1$i98$i257;
     $__x$addr$i$i$i$i253 = $166;
     $__y$addr$i$i$i$i254 = $167;
     $168 = $__x$addr$i$i$i$i253; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $169 = HEAP32[$168>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $170 = $__y$addr$i$i$i$i254; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $171 = HEAP32[$170>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cmp$i$i$i$i388 = ($169>>>0)<($171>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $172 = $__b$addr$i$i$i256; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $173 = $__a$addr$i$i97$i255; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $cond$lvalue$i$i$i3922D = $cmp$i$i$i$i388 ? $172 : $173; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
     $174 = HEAP32[$cond$lvalue$i$i$i3922D>>2]|0; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__c$i329 = $174; //@line 545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $175 = $__c$i329; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $176 = $__c$i329; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $div22$i393 = (($176>>>0) / 4)&-1; //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i111$i247 = $this1$i337;
     $this1$i112$i394 = $this$addr$i111$i247;
     $__end_cap_$i113$i395 = ((($this1$i112$i394)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i$i110$i246 = $__end_cap_$i113$i395;
     $this1$i$i114$i396 = $this$addr$i$i110$i246;
     $this$addr$i$i$i109$i245 = $this1$i$i114$i396;
     $this1$i$i$i115$i397 = $this$addr$i$i$i109$i245;
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__t$i332,$175,$div22$i393,$this1$i$i$i115$i397); //@line 546 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $__begin_24$i398 = ((($this1$i337)) + 4|0); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $177 = HEAP32[$__begin_24$i398>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i105$i248 = $agg$tmp$i333;
     $__x$addr$i106$i249 = $177;
     $this1$i107$i399 = $this$addr$i105$i248;
     $178 = $__x$addr$i106$i249; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     HEAP32[$this1$i107$i399>>2] = $178; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     $__end_26$i402 = ((($this1$i337)) + 8|0); //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $179 = HEAP32[$__end_26$i402>>2]|0; //@line 548 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $this$addr$i102$i250 = $agg$tmp25$i336;
     $__x$addr$i103$i251 = $179;
     $this1$i104$i403 = $this$addr$i102$i250;
     $180 = $__x$addr$i103$i251; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     HEAP32[$this1$i104$i403>>2] = $180; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
     __THREW__ = 0;
     ;HEAP32[$agg$tmp$i333$byval_copy>>2]=HEAP32[$agg$tmp$i333>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     ;HEAP32[$agg$tmp25$i336$byval_copy>>2]=HEAP32[$agg$tmp25$i336>>2]|0; //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     invoke_viii(195,($__t$i332|0),($agg$tmp$i333$byval_copy|0),($agg$tmp25$i336$byval_copy|0)); //@line 547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
     $181 = __THREW__; __THREW__ = 0;
     $182 = $181&1;
     if ($182) {
      $223 = ___cxa_find_matching_catch_2()|0;
      $224 = tempRet0;
      $exn$slot$i334 = $223; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $ehselector$slot$i335 = $224; //@line 557 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i332); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $exn$i432 = $exn$slot$i334; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $sel$i433 = $ehselector$slot$i335; //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      ___resumeException($exn$i432|0);
      // unreachable;
     } else {
      $__x$addr$i93$i264 = $this1$i337;
      $__y$addr$i94$i265 = $__t$i332;
      $183 = $__x$addr$i93$i264; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i92$i263 = $183;
      $184 = $__t$addr$i$i92$i263; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $185 = HEAP32[$184>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i95$i266>>2] = $185; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $186 = $__y$addr$i94$i265; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i90$i261 = $186;
      $187 = $__t$addr$i4$i90$i261; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $188 = HEAP32[$187>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $189 = $__x$addr$i93$i264; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$189>>2] = $188; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i91$i262 = $__t$i95$i266;
      $190 = $__t$addr$i3$i91$i262; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $191 = HEAP32[$190>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $192 = $__y$addr$i94$i265; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$192>>2] = $191; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_31$i407 = ((($this1$i337)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__begin_32$i408 = ((($__t$i332)) + 4|0); //@line 550 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i87$i270 = $__begin_31$i407;
      $__y$addr$i88$i271 = $__begin_32$i408;
      $193 = $__x$addr$i87$i270; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i86$i269 = $193;
      $194 = $__t$addr$i$i86$i269; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $195 = HEAP32[$194>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i89$i272>>2] = $195; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $196 = $__y$addr$i88$i271; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i84$i267 = $196;
      $197 = $__t$addr$i4$i84$i267; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $198 = HEAP32[$197>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $199 = $__x$addr$i87$i270; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$199>>2] = $198; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i85$i268 = $__t$i89$i272;
      $200 = $__t$addr$i3$i85$i268; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $201 = HEAP32[$200>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $202 = $__y$addr$i88$i271; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$202>>2] = $201; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_33$i409 = ((($this1$i337)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__end_34$i410 = ((($__t$i332)) + 8|0); //@line 551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__x$addr$i81$i276 = $__end_33$i409;
      $__y$addr$i82$i277 = $__end_34$i410;
      $203 = $__x$addr$i81$i276; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i80$i275 = $203;
      $204 = $__t$addr$i$i80$i275; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $205 = HEAP32[$204>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i83$i278>>2] = $205; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $206 = $__y$addr$i82$i277; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i78$i273 = $206;
      $207 = $__t$addr$i4$i78$i273; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $208 = HEAP32[$207>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $209 = $__x$addr$i81$i276; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$209>>2] = $208; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i79$i274 = $__t$i83$i278;
      $210 = $__t$addr$i3$i79$i274; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $211 = HEAP32[$210>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $212 = $__y$addr$i82$i277; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$212>>2] = $211; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i72$i281 = $this1$i337;
      $this1$i73$i411 = $this$addr$i72$i281;
      $__end_cap_$i74$i412 = ((($this1$i73$i411)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i71$i280 = $__end_cap_$i74$i412;
      $this1$i$i75$i413 = $this$addr$i$i71$i280;
      $this$addr$i$i$i70$i279 = $this1$i$i75$i413;
      $this1$i$i$i76$i414 = $this$addr$i$i$i70$i279;
      $this$addr$i64$i284 = $__t$i332;
      $this1$i65$i416 = $this$addr$i64$i284;
      $__end_cap_$i66$i417 = ((($this1$i65$i416)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i63$i283 = $__end_cap_$i66$i417;
      $this1$i$i67$i418 = $this$addr$i$i63$i283;
      $this$addr$i$i$i62$i282 = $this1$i$i67$i418;
      $this1$i$i$i68$i419 = $this$addr$i$i$i62$i282;
      $__x$addr$i$i288 = $this1$i$i$i76$i414;
      $__y$addr$i$i289 = $this1$i$i$i68$i419;
      $213 = $__x$addr$i$i288; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i61$i287 = $213;
      $214 = $__t$addr$i$i61$i287; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $215 = HEAP32[$214>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i$i290>>2] = $215; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $216 = $__y$addr$i$i289; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i$i285 = $216;
      $217 = $__t$addr$i4$i$i285; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $218 = HEAP32[$217>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $219 = $__x$addr$i$i288; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$219>>2] = $218; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i$i286 = $__t$i$i290;
      $220 = $__t$addr$i3$i$i286; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $221 = HEAP32[$220>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $222 = $__y$addr$i$i289; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$222>>2] = $221; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__t$i332); //@line 553 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      break;
     }
    }
   }
  } while(0);
  $this$addr$i48$i306 = $this1$i337;
  $this1$i49$i424 = $this$addr$i48$i306;
  $__end_cap_$i50$i425 = ((($this1$i49$i424)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i47$i305 = $__end_cap_$i50$i425;
  $this1$i$i51$i426 = $this$addr$i$i47$i305;
  $this$addr$i$i$i46$i304 = $this1$i$i51$i426;
  $this1$i$i$i52$i427 = $this$addr$i$i$i46$i304;
  $__end_39$i428 = ((($this1$i337)) + 8|0); //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $225 = HEAP32[$__end_39$i428>>2]|0; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i45$i307 = $225;
  $226 = $__p$addr$i45$i307; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $227 = $__x$addr$i327; //@line 555 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__a$addr$i$i318 = $this1$i$i$i52$i427;
  $__p$addr$i$i319 = $226;
  $__args$addr$i$i320 = $227;
  $228 = $__a$addr$i$i318; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $229 = $__p$addr$i$i319; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $230 = $__args$addr$i$i320; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i317 = $230;
  $231 = $__t$addr$i$i$i317; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i$i316>>0]=HEAP8[$agg$tmp$i$i321>>0]|0;
  $__a$addr$i$i$i313 = $228;
  $__p$addr$i$i$i314 = $229;
  $__args$addr$i$i$i315 = $231;
  $232 = $__a$addr$i$i$i313; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $233 = $__p$addr$i$i$i314; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $234 = $__args$addr$i$i$i315; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i312 = $234;
  $235 = $__t$addr$i$i$i$i312; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i43$i309 = $232;
  $__p$addr$i$i$i$i310 = $233;
  $__args$addr$i$i$i$i311 = $235;
  $236 = $__p$addr$i$i$i$i310; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $237 = $__args$addr$i$i$i$i311; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i$i308 = $237;
  $238 = $__t$addr$i$i$i$i$i308; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $239 = HEAP32[$238>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$236>>2] = $239; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_41$i430 = ((($this1$i337)) + 8|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $240 = HEAP32[$__end_41$i430>>2]|0; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i431 = ((($240)) + 4|0); //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_41$i430>>2] = $incdec$ptr$i431; //@line 556 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  STACKTOP = sp;return; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 } else {
  $this$addr$i440 = $this1;
  $this1$i441 = $this$addr$i440;
  $this$addr$i$i439 = $this1$i441;
  $this1$i$i442 = $this$addr$i$i439;
  $__end_cap_$i$i443 = ((($this1$i$i442)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i438 = $__end_cap_$i$i443;
  $this1$i$i$i444 = $this$addr$i$i$i438;
  $this$addr$i$i$i$i437 = $this1$i$i$i444;
  $this1$i$i$i$i445 = $this$addr$i$i$i$i437;
  $241 = HEAP32[$this1$i$i$i$i445>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $242 = HEAP32[$this1$i441>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i448 = $241; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i449 = $242; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i450 = (($sub$ptr$lhs$cast$i448) - ($sub$ptr$rhs$cast$i449))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i451 = (($sub$ptr$sub$i450|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $mul = $sub$ptr$div$i451<<1; //@line 2455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$ref$tmp28>>2] = $mul; //@line 2455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$ref$tmp31>>2] = 1; //@line 2455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i455 = $ref$tmp28;
  $__b$addr$i = $ref$tmp31;
  $243 = $__a$addr$i455; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $244 = $__b$addr$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i456>>0]|0;
  $__a$addr$i$i453 = $243;
  $__b$addr$i$i454 = $244;
  $245 = $__a$addr$i$i453; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $246 = $__b$addr$i$i454; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i452 = $agg$tmp1$i;
  $__x$addr$i$i$i = $245;
  $__y$addr$i$i$i = $246;
  $247 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $248 = HEAP32[$247>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $249 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $250 = HEAP32[$249>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i458 = ($248>>>0)<($250>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $251 = $__b$addr$i$i454; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $252 = $__a$addr$i$i453; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i2D = $cmp$i$i$i458 ? $251 : $252; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $253 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 2455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i459 = $this1;
  $this1$i460 = $this$addr$i459;
  $__end_$i461 = ((($this1$i460)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $254 = HEAP32[$__end_$i461>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i462 = ((($this1$i460)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $255 = HEAP32[$__begin_$i462>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i463 = $254; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i464 = $255; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i465 = (($sub$ptr$lhs$cast$i463) - ($sub$ptr$rhs$cast$i464))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i466 = (($sub$ptr$sub$i465|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i469 = $this1;
  $this1$i470 = $this$addr$i469;
  $__end_cap_$i471 = ((($this1$i470)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i468 = $__end_cap_$i471;
  $this1$i$i472 = $this$addr$i$i468;
  $this$addr$i$i$i467 = $this1$i$i472;
  $this1$i$i$i473 = $this$addr$i$i$i467;
  __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_($__buf,$253,$sub$ptr$div$i466,$this1$i$i$i473); //@line 2455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $256 = $__a; //@line 2461 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i479 = $256;
  $__n$addr$i480 = 1024;
  $257 = $__a$addr$i479; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $258 = $__n$addr$i480; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i476 = $257;
  $__n$addr$i$i477 = $258;
  $$addr$i$i478 = 0;
  $this1$i$i481 = $this$addr$i$i476;
  $259 = $__n$addr$i$i477; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i475 = $this1$i$i481;
  $cmp$i$i483 = ($259>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if ($cmp$i$i483) {
   $exception$i$i484 = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __ZNSt9bad_allocC2Ev($exception$i$i484); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   __THREW__ = 0;
   invoke_viii(196,($exception$i$i484|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $260 = __THREW__; __THREW__ = 0;
  } else {
   $261 = $__n$addr$i$i477; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $mul$i$i486 = $261<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__size$addr$i$i$i474 = $mul$i$i486;
   $262 = $__size$addr$i$i$i474; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   __THREW__ = 0;
   $call$i$i$i487488 = (invoke_ii(126,($262|0))|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
   $263 = __THREW__; __THREW__ = 0;
   $264 = $263&1;
   if (!($264)) {
    $265 = $__a; //@line 2462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $this$addr$i490 = $ref$tmp38;
    $__a$addr$i491 = $265;
    $__s$addr$i = 1024;
    $this1$i492 = $this$addr$i490;
    $266 = $__a$addr$i491; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    HEAP32[$this1$i492>>2] = $266; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__s_$i = ((($this1$i492)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $267 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    HEAP32[$__s_$i>>2] = $267; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $this$addr$i500 = $__hold;
    $__p$addr$i = $call$i$i$i487488;
    $__d$addr$i = $ref$tmp38;
    $this1$i502 = $this$addr$i500;
    $268 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $269 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__t$addr$i$i499 = $269;
    $270 = $__t$addr$i$i499; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    ;HEAP32[$agg$tmp$i501>>2]=HEAP32[$270>>2]|0;HEAP32[$agg$tmp$i501+4>>2]=HEAP32[$270+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i501>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i501+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i501+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i501+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i501+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i501+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i501+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i501+7>>0]|0;
    $this$addr$i$i497 = $this1$i502;
    HEAP32[$__t1$addr$i$i>>2] = $268;
    $this1$i$i503 = $this$addr$i$i497;
    $__t$addr$i$i$i496 = $__t1$addr$i$i;
    $271 = $__t$addr$i$i$i496; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $272 = HEAP32[$271>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__t$addr$i4$i$i493 = $agg$tmp2$i;
    $273 = $__t$addr$i4$i$i493; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    ;HEAP32[$agg$tmp$i$i498>>2]=HEAP32[$273>>2]|0;HEAP32[$agg$tmp$i$i498+4>>2]=HEAP32[$273+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i498>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i498+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i498+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i498+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i498+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i498+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i498+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i498+7>>0]|0;
    $this$addr$i$i$i495 = $this1$i$i503;
    HEAP32[$__t1$addr$i$i$i>>2] = $272;
    $this1$i$i$i504 = $this$addr$i$i$i495;
    $__t$addr$i$i$i$i494 = $__t1$addr$i$i$i;
    $274 = $__t$addr$i$i$i$i494; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    $275 = HEAP32[$274>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    HEAP32[$this1$i$i$i504>>2] = $275; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__second_$i$i$i = ((($this1$i$i$i504)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
    $276 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
    ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$276>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$276+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $this$addr$i508 = $__hold;
    $this1$i509 = $this$addr$i508;
    $this$addr$i$i507 = $this1$i509;
    $this1$i$i511 = $this$addr$i$i507;
    $this$addr$i$i$i506 = $this1$i$i511;
    $this1$i$i$i512 = $this$addr$i$i$i506;
    $277 = HEAP32[$this1$i$i$i512>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    HEAP32[$ref$tmp39>>2] = $277; //@line 2463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    __THREW__ = 0;
    invoke_vii(197,($__buf|0),($ref$tmp39|0)); //@line 2463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $278 = __THREW__; __THREW__ = 0;
    $279 = $278&1;
    L47: do {
     if (!($279)) {
      $this$addr$i516 = $__hold;
      $this1$i518 = $this$addr$i516;
      $this$addr$i$i515 = $this1$i518;
      $this1$i$i520 = $this$addr$i$i515;
      $this$addr$i$i$i514 = $this1$i$i520;
      $this1$i$i$i521 = $this$addr$i$i$i514;
      $280 = HEAP32[$this1$i$i$i521>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $__t$i517 = $280; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $this$addr$i5$i = $this1$i518;
      $this1$i6$i = $this$addr$i5$i;
      $this$addr$i$i4$i = $this1$i6$i;
      $this1$i$i7$i = $this$addr$i$i4$i;
      HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $this$addr$i523 = $this1;
      $this1$i524 = $this$addr$i523;
      $__end_$i525 = ((($this1$i524)) + 8|0); //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $281 = HEAP32[$__end_$i525>>2]|0; //@line 81 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $__i = $281; //@line 2466 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      while(1) {
       $282 = $__i; //@line 2467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       $this$addr$i526 = $this1;
       $this1$i527 = $this$addr$i526;
       $__begin_$i528 = ((($this1$i527)) + 4|0); //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
       $283 = HEAP32[$__begin_$i528>>2]|0; //@line 79 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
       $cmp48 = ($282|0)!=($283|0); //@line 2467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       if (!($cmp48)) {
        break;
       }
       $284 = $__i; //@line 2468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       $incdec$ptr = ((($284)) + -4|0); //@line 2468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       $__i = $incdec$ptr; //@line 2468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       __THREW__ = 0;
       invoke_vii(201,($__buf|0),($incdec$ptr|0)); //@line 2468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
       $285 = __THREW__; __THREW__ = 0;
       $286 = $285&1;
       if ($286) {
        break L47;
       }
      }
      $__x$addr$i108 = $this1;
      $__y$addr$i109 = $__buf;
      $302 = $__x$addr$i108; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i107 = $302;
      $303 = $__t$addr$i$i107; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $304 = HEAP32[$303>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i110>>2] = $304; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $305 = $__y$addr$i109; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i105 = $305;
      $306 = $__t$addr$i4$i105; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $307 = HEAP32[$306>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $308 = $__x$addr$i108; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$308>>2] = $307; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i106 = $__t$i110;
      $309 = $__t$addr$i3$i106; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $310 = HEAP32[$309>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $311 = $__y$addr$i109; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$311>>2] = $310; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__begin_ = ((($this1)) + 4|0); //@line 2470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      $__begin_53 = ((($__buf)) + 4|0); //@line 2470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      $__x$addr$i102 = $__begin_;
      $__y$addr$i103 = $__begin_53;
      $312 = $__x$addr$i102; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i101 = $312;
      $313 = $__t$addr$i$i101; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $314 = HEAP32[$313>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i104>>2] = $314; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $315 = $__y$addr$i103; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i99 = $315;
      $316 = $__t$addr$i4$i99; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $317 = HEAP32[$316>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $318 = $__x$addr$i102; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$318>>2] = $317; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i100 = $__t$i104;
      $319 = $__t$addr$i3$i100; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $320 = HEAP32[$319>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $321 = $__y$addr$i103; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$321>>2] = $320; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__end_ = ((($this1)) + 8|0); //@line 2471 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      $__end_55 = ((($__buf)) + 8|0); //@line 2471 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      $__x$addr$i96 = $__end_;
      $__y$addr$i97 = $__end_55;
      $322 = $__x$addr$i96; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i95 = $322;
      $323 = $__t$addr$i$i95; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $324 = HEAP32[$323>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i98>>2] = $324; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $325 = $__y$addr$i97; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i93 = $325;
      $326 = $__t$addr$i4$i93; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $327 = HEAP32[$326>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $328 = $__x$addr$i96; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$328>>2] = $327; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i94 = $__t$i98;
      $329 = $__t$addr$i3$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $330 = HEAP32[$329>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $331 = $__y$addr$i97; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$331>>2] = $330; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i87 = $this1;
      $this1$i88 = $this$addr$i87;
      $__end_cap_$i89 = ((($this1$i88)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i86 = $__end_cap_$i89;
      $this1$i$i90 = $this$addr$i$i86;
      $this$addr$i$i$i85 = $this1$i$i90;
      $this1$i$i$i91 = $this$addr$i$i$i85;
      $this$addr$i81 = $__buf;
      $this1$i82 = $this$addr$i81;
      $__end_cap_$i = ((($this1$i82)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
      $this$addr$i$i80 = $__end_cap_$i;
      $this1$i$i83 = $this$addr$i$i80;
      $this$addr$i$i$i79 = $this1$i$i83;
      $this1$i$i$i84 = $this$addr$i$i$i79;
      $__x$addr$i = $this1$i$i$i91;
      $__y$addr$i = $this1$i$i$i84;
      $332 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i$i = $332;
      $333 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $334 = HEAP32[$333>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$__t$i>>2] = $334; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $335 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i4$i = $335;
      $336 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $337 = HEAP32[$336>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $338 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$338>>2] = $337; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $__t$addr$i3$i = $__t$i;
      $339 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $340 = HEAP32[$339>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $341 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      HEAP32[$341>>2] = $340; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
      $this$addr$i68 = $__hold;
      $this1$i69 = $this$addr$i68;
      $this$addr$i$i67 = $this1$i69;
      $__p$addr$i$i = 0;
      $this1$i$i70 = $this$addr$i$i67;
      $this$addr$i$i$i66 = $this1$i$i70;
      $this1$i$i$i71 = $this$addr$i$i$i66;
      $this$addr$i$i$i$i = $this1$i$i$i71;
      $this1$i$i$i$i = $this$addr$i$i$i$i;
      $342 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $__tmp$i$i = $342; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $343 = $__p$addr$i$i; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $this$addr$i9$i$i = $this1$i$i70;
      $this1$i10$i$i = $this$addr$i9$i$i;
      $this$addr$i$i8$i$i = $this1$i10$i$i;
      $this1$i$i11$i$i = $this$addr$i$i8$i$i;
      HEAP32[$this1$i$i11$i$i>>2] = $343; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $344 = $__tmp$i$i; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      $tobool$i$i = ($344|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
      if ($tobool$i$i) {
       $this$addr$i14$i$i = $this1$i$i70;
       $this1$i15$i$i = $this$addr$i14$i$i;
       $this$addr$i$i13$i$i = $this1$i15$i$i;
       $this1$i$i16$i$i = $this$addr$i$i13$i$i;
       $__second_$i$i$i$i = ((($this1$i$i16$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $345 = $__tmp$i$i; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $this$addr$i6$i$i = $__second_$i$i$i$i;
       $__p$addr$i$i$i = $345;
       $this1$i7$i$i = $this$addr$i6$i$i;
       $ref$i$i$i = HEAP32[$this1$i7$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $346 = $__p$addr$i$i$i; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__s_$i$i$i = ((($this1$i7$i$i)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $347 = HEAP32[$__s_$i$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__a$addr$i$i$i$i = $ref$i$i$i;
       $__p$addr$i$i$i$i = $346;
       $__n$addr$i$i$i$i = $347;
       $348 = $__a$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $349 = $__p$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $350 = $__n$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $this$addr$i$i$i$i$i = $348;
       $__p$addr$i$i$i$i$i = $349;
       $$addr$i$i$i$i$i = $350;
       $351 = $__p$addr$i$i$i$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
       $__ptr$addr$i$i$i$i$i$i = $351;
       $352 = $__ptr$addr$i$i$i$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
       __ZdlPv($352); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
      }
      __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
      STACKTOP = sp;return; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     }
    } while(0);
    $289 = ___cxa_find_matching_catch_2()|0;
    $290 = tempRet0;
    $exn$slot = $289; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $ehselector$slot = $290; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $this$addr$i129 = $__hold;
    $this1$i130 = $this$addr$i129;
    $this$addr$i$i126 = $this1$i130;
    $__p$addr$i$i127 = 0;
    $this1$i$i131 = $this$addr$i$i126;
    $this$addr$i$i$i125 = $this1$i$i131;
    $this1$i$i$i133 = $this$addr$i$i$i125;
    $this$addr$i$i$i$i124 = $this1$i$i$i133;
    $this1$i$i$i$i134 = $this$addr$i$i$i$i124;
    $291 = HEAP32[$this1$i$i$i$i134>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__tmp$i$i128 = $291; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $292 = $__p$addr$i$i127; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $this$addr$i9$i$i114 = $this1$i$i131;
    $this1$i10$i$i137 = $this$addr$i9$i$i114;
    $this$addr$i$i8$i$i113 = $this1$i10$i$i137;
    $this1$i$i11$i$i138 = $this$addr$i$i8$i$i113;
    HEAP32[$this1$i$i11$i$i138>>2] = $292; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $293 = $__tmp$i$i128; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $tobool$i$i140 = ($293|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    if (!($tobool$i$i140)) {
     __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $exn = $exn$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     $sel = $ehselector$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
     ___resumeException($exn|0);
     // unreachable;
    }
    $this$addr$i14$i$i112 = $this1$i$i131;
    $this1$i15$i$i142 = $this$addr$i14$i$i112;
    $this$addr$i$i13$i$i111 = $this1$i15$i$i142;
    $this1$i$i16$i$i143 = $this$addr$i$i13$i$i111;
    $__second_$i$i$i$i144 = ((($this1$i$i16$i$i143)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $294 = $__tmp$i$i128; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $this$addr$i6$i$i122 = $__second_$i$i$i$i144;
    $__p$addr$i$i$i123 = $294;
    $this1$i7$i$i145 = $this$addr$i6$i$i122;
    $ref$i$i$i147 = HEAP32[$this1$i7$i$i145>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $295 = $__p$addr$i$i$i123; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__s_$i$i$i148 = ((($this1$i7$i$i145)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $296 = HEAP32[$__s_$i$i$i148>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__a$addr$i$i$i$i119 = $ref$i$i$i147;
    $__p$addr$i$i$i$i120 = $295;
    $__n$addr$i$i$i$i121 = $296;
    $297 = $__a$addr$i$i$i$i119; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $298 = $__p$addr$i$i$i$i120; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $299 = $__n$addr$i$i$i$i121; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $this$addr$i$i$i$i$i116 = $297;
    $__p$addr$i$i$i$i$i117 = $298;
    $$addr$i$i$i$i$i118 = $299;
    $300 = $__p$addr$i$i$i$i$i117; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__ptr$addr$i$i$i$i$i$i115 = $300;
    $301 = $__ptr$addr$i$i$i$i$i$i115; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    __ZdlPv($301); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $exn = $exn$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    $sel = $ehselector$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
    ___resumeException($exn|0);
    // unreachable;
   }
  }
  $287 = ___cxa_find_matching_catch_2()|0;
  $288 = tempRet0;
  $exn$slot = $287; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $ehselector$slot = $288; //@line 2474 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEED2Ev($__buf); //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $exn = $exn$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sel = $ehselector$slot; //@line 2473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  ___resumeException($exn|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEC2ERKS5_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i8 = 0, $__end_ = 0, $__end_$i = 0, $__end_$i16 = 0, $__end_cap_$i = 0, $__end_cap_$i12 = 0, $__n = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__x$addr = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i9 = 0, $agg$tmp1$i = 0, $agg$tmp2$i = 0, $agg$tmp3$i$i = 0, $cmp = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $ref$tmp = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i5 = 0, $this$addr$i$i6 = 0;
 var $this$addr$i14 = 0, $this$addr$i3$i = 0, $this$addr$i7 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i13 = 0, $this1$i10 = 0, $this1$i15 = 0, $this1$i4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i$i = sp + 84|0;
 $agg$tmp3$i$i = sp + 16|0;
 $__t1$addr$i$i = sp + 72|0;
 $agg$tmp$i$i = sp + 111|0;
 $agg$tmp2$i = sp + 8|0;
 $agg$tmp$i9 = sp + 110|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 109|0;
 $ref$tmp = sp + 108|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $0 = $__x$addr; //@line 1197 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $0;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a$addr$i = $this1$i$i$i;
 $1 = $__a$addr$i; //@line 1547 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $1;
 $this$addr$i7 = $this1;
 $__a$addr$i8 = $ref$tmp;
 $this1$i10 = $this$addr$i7;
 $this$addr$i$i6 = $this1$i10;
 HEAP32[$this1$i10>>2] = 0; //@line 441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i = ((($this1$i10)) + 4|0); //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i>>2] = 0; //@line 442 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i12 = ((($this1$i10)) + 8|0); //@line 443 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i9>>0]|0;
 $this$addr$i3$i = $__end_cap_$i12;
 HEAP32[$__t1$addr$i$i>>2] = 0;
 $this1$i4$i = $this$addr$i3$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $2 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i5 = $this1$i4$i;
 HEAP32[$__t1$addr$i$i$i>>2] = $3;
 $this1$i$i$i13 = $this$addr$i$i$i5;
 $__t$addr$i$i$i$i = $agg$tmp3$i$i;
 $__t$addr$i3$i$i$i = $__t1$addr$i$i$i;
 $4 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i13>>2] = $5; //@line 2258 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__x$addr; //@line 1202 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $6;
 $this1$i15 = $this$addr$i14;
 $__end_$i16 = ((($this1$i15)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = HEAP32[$__end_$i16>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$this1$i15>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $7; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $8; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__n = $sub$ptr$div$i; //@line 1202 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = $__n; //@line 1203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($9>>>0)>(0); //@line 1203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $10 = $__n; //@line 1205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(202,($this1|0),($10|0)); //@line 1205 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $exn$slot = $20; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $21; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__213__vector_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 }
 $13 = $__x$addr; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $14 = HEAP32[$13>>2]|0; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $15 = $__x$addr; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($15)) + 4|0); //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $16 = HEAP32[$__end_>>2]|0; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $17 = $__n; //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_viiii(203,($this1|0),($14|0),($16|0),($17|0)); //@line 1206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $exn$slot = $20; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $21; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__213__vector_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1208 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__a$addr$i = 0, $__end_ = 0, $__end_cap_$i = 0, $__end_cap_$i14 = 0, $__n$addr = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__size$addr$i$i$i = 0, $add$ptr = 0, $call = 0;
 var $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $exception$i$i = 0, $mul$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i10 = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i11 = 0, $this$addr$i$i7 = 0, $this$addr$i12 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i16 = 0, $this1$i$i15 = 0;
 var $this1$i$i8 = 0, $this1$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr = $this;
 $__n$addr = $__n;
 $this1 = $this$addr;
 $0 = $__n$addr; //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $call = (__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this1)|0); //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0>>>0)>($call>>>0); //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1); //@line 930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $1 = $__n$addr; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i;
 $__n$addr$i = $1;
 $2 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i7 = $2;
 $__n$addr$i$i = $3;
 $$addr$i$i = 0;
 $this1$i$i8 = $this$addr$i$i7;
 $4 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i6 = $this1$i$i8;
 $cmp$i$i = ($4>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i$i) {
  $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 } else {
  $5 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i$i = $5<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__size$addr$i$i$i = $mul$i$i;
  $6 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $call$i$i$i = (__Znwj($6)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $__end_ = ((($this1)) + 4|0); //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_>>2] = $call$i$i$i; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$this1>>2] = $call$i$i$i; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = HEAP32[$this1>>2]|0; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $8 = $__n$addr; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $add$ptr = (($7) + ($8<<2)|0); //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i12 = $this1;
  $this1$i13 = $this$addr$i12;
  $__end_cap_$i14 = ((($this1$i13)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i11 = $__end_cap_$i14;
  $this1$i$i15 = $this$addr$i$i11;
  $this$addr$i$i$i10 = $this1$i$i15;
  $this1$i$i$i16 = $this$addr$i$i$i10;
  HEAP32[$this1$i$i$i16>>2] = $add$ptr; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE14__annotate_newEj($this1,0); //@line 933 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 934 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j($this,$__first,$__last,$__n) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_Np$i = 0, $__a = 0, $__a$addr$i = 0, $__annotator = 0, $__begin1$addr$i = 0, $__begin2$addr$i = 0;
 var $__end1$addr$i = 0, $__end_ = 0, $__end_cap_$i = 0, $__first$addr = 0, $__last$addr = 0, $__n$addr = 0, $add$ptr$i = 0, $cmp$i = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $__annotator = sp + 52|0;
 $this$addr = $this;
 $__first$addr = $__first;
 $__last$addr = $__last;
 $__n$addr = $__n;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1021 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = $__n$addr; //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator,$this1,$0); //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = $__a; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__first$addr; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__last$addr; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $1;
 $__begin1$addr$i = $2;
 $__end1$addr$i = $3;
 $__begin2$addr$i = $__end_;
 $4 = $__end1$addr$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $__begin1$addr$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$lhs$cast$i = $4; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$rhs$cast$i = $5; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $_Np$i = $sub$ptr$div$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $_Np$i; //@line 1603 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $cmp$i = ($6|0)>(0); //@line 1603 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($cmp$i)) {
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator); //@line 1024 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1025 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $7 = $__begin2$addr$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = HEAP32[$7>>2]|0; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__begin1$addr$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $10 = $_Np$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $10<<2; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 _memcpy(($8|0),($9|0),($mul$i|0))|0; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = $_Np$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__begin2$addr$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $13 = HEAP32[$12>>2]|0; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $add$ptr$i = (($13) + ($11<<2)|0); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$12>>2] = $add$ptr$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator); //@line 1024 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 1025 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEEC2ESt16initializer_listIS2_E($this,$__il) {
 $this = $this|0;
 $__il = $__il|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin_$i$i = 0, $__end_$i$i = 0, $__end_cap_$i$i = 0, $__size_$i = 0, $__size_$i9 = 0;
 var $__start_$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i2$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $__t1$addr$i$i5$i = 0, $add$ptr$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $sel = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i3$i = 0, $this$addr$i$i4$i = 0, $this$addr$i4 = 0, $this$addr$i6 = 0, $this$addr$i6$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i8$i = 0, $this1$i5 = 0, $this1$i7 = 0, $this1$i7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $__t1$addr$i$i5$i = sp + 60|0;
 $__t1$addr$i$i = sp + 48|0;
 $__t1$addr$i$i$i$i = sp + 32|0;
 $__t1$addr$i$i$i = sp + 20|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i = ((($this1$i$i)) + 4|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_$i$i = ((($this1$i$i)) + 8|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_$i$i>>2] = 0; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_cap_$i$i = ((($this1$i$i)) + 12|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $0 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $1;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__start_$i = ((($this1$i)) + 16|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 HEAP32[$__start_$i>>2] = 0; //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__size_$i = ((($this1$i)) + 20|0); //@line 1098 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i6$i = $__size_$i;
 HEAP32[$__t1$addr$i$i>>2] = 0;
 $this1$i7$i = $this$addr$i6$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $4 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i4$i = $this1$i7$i;
 HEAP32[$__t1$addr$i$i5$i>>2] = $5;
 $this1$i$i8$i = $this$addr$i$i4$i;
 $this$addr$i$i$i3$i = $this1$i$i8$i;
 $__t$addr$i$i$i2$i = $__t1$addr$i$i5$i;
 $6 = $__t$addr$i$i$i2$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $7 = HEAP32[$6>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i8$i>>2] = $7; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i4 = $__il;
 $this1$i5 = $this$addr$i4;
 $8 = HEAP32[$this1$i5>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/initializer_list"
 $this$addr$i6 = $__il;
 $this1$i7 = $this$addr$i6;
 $9 = HEAP32[$this1$i7>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/initializer_list"
 $__size_$i9 = ((($this1$i7)) + 4|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/initializer_list"
 $10 = HEAP32[$__size_$i9>>2]|0; //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/initializer_list"
 $add$ptr$i = (($9) + ($10<<2)|0); //@line 93 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/initializer_list"
 __THREW__ = 0;
 invoke_viiii(204,($this1|0),($8|0),($add$ptr$i|0),(0|0)); //@line 1532 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $exn$slot = $13; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $ehselector$slot = $14; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEED2Ev($this1); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $exn = $exn$slot; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sel = $ehselector$slot; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
}
function __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE8__appendIPKS2_EEvT_S9_PNS_9enable_ifIXsr21__is_forward_iteratorIS9_EE5valueEvE4typeE($this,$__f,$__l,$0) {
 $this = $this|0;
 $__f = $__f|0;
 $__l = $__l|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__back_capacity = 0, $__begin_$i$i$i = 0, $__begin_$i7$i$i = 0, $__end_$i$i$i = 0, $__end_$i6$i$i = 0, $__f$addr = 0, $__first$addr$i = 0, $__first$addr$i$i = 0, $__i = 0, $__l$addr = 0, $__last$addr$i = 0;
 var $__last$addr$i$i = 0, $__n = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__ptr_$i = 0, $__ptr_$i17 = 0, $__ptr_5$i = 0, $__size_$i = 0, $__size_$i$i = 0, $__size_$i22 = 0, $__start_$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__x$addr$i = 0, $add$i = 0, $agg$tmp$i = 0, $agg$tmp$i13 = 0, $agg$tmp1$i = 0;
 var $agg$tmp1$i12 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp4 = 0, $cond$i$i = 0, $inc = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr3$i = 0, $mul$i$i = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i11$i$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0;
 var $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i8$i$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i9$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i10$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i18 = 0, $this$addr$i$i$i25 = 0, $this$addr$i$i19 = 0, $this$addr$i$i26 = 0;
 var $this$addr$i$i3$i = 0, $this$addr$i15 = 0, $this$addr$i20 = 0, $this$addr$i27 = 0, $this$addr$i4$i = 0, $this$addr$i4$i$i = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i24 = 0, $this1$i$i$i30 = 0, $this1$i$i23 = 0, $this1$i$i29 = 0, $this1$i$i6$i = 0, $this1$i10 = 0, $this1$i16 = 0, $this1$i21 = 0;
 var $this1$i28 = 0, $this1$i5$i = 0, $this1$i5$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $agg$tmp1$i12 = sp + 8|0;
 $agg$tmp$i13 = sp + 181|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 180|0;
 $__i = sp + 16|0;
 $this$addr = $this;
 $__f$addr = $__f;
 $__l$addr = $__l;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $__f$addr; //@line 2240 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $2 = $__l$addr; //@line 2240 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__first$addr$i = $1;
 $__last$addr$i = $2;
 $3 = $__first$addr$i; //@line 519 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $4 = $__last$addr$i; //@line 519 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__first$addr$i$i = $3;
 $__last$addr$i$i = $4;
 $5 = $__last$addr$i$i; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $6 = $__first$addr$i$i; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$lhs$cast$i$i = $5; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$rhs$cast$i$i = $6; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $__n = $sub$ptr$div$i$i; //@line 2240 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $__size_$i22 = ((($this1$i21)) + 20|0); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i19 = $__size_$i22;
 $this1$i$i23 = $this$addr$i$i19;
 $this$addr$i$i$i18 = $this1$i$i23;
 $this1$i$i$i24 = $this$addr$i$i$i18;
 $__a = $this1$i$i$i24; //@line 2241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i27 = $this1;
 $this1$i28 = $this$addr$i27;
 $this$addr$i$i26 = $this1$i28;
 $this1$i$i29 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i29;
 $this1$i$i$i30 = $this$addr$i$i$i25;
 $__end_$i$i$i = ((($this1$i$i$i30)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $7 = HEAP32[$__end_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_$i$i$i = ((($this1$i$i$i30)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $8 = HEAP32[$__begin_$i$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i$i$i = $7; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i$i$i = $8; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp$i$i = ($sub$ptr$div$i$i$i|0)==(0); //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp$i$i) {
  $cond$i$i = 0;
 } else {
  $this$addr$i4$i$i = $this1$i$i29;
  $this1$i5$i$i = $this$addr$i4$i$i;
  $__end_$i6$i$i = ((($this1$i5$i$i)) + 8|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $9 = HEAP32[$__end_$i6$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__begin_$i7$i$i = ((($this1$i5$i$i)) + 4|0); //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $10 = HEAP32[$__begin_$i7$i$i>>2]|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$lhs$cast$i8$i$i = $9; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$rhs$cast$i9$i$i = $10; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$sub$i10$i$i = (($sub$ptr$lhs$cast$i8$i$i) - ($sub$ptr$rhs$cast$i9$i$i))|0; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $sub$ptr$div$i11$i$i = (($sub$ptr$sub$i10$i$i|0) / 4)&-1; //@line 87 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $mul$i$i = $sub$ptr$div$i11$i$i<<10; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$i$i = (($mul$i$i) - 1)|0; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cond$i$i = $sub$i$i;
 }
 $__start_$i = ((($this1$i28)) + 16|0); //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $11 = HEAP32[$__start_$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i4$i = $this1$i28;
 $this1$i5$i = $this$addr$i4$i;
 $__size_$i$i = ((($this1$i5$i)) + 20|0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $this$addr$i$i3$i = $__size_$i$i;
 $this1$i$i6$i = $this$addr$i$i3$i;
 $this$addr$i$i$i$i = $this1$i$i6$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $12 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $add$i = (($11) + ($12))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $sub$i = (($cond$i$i) - ($add$i))|0; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $__back_capacity = $sub$i; //@line 2242 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $13 = $__n; //@line 2243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $14 = $__back_capacity; //@line 2243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 $cmp = ($13>>>0)>($14>>>0); //@line 2243 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 if ($cmp) {
  $15 = $__n; //@line 2244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $16 = $__back_capacity; //@line 2244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub = (($15) - ($16))|0; //@line 2244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  __ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE19__add_back_capacityEj($this1,$sub); //@line 2244 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 __ZNSt3__212__deque_baseIP5HNodeNS_9allocatorIS2_EEE3endEv($__i,$this1); //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 while(1) {
  $17 = $__f$addr; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $18 = $__l$addr; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp4 = ($17|0)!=($18|0); //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if (!($cmp4)) {
   break;
  }
  $19 = $__a; //@line 2247 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i15 = $__i;
  $this1$i16 = $this$addr$i15;
  $__ptr_$i17 = ((($this1$i16)) + 4|0); //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $20 = HEAP32[$__ptr_$i17>>2]|0; //@line 307 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__x$addr$i = $20;
  $21 = $__x$addr$i; //@line 436 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $22 = $__f$addr; //@line 2247 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__a$addr$i = $19;
  $__p$addr$i = $21;
  $__args$addr$i = $22;
  $23 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $24 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $25 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i = $25;
  $26 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i12>>0]=HEAP8[$agg$tmp$i13>>0]|0;
  $__a$addr$i$i = $23;
  $__p$addr$i$i = $24;
  $__args$addr$i$i = $26;
  $27 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $28 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $29 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $29;
  $30 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i11 = $27;
  $__p$addr$i$i$i = $28;
  $__args$addr$i$i$i = $30;
  $31 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $32 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $32;
  $33 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $34 = HEAP32[$33>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$31>>2] = $34; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i9 = $__i;
  $this1$i10 = $this$addr$i9;
  $__ptr_$i = ((($this1$i10)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $35 = HEAP32[$__ptr_$i>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr$i = ((($35)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$__ptr_$i>>2] = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $36 = HEAP32[$this1$i10>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $37 = HEAP32[$36>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$lhs$cast$i = $incdec$ptr$i; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$rhs$cast$i = $37; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $cmp$i = ($sub$ptr$div$i|0)==(1024); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  if ($cmp$i) {
   $38 = HEAP32[$this1$i10>>2]|0; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $incdec$ptr3$i = ((($38)) + 4|0); //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$this1$i10>>2] = $incdec$ptr3$i; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $39 = HEAP32[$this1$i10>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $40 = HEAP32[$39>>2]|0; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   $__ptr_5$i = ((($this1$i10)) + 4|0); //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
   HEAP32[$__ptr_5$i>>2] = $40; //@line 315 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  }
  $41 = $__f$addr; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $incdec$ptr = ((($41)) + 4|0); //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $__f$addr = $incdec$ptr; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i = $this1;
  $this1$i = $this$addr$i;
  $__size_$i = ((($this1$i)) + 20|0); //@line 960 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $this$addr$i$i = $__size_$i;
  $this1$i$i = $this$addr$i$i;
  $this$addr$i$i$i = $this1$i$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $42 = HEAP32[$this1$i$i$i>>2]|0; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  $inc = (($42) + 1)|0; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
  HEAP32[$this1$i$i$i>>2] = $inc; //@line 2246 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
 }
 STACKTOP = sp;return; //@line 2248 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/deque"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__a$addr$i = 0, $__end_ = 0, $__end_cap_$i = 0, $__end_cap_$i14 = 0, $__n$addr = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__size$addr$i$i$i = 0, $add$ptr = 0, $call = 0;
 var $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $exception$i$i = 0, $mul$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i10 = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i11 = 0, $this$addr$i$i7 = 0, $this$addr$i12 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i16 = 0, $this1$i$i15 = 0;
 var $this1$i$i8 = 0, $this1$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr = $this;
 $__n$addr = $__n;
 $this1 = $this$addr;
 $0 = $__n$addr; //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $call = (__ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8max_sizeEv($this1)|0); //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0>>>0)>($call>>>0); //@line 929 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1); //@line 930 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $1 = $__n$addr; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i;
 $__n$addr$i = $1;
 $2 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i7 = $2;
 $__n$addr$i$i = $3;
 $$addr$i$i = 0;
 $this1$i$i8 = $this$addr$i$i7;
 $4 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i6 = $this1$i$i8;
 $cmp$i$i = ($4>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i$i) {
  $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 } else {
  $5 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i$i = $5<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__size$addr$i$i$i = $mul$i$i;
  $6 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $call$i$i$i = (__Znwj($6)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $__end_ = ((($this1)) + 4|0); //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_>>2] = $call$i$i$i; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$this1>>2] = $call$i$i$i; //@line 931 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = HEAP32[$this1>>2]|0; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $8 = $__n$addr; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $add$ptr = (($7) + ($8<<2)|0); //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i12 = $this1;
  $this1$i13 = $this$addr$i12;
  $__end_cap_$i14 = ((($this1$i13)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i11 = $__end_cap_$i14;
  $this1$i$i15 = $this$addr$i$i11;
  $this$addr$i$i$i10 = $this1$i$i15;
  $this1$i$i$i16 = $this$addr$i$i$i10;
  HEAP32[$this1$i$i$i16>>2] = $add$ptr; //@line 932 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE14__annotate_newEj($this1,0); //@line 933 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 934 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j($this,$__first,$__last,$__n) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_Np$i = 0, $__a = 0, $__a$addr$i = 0, $__annotator = 0, $__begin1$addr$i = 0, $__begin2$addr$i = 0;
 var $__end1$addr$i = 0, $__end_ = 0, $__end_cap_$i = 0, $__first$addr = 0, $__last$addr = 0, $__n$addr = 0, $add$ptr$i = 0, $cmp$i = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $__annotator = sp + 52|0;
 $this$addr = $this;
 $__first$addr = $__first;
 $__last$addr = $__last;
 $__n$addr = $__n;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1021 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = $__n$addr; //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator,$this1,$0); //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = $__a; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__first$addr; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__last$addr; //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 1023 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $1;
 $__begin1$addr$i = $2;
 $__end1$addr$i = $3;
 $__begin2$addr$i = $__end_;
 $4 = $__end1$addr$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $__begin1$addr$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$lhs$cast$i = $4; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$rhs$cast$i = $5; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $_Np$i = $sub$ptr$div$i; //@line 1602 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $_Np$i; //@line 1603 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $cmp$i = ($6|0)>(0); //@line 1603 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($cmp$i)) {
  __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator); //@line 1024 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1025 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $7 = $__begin2$addr$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = HEAP32[$7>>2]|0; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__begin1$addr$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $10 = $_Np$i; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $10<<2; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 _memcpy(($8|0),($9|0),($mul$i|0))|0; //@line 1605 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = $_Np$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__begin2$addr$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $13 = HEAP32[$12>>2]|0; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $add$ptr$i = (($13) + ($11<<2)|0); //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$12>>2] = $add$ptr$i; //@line 1606 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator); //@line 1024 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 1025 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i9 = 0, $__a$addr$i11 = 0, $__b$addr$i = 0, $__b$addr$i$i = 0, $__end_cap_$i = 0;
 var $__x$addr$i$i$i = 0, $__y$addr$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp$i12 = 0, $agg$tmp1$i = 0, $agg$tmp1$i10 = 0, $cmp$i$i$i = 0, $cond$lvalue$i$i2D = 0, $div = 0, $ref$tmp = 0, $ref$tmp3 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $agg$tmp1$i10 = sp + 8|0;
 $agg$tmp$i12 = sp + 77|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 76|0;
 $ref$tmp = sp + 16|0;
 $ref$tmp3 = sp + 12|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 354 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a$addr$i = $this1$i$i$i;
 $0 = $__a$addr$i; //@line 1540 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i = $0;
 $1 = $__a$addr$i$i; //@line 1678 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i6 = $1;
 HEAP32[$ref$tmp>>2] = 1073741823; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div = (4294967295 / 2)&-1; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$ref$tmp3>>2] = $div; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i11 = $ref$tmp;
 $__b$addr$i = $ref$tmp3;
 $2 = $__a$addr$i11; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $3 = $__b$addr$i; //@line 2580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 ;HEAP8[$agg$tmp1$i10>>0]=HEAP8[$agg$tmp$i12>>0]|0;
 $__a$addr$i$i9 = $2;
 $__b$addr$i$i = $3;
 $4 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $5 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $this$addr$i$i$i8 = $agg$tmp1$i10;
 $__x$addr$i$i$i = $4;
 $__y$addr$i$i$i = $5;
 $6 = $__x$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $7 = HEAP32[$6>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $8 = $__y$addr$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $9 = HEAP32[$8>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i$i = ($7>>>0)<($9>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $10 = $__b$addr$i$i; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $11 = $__a$addr$i$i9; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cond$lvalue$i$i2D = $cmp$i$i$i ? $10 : $11; //@line 2572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $12 = HEAP32[$cond$lvalue$i$i2D>>2]|0; //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return ($12|0); //@line 952 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__current_size$addr = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i31 = 0, $__p$addr$i$i = 0, $__p$addr$i$i13 = 0, $__p$addr$i$i19 = 0, $__p$addr$i$i9 = 0;
 var $add$ptr = 0, $add$ptr6 = 0, $add$ptr8 = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i39 = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i36 = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i37 = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i38 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i23 = 0, $this$addr$i$i$i$i24 = 0, $this$addr$i$i$i25 = 0;
 var $this$addr$i$i26 = 0, $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i27 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i33 = 0, $this1$i$i$i$i32 = 0, $this1$i$i$i30 = 0, $this1$i$i29 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0;
 var $this1$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $__current_size$addr = $__current_size;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $2 = HEAP32[$this1$i11>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i9 = $2;
 $3 = $__p$addr$i$i9; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i27 = $this1;
 $this1$i28 = $this$addr$i27;
 $this$addr$i$i26 = $this1$i28;
 $this1$i$i29 = $this$addr$i$i26;
 $this$addr$i$i$i25 = $this1$i$i29;
 $this1$i$i$i30 = $this$addr$i$i$i25;
 $__end_cap_$i$i$i31 = ((($this1$i$i$i30)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i24 = $__end_cap_$i$i$i31;
 $this1$i$i$i$i32 = $this$addr$i$i$i$i24;
 $this$addr$i$i$i$i$i23 = $this1$i$i$i$i32;
 $this1$i$i$i$i$i33 = $this$addr$i$i$i$i$i23;
 $4 = HEAP32[$this1$i$i$i$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i29>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i36 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i37 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i38 = (($sub$ptr$lhs$cast$i$i36) - ($sub$ptr$rhs$cast$i$i37))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i39 = (($sub$ptr$sub$i$i38|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i39<<2)|0); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $6 = HEAP32[$this1$i21>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i19 = $6;
 $7 = $__p$addr$i$i19; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $this$addr$i$i = $this1$i18;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $8 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $8; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $9; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i$i<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $10 = HEAP32[$this1$i15>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i13 = $10;
 $11 = $__p$addr$i$i13; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $12 = $__current_size$addr; //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr8 = (($11) + ($12<<2)|0); //@line 844 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr8); //@line 843 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 845 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $__beg$addr = 0, $__end$addr = 0, $__new_mid$addr = 0, $__old_mid$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__beg$addr = $__beg;
 $__end$addr = $__end;
 $__old_mid$addr = $__old_mid;
 $__new_mid$addr = $__new_mid;
 STACKTOP = sp;return; //@line 839 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $$addr = 0, $__n$addr = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $__n$addr = $__n;
 STACKTOP = sp;return; //@line 880 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 881 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i27 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0;
 var $__end_$i20 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i$i = 0, $__ms$i = 0, $__new_size$addr$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i28 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i25 = 0;
 var $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i22 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i23 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i24 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i13 = 0;
 var $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i18 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i17 = 0, $this1$i$i16 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 201|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 200|0;
 $__new_size$addr$i = sp + 80|0;
 $ref$tmp$i = sp + 68|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $__end_$i = ((($this1$i11)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i11>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + 1)|0; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i15 = $this$addr$i14;
 $call$i = (__ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8max_sizeEv($this1$i15)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($2>>>0)>($3>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i15); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i13 = $this1$i15;
 $this1$i$i16 = $this$addr$i$i13;
 $this$addr$i$i$i12 = $this1$i$i16;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $this$addr$i$i$i$i = $this1$i$i$i17;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i$i17>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($7>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($6>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $8 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $8; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $9 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $9<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $10 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $11 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $10;
  $__b$addr$i$i$i = $11;
  $12 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $13 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i;
  $__x$addr$i$i$i$i = $12;
  $__y$addr$i$i$i$i = $13;
  $14 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $15 = HEAP32[$14>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $16 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $17 = HEAP32[$16>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($15>>>0)<($17>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $18 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $19 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $18 : $19; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $20 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $20; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $21 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i20 = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__end_$i20>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i22 = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i23 = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i24 = (($sub$ptr$lhs$cast$i22) - ($sub$ptr$rhs$cast$i23))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i25 = (($sub$ptr$sub$i24|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__a; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEEC2EjjS5_($__v,$21,$sub$ptr$div$i25,$24); //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = $__a; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($__v)) + 8|0); //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = HEAP32[$__end_>>2]|0; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i = $26;
 $27 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $28 = $__x$addr; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__t$addr$i = $28;
 $29 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $25;
 $__p$addr$i28 = $27;
 $__args$addr$i = $29;
 $30 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $31 = $__p$addr$i28; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $32 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $32;
 $33 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i27 = $30;
 $__p$addr$i$i = $31;
 $__args$addr$i$i = $33;
 $34 = $__a$addr$i$i27; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $35 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $36 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $36;
 $37 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i26 = $34;
 $__p$addr$i$i$i = $35;
 $__args$addr$i$i$i = $37;
 $38 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $39 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $39;
 $40 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$38>>2] = $41; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_7 = ((($__v)) + 8|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $42 = HEAP32[$__end_7>>2]|0; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $incdec$ptr = ((($42)) + 4|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_7>>2] = $incdec$ptr; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(205,($this1|0),($__v|0)); //@line 1577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $45 = ___cxa_find_matching_catch_2()|0;
  $46 = tempRet0;
  $exn$slot = $45; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $46; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEEC2EjjS5_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__a$addr = 0, $__a$addr$i = 0, $__begin_ = 0, $__cap$addr = 0, $__end_ = 0, $__end_cap_ = 0, $__end_cap_$i = 0, $__end_cap_$i19 = 0, $__n$addr$i = 0, $__n$addr$i$i = 0, $__second_$i$i = 0, $__second_$i$i$i = 0, $__size$addr$i$i$i = 0, $__start$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i$i = 0, $__t1$addr$i = 0;
 var $__t1$addr$i$i = 0, $__t2$addr$i = 0, $__t2$addr$i$i = 0, $add$ptr = 0, $add$ptr5 = 0, $call$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $cond = 0, $exception$i$i = 0, $mul$i$i = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i11 = 0, $this$addr$i$i$i15 = 0, $this$addr$i$i12 = 0, $this$addr$i$i16 = 0;
 var $this$addr$i$i7 = 0, $this$addr$i17 = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i21 = 0, $this1$i$i10 = 0, $this1$i$i13 = 0, $this1$i$i20 = 0, $this1$i18 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $__t1$addr$i$i = sp + 36|0;
 $__t1$addr$i = sp + 20|0;
 $this$addr = $this;
 $__cap$addr = $__cap;
 $__start$addr = $__start;
 $__a$addr = $__a;
 $this1 = $this$addr;
 $__end_cap_ = ((($this1)) + 12|0); //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = $__a$addr; //@line 309 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i = $__end_cap_;
 HEAP32[$__t1$addr$i>>2] = 0;
 $__t2$addr$i = $0;
 $this1$i = $this$addr$i;
 $__t$addr$i$i = $__t1$addr$i;
 $1 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = HEAP32[$1>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $3 = $__t2$addr$i; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i = $3;
 $4 = $__t$addr$i3$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i = $this1$i;
 HEAP32[$__t1$addr$i$i>>2] = $2;
 $__t2$addr$i$i = $4;
 $this1$i$i = $this$addr$i$i;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $5 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = HEAP32[$5>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i>>2] = $6; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i = ((($this1$i$i)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = $__t2$addr$i$i; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i = $7;
 $8 = $__t$addr$i3$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__second_$i$i>>2] = $8; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $9 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $cmp = ($9|0)!=(0); //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 do {
  if ($cmp) {
   $this$addr$i17 = $this1;
   $this1$i18 = $this$addr$i17;
   $__end_cap_$i19 = ((($this1$i18)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $this$addr$i$i16 = $__end_cap_$i19;
   $this1$i$i20 = $this$addr$i$i16;
   $this$addr$i$i$i15 = $this1$i$i20;
   $this1$i$i$i21 = $this$addr$i$i$i15;
   $__second_$i$i$i = ((($this1$i$i$i21)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $10 = $__cap$addr; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
   $__a$addr$i = $ref$i$i$i;
   $__n$addr$i = $10;
   $11 = $__a$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $12 = $__n$addr$i; //@line 1488 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i12 = $11;
   $__n$addr$i$i = $12;
   $$addr$i$i = 0;
   $this1$i$i13 = $this$addr$i$i12;
   $13 = $__n$addr$i$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $this$addr$i$i$i11 = $this1$i$i13;
   $cmp$i$i = ($13>>>0)>(1073741823); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   if ($cmp$i$i) {
    $exception$i$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    __ZNSt9bad_allocC2Ev($exception$i$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    ___cxa_throw(($exception$i$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   } else {
    $14 = $__n$addr$i$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $mul$i$i = $14<<2; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
    $__size$addr$i$i$i = $mul$i$i;
    $15 = $__size$addr$i$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $call$i$i$i = (__Znwj($15)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
    $cond = $call$i$i$i;
    break;
   }
  } else {
   $cond = 0;
  }
 } while(0);
 HEAP32[$this1>>2] = $cond; //@line 311 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $16 = HEAP32[$this1>>2]|0; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $17 = $__start$addr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr = (($16) + ($17<<2)|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__end_ = ((($this1)) + 8|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__end_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__begin_ = ((($this1)) + 4|0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 HEAP32[$__begin_>>2] = $add$ptr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $18 = HEAP32[$this1>>2]|0; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $19 = $__cap$addr; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $add$ptr5 = (($18) + ($19<<2)|0); //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i = $this1$i$i10;
 $this1$i$i$i = $this$addr$i$i$i;
 HEAP32[$this1$i$i$i>>2] = $add$ptr5; //@line 313 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 STACKTOP = sp;return; //@line 314 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_Np$i = 0, $__a$addr$i = 0, $__begin1$addr$i = 0, $__begin_2 = 0, $__begin_4 = 0, $__begin_9 = 0, $__end1$addr$i = 0, $__end2$addr$i = 0, $__end_ = 0;
 var $__end_$i = 0, $__end_5 = 0, $__end_6 = 0, $__end_cap_$i = 0, $__end_cap_$i23 = 0, $__end_cap_$i30 = 0, $__t$addr$i$i = 0, $__t$addr$i$i36 = 0, $__t$addr$i$i42 = 0, $__t$addr$i3$i = 0, $__t$addr$i3$i35 = 0, $__t$addr$i3$i41 = 0, $__t$addr$i4$i = 0, $__t$addr$i4$i34 = 0, $__t$addr$i4$i40 = 0, $__t$i = 0, $__t$i39 = 0, $__t$i45 = 0, $__v$addr = 0, $__x$addr$i = 0;
 var $__x$addr$i37 = 0, $__x$addr$i43 = 0, $__y$addr$i = 0, $__y$addr$i38 = 0, $__y$addr$i44 = 0, $add$ptr$i = 0, $cmp$i = 0, $idx$neg$i = 0, $mul$i = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i18 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i15 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i16 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i17 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0;
 var $this$addr$i$i$i = 0, $this$addr$i$i$i19 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i20 = 0, $this$addr$i$i27 = 0, $this$addr$i11 = 0, $this$addr$i13 = 0, $this$addr$i21 = 0, $this$addr$i28 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i25 = 0, $this1$i$i$i32 = 0, $this1$i$i24 = 0, $this1$i$i31 = 0, $this1$i14 = 0, $this1$i22 = 0, $this1$i29 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $__t$i45 = sp + 120|0;
 $__t$i39 = sp + 96|0;
 $__t$i = sp + 48|0;
 $this$addr = $this;
 $__v$addr = $__v;
 $this1 = $this$addr;
 __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE17__annotate_deleteEv($this1); //@line 891 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $0 = HEAP32[$this1>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_>>2]|0; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__v$addr; //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_2 = ((($2)) + 4|0); //@line 892 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i;
 $__begin1$addr$i = $0;
 $__end1$addr$i = $1;
 $__end2$addr$i = $__begin_2;
 $3 = $__end1$addr$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__begin1$addr$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$lhs$cast$i = $3; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$rhs$cast$i = $4; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $_Np$i = $sub$ptr$div$i; //@line 1635 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $5 = $_Np$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__end2$addr$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $7 = HEAP32[$6>>2]|0; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $idx$neg$i = (0 - ($5))|0; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $add$ptr$i = (($7) + ($idx$neg$i<<2)|0); //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$6>>2] = $add$ptr$i; //@line 1636 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = $_Np$i; //@line 1637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $cmp$i = ($8|0)>(0); //@line 1637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $9 = $__end2$addr$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = HEAP32[$9>>2]|0; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $11 = $__begin1$addr$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $12 = $_Np$i; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $mul$i = $12<<2; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  _memcpy(($10|0),($11|0),($mul$i|0))|0; //@line 1638 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $13 = $__v$addr; //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_4 = ((($13)) + 4|0); //@line 893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i43 = $this1;
 $__y$addr$i44 = $__begin_4;
 $14 = $__x$addr$i43; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i42 = $14;
 $15 = $__t$addr$i$i42; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $16 = HEAP32[$15>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i45>>2] = $16; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $17 = $__y$addr$i44; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i40 = $17;
 $18 = $__t$addr$i4$i40; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $19 = HEAP32[$18>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $20 = $__x$addr$i43; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$20>>2] = $19; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i41 = $__t$i45;
 $21 = $__t$addr$i3$i41; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $22 = HEAP32[$21>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $23 = $__y$addr$i44; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$23>>2] = $22; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__end_5 = ((($this1)) + 4|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__v$addr; //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_6 = ((($24)) + 8|0); //@line 894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__x$addr$i37 = $__end_5;
 $__y$addr$i38 = $__end_6;
 $25 = $__x$addr$i37; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i36 = $25;
 $26 = $__t$addr$i$i36; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $27 = HEAP32[$26>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i39>>2] = $27; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $28 = $__y$addr$i38; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i34 = $28;
 $29 = $__t$addr$i4$i34; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $30 = HEAP32[$29>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $31 = $__x$addr$i37; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$31>>2] = $30; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i35 = $__t$i39;
 $32 = $__t$addr$i3$i35; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $33 = HEAP32[$32>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $34 = $__y$addr$i38; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$34>>2] = $33; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i28 = $this1;
 $this1$i29 = $this$addr$i28;
 $__end_cap_$i30 = ((($this1$i29)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i27 = $__end_cap_$i30;
 $this1$i$i31 = $this$addr$i$i27;
 $this$addr$i$i$i26 = $this1$i$i31;
 $this1$i$i$i32 = $this$addr$i$i$i26;
 $35 = $__v$addr; //@line 895 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i21 = $35;
 $this1$i22 = $this$addr$i21;
 $__end_cap_$i23 = ((($this1$i22)) + 12|0); //@line 56 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i20 = $__end_cap_$i23;
 $this1$i$i24 = $this$addr$i$i20;
 $this$addr$i$i$i19 = $this1$i$i24;
 $this1$i$i$i25 = $this$addr$i$i$i19;
 $__x$addr$i = $this1$i$i$i32;
 $__y$addr$i = $this1$i$i$i25;
 $36 = $__x$addr$i; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $36;
 $37 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $38 = HEAP32[$37>>2]|0; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$__t$i>>2] = $38; //@line 4453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $39 = $__y$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i4$i = $39;
 $40 = $__t$addr$i4$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $42 = $__x$addr$i; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$42>>2] = $41; //@line 4454 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i3$i = $__t$i;
 $43 = $__t$addr$i3$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $44 = HEAP32[$43>>2]|0; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $45 = $__y$addr$i; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$45>>2] = $44; //@line 4455 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $46 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__begin_9 = ((($46)) + 4|0); //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $47 = HEAP32[$__begin_9>>2]|0; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $48 = $__v$addr; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$48>>2] = $47; //@line 896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $__end_$i = ((($this1$i14)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $49 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $50 = HEAP32[$this1$i14>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i15 = $49; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i16 = $50; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i17 = (($sub$ptr$lhs$cast$i15) - ($sub$ptr$rhs$cast$i16))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i18 = (($sub$ptr$sub$i17|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE14__annotate_newEj($this1,$sub$ptr$div$i18); //@line 897 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i11 = $this1;
 STACKTOP = sp;return; //@line 899 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__begin_$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__n$addr$i = 0, $__new_last$addr$i$i = 0, $__new_last$addr$i$i$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $__second_$i$i$i = 0;
 var $__second_$i$i$i$i$i$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $agg$tmp2$i$i = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i$i = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i12 = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i4 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i10 = 0, $this$addr$i$i14 = 0, $this$addr$i$i5 = 0, $this$addr$i15 = 0, $this$addr$i6 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i19 = 0, $this1$i$i$i18 = 0, $this1$i$i$i9 = 0, $this1$i$i17 = 0;
 var $this1$i$i8 = 0, $this1$i16 = 0, $this1$i7 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $agg$tmp1$i$i$i$i = sp + 8|0;
 $agg$tmp$i$i$i$i = sp + 133|0;
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 132|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__begin_$i = ((($this1$i)) + 4|0); //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $0 = HEAP32[$__begin_$i>>2]|0; //@line 86 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $this1$i;
 $__new_last$addr$i$i = $0;
 $this1$i$i = $this$addr$i$i;
 $1 = $__new_last$addr$i$i; //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $__new_last$addr$i$i$i = $1;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $2 = $__new_last$addr$i$i$i; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $3 = HEAP32[$__end_$i$i$i>>2]|0; //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp$i$i$i = ($2|0)!=($3|0); //@line 295 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__second_$i$i$i$i$i$i = ((($this1$i$i$i$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $ref$i$i$i$i$i$i = HEAP32[$__second_$i$i$i$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_2$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $4 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr$i$i$i = ((($4)) + -4|0); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $5 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $5;
  $6 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $6;
  $__p$addr$i$i$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $8;
  $__p$addr$i$i$i$i$i$i = $9;
 }
 $10 = HEAP32[$this1>>2]|0; //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $tobool = ($10|0)!=(0|0); //@line 342 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 if (!($tobool)) {
  STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 }
 $this$addr$i6 = $this1;
 $this1$i7 = $this$addr$i6;
 $__end_cap_$i = ((($this1$i7)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i5 = $__end_cap_$i;
 $this1$i$i8 = $this$addr$i$i5;
 $this$addr$i$i$i4 = $this1$i$i8;
 $this1$i$i$i9 = $this$addr$i$i$i4;
 $__second_$i$i$i = ((($this1$i$i$i9)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $11 = HEAP32[$this1>>2]|0; //@line 343 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i15 = $this1;
 $this1$i16 = $this$addr$i15;
 $this$addr$i$i14 = $this1$i16;
 $this1$i$i17 = $this$addr$i$i14;
 $__end_cap_$i$i = ((($this1$i$i17)) + 12|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i$i13 = $__end_cap_$i$i;
 $this1$i$i$i18 = $this$addr$i$i$i13;
 $this$addr$i$i$i$i12 = $this1$i$i$i18;
 $this1$i$i$i$i19 = $this$addr$i$i$i$i12;
 $12 = HEAP32[$this1$i$i$i$i19>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $13 = HEAP32[$this1$i16>>2]|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$lhs$cast$i = $12; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$rhs$cast$i = $13; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 89 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $__a$addr$i = $ref$i$i$i;
 $__p$addr$i = $11;
 $__n$addr$i = $sub$ptr$div$i;
 $14 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $15 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $16 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i10 = $14;
 $__p$addr$i$i = $15;
 $$addr$i$i = $16;
 $17 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $17;
 $18 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($18); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i35 = 0, $__p$addr$i$i = 0, $__p$addr$i$i10 = 0, $__p$addr$i$i16 = 0;
 var $__p$addr$i$i23 = 0, $add$ptr = 0, $add$ptr6 = 0, $add$ptr9 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i43 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i40 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i41 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i42 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0;
 var $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i27 = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i30 = 0, $this$addr$i11 = 0, $this$addr$i14 = 0, $this$addr$i17 = 0, $this$addr$i20 = 0, $this$addr$i24 = 0, $this$addr$i31 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i37 = 0, $this1$i$i$i$i36 = 0;
 var $this1$i$i$i34 = 0, $this1$i$i33 = 0, $this1$i12 = 0, $this1$i15 = 0, $this1$i18 = 0, $this1$i21 = 0, $this1$i25 = 0, $this1$i32 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i11 = $this1;
 $this1$i12 = $this$addr$i11;
 $2 = HEAP32[$this1$i12>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i10 = $2;
 $3 = $__p$addr$i$i10; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i31 = $this1;
 $this1$i32 = $this$addr$i31;
 $this$addr$i$i30 = $this1$i32;
 $this1$i$i33 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i33;
 $this1$i$i$i34 = $this$addr$i$i$i29;
 $__end_cap_$i$i$i35 = ((($this1$i$i$i34)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i28 = $__end_cap_$i$i$i35;
 $this1$i$i$i$i36 = $this$addr$i$i$i$i28;
 $this$addr$i$i$i$i$i27 = $this1$i$i$i$i36;
 $this1$i$i$i$i$i37 = $this$addr$i$i$i$i$i27;
 $4 = HEAP32[$this1$i$i$i$i$i37>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i33>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i40 = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i41 = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i42 = (($sub$ptr$lhs$cast$i$i40) - ($sub$ptr$rhs$cast$i$i41))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i43 = (($sub$ptr$sub$i$i42|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i43<<2)|0); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $6 = HEAP32[$this1$i25>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i23 = $6;
 $7 = $__p$addr$i$i23; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i20 = $this1;
 $this1$i21 = $this$addr$i20;
 $__end_$i = ((($this1$i21)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = HEAP32[$this1$i21>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $8; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $9; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr6 = (($7) + ($sub$ptr$div$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $10 = HEAP32[$this1$i18>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i16 = $10;
 $11 = $__p$addr$i$i16; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i14 = $this1;
 $this1$i15 = $this$addr$i14;
 $this$addr$i$i = $this1$i15;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $12 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $12; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $13; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr9 = (($11) + ($sub$ptr$div$i$i<<2)|0); //@line 849 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr6,$add$ptr9); //@line 848 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 850 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE13__move_assignERS5_NS_17integral_constantIbLb1EEE($this,$__c,$0) {
 $this = $this|0;
 $__c = $__c|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__c$addr = 0, $__c$addr$i = 0, $__c$addr$i$i = 0, $__end_ = 0, $__end_3 = 0, $__end_6 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i = 0;
 var $__end_cap_$i18 = 0, $__end_cap_$i26 = 0, $__end_cap_$i8$i$i = 0, $__t$addr$i$i$i = 0, $agg$tmp$i = 0, $agg$tmp2$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i14 = 0, $this$addr$i$i$i22 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i8 = 0, $this$addr$i$i15 = 0, $this$addr$i$i23 = 0, $this$addr$i$i5$i$i = 0, $this$addr$i$i9 = 0;
 var $this$addr$i10 = 0, $this$addr$i16 = 0, $this$addr$i24 = 0, $this$addr$i6$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i13 = 0, $this1$i$i$i20 = 0, $this1$i$i$i28 = 0, $this1$i$i12 = 0, $this1$i$i19 = 0, $this1$i$i27 = 0, $this1$i$i9$i$i = 0, $this1$i11 = 0, $this1$i17 = 0, $this1$i25 = 0;
 var $this1$i7$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 92|0;
 $this$addr = $this;
 $__c$addr = $__c;
 $this1 = $this$addr;
 __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE10deallocateEv($this1); //@line 1335 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = $__c$addr; //@line 1336 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $__c$addr$i = $1;
 $this1$i = $this$addr$i;
 $2 = $__c$addr$i; //@line 387 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i$i = $this1$i;
 $__c$addr$i$i = $2;
 $this1$i$i = $this$addr$i$i;
 $3 = $__c$addr$i$i; //@line 410 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i = $3;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $__t$addr$i$i$i = $this1$i$i$i$i$i;
 $this$addr$i6$i$i = $this1$i$i;
 $this1$i7$i$i = $this$addr$i6$i$i;
 $__end_cap_$i8$i$i = ((($this1$i7$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i5$i$i = $__end_cap_$i8$i$i;
 $this1$i$i9$i$i = $this$addr$i$i5$i$i;
 $this$addr$i$i$i4$i$i = $this1$i$i9$i$i;
 $4 = $__c$addr; //@line 1337 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$4>>2]|0; //@line 1337 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$this1>>2] = $5; //@line 1337 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__c$addr; //@line 1338 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($6)) + 4|0); //@line 1338 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = HEAP32[$__end_>>2]|0; //@line 1338 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_3 = ((($this1)) + 4|0); //@line 1338 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_3>>2] = $7; //@line 1338 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = $__c$addr; //@line 1339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i24 = $8;
 $this1$i25 = $this$addr$i24;
 $__end_cap_$i26 = ((($this1$i25)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i23 = $__end_cap_$i26;
 $this1$i$i27 = $this$addr$i$i23;
 $this$addr$i$i$i22 = $this1$i$i27;
 $this1$i$i$i28 = $this$addr$i$i$i22;
 $9 = HEAP32[$this1$i$i$i28>>2]|0; //@line 1339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i16 = $this1;
 $this1$i17 = $this$addr$i16;
 $__end_cap_$i18 = ((($this1$i17)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i15 = $__end_cap_$i18;
 $this1$i$i19 = $this$addr$i$i15;
 $this$addr$i$i$i14 = $this1$i$i19;
 $this1$i$i$i20 = $this$addr$i$i$i14;
 HEAP32[$this1$i$i$i20>>2] = $9; //@line 1339 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $10 = $__c$addr; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $10;
 $this1$i11 = $this$addr$i10;
 $__end_cap_$i = ((($this1$i11)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i9 = $__end_cap_$i;
 $this1$i$i12 = $this$addr$i$i9;
 $this$addr$i$i$i8 = $this1$i$i12;
 $this1$i$i$i13 = $this$addr$i$i$i8;
 HEAP32[$this1$i$i$i13>>2] = 0; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = $__c$addr; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_6 = ((($11)) + 4|0); //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_6>>2] = 0; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = $__c$addr; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$12>>2] = 0; //@line 1340 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 1344 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE10deallocateEv($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__end_ = 0, $__end_$i$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__end_cap_$i31 = 0, $__n$addr$i = 0, $__new_last$addr$i$i$i = 0, $__old_size$i = 0;
 var $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $cmp = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i26 = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i23 = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i24 = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i25 = 0;
 var $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i$i12 = 0, $this$addr$i$i$i$i13 = 0, $this$addr$i$i$i14 = 0, $this$addr$i$i$i27 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i15 = 0, $this$addr$i$i28 = 0, $this$addr$i$i34 = 0, $this$addr$i$i7 = 0, $this$addr$i16 = 0, $this$addr$i29 = 0, $this$addr$i3$i = 0;
 var $this$addr$i6$i = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i$i21 = 0, $this1$i$i$i$i20 = 0, $this1$i$i$i11 = 0, $this1$i$i$i19 = 0, $this1$i$i$i33 = 0, $this1$i$i10 = 0, $this1$i$i18 = 0, $this1$i$i32 = 0, $this1$i17 = 0, $this1$i30 = 0, $this1$i4$i = 0;
 var $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $agg$tmp1$i$i$i$i = sp;
 $agg$tmp$i$i$i$i = sp + 148|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 940 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=(0|0); //@line 940 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 946 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$this1$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__old_size$i = $sub$ptr$div$i$i; //@line 738 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i = $this1$i;
 $this1$i4$i = $this$addr$i3$i;
 $3 = HEAP32[$this1$i4$i>>2]|0; //@line 369 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i = $this1$i4$i;
 $__new_last$addr$i$i$i = $3;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $4 = $__new_last$addr$i$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $5 = HEAP32[$__end_$i$i$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i$i = ($4|0)!=($5|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__end_2$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i$i = ((($6)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $7 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $this1$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $8;
  $__p$addr$i$i$i$i$i = $9;
  $10 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $11 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $10;
  $__p$addr$i$i$i$i$i$i = $11;
 }
 $12 = $__old_size$i; //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(206,($this1$i|0),($12|0)); //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $15 = ___cxa_find_matching_catch_3(0|0)|0;
  $16 = tempRet0;
  ___clang_call_terminate($15); //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  // unreachable; //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i6$i = $this1$i;
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i6 = $this1$i$i10;
 $this1$i$i$i11 = $this$addr$i$i$i6;
 $17 = HEAP32[$this1>>2]|0; //@line 943 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i16 = $this1;
 $this1$i17 = $this$addr$i16;
 $this$addr$i$i15 = $this1$i17;
 $this1$i$i18 = $this$addr$i$i15;
 $this$addr$i$i$i14 = $this1$i$i18;
 $this1$i$i$i19 = $this$addr$i$i$i14;
 $__end_cap_$i$i$i = ((($this1$i$i$i19)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i13 = $__end_cap_$i$i$i;
 $this1$i$i$i$i20 = $this$addr$i$i$i$i13;
 $this$addr$i$i$i$i$i12 = $this1$i$i$i$i20;
 $this1$i$i$i$i$i21 = $this$addr$i$i$i$i$i12;
 $18 = HEAP32[$this1$i$i$i$i$i21>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $19 = HEAP32[$this1$i$i18>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i23 = $18; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i24 = $19; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i25 = (($sub$ptr$lhs$cast$i$i23) - ($sub$ptr$rhs$cast$i$i24))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i26 = (($sub$ptr$sub$i$i25|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i11;
 $__p$addr$i = $17;
 $__n$addr$i = $sub$ptr$div$i$i26;
 $20 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $21 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $22 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i34 = $20;
 $__p$addr$i$i = $21;
 $$addr$i$i = $22;
 $23 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $23;
 $24 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($24); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i29 = $this1;
 $this1$i30 = $this$addr$i29;
 $__end_cap_$i31 = ((($this1$i30)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i28 = $__end_cap_$i31;
 $this1$i$i32 = $this$addr$i$i28;
 $this$addr$i$i$i27 = $this1$i$i32;
 $this1$i$i$i33 = $this$addr$i$i$i27;
 HEAP32[$this1$i$i$i33>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$this1>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 946 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_cap_$i$i$i = 0, $__old_size$addr = 0, $__p$addr$i$i = 0, $__p$addr$i$i16 = 0, $__p$addr$i$i20 = 0, $__p$addr$i$i9 = 0;
 var $add$ptr = 0, $add$ptr5 = 0, $add$ptr8 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i10 = 0, $this$addr$i13 = 0, $this$addr$i17 = 0;
 var $this$addr$i21 = 0, $this$addr$i24 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i11 = 0, $this1$i14 = 0, $this1$i18 = 0, $this1$i22 = 0, $this1$i25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr = $this;
 $__old_size$addr = $__old_size;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $2 = HEAP32[$this1$i11>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i9 = $2;
 $3 = $__p$addr$i$i9; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $this$addr$i$i = $this1$i25;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i<<2)|0); //@line 858 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i21 = $this1;
 $this1$i22 = $this$addr$i21;
 $6 = HEAP32[$this1$i22>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i20 = $6;
 $7 = $__p$addr$i$i20; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = $__old_size$addr; //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr5 = (($7) + ($8<<2)|0); //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $9 = HEAP32[$this1$i18>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i16 = $9;
 $10 = $__p$addr$i$i16; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $__end_$i = ((($this1$i14)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i14>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $11; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $12; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr8 = (($10) + ($sub$ptr$div$i<<2)|0); //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr5,$add$ptr8); //@line 858 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 860 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i27 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0;
 var $__end_$i20 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i$i = 0, $__ms$i = 0, $__new_size$addr$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i28 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i25 = 0;
 var $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i22 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i23 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i24 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i13 = 0;
 var $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i18 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i17 = 0, $this1$i$i16 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 201|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 200|0;
 $__new_size$addr$i = sp + 80|0;
 $ref$tmp$i = sp + 68|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $__end_$i = ((($this1$i11)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i11>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + 1)|0; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i15 = $this$addr$i14;
 $call$i = (__ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8max_sizeEv($this1$i15)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($2>>>0)>($3>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i15); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i13 = $this1$i15;
 $this1$i$i16 = $this$addr$i$i13;
 $this$addr$i$i$i12 = $this1$i$i16;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $this$addr$i$i$i$i = $this1$i$i$i17;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i$i17>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($7>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($6>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $8 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $8; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $9 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $9<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $10 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $11 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $10;
  $__b$addr$i$i$i = $11;
  $12 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $13 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i;
  $__x$addr$i$i$i$i = $12;
  $__y$addr$i$i$i$i = $13;
  $14 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $15 = HEAP32[$14>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $16 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $17 = HEAP32[$16>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($15>>>0)<($17>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $18 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $19 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $18 : $19; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $20 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $20; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $21 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i20 = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__end_$i20>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i22 = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i23 = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i24 = (($sub$ptr$lhs$cast$i22) - ($sub$ptr$rhs$cast$i23))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i25 = (($sub$ptr$sub$i24|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__a; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEEC2EjjS5_($__v,$21,$sub$ptr$div$i25,$24); //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = $__a; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($__v)) + 8|0); //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = HEAP32[$__end_>>2]|0; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i = $26;
 $27 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $28 = $__x$addr; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__t$addr$i = $28;
 $29 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $25;
 $__p$addr$i28 = $27;
 $__args$addr$i = $29;
 $30 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $31 = $__p$addr$i28; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $32 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $32;
 $33 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i27 = $30;
 $__p$addr$i$i = $31;
 $__args$addr$i$i = $33;
 $34 = $__a$addr$i$i27; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $35 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $36 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $36;
 $37 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i26 = $34;
 $__p$addr$i$i$i = $35;
 $__args$addr$i$i$i = $37;
 $38 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $39 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $39;
 $40 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$38>>2] = $41; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_7 = ((($__v)) + 8|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $42 = HEAP32[$__end_7>>2]|0; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $incdec$ptr = ((($42)) + 4|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_7>>2] = $incdec$ptr; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(205,($this1|0),($__v|0)); //@line 1577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $45 = ___cxa_find_matching_catch_2()|0;
  $46 = tempRet0;
  $exn$slot = $45; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $46; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__214__split_bufferIP6HBasisRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__28functionIFdP5HNodeEE9__as_baseEPv($p) {
 $p = $p|0;
 var $0 = 0, $p$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $p$addr = $p;
 $0 = $p$addr; //@line 1568 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return ($0|0); //@line 1568 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EED2Ev($this) {
 $this = $this|0;
 var $__f_ = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 HEAP32[$this1>>2] = (1112); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 8|0); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EEED2Ev($__f_); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i109 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i23 = 0, $__a$addr$i99 = 0, $__d$addr$i = 0, $__f$addr$i = 0;
 var $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0;
 var $__s_$i$i$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i = 0, $__second_$i$i$i$i48 = 0, $__size$addr$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i25$i = 0, $__t$addr$i$i$i$i28$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i35$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i21$i = 0, $__t$addr$i$i41$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0;
 var $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i27$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i43$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i52$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i30$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i$i$i = 0, $agg$tmp$i$i37$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i38$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i33$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i39$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i32$i = 0;
 var $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i40$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i31$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i34$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $ehselector$slot = 0, $ehselector$slot$i = 0, $exception$i = 0, $exn = 0;
 var $exn$i = 0, $exn$slot = 0, $exn$slot$i = 0, $mul$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i12$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i42$i = 0, $sel = 0, $sel$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i26$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i29$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i20$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i36$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0, $this$addr$i$i64 = 0;
 var $this$addr$i$i7$i$i$i = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i9 = 0, $this$addr$i$i97 = 0, $this$addr$i10 = 0, $this$addr$i108 = 0, $this$addr$i12$i = 0, $this$addr$i13 = 0, $this$addr$i14$i$i = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i = 0, $this$addr$i6$i$i26 = 0;
 var $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0, $this$addr$i9$i$i = 0, $this$addr$i9$i$i18 = 0, $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i23$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i47$i = 0, $this1$i$i$i105 = 0, $this1$i$i$i37 = 0;
 var $this1$i$i$i46$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i10$i$i$i = 0, $this1$i$i103 = 0, $this1$i$i11$i$i = 0, $this1$i$i11$i$i42 = 0, $this1$i$i12 = 0, $this1$i$i16$i$i = 0, $this1$i$i16$i$i47 = 0, $this1$i$i22$i = 0, $this1$i$i35 = 0, $this1$i$i44$i = 0, $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i10$i$i = 0;
 var $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i11 = 0, $this1$i15$i$i = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0, $this1$i84 = 0, $tobool$i$i = 0, $tobool$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(688|0);
 $agg$tmp48$i$i31$i = sp + 136|0;
 $agg$tmp37$i$i32$i = sp + 128|0;
 $agg$tmp26$i$i33$i = sp + 120|0;
 $agg$tmp5$i$i34$i = sp + 112|0;
 $agg$tmp$i$i37$i = sp + 685|0;
 $agg$tmp2$i$i38$i = sp + 684|0;
 $agg$tmp3$i$i39$i = sp + 683|0;
 $agg$tmp4$i$i40$i = sp + 682|0;
 $retval$i42$i = sp + 616|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 681|0;
 $agg$tmp2$i$i$i = sp + 680|0;
 $agg$tmp3$i$i$i = sp + 679|0;
 $agg$tmp4$i$i$i = sp + 678|0;
 $retval$i$i = sp + 572|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 677|0;
 $agg$tmp2$i$i = sp + 524|0;
 $agg$tmp3$i$i96 = sp + 520|0;
 $agg$tmp5$i$i = sp + 676|0;
 $agg$tmp6$i$i = sp + 675|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 674|0;
 $agg$tmp2$i101 = sp + 496|0;
 $agg$tmp5$i = sp + 492|0;
 $__t1$addr$i$i$i = sp + 420|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 408|0;
 $agg$tmp$i$i = sp + 400|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 376|0;
 $__a = sp + 673|0;
 $__hold = sp + 160|0;
 $ref$tmp = sp + 152|0;
 $ref$tmp6 = sp + 672|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(134217727); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $1<<5; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 8|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i108 = $ref$tmp6;
 $$addr$i109 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (1112); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 8|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i90 = $15;
 $16 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $16;
 $17 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i22$i = $this$addr$i$i20$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i22$i;
 $__u$addr$i$i$i$i = $18;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $19 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $19;
 $20 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $20;
 $this1$i$i$i$i23$i = $this$addr$i$i$i$i19$i;
 $21 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $21;
 $22 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i23$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i52$i = $24;
 $25 = $__t$addr$i52$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i43$i = $25;
 $26 = $__t$addr$i43$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i41$i = $26;
 $27 = $__t$addr$i$i41$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i36$i = $retval$i42$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i44$i = $this$addr$i$i36$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i35$i = $28;
 $29 = $__t$addr$i$i$i35$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i31$i>>0]=HEAP8[$agg$tmp4$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i32$i>>0]=HEAP8[$agg$tmp3$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i33$i>>0]=HEAP8[$agg$tmp2$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i34$i>>0]=HEAP8[$agg$tmp$i$i37$i>>0]|0;
 $this$addr$i$i$i29$i = $this1$i$i44$i;
 $__u$addr$i$i$i30$i = $29;
 $this1$i$i$i46$i = $this$addr$i$i$i29$i;
 $30 = $__u$addr$i$i$i30$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i28$i = $30;
 $31 = $__t$addr$i$i$i$i28$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i26$i = $this1$i$i$i46$i;
 $__t$addr$i2$i$i$i27$i = $31;
 $this1$i$i$i$i47$i = $this$addr$i$i$i$i26$i;
 $32 = $__t$addr$i2$i$i$i27$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i25$i = $32;
 $33 = $__t$addr$i$i$i$i$i25$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i47$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i42$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $this1$i$i$i105 = $this$addr$i$i$i93;
 $__t$addr$i$i$i$i92 = $agg$tmp39$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $38 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $38;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $39 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __THREW__ = 0;
 invoke_vii(207,($this1$i$i$i105|0),($39|0)); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $40 = __THREW__; __THREW__ = 0;
 $41 = $40&1;
 if ($41) {
  $42 = ___cxa_find_matching_catch_2()|0;
  $43 = tempRet0;
  $exn$slot$i = $42; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot$i = $43; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i12$i = $this1$i102;
  $exn$i = $exn$slot$i; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel$i = $ehselector$slot$i; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $exn$slot = $exn$i; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot = $sel$i; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i10 = $__hold;
  $this1$i11 = $this$addr$i10;
  $this$addr$i$i9 = $this1$i11;
  $__p$addr$i$i = 0;
  $this1$i$i12 = $this$addr$i$i9;
  $this$addr$i$i$i = $this1$i$i12;
  $this1$i$i$i = $this$addr$i$i$i;
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $44 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__tmp$i$i = $44; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $45 = $__p$addr$i$i; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i9$i$i = $this1$i$i12;
  $this1$i10$i$i = $this$addr$i9$i$i;
  $this$addr$i$i8$i$i = $this1$i10$i$i;
  $this1$i$i11$i$i = $this$addr$i$i8$i$i;
  HEAP32[$this1$i$i11$i$i>>2] = $45; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $46 = $__tmp$i$i; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $tobool$i$i = ($46|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if (!($tobool$i$i)) {
   $exn = $exn$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $sel = $ehselector$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   ___resumeException($exn|0);
   // unreachable;
  }
  $this$addr$i14$i$i = $this1$i$i12;
  $this1$i15$i$i = $this$addr$i14$i$i;
  $this$addr$i$i13$i$i = $this1$i15$i$i;
  $this1$i$i16$i$i = $this$addr$i$i13$i$i;
  $__second_$i$i$i$i = ((($this1$i$i16$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $60 = $__tmp$i$i; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i6$i$i = $__second_$i$i$i$i;
  $__p$addr$i$i$i = $60;
  $this1$i7$i$i = $this$addr$i6$i$i;
  $ref$i$i$i = HEAP32[$this1$i7$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $61 = $__p$addr$i$i$i; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__s_$i$i$i = ((($this1$i7$i$i)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $62 = HEAP32[$__s_$i$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i;
  $__p$addr$i$i$i$i = $61;
  $__n$addr$i$i$i$i = $62;
  $63 = $__a$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $64 = $__p$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $65 = $__n$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i$i$i = $63;
  $__p$addr$i$i$i$i$i = $64;
  $$addr$i$i$i$i$i = $65;
  $66 = $__p$addr$i$i$i$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i$i$i$i = $66;
  $67 = $__ptr$addr$i$i$i$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($67); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $exn = $exn$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel = $ehselector$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  $this$addr$i83 = $__hold;
  $this1$i84 = $this$addr$i83;
  $this$addr$i$i82 = $this1$i84;
  $this1$i$i86 = $this$addr$i$i82;
  $this$addr$i$i$i81 = $this1$i$i86;
  $this1$i$i$i87 = $this$addr$i$i$i81;
  $47 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$i = $47; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i5$i = $this1$i84;
  $this1$i6$i = $this$addr$i5$i;
  $this$addr$i$i4$i = $this1$i6$i;
  $this1$i$i7$i = $this$addr$i$i4$i;
  HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $48 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i33 = $__hold;
  $this1$i34 = $this$addr$i33;
  $this$addr$i$i30 = $this1$i34;
  $__p$addr$i$i31 = 0;
  $this1$i$i35 = $this$addr$i$i30;
  $this$addr$i$i$i29 = $this1$i$i35;
  $this1$i$i$i37 = $this$addr$i$i$i29;
  $this$addr$i$i$i$i28 = $this1$i$i$i37;
  $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
  $49 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__tmp$i$i32 = $49; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $50 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i9$i$i18 = $this1$i$i35;
  $this1$i10$i$i41 = $this$addr$i9$i$i18;
  $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
  $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
  HEAP32[$this1$i$i11$i$i42>>2] = $50; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $51 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $tobool$i$i44 = ($51|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if (!($tobool$i$i44)) {
   STACKTOP = sp;return ($48|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  }
  $this$addr$i14$i$i16 = $this1$i$i35;
  $this1$i15$i$i46 = $this$addr$i14$i$i16;
  $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
  $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
  $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $52 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
  $__p$addr$i$i$i27 = $52;
  $this1$i7$i$i49 = $this$addr$i6$i$i26;
  $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $53 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $54 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i23 = $ref$i$i$i51;
  $__p$addr$i$i$i$i24 = $53;
  $__n$addr$i$i$i$i25 = $54;
  $55 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $56 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $57 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i$i$i20 = $55;
  $__p$addr$i$i$i$i$i21 = $56;
  $$addr$i$i$i$i$i22 = $57;
  $58 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i$i$i$i19 = $58;
  $59 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($59); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  STACKTOP = sp;return ($48|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7__cloneEPNS0_6__baseISA_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0;
 var $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0;
 var $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $ehselector$slot$i = 0, $exn$i = 0, $exn$slot$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i12$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $sel$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i7$i$i$i = 0, $this$addr$i$i8 = 0, $this$addr$i11$i = 0, $this$addr$i16$i = 0, $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0;
 var $this1$i$i$i45$i = 0, $this1$i$i10$i$i$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 331|0;
 $agg$tmp2$i$i37$i = sp + 330|0;
 $agg$tmp3$i$i38$i = sp + 329|0;
 $agg$tmp4$i$i39$i = sp + 328|0;
 $retval$i41$i = sp + 272|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 327|0;
 $agg$tmp2$i$i$i = sp + 326|0;
 $agg$tmp3$i$i$i = sp + 325|0;
 $agg$tmp4$i$i$i = sp + 324|0;
 $retval$i$i = sp + 228|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 323|0;
 $agg$tmp2$i$i = sp + 180|0;
 $agg$tmp3$i$i = sp + 176|0;
 $agg$tmp5$i$i = sp + 322|0;
 $agg$tmp6$i$i = sp + 321|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 320|0;
 $agg$tmp2$i = sp + 152|0;
 $agg$tmp5$i = sp + 148|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (1112); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 8|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $1;
 $2 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $2;
 $3 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $3;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $4 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $4;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $5 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $5;
 $6 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $6;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $7 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $7;
 $8 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $10;
 $11 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $11;
 $12 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $12;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $13 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $13;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $14 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $14;
 $15 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $15;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $16 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $16;
 $17 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp39$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $22 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $22;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $23 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __THREW__ = 0;
 invoke_vii(207,($this1$i$i$i|0),($23|0)); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  $exn$slot$i = $26; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot$i = $27; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i11$i = $this1$i6;
  $exn$i = $exn$slot$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel$i = $ehselector$slot$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___resumeException($exn$i|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
}
function __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7destroyEv($this) {
 $this = $this|0;
 var $__f_ = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EEED2Ev($__f_); //@line 1514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__f_2 = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $__f_2 = ((($this1)) + 8|0); //@line 1524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EEED2Ev($__f_2); //@line 1524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EEclEOS4_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0S5_EEEvDpOT_($this1$i$i,$1); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 208;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 8|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (208|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__baseIFvP5HNodeEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__baseIFvP5HNodeEED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 __ZdlPv($this1); //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1441 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0C2EOS5_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $$addr; //@line 427 "hierarchy.cpp"
 __ZNSt3__28functionIFdP5HNodeEEC2EOS4_($this1,$1); //@line 427 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 427 "hierarchy.cpp"
}
function __ZNSt3__28functionIFdP5HNodeEEC2EOS4_($this,$__f) {
 $this = $this|0;
 $__f = $__f|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__f$addr = 0, $__f_ = 0, $__f_10 = 0, $__f_13 = 0, $__f_14 = 0, $__f_15 = 0, $__f_3 = 0, $__f_8 = 0, $__f_9 = 0, $call = 0, $cmp = 0, $cmp5 = 0, $this$addr = 0, $this1 = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $__f$addr = $__f;
 $this1 = $this$addr;
 $0 = $__f$addr; //@line 1695 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($0)) + 16|0); //@line 1695 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = HEAP32[$__f_>>2]|0; //@line 1695 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($1|0)==(0|0); //@line 1695 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 do {
  if ($cmp) {
   $$sink = $this1;
  } else {
   $2 = $__f$addr; //@line 1697 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $__f_3 = ((($2)) + 16|0); //@line 1697 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $3 = HEAP32[$__f_3>>2]|0; //@line 1697 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $4 = $__f$addr; //@line 1697 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $cmp5 = ($3|0)==($4|0); //@line 1697 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   if (!($cmp5)) {
    $14 = $__f$addr; //@line 1704 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    $__f_13 = ((($14)) + 16|0); //@line 1704 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    $15 = HEAP32[$__f_13>>2]|0; //@line 1704 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    $__f_14 = ((($this1)) + 16|0); //@line 1704 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    HEAP32[$__f_14>>2] = $15; //@line 1704 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    $16 = $__f$addr; //@line 1705 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    $$sink = $16;
    break;
   }
   __THREW__ = 0;
   $call = (invoke_ii(208,($this1|0))|0); //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $17 = ___cxa_find_matching_catch_3(0|0)|0;
    $18 = tempRet0;
    ___clang_call_terminate($17); //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    // unreachable; //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   }
   $__f_8 = ((($this1)) + 16|0); //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   HEAP32[$__f_8>>2] = $call; //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $7 = $__f$addr; //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $__f_9 = ((($7)) + 16|0); //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $8 = HEAP32[$__f_9>>2]|0; //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $vtable = HEAP32[$8>>2]|0; //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $9 = ((($vtable)) + 12|0); //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $10 = HEAP32[$9>>2]|0; //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $__f_10 = ((($this1)) + 16|0); //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $11 = HEAP32[$__f_10>>2]|0; //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   __THREW__ = 0;
   invoke_vii($10|0,($8|0),($11|0)); //@line 1700 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $17 = ___cxa_find_matching_catch_3(0|0)|0;
    $18 = tempRet0;
    ___clang_call_terminate($17); //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
    // unreachable; //@line 1699 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   } else {
    STACKTOP = sp;return; //@line 1707 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   }
  }
 } while(0);
 $__f_15 = ((($$sink)) + 16|0);
 HEAP32[$__f_15>>2] = 0;
 STACKTOP = sp;return; //@line 1707 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__217__compressed_pairIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__228__libcpp_compressed_pair_impIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EELj2EED2Ev($this1); //@line 2415 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 2415 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
}
function __ZNSt3__228__libcpp_compressed_pair_impIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS6_EELj2EED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0D2Ev($this1); //@line 2235 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 2235 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
}
function __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0C2ERKS5_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $$addr; //@line 427 "hierarchy.cpp"
 __ZNSt3__28functionIFdP5HNodeEEC2ERKS4_($this1,$1); //@line 427 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 427 "hierarchy.cpp"
}
function __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0S5_EEEvDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i2$i = 0, $__t$addr$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i4 = $2;
 $3 = $__t$addr$i4; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i2$i = $6;
 $7 = $__t$addr$i2$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEENK3__0clES2_($5,$8); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 STACKTOP = sp;return; //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEENK3__0clES2_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $__end_$i = 0, $__lcpp_x$addr$i = 0, $__lcpp_y$addr$i = 0.0, $call$i = 0.0, $call2 = 0.0, $children = 0, $cmp = 0, $conv$i = 0.0, $node$addr = 0, $r = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0;
 var $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $node$addr = $node;
 $this1 = $this$addr;
 $0 = $node$addr; //@line 428 "hierarchy.cpp"
 $children = ((($0)) + 32|0); //@line 428 "hierarchy.cpp"
 $this$addr$i = $children;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($sub$ptr$div$i>>>0)<=(0); //@line 428 "hierarchy.cpp"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 432 "hierarchy.cpp"
 }
 $3 = $node$addr; //@line 430 "hierarchy.cpp"
 $call2 = (+__ZNKSt3__28functionIFdP5HNodeEEclES2_($this1,$3)); //@line 430 "hierarchy.cpp"
 $__lcpp_x$addr$i = 0;
 $__lcpp_y$addr$i = $call2;
 $4 = $__lcpp_x$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
 $conv$i = (+($4|0)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
 $5 = $__lcpp_y$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
 $call$i = (+_fmax($conv$i,$5)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
 $6 = $node$addr; //@line 430 "hierarchy.cpp"
 $r = ((($6)) + 16|0); //@line 430 "hierarchy.cpp"
 HEAPF64[$r>>3] = $call$i; //@line 430 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 432 "hierarchy.cpp"
}
function __ZNKSt3__28functionIFdP5HNodeEEclES2_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr = 0, $__f_ = 0, $__f_2 = 0, $__t$addr$i = 0, $call3 = 0.0, $cmp = 0, $exception = 0, $this$addr = 0, $this1 = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $__arg$addr = sp;
 $this$addr = $this;
 HEAP32[$__arg$addr>>2] = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 16|0); //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $0 = HEAP32[$__f_>>2]|0; //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $cmp = ($0|0)==(0|0); //@line 1893 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 if ($cmp) {
  $exception = (___cxa_allocate_exception(4)|0); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ;HEAP32[$exception>>2]=0|0; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  __ZNSt3__217bad_function_callC2Ev($exception); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___cxa_throw(($exception|0),(168|0),(31|0)); //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  // unreachable; //@line 1894 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $__f_2 = ((($this1)) + 16|0); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $1 = HEAP32[$__f_2>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $vtable = HEAP32[$1>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $2 = ((($vtable)) + 24|0); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $3 = HEAP32[$2>>2]|0; //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $__t$addr$i = $__arg$addr;
  $4 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $call3 = (+FUNCTION_TABLE_dii[$3 & 255]($1,$4)); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return (+$call3); //@line 1896 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return +(0.0);
}
function __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EED2Ev($this) {
 $this = $this|0;
 var $__f_ = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 HEAP32[$this1>>2] = (1200); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 8|0); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EEED2Ev($__f_); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i109 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i23 = 0, $__a$addr$i99 = 0, $__d$addr$i = 0, $__f$addr$i = 0;
 var $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0;
 var $__s_$i$i$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i = 0, $__second_$i$i$i$i48 = 0, $__size$addr$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i25$i = 0, $__t$addr$i$i$i$i28$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i35$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i21$i = 0, $__t$addr$i$i41$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0;
 var $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i27$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i43$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i52$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i30$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i$i$i = 0, $agg$tmp$i$i37$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i38$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i33$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i39$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i32$i = 0;
 var $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i40$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i31$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i34$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $ehselector$slot = 0, $ehselector$slot$i = 0, $exception$i = 0, $exn = 0;
 var $exn$i = 0, $exn$slot = 0, $exn$slot$i = 0, $mul$i = 0, $ref$i$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i12$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i42$i = 0, $sel = 0, $sel$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i26$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i29$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i20$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i36$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0, $this$addr$i$i64 = 0;
 var $this$addr$i$i7$i$i$i = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i9 = 0, $this$addr$i$i97 = 0, $this$addr$i10 = 0, $this$addr$i108 = 0, $this$addr$i12$i = 0, $this$addr$i13 = 0, $this$addr$i14$i$i = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i = 0, $this$addr$i6$i$i26 = 0;
 var $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0, $this$addr$i9$i$i = 0, $this$addr$i9$i$i18 = 0, $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i23$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i47$i = 0, $this1$i$i$i105 = 0, $this1$i$i$i37 = 0;
 var $this1$i$i$i46$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i10$i$i$i = 0, $this1$i$i103 = 0, $this1$i$i11$i$i = 0, $this1$i$i11$i$i42 = 0, $this1$i$i12 = 0, $this1$i$i16$i$i = 0, $this1$i$i16$i$i47 = 0, $this1$i$i22$i = 0, $this1$i$i35 = 0, $this1$i$i44$i = 0, $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i10$i$i = 0;
 var $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i11 = 0, $this1$i15$i$i = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0, $this1$i84 = 0, $tobool$i$i = 0, $tobool$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(688|0);
 $agg$tmp48$i$i31$i = sp + 136|0;
 $agg$tmp37$i$i32$i = sp + 128|0;
 $agg$tmp26$i$i33$i = sp + 120|0;
 $agg$tmp5$i$i34$i = sp + 112|0;
 $agg$tmp$i$i37$i = sp + 685|0;
 $agg$tmp2$i$i38$i = sp + 684|0;
 $agg$tmp3$i$i39$i = sp + 683|0;
 $agg$tmp4$i$i40$i = sp + 682|0;
 $retval$i42$i = sp + 616|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 681|0;
 $agg$tmp2$i$i$i = sp + 680|0;
 $agg$tmp3$i$i$i = sp + 679|0;
 $agg$tmp4$i$i$i = sp + 678|0;
 $retval$i$i = sp + 572|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 677|0;
 $agg$tmp2$i$i = sp + 524|0;
 $agg$tmp3$i$i96 = sp + 520|0;
 $agg$tmp5$i$i = sp + 676|0;
 $agg$tmp6$i$i = sp + 675|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 674|0;
 $agg$tmp2$i101 = sp + 496|0;
 $agg$tmp5$i = sp + 492|0;
 $__t1$addr$i$i$i = sp + 420|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 408|0;
 $agg$tmp$i$i = sp + 400|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 376|0;
 $__a = sp + 673|0;
 $__hold = sp + 160|0;
 $ref$tmp = sp + 152|0;
 $ref$tmp6 = sp + 672|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(107374182); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = ($1*40)|0; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 8|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i108 = $ref$tmp6;
 $$addr$i109 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (1200); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 8|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i90 = $15;
 $16 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i21$i = $16;
 $17 = $__t$addr$i$i21$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i20$i = $retval$i$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i22$i = $this$addr$i$i20$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i22$i;
 $__u$addr$i$i$i$i = $18;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $19 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $19;
 $20 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $20;
 $this1$i$i$i$i23$i = $this$addr$i$i$i$i19$i;
 $21 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $21;
 $22 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i23$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i52$i = $24;
 $25 = $__t$addr$i52$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i43$i = $25;
 $26 = $__t$addr$i43$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i41$i = $26;
 $27 = $__t$addr$i$i41$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i36$i = $retval$i42$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i44$i = $this$addr$i$i36$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i35$i = $28;
 $29 = $__t$addr$i$i$i35$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i31$i>>0]=HEAP8[$agg$tmp4$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i32$i>>0]=HEAP8[$agg$tmp3$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i33$i>>0]=HEAP8[$agg$tmp2$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i34$i>>0]=HEAP8[$agg$tmp$i$i37$i>>0]|0;
 $this$addr$i$i$i29$i = $this1$i$i44$i;
 $__u$addr$i$i$i30$i = $29;
 $this1$i$i$i46$i = $this$addr$i$i$i29$i;
 $30 = $__u$addr$i$i$i30$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i28$i = $30;
 $31 = $__t$addr$i$i$i$i28$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i26$i = $this1$i$i$i46$i;
 $__t$addr$i2$i$i$i27$i = $31;
 $this1$i$i$i$i47$i = $this$addr$i$i$i$i26$i;
 $32 = $__t$addr$i2$i$i$i27$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i25$i = $32;
 $33 = $__t$addr$i$i$i$i$i25$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i47$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i42$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $this1$i$i$i105 = $this$addr$i$i$i93;
 $__t$addr$i$i$i$i92 = $agg$tmp39$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $38 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $38;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $39 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __THREW__ = 0;
 invoke_vii(209,($this1$i$i$i105|0),($39|0)); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $40 = __THREW__; __THREW__ = 0;
 $41 = $40&1;
 if ($41) {
  $42 = ___cxa_find_matching_catch_2()|0;
  $43 = tempRet0;
  $exn$slot$i = $42; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot$i = $43; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i12$i = $this1$i102;
  $exn$i = $exn$slot$i; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel$i = $ehselector$slot$i; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $exn$slot = $exn$i; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot = $sel$i; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i10 = $__hold;
  $this1$i11 = $this$addr$i10;
  $this$addr$i$i9 = $this1$i11;
  $__p$addr$i$i = 0;
  $this1$i$i12 = $this$addr$i$i9;
  $this$addr$i$i$i = $this1$i$i12;
  $this1$i$i$i = $this$addr$i$i$i;
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $44 = HEAP32[$this1$i$i$i$i>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__tmp$i$i = $44; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $45 = $__p$addr$i$i; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i9$i$i = $this1$i$i12;
  $this1$i10$i$i = $this$addr$i9$i$i;
  $this$addr$i$i8$i$i = $this1$i10$i$i;
  $this1$i$i11$i$i = $this$addr$i$i8$i$i;
  HEAP32[$this1$i$i11$i$i>>2] = $45; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $46 = $__tmp$i$i; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $tobool$i$i = ($46|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if (!($tobool$i$i)) {
   $exn = $exn$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   $sel = $ehselector$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
   ___resumeException($exn|0);
   // unreachable;
  }
  $this$addr$i14$i$i = $this1$i$i12;
  $this1$i15$i$i = $this$addr$i14$i$i;
  $this$addr$i$i13$i$i = $this1$i15$i$i;
  $this1$i$i16$i$i = $this$addr$i$i13$i$i;
  $__second_$i$i$i$i = ((($this1$i$i16$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $60 = $__tmp$i$i; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i6$i$i = $__second_$i$i$i$i;
  $__p$addr$i$i$i = $60;
  $this1$i7$i$i = $this$addr$i6$i$i;
  $ref$i$i$i = HEAP32[$this1$i7$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $61 = $__p$addr$i$i$i; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__s_$i$i$i = ((($this1$i7$i$i)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $62 = HEAP32[$__s_$i$i$i>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $ref$i$i$i;
  $__p$addr$i$i$i$i = $61;
  $__n$addr$i$i$i$i = $62;
  $63 = $__a$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $64 = $__p$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $65 = $__n$addr$i$i$i$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i$i$i = $63;
  $__p$addr$i$i$i$i$i = $64;
  $$addr$i$i$i$i$i = $65;
  $66 = $__p$addr$i$i$i$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i$i$i$i = $66;
  $67 = $__ptr$addr$i$i$i$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($67); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  $exn = $exn$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel = $ehselector$slot; //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  $this$addr$i83 = $__hold;
  $this1$i84 = $this$addr$i83;
  $this$addr$i$i82 = $this1$i84;
  $this1$i$i86 = $this$addr$i$i82;
  $this$addr$i$i$i81 = $this1$i$i86;
  $this1$i$i$i87 = $this$addr$i$i$i81;
  $47 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$i = $47; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i5$i = $this1$i84;
  $this1$i6$i = $this$addr$i5$i;
  $this$addr$i$i4$i = $this1$i6$i;
  $this1$i$i7$i = $this$addr$i$i4$i;
  HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $48 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i33 = $__hold;
  $this1$i34 = $this$addr$i33;
  $this$addr$i$i30 = $this1$i34;
  $__p$addr$i$i31 = 0;
  $this1$i$i35 = $this$addr$i$i30;
  $this$addr$i$i$i29 = $this1$i$i35;
  $this1$i$i$i37 = $this$addr$i$i$i29;
  $this$addr$i$i$i$i28 = $this1$i$i$i37;
  $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
  $49 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__tmp$i$i32 = $49; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $50 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i9$i$i18 = $this1$i$i35;
  $this1$i10$i$i41 = $this$addr$i9$i$i18;
  $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
  $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
  HEAP32[$this1$i$i11$i$i42>>2] = $50; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $51 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $tobool$i$i44 = ($51|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  if (!($tobool$i$i44)) {
   STACKTOP = sp;return ($48|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  }
  $this$addr$i14$i$i16 = $this1$i$i35;
  $this1$i15$i$i46 = $this$addr$i14$i$i16;
  $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
  $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
  $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $52 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
  $__p$addr$i$i$i27 = $52;
  $this1$i7$i$i49 = $this$addr$i6$i$i26;
  $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $53 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $54 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i23 = $ref$i$i$i51;
  $__p$addr$i$i$i$i24 = $53;
  $__n$addr$i$i$i$i25 = $54;
  $55 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $56 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $57 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i$i$i20 = $55;
  $__p$addr$i$i$i$i$i21 = $56;
  $$addr$i$i$i$i$i22 = $57;
  $58 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__ptr$addr$i$i$i$i$i$i19 = $58;
  $59 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  __ZdlPv($59); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
  STACKTOP = sp;return ($48|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7__cloneEPNS0_6__baseISA_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0;
 var $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i6$i$i$i = 0, $__t$addr$i8$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0;
 var $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $ehselector$slot$i = 0, $exn$i = 0, $exn$slot$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i12$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $sel$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i7$i$i$i = 0, $this$addr$i$i8 = 0, $this$addr$i11$i = 0, $this$addr$i16$i = 0, $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0;
 var $this1$i$i$i45$i = 0, $this1$i$i10$i$i$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 331|0;
 $agg$tmp2$i$i37$i = sp + 330|0;
 $agg$tmp3$i$i38$i = sp + 329|0;
 $agg$tmp4$i$i39$i = sp + 328|0;
 $retval$i41$i = sp + 272|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 327|0;
 $agg$tmp2$i$i$i = sp + 326|0;
 $agg$tmp3$i$i$i = sp + 325|0;
 $agg$tmp4$i$i$i = sp + 324|0;
 $retval$i$i = sp + 228|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 323|0;
 $agg$tmp2$i$i = sp + 180|0;
 $agg$tmp3$i$i = sp + 176|0;
 $agg$tmp5$i$i = sp + 322|0;
 $agg$tmp6$i$i = sp + 321|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 320|0;
 $agg$tmp2$i = sp + 152|0;
 $agg$tmp5$i = sp + 148|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (1200); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 8|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $1;
 $2 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $2;
 $3 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $3;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $4 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $4;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $5 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $5;
 $6 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $6;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $7 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $7;
 $8 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $10;
 $11 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $11;
 $12 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $12;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $13 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $13;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $14 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $14;
 $15 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $15;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $16 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $16;
 $17 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp39$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i8$i$i$i = $agg$tmp28$i$i;
 $22 = $__t$addr$i8$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i7$i$i$i = $22;
 $this1$i$i10$i$i$i = $this$addr$i$i7$i$i$i;
 $ref$i$i12$i$i$i = HEAP32[$this1$i$i10$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i6$i$i$i = $ref$i$i12$i$i$i;
 $23 = $__t$addr$i6$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __THREW__ = 0;
 invoke_vii(209,($this1$i$i$i|0),($23|0)); //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  $exn$slot$i = $26; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $ehselector$slot$i = $27; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i11$i = $this1$i6;
  $exn$i = $exn$slot$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $sel$i = $ehselector$slot$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  ___resumeException($exn$i|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
}
function __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7destroyEv($this) {
 $this = $this|0;
 var $__f_ = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EEED2Ev($__f_); //@line 1514 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__f_2 = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $__f_2 = ((($this1)) + 8|0); //@line 1524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZNSt3__217__compressed_pairIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EEED2Ev($__f_2); //@line 1524 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EEclEOS4_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1S5_EEEvDpOT_($this1$i$i,$1); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 232;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 8|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (232|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1C2EOS5_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $$addr; //@line 438 "hierarchy.cpp"
 __ZNSt3__28functionIFdP5HNodeEEC2EOS4_($this1,$1); //@line 438 "hierarchy.cpp"
 $2 = ((($this1)) + 24|0); //@line 438 "hierarchy.cpp"
 $3 = $$addr; //@line 438 "hierarchy.cpp"
 $4 = ((($3)) + 24|0); //@line 438 "hierarchy.cpp"
 $5 = +HEAPF64[$4>>3]; //@line 438 "hierarchy.cpp"
 HEAPF64[$2>>3] = $5; //@line 438 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 438 "hierarchy.cpp"
}
function __ZNSt3__217__compressed_pairIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__228__libcpp_compressed_pair_impIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EELj2EED2Ev($this1); //@line 2415 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 2415 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
}
function __ZNSt3__228__libcpp_compressed_pair_impIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS6_EELj2EED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1D2Ev($this1); //@line 2235 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 2235 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
}
function __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1C2ERKS5_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$addr = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $$addr = $0;
 $this1 = $this$addr;
 $1 = $$addr; //@line 438 "hierarchy.cpp"
 __ZNSt3__28functionIFdP5HNodeEEC2ERKS4_($this1,$1); //@line 438 "hierarchy.cpp"
 $2 = ((($this1)) + 24|0); //@line 438 "hierarchy.cpp"
 $3 = $$addr; //@line 438 "hierarchy.cpp"
 $4 = ((($3)) + 24|0); //@line 438 "hierarchy.cpp"
 $5 = +HEAPF64[$4>>3]; //@line 438 "hierarchy.cpp"
 HEAPF64[$2>>3] = $5; //@line 438 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 438 "hierarchy.cpp"
}
function __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1S5_EEEvDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i2$i = 0, $__t$addr$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i4 = $2;
 $3 = $__t$addr$i4; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i2$i = $6;
 $7 = $__t$addr$i2$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdENK3__1clES2_($5,$8); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 STACKTOP = sp;return; //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdENK3__1clES2_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_$i34 = 0, $__lcpp_x$addr$i = 0.0, $__lcpp_y$addr$i = 0, $__n$addr$i = 0, $__n$addr$i40 = 0, $add = 0.0, $add28 = 0.0, $agg$tmp = 0, $arrayidx$i = 0, $arrayidx$i43 = 0, $call$i = 0.0, $call15 = 0.0, $call5 = 0.0, $children = 0, $children2 = 0;
 var $children3 = 0, $cmp = 0, $cmp$i = 0, $cmp16 = 0, $cmp19 = 0, $cmp8 = 0, $conv$i = 0.0, $e = 0.0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $i = 0, $inc = 0, $inc25 = 0, $mul = 0.0, $n = 0, $node$addr = 0, $r = 0.0, $r11 = 0, $r23 = 0;
 var $r29 = 0, $sel = 0, $sub = 0.0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i32 = 0, $this$addr$i36 = 0, $this$addr$i39 = 0, $this1 = 0, $this1$i = 0, $this1$i33 = 0, $this1$i37 = 0, $this1$i41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $children2 = sp + 52|0;
 $agg$tmp = sp + 24|0;
 $this$addr = $this;
 $node$addr = $node;
 $this1 = $this$addr;
 $0 = $node$addr; //@line 439 "hierarchy.cpp"
 $children = ((($0)) + 32|0); //@line 439 "hierarchy.cpp"
 $this$addr$i = $children;
 $this1$i = $this$addr$i;
 $1 = HEAP32[$this1$i>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i = ((($this1$i)) + 4|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__end_$i>>2]|0; //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($1|0)==($2|0); //@line 646 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  STACKTOP = sp;return; //@line 460 "hierarchy.cpp"
 }
 $3 = $node$addr; //@line 441 "hierarchy.cpp"
 $children3 = ((($3)) + 32|0); //@line 441 "hierarchy.cpp"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEC2ERKS5_($children2,$children3); //@line 441 "hierarchy.cpp"
 $i = 0; //@line 442 "hierarchy.cpp"
 $this$addr$i32 = $children2;
 $this1$i33 = $this$addr$i32;
 $__end_$i34 = ((($this1$i33)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $4 = HEAP32[$__end_$i34>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i33>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $4; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $5; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $n = $sub$ptr$div$i; //@line 443 "hierarchy.cpp"
 $6 = $node$addr; //@line 444 "hierarchy.cpp"
 __THREW__ = 0;
 $call5 = (+invoke_dii(210,($this1|0),($6|0))); //@line 444 "hierarchy.cpp"
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = ((($this1)) + 24|0); //@line 444 "hierarchy.cpp"
  $10 = +HEAPF64[$9>>3]; //@line 444 "hierarchy.cpp"
  $mul = $call5 * $10; //@line 444 "hierarchy.cpp"
  $__lcpp_x$addr$i = $mul;
  $__lcpp_y$addr$i = 0;
  $11 = $__lcpp_x$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $12 = $__lcpp_y$addr$i; //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $conv$i = (+($12|0)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $call$i = (+_fmax($11,$conv$i)); //@line 1132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/math.h"
  $r = $call$i; //@line 444 "hierarchy.cpp"
  $13 = $r; //@line 445 "hierarchy.cpp"
  $cmp = $13 > 0.0; //@line 445 "hierarchy.cpp"
  L6: do {
   if ($cmp) {
    $i = 0; //@line 447 "hierarchy.cpp"
    while(1) {
     $14 = $i; //@line 447 "hierarchy.cpp"
     $15 = $n; //@line 447 "hierarchy.cpp"
     $cmp8 = ($14|0)<($15|0); //@line 447 "hierarchy.cpp"
     if (!($cmp8)) {
      break L6;
     }
     $16 = $r; //@line 448 "hierarchy.cpp"
     $17 = $i; //@line 448 "hierarchy.cpp"
     $this$addr$i36 = $children2;
     $__n$addr$i = $17;
     $this1$i37 = $this$addr$i36;
     $18 = HEAP32[$this1$i37>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $19 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $arrayidx$i = (($18) + ($19<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
     $20 = HEAP32[$arrayidx$i>>2]|0; //@line 448 "hierarchy.cpp"
     $r11 = ((($20)) + 16|0); //@line 448 "hierarchy.cpp"
     $21 = +HEAPF64[$r11>>3]; //@line 448 "hierarchy.cpp"
     $add = $21 + $16; //@line 448 "hierarchy.cpp"
     HEAPF64[$r11>>3] = $add; //@line 448 "hierarchy.cpp"
     $22 = $i; //@line 447 "hierarchy.cpp"
     $inc = (($22) + 1)|0; //@line 447 "hierarchy.cpp"
     $i = $inc; //@line 447 "hierarchy.cpp"
    }
   }
  } while(0);
  __THREW__ = 0;
  invoke_vii(211,($agg$tmp|0),($children2|0)); //@line 451 "hierarchy.cpp"
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if (!($26)) {
   __THREW__ = 0;
   $call15 = (+invoke_di(212,($agg$tmp|0))); //@line 451 "hierarchy.cpp"
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $39 = ___cxa_find_matching_catch_2()|0;
    $40 = tempRet0;
    $exn$slot = $39; //@line 460 "hierarchy.cpp"
    $ehselector$slot = $40; //@line 460 "hierarchy.cpp"
    __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 451 "hierarchy.cpp"
    __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children2); //@line 459 "hierarchy.cpp"
    $exn = $exn$slot; //@line 459 "hierarchy.cpp"
    $sel = $ehselector$slot; //@line 459 "hierarchy.cpp"
    ___resumeException($exn|0);
    // unreachable;
   }
   __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($agg$tmp); //@line 451 "hierarchy.cpp"
   $e = $call15; //@line 451 "hierarchy.cpp"
   $29 = $r; //@line 452 "hierarchy.cpp"
   $cmp16 = $29 > 0.0; //@line 452 "hierarchy.cpp"
   L17: do {
    if ($cmp16) {
     $i = 0; //@line 454 "hierarchy.cpp"
     while(1) {
      $30 = $i; //@line 454 "hierarchy.cpp"
      $31 = $n; //@line 454 "hierarchy.cpp"
      $cmp19 = ($30|0)<($31|0); //@line 454 "hierarchy.cpp"
      if (!($cmp19)) {
       break L17;
      }
      $32 = $r; //@line 455 "hierarchy.cpp"
      $33 = $i; //@line 455 "hierarchy.cpp"
      $this$addr$i39 = $children2;
      $__n$addr$i40 = $33;
      $this1$i41 = $this$addr$i39;
      $34 = HEAP32[$this1$i41>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $35 = $__n$addr$i40; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $arrayidx$i43 = (($34) + ($35<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
      $36 = HEAP32[$arrayidx$i43>>2]|0; //@line 455 "hierarchy.cpp"
      $r23 = ((($36)) + 16|0); //@line 455 "hierarchy.cpp"
      $37 = +HEAPF64[$r23>>3]; //@line 455 "hierarchy.cpp"
      $sub = $37 - $32; //@line 455 "hierarchy.cpp"
      HEAPF64[$r23>>3] = $sub; //@line 455 "hierarchy.cpp"
      $38 = $i; //@line 454 "hierarchy.cpp"
      $inc25 = (($38) + 1)|0; //@line 454 "hierarchy.cpp"
      $i = $inc25; //@line 454 "hierarchy.cpp"
     }
    }
   } while(0);
   $41 = $e; //@line 458 "hierarchy.cpp"
   $42 = $r; //@line 458 "hierarchy.cpp"
   $add28 = $41 + $42; //@line 458 "hierarchy.cpp"
   $43 = $node$addr; //@line 458 "hierarchy.cpp"
   $r29 = ((($43)) + 16|0); //@line 458 "hierarchy.cpp"
   HEAPF64[$r29>>3] = $add28; //@line 458 "hierarchy.cpp"
   __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children2); //@line 459 "hierarchy.cpp"
   STACKTOP = sp;return; //@line 460 "hierarchy.cpp"
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 $exn$slot = $23; //@line 460 "hierarchy.cpp"
 $ehselector$slot = $24; //@line 460 "hierarchy.cpp"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($children2); //@line 459 "hierarchy.cpp"
 $exn = $exn$slot; //@line 459 "hierarchy.cpp"
 $sel = $ehselector$slot; //@line 459 "hierarchy.cpp"
 ___resumeException($exn|0);
 // unreachable;
}
function __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEED2Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEED0Ev($this) {
 $this = $this|0;
 var $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEED2Ev($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 __ZdlPv($this1); //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7__cloneEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i$i$i$i$i22 = 0, $$addr$i109 = 0, $$addr$i58 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i23 = 0;
 var $__a$addr$i99 = 0, $__d$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_4 = 0, $__hold = 0, $__n$addr$i = 0, $__n$addr$i$i$i$i25 = 0, $__p$addr$i = 0, $__p$addr$i$i$i$i$i21 = 0, $__p$addr$i$i$i$i24 = 0, $__p$addr$i$i$i27 = 0, $__p$addr$i$i31 = 0, $__ptr$addr$i$i$i$i$i$i19 = 0, $__s$addr$i = 0, $__s_$i = 0, $__s_$i$i$i52 = 0, $__second_$i$i$i = 0, $__second_$i$i$i$i48 = 0;
 var $__size$addr$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i27$i = 0, $__t$addr$i$i$i$i30$i = 0, $__t$addr$i$i$i$i92 = 0, $__t$addr$i$i$i20$i = 0, $__t$addr$i$i$i94 = 0, $__t$addr$i$i22$i = 0, $__t$addr$i$i42$i = 0, $__t$addr$i$i90 = 0, $__t$addr$i12$i$i = 0, $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i29$i = 0, $__t$addr$i26$i = 0, $__t$addr$i3$i$i = 0;
 var $__t$addr$i3$i$i$i = 0, $__t$addr$i4$i$i = 0, $__t$addr$i44$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__t$i = 0, $__t1$addr$i$i = 0, $__t1$addr$i$i$i = 0, $__tmp$i$i32 = 0, $__u$addr$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i32$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i38$i = 0, $agg$tmp$i$i95 = 0, $agg$tmp$i100 = 0, $agg$tmp14$i = 0, $agg$tmp2$i = 0;
 var $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i39$i = 0, $agg$tmp2$i101 = 0, $agg$tmp215$i = 0, $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i35$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i40$i = 0, $agg$tmp3$i$i96 = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i34$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i41$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i33$i = 0, $agg$tmp5$i = 0;
 var $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i36$i = 0, $agg$tmp510$i$i = 0, $agg$tmp516$i = 0, $agg$tmp6$i$i = 0, $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $call$i$i = 0, $cmp$i = 0, $exception$i = 0, $mul$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i$i51 = 0, $ref$i$i11$i$i$i = 0, $ref$tmp = 0, $ref$tmp6 = 0, $retval$i$i = 0, $retval$i43$i = 0, $this$addr = 0;
 var $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i91 = 0, $this$addr$i$i$i$i19$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i$i28$i = 0, $this$addr$i$i$i$i89 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i31$i = 0, $this$addr$i$i$i63 = 0, $this$addr$i$i$i69 = 0, $this$addr$i$i$i81 = 0, $this$addr$i$i$i93 = 0, $this$addr$i$i13$i$i15 = 0, $this$addr$i$i21$i = 0, $this$addr$i$i30 = 0, $this$addr$i$i37$i = 0, $this$addr$i$i4$i = 0, $this$addr$i$i56 = 0;
 var $this$addr$i$i6$i$i$i = 0, $this$addr$i$i64 = 0, $this$addr$i$i70 = 0, $this$addr$i$i77 = 0, $this$addr$i$i8$i$i17 = 0, $this$addr$i$i82 = 0, $this$addr$i$i97 = 0, $this$addr$i108 = 0, $this$addr$i13 = 0, $this$addr$i14$i$i16 = 0, $this$addr$i17$i = 0, $this$addr$i33 = 0, $this$addr$i5$i = 0, $this$addr$i57 = 0, $this$addr$i6$i$i26 = 0, $this$addr$i61 = 0, $this$addr$i65 = 0, $this$addr$i71 = 0, $this$addr$i78 = 0, $this$addr$i83 = 0;
 var $this$addr$i9$i$i18 = 0, $this$addr$i98 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i$i106 = 0, $this1$i$i$i$i104 = 0, $this1$i$i$i$i24$i = 0, $this1$i$i$i$i38 = 0, $this1$i$i$i$i48$i = 0, $this1$i$i$i105 = 0, $this1$i$i$i37 = 0, $this1$i$i$i47$i = 0, $this1$i$i$i68 = 0, $this1$i$i$i75 = 0, $this1$i$i$i87 = 0, $this1$i$i103 = 0, $this1$i$i11$i$i42 = 0, $this1$i$i16$i$i47 = 0, $this1$i$i23$i = 0;
 var $this1$i$i35 = 0, $this1$i$i45$i = 0, $this1$i$i67 = 0, $this1$i$i7$i = 0, $this1$i$i74 = 0, $this1$i$i80 = 0, $this1$i$i86 = 0, $this1$i$i9$i$i$i = 0, $this1$i10$i$i41 = 0, $this1$i102 = 0, $this1$i15$i$i46 = 0, $this1$i18$i = 0, $this1$i34 = 0, $this1$i59 = 0, $this1$i6$i = 0, $this1$i62 = 0, $this1$i66 = 0, $this1$i7$i$i49 = 0, $this1$i72 = 0, $this1$i79 = 0;
 var $this1$i84 = 0, $tobool$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $agg$tmp48$i$i33$i = sp + 136|0;
 $agg$tmp37$i$i34$i = sp + 128|0;
 $agg$tmp26$i$i35$i = sp + 120|0;
 $agg$tmp5$i$i36$i = sp + 112|0;
 $agg$tmp$i$i38$i = sp + 593|0;
 $agg$tmp2$i$i39$i = sp + 592|0;
 $agg$tmp3$i$i40$i = sp + 591|0;
 $agg$tmp4$i$i41$i = sp + 590|0;
 $retval$i43$i = sp + 532|0;
 $agg$tmp48$i$i$i = sp + 104|0;
 $agg$tmp37$i$i$i = sp + 96|0;
 $agg$tmp26$i$i$i = sp + 88|0;
 $agg$tmp5$i$i$i = sp + 80|0;
 $agg$tmp$i$i$i = sp + 589|0;
 $agg$tmp2$i$i$i = sp + 588|0;
 $agg$tmp3$i$i$i = sp + 587|0;
 $agg$tmp4$i$i$i = sp + 586|0;
 $retval$i$i = sp + 480|0;
 $agg$tmp611$i$i = sp + 72|0;
 $agg$tmp510$i$i = sp + 64|0;
 $agg$tmp39$i$i = sp + 56|0;
 $agg$tmp28$i$i = sp + 48|0;
 $agg$tmp7$i$i = sp + 40|0;
 $agg$tmp$i$i95 = sp + 585|0;
 $agg$tmp2$i$i = sp + 432|0;
 $agg$tmp3$i$i96 = sp + 428|0;
 $agg$tmp5$i$i = sp + 584|0;
 $agg$tmp6$i$i = sp + 583|0;
 $agg$tmp516$i = sp + 32|0;
 $agg$tmp215$i = sp + 24|0;
 $agg$tmp14$i = sp + 16|0;
 $agg$tmp$i100 = sp + 582|0;
 $agg$tmp2$i101 = sp + 408|0;
 $agg$tmp5$i = sp + 404|0;
 $__t1$addr$i$i$i = sp + 340|0;
 $agg$tmp3$i$i = sp + 8|0;
 $__t1$addr$i$i = sp + 328|0;
 $agg$tmp$i$i = sp + 320|0;
 $agg$tmp2$i = sp;
 $agg$tmp$i = sp + 296|0;
 $__a = sp + 581|0;
 $__hold = sp + 152|0;
 $ref$tmp = sp + 144|0;
 $ref$tmp6 = sp + 580|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i13 = $__a;
 $$addr$i = $this1$i$i;
 $this$addr$i57 = $__a;
 $__n$addr$i = 1;
 $$addr$i58 = 0;
 $this1$i59 = $this$addr$i57;
 $0 = $__n$addr$i; //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i56 = $this1$i59;
 $cmp$i = ($0>>>0)>(268435455); //@line 1730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if ($cmp$i) {
  $exception$i = (___cxa_allocate_exception(4)|0); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt9bad_allocC2Ev($exception$i); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ___cxa_throw(($exception$i|0),(648|0),(80|0)); //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  // unreachable; //@line 1732 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 }
 $1 = $__n$addr$i; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $mul$i = $1<<4; //@line 1736 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__size$addr$i$i = $mul$i;
 $2 = $__size$addr$i$i; //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $call$i$i = (__Znwj($2)|0); //@line 168 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i61 = $ref$tmp;
 $__a$addr$i = $__a;
 $__s$addr$i = 1;
 $this1$i62 = $this$addr$i61;
 $3 = $__a$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i62>>2] = $3; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i = ((($this1$i62)) + 4|0); //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $4 = $__s$addr$i; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$__s_$i>>2] = $4; //@line 3577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i65 = $__hold;
 $__p$addr$i = $call$i$i;
 $__d$addr$i = $ref$tmp;
 $this1$i66 = $this$addr$i65;
 $5 = $__p$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $6 = $__d$addr$i; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $6;
 $7 = $__t$addr$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i>>2]=HEAP32[$7>>2]|0;HEAP32[$agg$tmp$i+4>>2]=HEAP32[$7+4>>2]|0; //@line 2625 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp2$i>>0]=HEAP8[$agg$tmp$i>>0]|0;HEAP8[$agg$tmp2$i+1>>0]=HEAP8[$agg$tmp$i+1>>0]|0;HEAP8[$agg$tmp2$i+2>>0]=HEAP8[$agg$tmp$i+2>>0]|0;HEAP8[$agg$tmp2$i+3>>0]=HEAP8[$agg$tmp$i+3>>0]|0;HEAP8[$agg$tmp2$i+4>>0]=HEAP8[$agg$tmp$i+4>>0]|0;HEAP8[$agg$tmp2$i+5>>0]=HEAP8[$agg$tmp$i+5>>0]|0;HEAP8[$agg$tmp2$i+6>>0]=HEAP8[$agg$tmp$i+6>>0]|0;HEAP8[$agg$tmp2$i+7>>0]=HEAP8[$agg$tmp$i+7>>0]|0;
 $this$addr$i$i64 = $this1$i66;
 HEAP32[$__t1$addr$i$i>>2] = $5;
 $this1$i$i67 = $this$addr$i$i64;
 $__t$addr$i$i$i = $__t1$addr$i$i;
 $8 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $9 = HEAP32[$8>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i4$i$i = $agg$tmp2$i;
 $10 = $__t$addr$i4$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp$i$i>>2]=HEAP32[$10>>2]|0;HEAP32[$agg$tmp$i$i+4>>2]=HEAP32[$10+4>>2]|0; //@line 2435 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp3$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;HEAP8[$agg$tmp3$i$i+1>>0]=HEAP8[$agg$tmp$i$i+1>>0]|0;HEAP8[$agg$tmp3$i$i+2>>0]=HEAP8[$agg$tmp$i$i+2>>0]|0;HEAP8[$agg$tmp3$i$i+3>>0]=HEAP8[$agg$tmp$i$i+3>>0]|0;HEAP8[$agg$tmp3$i$i+4>>0]=HEAP8[$agg$tmp$i$i+4>>0]|0;HEAP8[$agg$tmp3$i$i+5>>0]=HEAP8[$agg$tmp$i$i+5>>0]|0;HEAP8[$agg$tmp3$i$i+6>>0]=HEAP8[$agg$tmp$i$i+6>>0]|0;HEAP8[$agg$tmp3$i$i+7>>0]=HEAP8[$agg$tmp$i$i+7>>0]|0;
 $this$addr$i$i$i63 = $this1$i$i67;
 HEAP32[$__t1$addr$i$i$i>>2] = $9;
 $this1$i$i$i68 = $this$addr$i$i$i63;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $11 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $12 = HEAP32[$11>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i68>>2] = $12; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__second_$i$i$i = ((($this1$i$i$i68)) + 4|0); //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i3$i$i$i = $agg$tmp3$i$i;
 $13 = $__t$addr$i3$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$__second_$i$i$i>>2]=HEAP32[$13>>2]|0;HEAP32[$__second_$i$i$i+4>>2]=HEAP32[$13+4>>2]|0; //@line 2073 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i71 = $__hold;
 $this1$i72 = $this$addr$i71;
 $this$addr$i$i70 = $this1$i72;
 $this1$i$i74 = $this$addr$i$i70;
 $this$addr$i$i$i69 = $this1$i$i74;
 $this1$i$i$i75 = $this$addr$i$i$i69;
 $14 = HEAP32[$this1$i$i$i75>>2]|0; //@line 2730 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__f_4 = ((($this1)) + 8|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i78 = $__f_4;
 $this1$i79 = $this$addr$i78;
 $this$addr$i$i77 = $this1$i79;
 $this1$i$i80 = $this$addr$i$i77;
 $this$addr$i108 = $ref$tmp6;
 $$addr$i109 = $__a;
 $this$addr$i98 = $14;
 $__f$addr$i = $this1$i$i80;
 $__a$addr$i99 = $ref$tmp6;
 $this1$i102 = $this$addr$i98;
 $this$addr$i$i97 = $this1$i102;
 $this1$i$i103 = $this$addr$i$i97;
 HEAP32[$this1$i$i103>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i102>>2] = (1244); //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i102)) + 8|0); //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $15 = $__f$addr$i; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i44$i = $15;
 $16 = $__t$addr$i44$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i42$i = $16;
 $17 = $__t$addr$i$i42$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i37$i = $retval$i43$i;
 $__t$addr$i3$i$i = $17;
 $this1$i$i45$i = $this$addr$i$i37$i;
 $18 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i33$i>>0]=HEAP8[$agg$tmp4$i$i41$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i34$i>>0]=HEAP8[$agg$tmp3$i$i40$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i35$i>>0]=HEAP8[$agg$tmp2$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i36$i>>0]=HEAP8[$agg$tmp$i$i38$i>>0]|0;
 $this$addr$i$i$i31$i = $this1$i$i45$i;
 $__u$addr$i$i$i32$i = $18;
 $this1$i$i$i47$i = $this$addr$i$i$i31$i;
 $19 = $__u$addr$i$i$i32$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i30$i = $19;
 $20 = $__t$addr$i$i$i$i30$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i28$i = $this1$i$i$i47$i;
 $__t$addr$i2$i$i$i29$i = $20;
 $this1$i$i$i$i48$i = $this$addr$i$i$i$i28$i;
 $21 = $__t$addr$i2$i$i$i29$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i27$i = $21;
 $22 = $__t$addr$i$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i48$i>>2] = $22; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $23 = HEAP32[$retval$i43$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i101>>2] = $23; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $24 = $__a$addr$i99; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i26$i = $24;
 $25 = $__t$addr$i26$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i90 = $25;
 $26 = $__t$addr$i$i90; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i22$i = $26;
 $27 = $__t$addr$i$i22$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i21$i = $retval$i$i;
 $__u$addr$i$i$i = $27;
 $this1$i$i23$i = $this$addr$i$i21$i;
 $28 = $__u$addr$i$i$i; //@line 776 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i20$i = $28;
 $29 = $__t$addr$i$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i89 = $this1$i$i23$i;
 $__u$addr$i$i$i$i = $29;
 $this1$i$i$i$i104 = $this$addr$i$i$i$i89;
 $30 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $30;
 $31 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i19$i = $this1$i$i$i$i104;
 $__t$addr$i2$i$i$i$i = $31;
 $this1$i$i$i$i24$i = $this$addr$i$i$i$i19$i;
 $32 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $32;
 $33 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i24$i>>2] = $33; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $34 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $34; //@line 1473 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp516$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp516$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp516$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp516$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp215$i>>0]=HEAP8[$agg$tmp2$i101>>0]|0;HEAP8[$agg$tmp215$i+1>>0]=HEAP8[$agg$tmp2$i101+1>>0]|0;HEAP8[$agg$tmp215$i+2>>0]=HEAP8[$agg$tmp2$i101+2>>0]|0;HEAP8[$agg$tmp215$i+3>>0]=HEAP8[$agg$tmp2$i101+3>>0]|0;
 ;HEAP8[$agg$tmp14$i>>0]=HEAP8[$agg$tmp$i100>>0]|0;
 $this$addr$i17$i = $__f_$i;
 $this1$i18$i = $this$addr$i17$i;
 $__t$addr$i$i$i94 = $agg$tmp215$i;
 $35 = $__t$addr$i$i$i94; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$35>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp516$i;
 $36 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i96>>2]=HEAP32[$36>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i96>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i96+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i96+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i96+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i95>>0]|0;
 $this$addr$i$i$i93 = $this1$i18$i;
 $this1$i$i$i105 = $this$addr$i$i$i93;
 $__t$addr$i$i$i$i92 = $agg$tmp39$i$i;
 $37 = $__t$addr$i$i$i$i92; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i91 = $37;
 $this1$i$i$i$i$i106 = $this$addr$i$i$i$i$i91;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i106>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $38 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $38;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $39 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i105>>2]=HEAP32[$39>>2]|0;HEAP32[$this1$i$i$i105+4>>2]=HEAP32[$39+4>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i83 = $__hold;
 $this1$i84 = $this$addr$i83;
 $this$addr$i$i82 = $this1$i84;
 $this1$i$i86 = $this$addr$i$i82;
 $this$addr$i$i$i81 = $this1$i$i86;
 $this1$i$i$i87 = $this$addr$i$i$i81;
 $40 = HEAP32[$this1$i$i$i87>>2]|0; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$i = $40; //@line 2741 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i5$i = $this1$i84;
 $this1$i6$i = $this$addr$i5$i;
 $this$addr$i$i4$i = $this1$i6$i;
 $this1$i$i7$i = $this$addr$i$i4$i;
 HEAP32[$this1$i$i7$i>>2] = 0; //@line 2742 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $41 = $__t$i; //@line 2743 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i33 = $__hold;
 $this1$i34 = $this$addr$i33;
 $this$addr$i$i30 = $this1$i34;
 $__p$addr$i$i31 = 0;
 $this1$i$i35 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i35;
 $this1$i$i$i37 = $this$addr$i$i$i29;
 $this$addr$i$i$i$i28 = $this1$i$i$i37;
 $this1$i$i$i$i38 = $this$addr$i$i$i$i28;
 $42 = HEAP32[$this1$i$i$i$i38>>2]|0; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__tmp$i$i32 = $42; //@line 2748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $43 = $__p$addr$i$i31; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i9$i$i18 = $this1$i$i35;
 $this1$i10$i$i41 = $this$addr$i9$i$i18;
 $this$addr$i$i8$i$i17 = $this1$i10$i$i41;
 $this1$i$i11$i$i42 = $this$addr$i$i8$i$i17;
 HEAP32[$this1$i$i11$i$i42>>2] = $43; //@line 2749 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $44 = $__tmp$i$i32; //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $tobool$i$i44 = ($44|0)!=(0|0); //@line 2750 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 if (!($tobool$i$i44)) {
  STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 $this$addr$i14$i$i16 = $this1$i$i35;
 $this1$i15$i$i46 = $this$addr$i14$i$i16;
 $this$addr$i$i13$i$i15 = $this1$i15$i$i46;
 $this1$i$i16$i$i47 = $this$addr$i$i13$i$i15;
 $__second_$i$i$i$i48 = ((($this1$i$i16$i$i47)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $45 = $__tmp$i$i32; //@line 2751 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i6$i$i26 = $__second_$i$i$i$i48;
 $__p$addr$i$i$i27 = $45;
 $this1$i7$i$i49 = $this$addr$i6$i$i26;
 $ref$i$i$i51 = HEAP32[$this1$i7$i$i49>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $46 = $__p$addr$i$i$i27; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__s_$i$i$i52 = ((($this1$i7$i$i49)) + 4|0); //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $47 = HEAP32[$__s_$i$i$i52>>2]|0; //@line 3580 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a$addr$i$i$i$i23 = $ref$i$i$i51;
 $__p$addr$i$i$i$i24 = $46;
 $__n$addr$i$i$i$i25 = $47;
 $48 = $__a$addr$i$i$i$i23; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $49 = $__p$addr$i$i$i$i24; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $50 = $__n$addr$i$i$i$i25; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i$i20 = $48;
 $__p$addr$i$i$i$i$i21 = $49;
 $$addr$i$i$i$i$i22 = $50;
 $51 = $__p$addr$i$i$i$i$i21; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i$i$i$i19 = $51;
 $52 = $__ptr$addr$i$i$i$i$i$i19; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($52); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return ($41|0); //@line 1501 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7__cloneEPNS0_6__baseIS7_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__f$addr$i = 0, $__f_ = 0, $__f_$i = 0, $__f_2 = 0, $__p$addr = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i$i = 0, $__t$addr$i$i$i$i$i24$i = 0, $__t$addr$i$i$i$i27$i = 0, $__t$addr$i$i20$i = 0, $__t$addr$i$i40$i = 0, $__t$addr$i12$i$i = 0;
 var $__t$addr$i12$i$i$i = 0, $__t$addr$i2$i$i$i$i = 0, $__t$addr$i2$i$i$i26$i = 0, $__t$addr$i3$i$i = 0, $__t$addr$i3$i35$i = 0, $__t$addr$i42$i = 0, $__t$addr$i5$i$i$i = 0, $__t$addr$i7$i$i$i = 0, $__u$addr$i$i$i$i = 0, $__u$addr$i$i$i29$i = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i$i = 0, $agg$tmp$i$i36$i = 0, $agg$tmp13$i = 0, $agg$tmp2$i = 0, $agg$tmp2$i$i = 0, $agg$tmp2$i$i$i = 0, $agg$tmp2$i$i37$i = 0, $agg$tmp214$i = 0;
 var $agg$tmp26$i$i$i = 0, $agg$tmp26$i$i32$i = 0, $agg$tmp28$i$i = 0, $agg$tmp3$i$i = 0, $agg$tmp3$i$i$i = 0, $agg$tmp3$i$i38$i = 0, $agg$tmp37$i$i$i = 0, $agg$tmp37$i$i31$i = 0, $agg$tmp39$i$i = 0, $agg$tmp4$i$i$i = 0, $agg$tmp4$i$i39$i = 0, $agg$tmp48$i$i$i = 0, $agg$tmp48$i$i30$i = 0, $agg$tmp5$i = 0, $agg$tmp5$i$i = 0, $agg$tmp5$i$i$i = 0, $agg$tmp5$i$i33$i = 0, $agg$tmp510$i$i = 0, $agg$tmp515$i = 0, $agg$tmp6$i$i = 0;
 var $agg$tmp611$i$i = 0, $agg$tmp7$i$i = 0, $ref$i$i$i$i$i = 0, $ref$i$i11$i$i$i = 0, $retval$i$i = 0, $retval$i41$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i18$i = 0, $this$addr$i$i$i$i25$i = 0, $this$addr$i$i$i28$i = 0, $this$addr$i$i19$i = 0, $this$addr$i$i34$i = 0, $this$addr$i$i4 = 0, $this$addr$i$i6$i$i$i = 0, $this$addr$i$i8 = 0;
 var $this$addr$i16$i = 0, $this$addr$i5 = 0, $this$addr$i9 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i22$i = 0, $this1$i$i$i$i46$i = 0, $this1$i$i$i45$i = 0, $this1$i$i11 = 0, $this1$i$i21$i = 0, $this1$i$i43$i = 0, $this1$i$i7 = 0, $this1$i$i9$i$i$i = 0, $this1$i10 = 0, $this1$i17$i = 0, $this1$i6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $agg$tmp48$i$i30$i = sp + 120|0;
 $agg$tmp37$i$i31$i = sp + 112|0;
 $agg$tmp26$i$i32$i = sp + 104|0;
 $agg$tmp5$i$i33$i = sp + 96|0;
 $agg$tmp$i$i36$i = sp + 319|0;
 $agg$tmp2$i$i37$i = sp + 318|0;
 $agg$tmp3$i$i38$i = sp + 317|0;
 $agg$tmp4$i$i39$i = sp + 316|0;
 $retval$i41$i = sp + 260|0;
 $agg$tmp48$i$i$i = sp + 88|0;
 $agg$tmp37$i$i$i = sp + 80|0;
 $agg$tmp26$i$i$i = sp + 72|0;
 $agg$tmp5$i$i$i = sp + 64|0;
 $agg$tmp$i$i$i = sp + 315|0;
 $agg$tmp2$i$i$i = sp + 314|0;
 $agg$tmp3$i$i$i = sp + 313|0;
 $agg$tmp4$i$i$i = sp + 312|0;
 $retval$i$i = sp + 216|0;
 $agg$tmp611$i$i = sp + 56|0;
 $agg$tmp510$i$i = sp + 48|0;
 $agg$tmp39$i$i = sp + 40|0;
 $agg$tmp28$i$i = sp + 32|0;
 $agg$tmp7$i$i = sp + 24|0;
 $agg$tmp$i$i = sp + 311|0;
 $agg$tmp2$i$i = sp + 168|0;
 $agg$tmp3$i$i = sp + 164|0;
 $agg$tmp5$i$i = sp + 310|0;
 $agg$tmp6$i$i = sp + 309|0;
 $agg$tmp515$i = sp + 16|0;
 $agg$tmp214$i = sp + 8|0;
 $agg$tmp13$i = sp;
 $agg$tmp$i = sp + 308|0;
 $agg$tmp2$i = sp + 144|0;
 $agg$tmp5$i = sp + 140|0;
 $this$addr = $this;
 $__p$addr = $__p;
 $this1 = $this$addr;
 $0 = $__p$addr; //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_ = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__f_2 = ((($this1)) + 8|0); //@line 1507 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i9 = $__f_2;
 $this1$i10 = $this$addr$i9;
 $this$addr$i$i8 = $this1$i10;
 $this1$i$i11 = $this$addr$i$i8;
 $this$addr$i5 = $0;
 $__f$addr$i = $this1$i$i;
 $__a$addr$i = $this1$i$i11;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i4 = $this1$i6;
 $this1$i$i7 = $this$addr$i$i4;
 HEAP32[$this1$i$i7>>2] = (1156); //@line 1440 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 HEAP32[$this1$i6>>2] = (1244); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__f_$i = ((($this1$i6)) + 8|0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $1 = $__f$addr$i; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i42$i = $1;
 $2 = $__t$addr$i42$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i40$i = $2;
 $3 = $__t$addr$i$i40$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i34$i = $retval$i41$i;
 $__t$addr$i3$i35$i = $3;
 $this1$i$i43$i = $this$addr$i$i34$i;
 $4 = $__t$addr$i3$i35$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i30$i>>0]=HEAP8[$agg$tmp4$i$i39$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i31$i>>0]=HEAP8[$agg$tmp3$i$i38$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i32$i>>0]=HEAP8[$agg$tmp2$i$i37$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i33$i>>0]=HEAP8[$agg$tmp$i$i36$i>>0]|0;
 $this$addr$i$i$i28$i = $this1$i$i43$i;
 $__u$addr$i$i$i29$i = $4;
 $this1$i$i$i45$i = $this$addr$i$i$i28$i;
 $5 = $__u$addr$i$i$i29$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i27$i = $5;
 $6 = $__t$addr$i$i$i$i27$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i25$i = $this1$i$i$i45$i;
 $__t$addr$i2$i$i$i26$i = $6;
 $this1$i$i$i$i46$i = $this$addr$i$i$i$i25$i;
 $7 = $__t$addr$i2$i$i$i26$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i24$i = $7;
 $8 = $__t$addr$i$i$i$i$i24$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i46$i>>2] = $8; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $9 = HEAP32[$retval$i41$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp2$i>>2] = $9; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $10 = $__a$addr$i; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i$i = $10;
 $11 = $__t$addr$i$i; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i20$i = $11;
 $12 = $__t$addr$i$i20$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i19$i = $retval$i$i;
 $__t$addr$i3$i$i = $12;
 $this1$i$i21$i = $this$addr$i$i19$i;
 $13 = $__t$addr$i3$i$i; //@line 691 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 ;HEAP8[$agg$tmp48$i$i$i>>0]=HEAP8[$agg$tmp4$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp37$i$i$i>>0]=HEAP8[$agg$tmp3$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp26$i$i$i>>0]=HEAP8[$agg$tmp2$i$i$i>>0]|0;
 ;HEAP8[$agg$tmp5$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
 $this$addr$i$i$i$i = $this1$i$i21$i;
 $__u$addr$i$i$i$i = $13;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $14 = $__u$addr$i$i$i$i; //@line 419 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i = $14;
 $15 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i$i18$i = $this1$i$i$i$i;
 $__t$addr$i2$i$i$i$i = $15;
 $this1$i$i$i$i22$i = $this$addr$i$i$i$i18$i;
 $16 = $__t$addr$i2$i$i$i$i; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i$i$i$i$i$i = $16;
 $17 = $__t$addr$i$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 HEAP32[$this1$i$i$i$i22$i>>2] = $17; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $18 = HEAP32[$retval$i$i>>2]|0; //@line 1109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 HEAP32[$agg$tmp5$i>>2] = $18; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 ;HEAP8[$agg$tmp515$i>>0]=HEAP8[$agg$tmp5$i>>0]|0;HEAP8[$agg$tmp515$i+1>>0]=HEAP8[$agg$tmp5$i+1>>0]|0;HEAP8[$agg$tmp515$i+2>>0]=HEAP8[$agg$tmp5$i+2>>0]|0;HEAP8[$agg$tmp515$i+3>>0]=HEAP8[$agg$tmp5$i+3>>0]|0;
 ;HEAP8[$agg$tmp214$i>>0]=HEAP8[$agg$tmp2$i>>0]|0;HEAP8[$agg$tmp214$i+1>>0]=HEAP8[$agg$tmp2$i+1>>0]|0;HEAP8[$agg$tmp214$i+2>>0]=HEAP8[$agg$tmp2$i+2>>0]|0;HEAP8[$agg$tmp214$i+3>>0]=HEAP8[$agg$tmp2$i+3>>0]|0;
 ;HEAP8[$agg$tmp13$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $this$addr$i16$i = $__f_$i;
 $this1$i17$i = $this$addr$i16$i;
 $__t$addr$i$i$i = $agg$tmp214$i;
 $19 = $__t$addr$i$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp2$i$i>>2]=HEAP32[$19>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i12$i$i = $agg$tmp515$i;
 $20 = $__t$addr$i12$i$i; //@line 2206 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$agg$tmp3$i$i>>2]=HEAP32[$20>>2]|0; //@line 2477 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 ;HEAP8[$agg$tmp611$i$i>>0]=HEAP8[$agg$tmp6$i$i>>0]|0;
 ;HEAP8[$agg$tmp510$i$i>>0]=HEAP8[$agg$tmp5$i$i>>0]|0;
 ;HEAP8[$agg$tmp39$i$i>>0]=HEAP8[$agg$tmp3$i$i>>0]|0;HEAP8[$agg$tmp39$i$i+1>>0]=HEAP8[$agg$tmp3$i$i+1>>0]|0;HEAP8[$agg$tmp39$i$i+2>>0]=HEAP8[$agg$tmp3$i$i+2>>0]|0;HEAP8[$agg$tmp39$i$i+3>>0]=HEAP8[$agg$tmp3$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp28$i$i>>0]=HEAP8[$agg$tmp2$i$i>>0]|0;HEAP8[$agg$tmp28$i$i+1>>0]=HEAP8[$agg$tmp2$i$i+1>>0]|0;HEAP8[$agg$tmp28$i$i+2>>0]=HEAP8[$agg$tmp2$i$i+2>>0]|0;HEAP8[$agg$tmp28$i$i+3>>0]=HEAP8[$agg$tmp2$i$i+3>>0]|0;
 ;HEAP8[$agg$tmp7$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i17$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__t$addr$i$i$i$i = $agg$tmp39$i$i;
 $21 = $__t$addr$i$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i$i$i$i = $21;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $ref$i$i$i$i$i = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i12$i$i$i = $ref$i$i$i$i$i;
 $__t$addr$i7$i$i$i = $agg$tmp28$i$i;
 $22 = $__t$addr$i7$i$i$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $this$addr$i$i6$i$i$i = $22;
 $this1$i$i9$i$i$i = $this$addr$i$i6$i$i$i;
 $ref$i$i11$i$i$i = HEAP32[$this1$i$i9$i$i$i>>2]|0; //@line 299 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/tuple"
 $__t$addr$i5$i$i$i = $ref$i$i11$i$i$i;
 $23 = $__t$addr$i5$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP32[$this1$i$i$i>>2]=HEAP32[$23>>2]|0;HEAP32[$this1$i$i$i+4>>2]=HEAP32[$23+4>>2]|0; //@line 2306 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7destroyEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return; //@line 1515 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE18destroy_deallocateEv($this) {
 $this = $this|0;
 var $$addr$i = 0, $$addr$i6 = 0, $0 = 0, $1 = 0, $__a = 0, $__f_ = 0, $__p$addr$i = 0, $__ptr$addr$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__a = sp + 36|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1523 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i5 = $__a;
 $$addr$i6 = $this1$i$i;
 $this$addr$i3 = $__a;
 $__p$addr$i = $this1;
 $$addr$i = 1;
 $0 = $__p$addr$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i = $0;
 $1 = $__ptr$addr$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($1); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 STACKTOP = sp;return; //@line 1526 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEEclEOS6_($this,$__arg) {
 $this = $this|0;
 $__arg = $__arg|0;
 var $0 = 0, $1 = 0, $__arg$addr = 0, $__f_ = 0, $__t$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__arg$addr = $__arg;
 $this1 = $this$addr;
 $__f_ = ((($this1)) + 8|0); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $__f_;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $0 = $__arg$addr; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ14translateChilddE3__2P5HNodeEEEvDpOT_($this1$i$i,$1); //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 STACKTOP = sp;return; //@line 1533 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE6targetERKSt9type_info($this,$__ti) {
 $this = $this|0;
 $__ti = $__ti|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__arg$addr$i = 0, $__f_ = 0, $__ti$addr = 0, $__type_name$i = 0, $__type_name2$i = 0, $cmp$i = 0, $retval = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i3 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $this$addr = $this;
 $__ti$addr = $__ti;
 $this1 = $this$addr;
 $0 = $__ti$addr; //@line 1542 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 $this$addr$i = $0;
 $__arg$addr$i = 256;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $2 = $__arg$addr$i; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $__type_name2$i = ((($2)) + 4|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $3 = HEAP32[$__type_name2$i>>2]|0; //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $cmp$i = ($1|0)==($3|0); //@line 129 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 if ($cmp$i) {
  $__f_ = ((($this1)) + 8|0); //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $this$addr$i3 = $__f_;
  $this1$i4 = $this$addr$i3;
  $this$addr$i$i = $this1$i4;
  $this1$i$i = $this$addr$i$i;
  $retval = $this1$i$i; //@line 1543 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 } else {
  $retval = 0; //@line 1544 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  $4 = $retval; //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
  STACKTOP = sp;return ($4|0); //@line 1545 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
 }
 return (0)|0;
}
function __ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE11target_typeEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return (256|0); //@line 1551 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/functional"
}
function __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRZ14translateChilddE3__2P5HNodeEEEvDpOT_($__args,$__args1) {
 $__args = $__args|0;
 $__args1 = $__args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__args$addr = 0, $__args$addr$i = 0, $__args$addr2 = 0, $__f$addr$i = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i2$i = 0, $__t$addr$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $__args$addr = $__args;
 $__args$addr2 = $__args1;
 $0 = $__args$addr; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $2 = $__args$addr2; //@line 359 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
 $__t$addr$i4 = $2;
 $3 = $__t$addr$i4; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__f$addr$i = $1;
 $__args$addr$i = $3;
 $4 = $__f$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i$i = $4;
 $5 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $6 = $__args$addr$i; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__t$addr$i2$i = $6;
 $7 = $__t$addr$i2$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $8 = HEAP32[$7>>2]|0; //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZZ14translateChilddENK3__2clEP5HNode($5,$8); //@line 4319 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 STACKTOP = sp;return; //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__functional_base"
}
function __ZZ14translateChilddENK3__2clEP5HNode($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0, $add = 0.0, $add8 = 0.0;
 var $cmp = 0, $mul = 0.0, $mul4 = 0.0, $mul7 = 0.0, $node$addr = 0, $parent = 0, $parent2 = 0, $r = 0, $this$addr = 0, $this1 = 0, $y = 0, $y6 = 0, $y9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $node$addr = $node;
 $this1 = $this$addr;
 $0 = $node$addr; //@line 465 "hierarchy.cpp"
 $parent2 = ((($0)) + 44|0); //@line 465 "hierarchy.cpp"
 $1 = HEAP32[$parent2>>2]|0; //@line 465 "hierarchy.cpp"
 $parent = $1; //@line 465 "hierarchy.cpp"
 $2 = +HEAPF64[$this1>>3]; //@line 467 "hierarchy.cpp"
 $3 = $node$addr; //@line 467 "hierarchy.cpp"
 $r = ((($3)) + 16|0); //@line 467 "hierarchy.cpp"
 $4 = +HEAPF64[$r>>3]; //@line 467 "hierarchy.cpp"
 $mul = $4 * $2; //@line 467 "hierarchy.cpp"
 HEAPF64[$r>>3] = $mul; //@line 467 "hierarchy.cpp"
 $5 = $parent; //@line 469 "hierarchy.cpp"
 $cmp = ($5|0)!=(0|0); //@line 469 "hierarchy.cpp"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 474 "hierarchy.cpp"
 }
 $6 = $parent; //@line 471 "hierarchy.cpp"
 $7 = +HEAPF64[$6>>3]; //@line 471 "hierarchy.cpp"
 $8 = +HEAPF64[$this1>>3]; //@line 471 "hierarchy.cpp"
 $9 = $node$addr; //@line 471 "hierarchy.cpp"
 $10 = +HEAPF64[$9>>3]; //@line 471 "hierarchy.cpp"
 $mul4 = $8 * $10; //@line 471 "hierarchy.cpp"
 $add = $7 + $mul4; //@line 471 "hierarchy.cpp"
 $11 = $node$addr; //@line 471 "hierarchy.cpp"
 HEAPF64[$11>>3] = $add; //@line 471 "hierarchy.cpp"
 $12 = $parent; //@line 472 "hierarchy.cpp"
 $y = ((($12)) + 8|0); //@line 472 "hierarchy.cpp"
 $13 = +HEAPF64[$y>>3]; //@line 472 "hierarchy.cpp"
 $14 = +HEAPF64[$this1>>3]; //@line 472 "hierarchy.cpp"
 $15 = $node$addr; //@line 472 "hierarchy.cpp"
 $y6 = ((($15)) + 8|0); //@line 472 "hierarchy.cpp"
 $16 = +HEAPF64[$y6>>3]; //@line 472 "hierarchy.cpp"
 $mul7 = $14 * $16; //@line 472 "hierarchy.cpp"
 $add8 = $13 + $mul7; //@line 472 "hierarchy.cpp"
 $17 = $node$addr; //@line 472 "hierarchy.cpp"
 $y9 = ((($17)) + 8|0); //@line 472 "hierarchy.cpp"
 HEAPF64[$y9>>3] = $add8; //@line 472 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 474 "hierarchy.cpp"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE9push_backERKS2_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0;
 var $__a$addr$i$i = 0, $__annotator = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__end_ = 0, $__end_3 = 0, $__end_5 = 0, $__end_cap_$i = 0, $__end_cap_$i10 = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i14 = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__x$addr = 0, $agg$tmp$i = 0, $agg$tmp1$i = 0;
 var $cmp = 0, $incdec$ptr = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i13 = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i7 = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i12 = 0, $this1$i$i11 = 0, $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 89|0;
 $__annotator = sp + 88|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $__end_ = ((($this1)) + 4|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $1 = HEAP32[$this1$i$i$i>>2]|0; //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=($1|0); //@line 1585 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp) {
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator,$this1,1); //@line 1587 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i8 = $this1;
  $this1$i9 = $this$addr$i8;
  $__end_cap_$i10 = ((($this1$i9)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i7 = $__end_cap_$i10;
  $this1$i$i11 = $this$addr$i$i7;
  $this$addr$i$i$i6 = $this1$i$i11;
  $this1$i$i$i12 = $this$addr$i$i$i6;
  $__end_3 = ((($this1)) + 4|0); //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $2 = HEAP32[$__end_3>>2]|0; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i = $2;
  $3 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $4 = $__x$addr; //@line 1589 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i = $this1$i$i$i12;
  $__p$addr$i14 = $3;
  $__args$addr$i = $4;
  $5 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $6 = $__p$addr$i14; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $7 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i = $7;
  $8 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
  $__a$addr$i$i = $5;
  $__p$addr$i$i = $6;
  $__args$addr$i$i = $8;
  $9 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $11 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $11;
  $12 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i13 = $9;
  $__p$addr$i$i$i = $10;
  $__args$addr$i$i$i = $12;
  $13 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $14 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $14;
  $15 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $16 = HEAP32[$15>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$13>>2] = $16; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator); //@line 1590 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_5 = ((($this1)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $17 = HEAP32[$__end_5>>2]|0; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr = ((($17)) + 4|0); //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_5>>2] = $incdec$ptr; //@line 1591 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1595 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $18 = $__x$addr; //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this1,$18); //@line 1594 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1595 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE6resizeEjRKS2_($this,$__sz,$__x) {
 $this = $this|0;
 $__sz = $__sz|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__cs = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_$i4$i = 0, $__end_2$i$i = 0, $__end_cap_$i$i$i = 0, $__new_last$addr$i = 0, $__new_last$addr$i$i = 0, $__old_size$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0;
 var $__p$addr$i$i$i$i$i = 0, $__p$addr$i5$i$i = 0, $__sz$addr = 0, $__x$addr = 0, $add$ptr = 0, $agg$tmp$i$i$i = 0, $agg$tmp1$i$i$i = 0, $cmp = 0, $cmp$i$i = 0, $cmp2 = 0, $incdec$ptr$i$i = 0, $sub = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0;
 var $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i2$i = 0, $this$addr$i5 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i3$i = 0, $this1$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $agg$tmp1$i$i$i = sp;
 $agg$tmp$i$i$i = sp + 88|0;
 $this$addr = $this;
 $__sz$addr = $__sz;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cs = $sub$ptr$div$i; //@line 2005 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__cs; //@line 2006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__sz$addr; //@line 2006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($2>>>0)<($3>>>0); //@line 2006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp) {
  $4 = $__sz$addr; //@line 2007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $5 = $__cs; //@line 2007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub = (($4) - ($5))|0; //@line 2007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = $__x$addr; //@line 2007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8__appendEjRKS2_($this1,$sub,$6); //@line 2007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 2010 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $7 = $__cs; //@line 2008 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = $__sz$addr; //@line 2008 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp2 = ($7>>>0)>($8>>>0); //@line 2008 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp2)) {
  STACKTOP = sp;return; //@line 2010 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $9 = HEAP32[$this1>>2]|0; //@line 2009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $10 = $__sz$addr; //@line 2009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($9) + ($10<<2)|0); //@line 2009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i5 = $this1;
 $__new_last$addr$i = $add$ptr;
 $this1$i6 = $this$addr$i5;
 $this$addr$i$i = $this1$i6;
 $this1$i$i = $this$addr$i$i;
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = HEAP32[$__end_$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $11; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $12; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__old_size$i = $sub$ptr$div$i$i; //@line 812 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = $__new_last$addr$i; //@line 813 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i2$i = $this1$i6;
 $__new_last$addr$i$i = $13;
 $this1$i3$i = $this$addr$i2$i;
 while(1) {
  $14 = $__new_last$addr$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i4$i = ((($this1$i3$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $15 = HEAP32[$__end_$i4$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i = ($14|0)!=($15|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i)) {
   break;
  }
  $this$addr$i$i$i = $this1$i3$i;
  $this1$i$i$i = $this$addr$i$i$i;
  $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i = $__end_cap_$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $this$addr$i$i$i$i$i = $this1$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $__end_2$i$i = ((($this1$i3$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $16 = HEAP32[$__end_2$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i = ((($16)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i>>2] = $incdec$ptr$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i = $incdec$ptr$i$i;
  $17 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i = $this1$i$i$i$i$i;
  $__p$addr$i5$i$i = $17;
  $18 = $__a$addr$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $19 = $__p$addr$i5$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $__a$addr$i$i$i$i = $18;
  $__p$addr$i$i$i$i = $19;
  $20 = $__a$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $21 = $__p$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i = $20;
  $__p$addr$i$i$i$i$i = $21;
 }
 $22 = $__old_size$i; //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(213,($this1$i6|0),($22|0)); //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = __THREW__; __THREW__ = 0;
 $24 = $23&1;
 if ($24) {
  $25 = ___cxa_find_matching_catch_3(0|0)|0;
  $26 = tempRet0;
  ___clang_call_terminate($25); //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  // unreachable; //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  STACKTOP = sp;return; //@line 2010 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZN10emscripten8internal12VectorAccessINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getERKS8_j($agg$result,$v,$index) {
 $agg$result = $agg$result|0;
 $v = $v|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__end_$i = 0, $__n$addr$i = 0, $arrayidx$i = 0, $cmp = 0, $index$addr = 0, $sub$ptr$div$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$sub$i = 0, $this$addr$i = 0, $this$addr$i2 = 0, $this1$i = 0;
 var $this1$i3 = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $v$addr = $v;
 $index$addr = $index;
 $0 = $index$addr; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $v$addr; //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i = $1;
 $this1$i = $this$addr$i;
 $__end_$i = ((($this1$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = HEAP32[$this1$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $3; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0>>>0)<($sub$ptr$div$i>>>0); //@line 1467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($cmp) {
  $4 = $v$addr; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $5 = $index$addr; //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $this$addr$i2 = $4;
  $__n$addr$i = $5;
  $this1$i3 = $this$addr$i2;
  $6 = HEAP32[$this1$i3>>2]|0; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $7 = $__n$addr$i; //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $arrayidx$i = (($6) + ($7<<2)|0); //@line 1508 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZN10emscripten3valC2IRKP5HNodeEEOT_($agg$result,$arrayidx$i); //@line 1468 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  STACKTOP = sp;return; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 } else {
  __ZN10emscripten3val9undefinedEv($agg$result); //@line 1470 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  STACKTOP = sp;return; //@line 1472 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
}
function __ZN10emscripten8internal12VectorAccessINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3setERS8_jRKS5_($v,$index,$value) {
 $v = $v|0;
 $index = $index|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__n$addr$i = 0, $arrayidx$i = 0, $index$addr = 0, $this$addr$i = 0, $this1$i = 0, $v$addr = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $v$addr = $v;
 $index$addr = $index;
 $value$addr = $value;
 $0 = $value$addr; //@line 1479 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 1479 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $v$addr; //@line 1479 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $index$addr; //@line 1479 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i = $2;
 $__n$addr$i = $3;
 $this1$i = $this$addr$i;
 $4 = HEAP32[$this1$i>>2]|0; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = $__n$addr$i; //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $arrayidx$i = (($4) + ($5<<2)|0); //@line 1499 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$arrayidx$i>>2] = $1; //@line 1479 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return 1; //@line 1480 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i27 = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0;
 var $__end_$i20 = 0, $__end_7 = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i$i = 0, $__ms$i = 0, $__new_size$addr$i = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i28 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i = 0;
 var $agg$tmp$i$i = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $call$i = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i25 = 0;
 var $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i22 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i23 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i24 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i12 = 0, $this$addr$i$i$i26 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i13 = 0;
 var $this$addr$i10 = 0, $this$addr$i14 = 0, $this$addr$i18 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i17 = 0, $this1$i$i16 = 0, $this1$i11 = 0, $this1$i15 = 0, $this1$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $agg$tmp1$i = sp + 8|0;
 $agg$tmp$i = sp + 201|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 200|0;
 $__new_size$addr$i = sp + 80|0;
 $ref$tmp$i = sp + 68|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__a = $this1$i$i$i; //@line 1572 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $__end_$i = ((($this1$i11)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $0 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$this1$i11>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + 1)|0; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i14 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i15 = $this$addr$i14;
 $call$i = (__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this1$i15)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $3 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($2>>>0)>($3>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i15); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i13 = $this1$i15;
 $this1$i$i16 = $this$addr$i$i13;
 $this$addr$i$i$i12 = $this1$i$i16;
 $this1$i$i$i17 = $this$addr$i$i$i12;
 $this$addr$i$i$i$i = $this1$i$i$i17;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i$i17>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $7 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($7>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($6>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $8 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $8; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $9 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $9<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $10 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $11 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
  $__a$addr$i$i$i = $10;
  $__b$addr$i$i$i = $11;
  $12 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $13 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i;
  $__x$addr$i$i$i$i = $12;
  $__y$addr$i$i$i$i = $13;
  $14 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $15 = HEAP32[$14>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $16 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $17 = HEAP32[$16>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($15>>>0)<($17>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $18 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $19 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $18 : $19; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $20 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $20; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $21 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i20 = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__end_$i20>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i22 = $22; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i23 = $23; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i24 = (($sub$ptr$lhs$cast$i22) - ($sub$ptr$rhs$cast$i23))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i25 = (($sub$ptr$sub$i24|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = $__a; //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEEC2EjjS5_($__v,$21,$sub$ptr$div$i25,$24); //@line 1573 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = $__a; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($__v)) + 8|0); //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = HEAP32[$__end_>>2]|0; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i = $26;
 $27 = $__p$addr$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $28 = $__x$addr; //@line 1575 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__t$addr$i = $28;
 $29 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $__a$addr$i = $25;
 $__p$addr$i28 = $27;
 $__args$addr$i = $29;
 $30 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $31 = $__p$addr$i28; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $32 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i = $32;
 $33 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__a$addr$i$i27 = $30;
 $__p$addr$i$i = $31;
 $__args$addr$i$i = $33;
 $34 = $__a$addr$i$i27; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $35 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $36 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i = $36;
 $37 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $this$addr$i$i$i26 = $34;
 $__p$addr$i$i$i = $35;
 $__args$addr$i$i$i = $37;
 $38 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $39 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__t$addr$i$i$i$i = $39;
 $40 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $41 = HEAP32[$40>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$38>>2] = $41; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__end_7 = ((($__v)) + 8|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $42 = HEAP32[$__end_7>>2]|0; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $incdec$ptr = ((($42)) + 4|0); //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_7>>2] = $incdec$ptr; //@line 1576 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(186,($this1|0),($__v|0)); //@line 1577 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $45 = ___cxa_find_matching_catch_2()|0;
  $46 = tempRet0;
  $exn$slot = $45; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $46; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1578 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8__appendEjRKS2_($this,$__n,$__x) {
 $this = $this|0;
 $__n = $__n|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__a$addr$i$i = 0;
 var $__a$addr$i$i$i = 0, $__a$addr$i$i$i24 = 0, $__a$addr$i$i26 = 0, $__a$i = 0, $__annotator$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__args$addr$i$i$i$i = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_ = 0, $__end_$i = 0, $__end_$i23 = 0, $__end_$i39 = 0, $__end_3$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i = 0, $__end_cap_$i$i$i$i = 0, $__end_cap_$i18 = 0;
 var $__ms$i = 0, $__n$addr = 0, $__n$addr$i = 0, $__new_size$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i5$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__v = 0, $__x$addr = 0, $__x$addr$i = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add = 0, $agg$tmp$i$i = 0, $agg$tmp$i$i27 = 0, $agg$tmp1$i$i = 0;
 var $agg$tmp1$i$i25 = 0, $call$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i$i = 0, $cmp$i33 = 0, $cmp3$i = 0, $cond$lvalue$i$i$i2D = 0, $dec$i = 0, $div$i = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $incdec$ptr$i = 0, $mul$i = 0, $ref$tmp$i = 0, $retval$i = 0, $sel = 0, $sub$ptr$div = 0, $sub$ptr$div$i = 0;
 var $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i44 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i41 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i42 = 0, $sub$ptr$sub = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i43 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i28 = 0, $this$addr$i$i$i14 = 0, $this$addr$i$i$i29 = 0, $this$addr$i$i$i4$i = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i$i8 = 0, $this$addr$i$i15 = 0, $this$addr$i$i30 = 0, $this$addr$i$i9 = 0, $this$addr$i10 = 0, $this$addr$i16 = 0, $this$addr$i21 = 0, $this$addr$i31 = 0, $this$addr$i37 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0;
 var $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i36 = 0, $this1$i$i$i13 = 0, $this1$i$i$i20 = 0, $this1$i$i$i35 = 0, $this1$i$i12 = 0, $this1$i$i19 = 0, $this1$i$i34 = 0, $this1$i11 = 0, $this1$i17 = 0, $this1$i22 = 0, $this1$i32 = 0, $this1$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $agg$tmp1$i$i25 = sp + 8|0;
 $agg$tmp$i$i27 = sp + 242|0;
 $__new_size$addr$i = sp + 176|0;
 $ref$tmp$i = sp + 164|0;
 $agg$tmp1$i$i = sp;
 $agg$tmp$i$i = sp + 241|0;
 $__annotator$i = sp + 240|0;
 $__v = sp + 20|0;
 $this$addr = $this;
 $__n$addr = $__n;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $0 = HEAP32[$this1$i$i$i>>2]|0; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_>>2]|0; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast = $0; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast = $1; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div = (($sub$ptr$sub|0) / 4)&-1; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = $__n$addr; //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($sub$ptr$div>>>0)>=($2>>>0); //@line 1054 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp) {
  $3 = $__n$addr; //@line 1055 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $4 = $__x$addr; //@line 1055 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i10 = $this1;
  $__n$addr$i = $3;
  $__x$addr$i = $4;
  $this1$i11 = $this$addr$i10;
  $this$addr$i$i9 = $this1$i11;
  $this1$i$i12 = $this$addr$i$i9;
  $__end_cap_$i$i = ((($this1$i$i12)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i8 = $__end_cap_$i$i;
  $this1$i$i$i13 = $this$addr$i$i$i8;
  $this$addr$i$i$i$i = $this1$i$i$i13;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__a$i = $this1$i$i$i$i; //@line 1001 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  while(1) {
   __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotatorC2ERKS5_j($__annotator$i,$this1$i11,1); //@line 1004 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $5 = $__a$i; //@line 1005 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__end_$i = ((($this1$i11)) + 4|0); //@line 1005 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $6 = HEAP32[$__end_$i>>2]|0; //@line 1005 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__p$addr$i$i = $6;
   $7 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $8 = $__x$addr$i; //@line 1005 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__a$addr$i$i = $5;
   $__p$addr$i5$i = $7;
   $__args$addr$i$i = $8;
   $9 = $__a$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $10 = $__p$addr$i5$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $11 = $__args$addr$i$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i = $11;
   $12 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
   $__a$addr$i$i$i = $9;
   $__p$addr$i$i$i = $10;
   $__args$addr$i$i$i = $12;
   $13 = $__a$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $14 = $__p$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $15 = $__args$addr$i$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i = $15;
   $16 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $this$addr$i$i$i4$i = $13;
   $__p$addr$i$i$i$i = $14;
   $__args$addr$i$i$i$i = $16;
   $17 = $__p$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $18 = $__args$addr$i$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__t$addr$i$i$i$i$i = $18;
   $19 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
   $20 = HEAP32[$19>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   HEAP32[$17>>2] = $20; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
   $__end_3$i = ((($this1$i11)) + 4|0); //@line 1006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $21 = HEAP32[$__end_3$i>>2]|0; //@line 1006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $incdec$ptr$i = ((($21)) + 4|0); //@line 1006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   HEAP32[$__end_3$i>>2] = $incdec$ptr$i; //@line 1006 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $22 = $__n$addr$i; //@line 1007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $dec$i = (($22) + -1)|0; //@line 1007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__n$addr$i = $dec$i; //@line 1007 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i); //@line 1008 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $23 = $__n$addr$i; //@line 1009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $cmp$i = ($23>>>0)>(0); //@line 1009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   if (!($cmp$i)) {
    break;
   }
  }
  STACKTOP = sp;return; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i16 = $this1;
 $this1$i17 = $this$addr$i16;
 $__end_cap_$i18 = ((($this1$i17)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i15 = $__end_cap_$i18;
 $this1$i$i19 = $this$addr$i$i15;
 $this$addr$i$i$i14 = $this1$i$i19;
 $this1$i$i$i20 = $this$addr$i$i$i14;
 $__a = $this1$i$i$i20; //@line 1058 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i21 = $this1;
 $this1$i22 = $this$addr$i21;
 $__end_$i23 = ((($this1$i22)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $24 = HEAP32[$__end_$i23>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $25 = HEAP32[$this1$i22>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $24; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $25; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $26 = $__n$addr; //@line 1059 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add = (($sub$ptr$div$i) + ($26))|0; //@line 1059 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i31 = $this1;
 HEAP32[$__new_size$addr$i>>2] = $add;
 $this1$i32 = $this$addr$i31;
 $call$i = (__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this1$i32)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $27 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $28 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i33 = ($27>>>0)>($28>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp$i33) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i32); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i$i30 = $this1$i32;
 $this1$i$i34 = $this$addr$i$i30;
 $this$addr$i$i$i29 = $this1$i$i34;
 $this1$i$i$i35 = $this$addr$i$i$i29;
 $this$addr$i$i$i$i28 = $this1$i$i$i35;
 $this1$i$i$i$i36 = $this$addr$i$i$i$i28;
 $__end_cap_$i$i$i$i = ((($this1$i$i$i$i36)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
 $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
 $29 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $30 = HEAP32[$this1$i$i$i35>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i$i = $29; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i$i = $30; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $31 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $32 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $div$i = (($32>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp3$i = ($31>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp3$i) {
  $33 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $33; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  $34 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $mul$i = $34<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__a$addr$i$i26 = $ref$tmp$i;
  $__b$addr$i$i = $__new_size$addr$i;
  $35 = $__a$addr$i$i26; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $36 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  ;HEAP8[$agg$tmp1$i$i25>>0]=HEAP8[$agg$tmp$i$i27>>0]|0;
  $__a$addr$i$i$i24 = $35;
  $__b$addr$i$i$i = $36;
  $37 = $__a$addr$i$i$i24; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $38 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $this$addr$i$i$i7$i = $agg$tmp1$i$i25;
  $__x$addr$i$i$i$i = $37;
  $__y$addr$i$i$i$i = $38;
  $39 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $40 = HEAP32[$39>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $41 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $42 = HEAP32[$41>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cmp$i$i$i$i = ($40>>>0)<($42>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $43 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $44 = $__a$addr$i$i$i24; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $43 : $44; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $45 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $retval$i = $45; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $46 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i37 = $this1;
 $this1$i38 = $this$addr$i37;
 $__end_$i39 = ((($this1$i38)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $47 = HEAP32[$__end_$i39>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $48 = HEAP32[$this1$i38>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i41 = $47; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i42 = $48; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i43 = (($sub$ptr$lhs$cast$i41) - ($sub$ptr$rhs$cast$i42))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i44 = (($sub$ptr$sub$i43|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $49 = $__a; //@line 1059 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEEC2EjjS5_($__v,$46,$sub$ptr$div$i44,$49); //@line 1059 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $50 = $__n$addr; //@line 1060 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $51 = $__x$addr; //@line 1060 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_viii(214,($__v|0),($50|0),($51|0)); //@line 1060 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $52 = __THREW__; __THREW__ = 0;
 $53 = $52&1;
 if ($53) {
  $56 = ___cxa_find_matching_catch_2()|0;
  $57 = tempRet0;
  $exn$slot = $56; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $57; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 }
 __THREW__ = 0;
 invoke_vii(186,($this1|0),($__v|0)); //@line 1061 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $56 = ___cxa_find_matching_catch_2()|0;
  $57 = tempRet0;
  $exn$slot = $56; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $ehselector$slot = $57; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $exn = $exn$slot; //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sel = $ehselector$slot; //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  ___resumeException($exn|0);
  // unreachable;
 }
 __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEED2Ev($__v); //@line 1062 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 1063 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEE18__construct_at_endEjRKS2_($this,$__n,$__x) {
 $this = $this|0;
 $__n = $__n|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0;
 var $__a$addr$i = 0, $__a$addr$i$i = 0, $__args$addr$i = 0, $__args$addr$i$i = 0, $__args$addr$i$i$i = 0, $__end_ = 0, $__end_3 = 0, $__end_cap_$i = 0, $__n$addr = 0, $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i6 = 0, $__second_$i$i$i = 0, $__t$addr$i$i = 0, $__t$addr$i$i$i = 0, $__t$addr$i$i$i$i = 0, $__x$addr = 0, $agg$tmp$i = 0, $agg$tmp1$i = 0;
 var $cmp = 0, $dec = 0, $incdec$ptr = 0, $ref$i$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i4 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 84|0;
 $this$addr = $this;
 $__n$addr = $__n;
 $__x$addr = $__x;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $__end_cap_$i = ((($this1$i)) + 12|0); //@line 54 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 $this$addr$i$i = $__end_cap_$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__second_$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $ref$i$i$i = HEAP32[$__second_$i$i$i>>2]|0; //@line 2131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__a = $ref$i$i$i; //@line 219 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
 while(1) {
  $0 = $__a; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__end_ = ((($this1)) + 8|0); //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $1 = HEAP32[$__end_>>2]|0; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__p$addr$i6 = $1;
  $2 = $__p$addr$i6; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $3 = $__x$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__a$addr$i = $0;
  $__p$addr$i = $2;
  $__args$addr$i = $3;
  $4 = $__a$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $5 = $__p$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $6 = $__args$addr$i; //@line 1503 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i = $6;
  $7 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
  $__a$addr$i$i = $4;
  $__p$addr$i$i = $5;
  $__args$addr$i$i = $7;
  $8 = $__a$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $10 = $__args$addr$i$i; //@line 1656 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i = $10;
  $11 = $__t$addr$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $this$addr$i$i$i4 = $8;
  $__p$addr$i$i$i = $9;
  $__args$addr$i$i$i = $11;
  $12 = $__p$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $13 = $__args$addr$i$i$i; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__t$addr$i$i$i$i = $13;
  $14 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
  $15 = HEAP32[$14>>2]|0; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  HEAP32[$12>>2] = $15; //@line 1748 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__end_3 = ((($this1)) + 8|0); //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $16 = HEAP32[$__end_3>>2]|0; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $incdec$ptr = ((($16)) + 4|0); //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  HEAP32[$__end_3>>2] = $incdec$ptr; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $17 = $__n$addr; //@line 224 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $dec = (($17) + -1)|0; //@line 224 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $__n$addr = $dec; //@line 224 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $18 = $__n$addr; //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  $cmp = ($18>>>0)>(0); //@line 225 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
  if (!($cmp)) {
   break;
  }
 }
 STACKTOP = sp;return; //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/__split_buffer"
}
function __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__end_$i = 0, $__end_cap_$i$i$i = 0, $__old_size$addr = 0, $__p$addr$i$i = 0, $__p$addr$i$i16 = 0, $__p$addr$i$i20 = 0, $__p$addr$i$i9 = 0;
 var $add$ptr = 0, $add$ptr5 = 0, $add$ptr8 = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i10 = 0, $this$addr$i13 = 0, $this$addr$i17 = 0;
 var $this$addr$i21 = 0, $this$addr$i24 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i11 = 0, $this1$i14 = 0, $this1$i18 = 0, $this1$i22 = 0, $this1$i25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $this$addr = $this;
 $__old_size$addr = $__old_size;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $0 = HEAP32[$this1$i>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i = $0;
 $1 = $__p$addr$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i10 = $this1;
 $this1$i11 = $this$addr$i10;
 $2 = HEAP32[$this1$i11>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i9 = $2;
 $3 = $__p$addr$i$i9; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i24 = $this1;
 $this1$i25 = $this$addr$i24;
 $this$addr$i$i = $this1$i25;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $4 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $5 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $4; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $5; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr = (($3) + ($sub$ptr$div$i$i<<2)|0); //@line 858 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i21 = $this1;
 $this1$i22 = $this$addr$i21;
 $6 = HEAP32[$this1$i22>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i20 = $6;
 $7 = $__p$addr$i$i20; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $8 = $__old_size$addr; //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr5 = (($7) + ($8<<2)|0); //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i17 = $this1;
 $this1$i18 = $this$addr$i17;
 $9 = HEAP32[$this1$i18>>2]|0; //@line 682 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__p$addr$i$i16 = $9;
 $10 = $__p$addr$i$i16; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i13 = $this1;
 $this1$i14 = $this$addr$i13;
 $__end_$i = ((($this1$i14)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i14>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $11; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $12; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $add$ptr8 = (($10) + ($sub$ptr$div$i<<2)|0); //@line 859 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_($this1,$1,$add$ptr,$add$ptr5,$add$ptr8); //@line 858 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 860 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN10emscripten8internal11NoBaseClass6verifyINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 1009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13getActualTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEPKvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $call = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal14getLightTypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEPKvRKT_($0)|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1017 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $isnull = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $isnull = ($0|0)==(0|0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($isnull) {
  STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEED2Ev($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZdlPv($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIPKNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11NoBaseClass3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1012 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14getLightTypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEPKvRKT_($value) {
 $value = $value|0;
 var $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $value$addr = $value;
 STACKTOP = sp;return (296|0); //@line 69 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (296|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (320|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIPKNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (336|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3533|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3536|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3538|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12operator_newINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEJEEEPT_DpOT0_() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__end_$i$i = 0, $__end_cap_$i$i = 0, $__t$addr$i$i$i$i = 0, $__t$addr$i$i$i$i$i = 0, $__t1$addr$i$i$i = 0, $__t1$addr$i$i$i$i = 0, $call = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i3$i$i = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i$i = 0;
 var $this1$i4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $__t1$addr$i$i$i$i = sp + 24|0;
 $__t1$addr$i$i$i = sp + 12|0;
 $call = (__Znwj(12)|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i = $call;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 HEAP32[$this1$i$i>>2] = 0; //@line 432 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_$i$i>>2] = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_cap_$i$i = ((($this1$i$i)) + 8|0); //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i$i = $__end_cap_$i$i;
 HEAP32[$__t1$addr$i$i$i>>2] = 0;
 $this1$i4$i$i = $this$addr$i3$i$i;
 $__t$addr$i$i$i$i = $__t1$addr$i$i$i;
 $0 = $__t$addr$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $1 = HEAP32[$0>>2]|0; //@line 2431 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i$i$i = $this1$i4$i$i;
 HEAP32[$__t1$addr$i$i$i$i>>2] = $1;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $__t$addr$i$i$i$i$i = $__t1$addr$i$i$i$i;
 $2 = $__t$addr$i$i$i$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $3 = HEAP32[$2>>2]|0; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 HEAP32[$this1$i$i$i$i>>2] = $3; //@line 2252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 STACKTOP = sp;return ($call|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal7InvokerIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEJEE6invokeEPFS9_vE($fn) {
 $fn = $fn|0;
 var $0 = 0, $call = 0, $call1 = 0, $fn$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $fn$addr = $fn;
 $0 = $fn$addr; //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (FUNCTION_TABLE_i[$0 & 255]()|0); //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call1 = (__ZN10emscripten8internal11BindingTypeIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE10toWireTypeES9_($call)|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call1|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJPNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 1; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJPNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE10toWireTypeES9_($p) {
 $p = $p|0;
 var $0 = 0, $p$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $p$addr = $p;
 $0 = $p$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1280|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvRKS5_EvPS8_JSA_EE6invokeERKSC_SD_S5_($method,$wireThis,$args) {
 $method = $method|0;
 $wireThis = $wireThis|0;
 $args = $args|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $args$addr = 0, $call = 0, $call1 = 0, $memptr$adj$shifted = 0, $memptr$isvirtual = 0, $memptr$nonvirtualfn = 0, $memptr$virtualfn = 0, $method$addr = 0, $ref$tmp = 0, $vtable = 0;
 var $wireThis$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $method$addr = $method;
 $wireThis$addr = $wireThis;
 $args$addr = $args;
 $0 = $wireThis$addr; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal11BindingTypeIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeES9_($0)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $method$addr; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$1>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($1)) + 4|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$adj$shifted = $$field2 >> 1; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = (($call) + ($memptr$adj$shifted)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $$field2 & 1; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$isvirtual = ($3|0)!=(0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($memptr$isvirtual) {
  $vtable = HEAP32[$2>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $4 = (($vtable) + ($$field)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $memptr$virtualfn = HEAP32[$4>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $6 = $memptr$virtualfn;
 } else {
  $memptr$nonvirtualfn = $$field; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $6 = $memptr$nonvirtualfn;
 }
 $5 = $args$addr; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call1 = (__ZN10emscripten8internal11BindingTypeIP5HNodeE12fromWireTypeES3_($5)|0); //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$ref$tmp>>2] = $call1; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 FUNCTION_TABLE_vii[$6 & 255]($2,$ref$tmp); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEERKS8_EE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 3; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEERKS8_EE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEERKS7_EEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvRKS5_EEEPT_RKSD_($t) {
 $t = $t|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $0 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(8)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($0)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $$field; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index5 = ((($call)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11BindingTypeIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeES9_($wt) {
 $wt = $wt|0;
 var $0 = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIP5HNodeE12fromWireTypeES3_($wt) {
 $wt = $wt|0;
 var $0 = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEERKS7_EEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1284|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3541|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvjRKS5_EvPS8_JjSA_EE6invokeERKSC_SD_jS5_($method,$wireThis,$args,$args1) {
 $method = $method|0;
 $wireThis = $wireThis|0;
 $args = $args|0;
 $args1 = $args1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $args$addr = 0, $args$addr2 = 0, $call = 0, $call3 = 0, $call4 = 0, $memptr$adj$shifted = 0, $memptr$isvirtual = 0, $memptr$nonvirtualfn = 0, $memptr$virtualfn = 0;
 var $method$addr = 0, $ref$tmp = 0, $vtable = 0, $wireThis$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp;
 $method$addr = $method;
 $wireThis$addr = $wireThis;
 $args$addr = $args;
 $args$addr2 = $args1;
 $0 = $wireThis$addr; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal11BindingTypeIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeES9_($0)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $method$addr; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$1>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($1)) + 4|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$adj$shifted = $$field2 >> 1; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = (($call) + ($memptr$adj$shifted)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $$field2 & 1; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$isvirtual = ($3|0)!=(0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($memptr$isvirtual) {
  $vtable = HEAP32[$2>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $4 = (($vtable) + ($$field)|0); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $memptr$virtualfn = HEAP32[$4>>2]|0; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $7 = $memptr$virtualfn;
 } else {
  $memptr$nonvirtualfn = $$field; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $7 = $memptr$nonvirtualfn;
 }
 $5 = $args$addr; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($5)|0); //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $6 = $args$addr2; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4 = (__ZN10emscripten8internal11BindingTypeIP5HNodeE12fromWireTypeES3_($6)|0); //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$ref$tmp>>2] = $call4; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 FUNCTION_TABLE_viii[$7 & 255]($2,$call3,$ref$tmp); //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 510 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEjRKS8_EE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 4; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEjRKS8_EE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEjRKS7_EEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvjRKS5_EEEPT_RKSD_($t) {
 $t = $t|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $0 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(8)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($0)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $$field; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index5 = ((($call)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerINSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEjRKS7_EEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1296|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3546|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEKFjvEjPKS8_JEE6invokeERKSA_SC_($method,$wireThis) {
 $method = $method|0;
 $wireThis = $wireThis|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $call = 0, $call1 = 0, $call2 = 0, $memptr$adj$shifted = 0, $memptr$isvirtual = 0, $memptr$nonvirtualfn = 0, $memptr$virtualfn = 0, $method$addr = 0, $ref$tmp = 0, $vtable = 0, $wireThis$addr = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $method$addr = $method;
 $wireThis$addr = $wireThis;
 $0 = $wireThis$addr; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal11BindingTypeIPKNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeESA_($0)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $method$addr; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$1>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($1)) + 4|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$adj$shifted = $$field2 >> 1; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = (($call) + ($memptr$adj$shifted)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $$field2 & 1; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$isvirtual = ($3|0)!=(0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($memptr$isvirtual) {
  $vtable = HEAP32[$2>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $4 = (($vtable) + ($$field)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $memptr$virtualfn = HEAP32[$4>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $5 = $memptr$virtualfn;
 } else {
  $memptr$nonvirtualfn = $$field; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $5 = $memptr$nonvirtualfn;
 }
 $call1 = (FUNCTION_TABLE_ii[$5 & 255]($2)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$ref$tmp>>2] = $call1; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call2 = (__ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($ref$tmp)|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call2|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 2; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEEEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEKFjvEEEPT_RKSB_($t) {
 $t = $t|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $0 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(8)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($0)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $$field; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index5 = ((($call)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11BindingTypeIPKNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeESA_($wt) {
 $wt = $wt|0;
 var $0 = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjNS0_17AllowedRawPointerIKNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1312|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3552|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjES2_SB_JjEE6invokeEPSD_PS9_j($function,$wireThis,$args) {
 $function = $function|0;
 $wireThis = $wireThis|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $args$addr = 0, $call = 0, $call1 = 0, $call2 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $function$addr = 0, $ref$tmp = 0, $sel = 0, $wireThis$addr = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $function$addr = $function;
 $wireThis$addr = $wireThis;
 $args$addr = $args;
 $0 = $function$addr; //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $wireThis$addr; //@line 464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeEPS8_($2)|0); //@line 464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $args$addr; //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call1 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($3)|0); //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 FUNCTION_TABLE_viii[$1 & 255]($ref$tmp,$call,$call1); //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $call2 = (invoke_ii(215,($ref$tmp|0))|0); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  $exn$slot = $6; //@line 467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $ehselector$slot = $7; //@line 467 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  __ZN10emscripten3valD2Ev($ref$tmp); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $exn = $exn$slot; //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $sel = $ehselector$slot; //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  __ZN10emscripten3valD2Ev($ref$tmp); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  STACKTOP = sp;return ($call2|0); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEjEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 3; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS5_9allocatorIS8_EEEEjEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIPFNS_3valERKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjEEEPT_RKSE_($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(4)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $1; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeEPS8_($p) {
 $p = $p|0;
 var $0 = 0, $p$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $p$addr = $p;
 $0 = $p$addr; //@line 341 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 341 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS_3valERKNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1320|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3556|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten3valC2IRKP5HNodeEEOT_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $__t$addr$i = 0, $argv = 0, $call2 = 0, $call3 = 0, $call4 = 0, $this$addr = 0, $this1 = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $argv = sp;
 $this$addr = $this;
 $value$addr = $value;
 $this1 = $this$addr;
 $0 = $value$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __ZN10emscripten8internal12WireTypePackIJRKP5HNodeEEC2ES5_($argv,$1); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call2 = (__ZN10emscripten8internal6TypeIDIRKP5HNodeE3getEv()|0); //@line 322 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call3 = (__ZNK10emscripten8internal12WireTypePackIJRKP5HNodeEEcvPKvEv($argv)|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call4 = (__emval_take_value(($call2|0),($call3|0))|0); //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 HEAP32[$this1>>2] = $call4; //@line 321 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 324 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten3val9undefinedEv($agg$result) {
 $agg$result = $agg$result|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10emscripten3valC2EPNS_8internal7_EM_VALE($agg$result,(1)); //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 return; //@line 296 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal12WireTypePackIJRKP5HNodeEEC2ES5_($this,$args) {
 $this = $this|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__t$addr$i = 0, $__t$addr$i$i = 0, $args$addr = 0, $call1$i = 0, $cursor = 0, $cursor$addr$i = 0, $first$addr$i = 0, $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $cursor = sp;
 $this$addr = $this;
 $args$addr = $args;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 HEAP32[$cursor>>2] = $this1$i; //@line 221 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $0 = $args$addr; //@line 222 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $cursor$addr$i = $cursor;
 $first$addr$i = $1;
 $2 = $cursor$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $3 = $first$addr$i; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $__t$addr$i$i = $3;
 $4 = $__t$addr$i$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 $5 = HEAP32[$4>>2]|0; //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $call1$i = (__ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_($5)|0); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal20writeGenericWireTypeI5HNodeEEvRPNS0_15GenericWireTypeEPT_($2,$call1$i); //@line 214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 $6 = $cursor$addr$i; //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 __ZN10emscripten8internal21writeGenericWireTypesERPNS0_15GenericWireTypeE($6); //@line 215 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
 STACKTOP = sp;return; //@line 223 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal6TypeIDIRKP5HNodeE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIRKP5HNodeE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WireTypePackIJRKP5HNodeEEcvPKvEv($this) {
 $this = $this|0;
 var $this$addr = 0, $this$addr$i = 0, $this1 = 0, $this1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 STACKTOP = sp;return ($this1$i|0); //@line 226 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/val.h"
}
function __ZN10emscripten8internal11LightTypeIDIRKP5HNodeE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (96|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEjRKS5_EbS9_JjSB_EE6invokeEPSD_PS8_jS5_($function,$wireThis,$args,$args1) {
 $function = $function|0;
 $wireThis = $wireThis|0;
 $args = $args|0;
 $args1 = $args1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $args$addr = 0, $args$addr2 = 0, $call = 0, $call3 = 0, $call4 = 0, $call5 = 0, $call6 = 0, $function$addr = 0, $ref$tmp = 0, $wireThis$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp;
 $function$addr = $function;
 $wireThis$addr = $wireThis;
 $args$addr = $args;
 $args$addr2 = $args1;
 $0 = $function$addr; //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $wireThis$addr; //@line 464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeEPS8_($2)|0); //@line 464 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $args$addr; //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call3 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($3)|0); //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $4 = $args$addr2; //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call4 = (__ZN10emscripten8internal11BindingTypeIP5HNodeE12fromWireTypeES3_($4)|0); //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$ref$tmp>>2] = $call4; //@line 465 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call5 = (FUNCTION_TABLE_iiii[$1 & 255]($call,$call3,$ref$tmp)|0); //@line 463 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call6 = (__ZN10emscripten8internal11BindingTypeIbE10toWireTypeEb($call5)|0); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call6|0); //@line 462 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJbRNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjRKS7_EE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 4; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJbRNSt3__26vectorIP5HNodeNS4_9allocatorIS7_EEEEjRKS7_EE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJbRNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjRKS6_EEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIPFbRNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEjRKS5_EEEPT_RKSE_($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(4)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $1; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11BindingTypeIbE10toWireTypeEb($b) {
 $b = $b|0;
 var $0 = 0, $b$addr = 0, $frombool = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $frombool = $b&1;
 $b$addr = $frombool;
 $0 = $b$addr; //@line 252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $tobool = $0&1; //@line 252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($tobool|0); //@line 252 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJbRNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjRKS6_EEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1332|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3561|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass6verifyI6HBasisEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 1009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13getActualTypeI6HBasisEEPKvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $call = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal14getLightTypeIDI6HBasisEEPKvRKT_($0)|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterI6HBasisEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1017 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterI6HBasisEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI6HBasisEEvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $isnull = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $isnull = ($0|0)==(0|0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if (!($isnull)) {
  __ZdlPv($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI6HBasisE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDI6HBasisE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI6HBasisEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIP6HBasisE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK6HBasisEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIPK6HBasisE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14getLightTypeIDI6HBasisEEPKvRKT_($value) {
 $value = $value|0;
 var $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $value$addr = $value;
 STACKTOP = sp;return (72|0); //@line 69 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDI6HBasisE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (72|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIP6HBasisE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (352|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIPK6HBasisE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (368|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI6HBasisdE7getWireIS2_EEdRKMS2_dRKT_($field,$ptr) {
 $field = $field|0;
 $ptr = $ptr|0;
 var $0 = 0, $1 = 0, $2 = 0, $call = 0.0, $field$addr = 0, $memptr$offset = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $field$addr = $field;
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $field$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = HEAP32[$1>>2]|0; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($0) + ($2)|0); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (+__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($memptr$offset)); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return (+$call); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI6HBasisdE7setWireIS2_EEvRKMS2_dRT_d($field,$ptr,$value) {
 $field = $field|0;
 $ptr = $ptr|0;
 $value = +$value;
 var $0 = 0.0, $1 = 0, $2 = 0, $3 = 0, $call = 0.0, $field$addr = 0, $memptr$offset = 0, $ptr$addr = 0, $value$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $field$addr = $field;
 $ptr$addr = $ptr;
 $value$addr = $value;
 $0 = $value$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (+__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($0)); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $ptr$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $field$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = HEAP32[$2>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($1) + ($3)|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAPF64[$memptr$offset>>3] = $call; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM6HBasisdEEPT_RKS4_($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(4)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $1; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0.0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $0 = $v$addr; //@line 241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $1 = +HEAPF64[$0>>3]; //@line 241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return (+$1); //@line 241 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (864|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3586|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3590|0); //@line 389 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten4baseI6HBasisE6verifyI5HNodeEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 1041 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13getActualTypeI5HNodeEEPKvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $call = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal14getLightTypeIDI5HNodeEEPKvRKT_($0)|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten4baseI6HBasisE11getUpcasterI5HNodeEEPFPS1_PT_Ev() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (216|0); //@line 1055 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten4baseI6HBasisE13getDowncasterI5HNodeEEPFPT_PS1_Ev() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (217|0); //@line 1060 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI5HNodeEEvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $isnull = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $isnull = ($0|0)==(0|0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($isnull) {
  STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 __ZN5HNodeD2Ev($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZdlPv($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI5HNodeE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDI5HNodeE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI5HNodeEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIP5HNodeE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK5HNodeEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIPK5HNodeE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten4baseI6HBasisE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal6TypeIDI6HBasisE3getEv()|0); //@line 1044 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 return ($call|0); //@line 1044 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14getLightTypeIDI5HNodeEEPKvRKT_($value) {
 $value = $value|0;
 var $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $value$addr = $value;
 STACKTOP = sp;return (80|0); //@line 69 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten4baseI6HBasisE14convertPointerI5HNodeS1_EEPT0_PT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($0|0); //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten4baseI6HBasisE14convertPointerIS1_5HNodeEEPT0_PT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($0|0); //@line 1065 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDI5HNodeE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (80|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIP5HNodeE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (96|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIPK5HNodeE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (384|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12operator_newI5HNodeJNS_3valEEEEPT_DpOT0_($args) {
 $args = $args|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$addr$i = 0, $agg$tmp = 0, $args$addr = 0, $call = 0, $cleanup$is_active = 0, $cleanup$is_active$pre_trunc = 0, $cleanup$isactive = 0, $ehselector$slot = 0;
 var $exn = 0, $exn$slot = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp = sp + 8|0;
 $cleanup$isactive = sp + 20|0;
 $args$addr = $args;
 $call = (__Znwj(48)|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$expand_i1_val = 1;
 HEAP8[$cleanup$isactive>>0] = $$expand_i1_val;
 $0 = $args$addr; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $__t$addr$i = $0;
 $1 = $__t$addr$i; //@line 2214 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/type_traits"
 __THREW__ = 0;
 invoke_vii(218,($agg$tmp|0),($1|0)); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   $6 = ___cxa_find_matching_catch_2()|0;
   $7 = tempRet0;
   $exn$slot = $6; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   $ehselector$slot = $7; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  } else {
   __THREW__ = 0;
   invoke_vii(116,($call|0),($agg$tmp|0)); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $8 = ___cxa_find_matching_catch_2()|0;
    $9 = tempRet0;
    $exn$slot = $8; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    $ehselector$slot = $9; //@line 434 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    break;
   } else {
    $$expand_i1_val2 = 0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    HEAP8[$cleanup$isactive>>0] = $$expand_i1_val2; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    __ZN10emscripten3valD2Ev($agg$tmp); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
    STACKTOP = sp;return ($call|0); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   }
  }
 } while(0);
 $cleanup$is_active$pre_trunc = HEAP8[$cleanup$isactive>>0]|0; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $cleanup$is_active = $cleanup$is_active$pre_trunc&1; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if (!($cleanup$is_active)) {
  $exn = $exn$slot; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $sel = $ehselector$slot; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  ___resumeException($exn|0);
  // unreachable;
 }
 __ZdlPv($call); //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $exn = $exn$slot; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $sel = $ehselector$slot; //@line 433 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __ZN10emscripten8internal7InvokerIP5HNodeJONS_3valEEE6invokeEPFS3_S5_EPNS0_7_EM_VALE($fn,$args) {
 $fn = $fn|0;
 $args = $args|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $args$addr = 0, $call = 0, $call2 = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $fn$addr = 0, $ref$tmp = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $ref$tmp = sp + 8|0;
 $fn$addr = $fn;
 $args$addr = $args;
 $0 = $fn$addr; //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $args$addr; //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeIONS_3valEE12fromWireTypeEPNS0_7_EM_VALE($ref$tmp,$1); //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $call = (invoke_ii($0|0,($ref$tmp|0))|0); //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  __THREW__ = 0;
  $call2 = (invoke_ii(219,($call|0))|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if (!($5)) {
   __ZN10emscripten3valD2Ev($ref$tmp); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   STACKTOP = sp;return ($call2|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  }
 }
 $6 = ___cxa_find_matching_catch_2()|0;
 $7 = tempRet0;
 $exn$slot = $6; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $ehselector$slot = $7; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZN10emscripten3valD2Ev($ref$tmp); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $exn = $exn$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $sel = $ehselector$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeONS_3valEEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 2; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeONS_3valEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI5HNodeEEONS_3valEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIONS_3valEE12fromWireTypeEPNS0_7_EM_VALE($agg$result,$wt) {
 $agg$result = $agg$result|0;
 $wt = $wt|0;
 var $0 = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 __ZN10emscripten8internal11BindingTypeINS_3valEE12fromWireTypeEPNS0_7_EM_VALE($agg$result,$0); //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return; //@line 312 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI5HNodeEEONS_3valEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1348|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEE7getWireIS2_EEPS8_RKMS2_S8_RKT_($field,$ptr) {
 $field = $field|0;
 $ptr = $ptr|0;
 var $0 = 0, $1 = 0, $2 = 0, $call = 0, $field$addr = 0, $memptr$offset = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $field$addr = $field;
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $field$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = HEAP32[$1>>2]|0; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($0) + ($2)|0); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE10toWireTypeERKS8_($memptr$offset)|0); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEE7setWireIS2_EEvRKMS2_S8_RT_PS8_($field,$ptr,$value) {
 $field = $field|0;
 $ptr = $ptr|0;
 $value = $value|0;
 var $$addr$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__c$addr$i$i = 0, $__end_$i = 0, $__x$addr$i = 0, $agg$tmp$i$i = 0, $agg$tmp2$i$i = 0, $call = 0, $cmp$i = 0, $field$addr = 0;
 var $memptr$offset = 0, $ptr$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this1$i = 0, $this1$i$i = 0, $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $agg$tmp2$i$i = sp;
 $agg$tmp$i$i = sp + 40|0;
 $field$addr = $field;
 $ptr$addr = $ptr;
 $value$addr = $value;
 $0 = $value$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE12fromWireTypeEPS8_($0)|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $ptr$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $field$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = HEAP32[$2>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($1) + ($3)|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $this$addr$i = $memptr$offset;
 $__x$addr$i = $call;
 $this1$i = $this$addr$i;
 $4 = $__x$addr$i; //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp$i = ($this1$i|0)!=($4|0); //@line 1353 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp$i)) {
  STACKTOP = sp;return; //@line 537 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 $5 = $__x$addr$i; //@line 1355 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i = $this1$i;
 $__c$addr$i$i = $5;
 $this1$i$i = $this$addr$i$i;
 $6 = $__c$addr$i$i; //@line 379 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 ;HEAP8[$agg$tmp2$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
 $this$addr$i$i$i = $this1$i$i;
 $$addr$i$i$i = $6;
 $7 = $__x$addr$i; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$7>>2]|0; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $9 = $__x$addr$i; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_$i = ((($9)) + 4|0); //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $10 = HEAP32[$__end_$i>>2]|0; //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($this1$i,$8,$10); //@line 1356 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 537 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEEEPT_RKSA_($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(4)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $1; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal18GenericBindingTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE10toWireTypeERKS8_($v) {
 $v = $v|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $call = 0, $ehselector$slot = 0, $exn = 0, $exn$slot = 0, $sel = 0, $v$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $v$addr = $v;
 $call = (__Znwj(12)|0); //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $0 = $v$addr; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 __THREW__ = 0;
 invoke_vii(211,($call|0),($0|0)); //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  $exn$slot = $3; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
  $ehselector$slot = $4; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
  __ZdlPv($call); //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
  $exn = $exn$slot; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
  $sel = $ehselector$slot; //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
  ___resumeException($exn|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($call|0); //@line 333 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 }
 return (0)|0;
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $__a$addr$i$i = 0, $__a$addr$i$i$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i50 = 0, $__b$addr$i$i = 0, $__b$addr$i$i$i = 0, $__cap$i = 0, $__end_$i = 0, $__end_$i$i = 0, $__end_$i32 = 0, $__end_$i4$i = 0, $__end_$i70 = 0, $__end_2$i$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i$i = 0;
 var $__end_cap_$i$i$i65 = 0, $__first$addr = 0, $__first$addr$i = 0, $__first$addr$i$i = 0, $__first$addr$i$i40 = 0, $__first$addr$i43 = 0, $__growing = 0, $__i$addr$i = 0, $__i$addr$i$i = 0, $__i$addr$i$i42 = 0, $__i$addr$i4$i = 0, $__i$addr$i5$i = 0, $__last$addr = 0, $__last$addr$i = 0, $__last$addr$i$i = 0, $__last$addr$i$i41 = 0, $__last$addr$i44 = 0, $__m = 0, $__mid = 0, $__ms$i = 0;
 var $__n$addr$i = 0, $__n$addr$i$i = 0, $__n$i$i = 0, $__new_last$addr$i = 0, $__new_last$addr$i$i = 0, $__new_size = 0, $__new_size$addr$i = 0, $__old_size$i = 0, $__p$addr$i$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i5$i$i = 0, $__result$addr$i = 0, $__result$addr$i$i = 0, $__x$addr$i$i$i$i = 0, $__y$addr$i$i$i$i = 0, $add$ptr$i$i = 0, $add$ptr$i$i49 = 0, $agg$tmp$i = 0, $agg$tmp$i$i = 0;
 var $agg$tmp$i$i$i = 0, $agg$tmp$i39 = 0, $agg$tmp1$i = 0, $agg$tmp1$i$i = 0, $agg$tmp1$i$i$i = 0, $agg$tmp1$i38 = 0, $call$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$i$i$i = 0, $cmp$i$i63 = 0, $cmp3$i = 0, $cmp4 = 0, $cond$lvalue$i$i$i2D = 0, $div$i = 0, $incdec$ptr$i$i = 0, $mul$i = 0, $mul$i$i = 0, $ref$tmp$i = 0;
 var $retval$i = 0, $sub = 0, $sub$ptr$div$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i$i = 0, $sub$ptr$div$i$i17 = 0, $sub$ptr$div$i$i48 = 0, $sub$ptr$div$i$i62 = 0, $sub$ptr$div$i37 = 0, $sub$ptr$div$i75 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i$i = 0, $sub$ptr$lhs$cast$i$i14 = 0, $sub$ptr$lhs$cast$i$i45 = 0, $sub$ptr$lhs$cast$i$i59 = 0, $sub$ptr$lhs$cast$i34 = 0, $sub$ptr$lhs$cast$i72 = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0;
 var $sub$ptr$rhs$cast$i$i$i = 0, $sub$ptr$rhs$cast$i$i15 = 0, $sub$ptr$rhs$cast$i$i46 = 0, $sub$ptr$rhs$cast$i$i60 = 0, $sub$ptr$rhs$cast$i35 = 0, $sub$ptr$rhs$cast$i73 = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i$i = 0, $sub$ptr$sub$i$i16 = 0, $sub$ptr$sub$i$i47 = 0, $sub$ptr$sub$i$i61 = 0, $sub$ptr$sub$i36 = 0, $sub$ptr$sub$i74 = 0, $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0;
 var $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i$i20 = 0, $this$addr$i$i$i$i$i51 = 0, $this$addr$i$i$i$i21 = 0, $this$addr$i$i$i$i52 = 0, $this$addr$i$i$i22 = 0, $this$addr$i$i$i4$i$i = 0, $this$addr$i$i$i53 = 0, $this$addr$i$i$i7$i = 0, $this$addr$i$i23 = 0, $this$addr$i$i54 = 0, $this$addr$i18 = 0, $this$addr$i2$i = 0, $this$addr$i24 = 0, $this$addr$i30 = 0, $this$addr$i55 = 0, $this$addr$i68 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0;
 var $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i$i29 = 0, $this1$i$i$i$i$i67 = 0, $this1$i$i$i$i28 = 0, $this1$i$i$i$i66 = 0, $this1$i$i$i27 = 0, $this1$i$i$i64 = 0, $this1$i$i26 = 0, $this1$i$i57 = 0, $this1$i19 = 0, $this1$i25 = 0, $this1$i3$i = 0, $this1$i31 = 0, $this1$i56 = 0, $this1$i69 = 0, $tobool = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $agg$tmp1$i$i$i = sp + 24|0;
 $agg$tmp$i$i$i = sp + 296|0;
 $agg$tmp1$i38 = sp + 16|0;
 $agg$tmp$i39 = sp + 295|0;
 $agg$tmp1$i$i = sp + 8|0;
 $agg$tmp$i$i = sp + 294|0;
 $__new_size$addr$i = sp + 104|0;
 $ref$tmp$i = sp + 92|0;
 $agg$tmp1$i = sp;
 $agg$tmp$i = sp + 293|0;
 $__mid = sp + 32|0;
 $this$addr = $this;
 $__first$addr = $__first;
 $__last$addr = $__last;
 $this1 = $this$addr;
 $0 = $__first$addr; //@line 1391 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = $__last$addr; //@line 1391 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__first$addr$i = $0;
 $__last$addr$i = $1;
 $2 = $__first$addr$i; //@line 519 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $3 = $__last$addr$i; //@line 519 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 ;HEAP8[$agg$tmp1$i>>0]=HEAP8[$agg$tmp$i>>0]|0;
 $__first$addr$i$i = $2;
 $__last$addr$i$i = $3;
 $4 = $__last$addr$i$i; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $5 = $__first$addr$i$i; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$lhs$cast$i$i = $4; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$rhs$cast$i$i = $5; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 511 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 $__new_size = $sub$ptr$div$i$i; //@line 1391 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $6 = $__new_size; //@line 1392 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $this$addr$i$i$i = $this1$i$i;
 $this1$i$i$i = $this$addr$i$i$i;
 $__end_cap_$i$i$i = ((($this1$i$i$i)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i = $__end_cap_$i$i$i;
 $this1$i$i$i$i = $this$addr$i$i$i$i;
 $this$addr$i$i$i$i$i = $this1$i$i$i$i;
 $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
 $7 = HEAP32[$this1$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $8 = HEAP32[$this1$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i14 = $7; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i15 = $8; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i16 = (($sub$ptr$lhs$cast$i$i14) - ($sub$ptr$rhs$cast$i$i15))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i17 = (($sub$ptr$sub$i$i16|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($6>>>0)<=($sub$ptr$div$i$i17>>>0); //@line 1392 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE10deallocateEv($this1); //@line 1410 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $61 = $__new_size; //@line 1411 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i24 = $this1;
  HEAP32[$__new_size$addr$i>>2] = $61;
  $this1$i25 = $this$addr$i24;
  $call$i = (__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8max_sizeEv($this1$i25)|0); //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__ms$i = $call$i; //@line 961 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $62 = HEAP32[$__new_size$addr$i>>2]|0; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $63 = $__ms$i; //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i = ($62>>>0)>($63>>>0); //@line 962 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if ($cmp$i) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this1$i25); //@line 963 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  }
  $this$addr$i$i23 = $this1$i25;
  $this1$i$i26 = $this$addr$i$i23;
  $this$addr$i$i$i22 = $this1$i$i26;
  $this1$i$i$i27 = $this$addr$i$i$i22;
  $this$addr$i$i$i$i21 = $this1$i$i$i27;
  $this1$i$i$i$i28 = $this$addr$i$i$i$i21;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i28)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i$i20 = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i29 = $this$addr$i$i$i$i$i20;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i29;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $64 = HEAP32[$this1$i$i$i$i$i$i>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $65 = HEAP32[$this1$i$i$i27>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$lhs$cast$i$i$i = $64; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$rhs$cast$i$i$i = $65; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$sub$i$i$i = (($sub$ptr$lhs$cast$i$i$i) - ($sub$ptr$rhs$cast$i$i$i))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$div$i$i$i = (($sub$ptr$sub$i$i$i|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__cap$i = $sub$ptr$div$i$i$i; //@line 964 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $66 = $__cap$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $67 = $__ms$i; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $div$i = (($67>>>0) / 2)&-1; //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp3$i = ($66>>>0)>=($div$i>>>0); //@line 965 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if ($cmp3$i) {
   $68 = $__ms$i; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $retval$i = $68; //@line 966 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  } else {
   $69 = $__cap$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $mul$i = $69<<1; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   HEAP32[$ref$tmp$i>>2] = $mul$i; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $__a$addr$i$i = $ref$tmp$i;
   $__b$addr$i$i = $__new_size$addr$i;
   $70 = $__a$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $71 = $__b$addr$i$i; //@line 2645 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   ;HEAP8[$agg$tmp1$i$i>>0]=HEAP8[$agg$tmp$i$i>>0]|0;
   $__a$addr$i$i$i = $70;
   $__b$addr$i$i$i = $71;
   $72 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $73 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $this$addr$i$i$i7$i = $agg$tmp1$i$i;
   $__x$addr$i$i$i$i = $72;
   $__y$addr$i$i$i$i = $73;
   $74 = $__x$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $75 = HEAP32[$74>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $76 = $__y$addr$i$i$i$i; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $77 = HEAP32[$76>>2]|0; //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $cmp$i$i$i$i = ($75>>>0)<($77>>>0); //@line 708 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $78 = $__b$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $79 = $__a$addr$i$i$i; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $cond$lvalue$i$i$i2D = $cmp$i$i$i$i ? $78 : $79; //@line 2637 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
   $80 = HEAP32[$cond$lvalue$i$i$i2D>>2]|0; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
   $retval$i = $80; //@line 967 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  }
  $81 = $retval$i; //@line 968 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8allocateEj($this1,$81); //@line 1411 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $82 = $__first$addr; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $83 = $__last$addr; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $84 = $__new_size; //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j($this1,$82,$83,$84); //@line 1412 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1414 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $9 = $__last$addr; //@line 1394 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__mid>>2] = $9; //@line 1394 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__growing = 0; //@line 1395 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $10 = $__new_size; //@line 1396 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i18 = $this1;
 $this1$i19 = $this$addr$i18;
 $__end_$i = ((($this1$i19)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $11 = HEAP32[$__end_$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $12 = HEAP32[$this1$i19>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i = $11; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i = $12; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i = (($sub$ptr$sub$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp4 = ($10>>>0)>($sub$ptr$div$i>>>0); //@line 1396 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($cmp4) {
  $__growing = 1; //@line 1398 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $13 = $__first$addr; //@line 1399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__mid>>2] = $13; //@line 1399 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i30 = $this1;
  $this1$i31 = $this$addr$i30;
  $__end_$i32 = ((($this1$i31)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $14 = HEAP32[$__end_$i32>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $15 = HEAP32[$this1$i31>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$lhs$cast$i34 = $14; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$rhs$cast$i35 = $15; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$sub$i36 = (($sub$ptr$lhs$cast$i34) - ($sub$ptr$rhs$cast$i35))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$div$i37 = (($sub$ptr$sub$i36|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__i$addr$i = $__mid;
  $__n$addr$i = $sub$ptr$div$i37;
  $16 = $__i$addr$i; //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $17 = $__n$addr$i; //@line 492 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  ;HEAP8[$agg$tmp1$i38>>0]=HEAP8[$agg$tmp$i39>>0]|0;
  $__i$addr$i$i = $16;
  $__n$addr$i$i = $17;
  $18 = $__n$addr$i$i; //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $19 = $__i$addr$i$i; //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $20 = HEAP32[$19>>2]|0; //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  $add$ptr$i$i = (($20) + ($18<<2)|0); //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
  HEAP32[$19>>2] = $add$ptr$i$i; //@line 484 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/iterator"
 }
 $21 = $__first$addr; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $22 = HEAP32[$__mid>>2]|0; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $23 = HEAP32[$this1>>2]|0; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__first$addr$i43 = $21;
 $__last$addr$i44 = $22;
 $__result$addr$i = $23;
 $24 = $__first$addr$i43; //@line 1765 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__i$addr$i$i42 = $24;
 $25 = $__i$addr$i$i42; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $26 = $__last$addr$i44; //@line 1765 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__i$addr$i5$i = $26;
 $27 = $__i$addr$i5$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $28 = $__result$addr$i; //@line 1765 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__i$addr$i4$i = $28;
 $29 = $__i$addr$i4$i; //@line 1703 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__first$addr$i$i40 = $25;
 $__last$addr$i$i41 = $27;
 $__result$addr$i$i = $29;
 $30 = $__last$addr$i$i41; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $31 = $__first$addr$i$i40; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $sub$ptr$lhs$cast$i$i45 = $30; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $sub$ptr$rhs$cast$i$i46 = $31; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $sub$ptr$sub$i$i47 = (($sub$ptr$lhs$cast$i$i45) - ($sub$ptr$rhs$cast$i$i46))|0; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $sub$ptr$div$i$i48 = (($sub$ptr$sub$i$i47|0) / 4)&-1; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__n$i$i = $sub$ptr$div$i$i48; //@line 1754 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $32 = $__n$i$i; //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $cmp$i$i = ($32>>>0)>(0); //@line 1755 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 if ($cmp$i$i) {
  $33 = $__result$addr$i$i; //@line 1756 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $34 = $__first$addr$i$i40; //@line 1756 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $35 = $__n$i$i; //@line 1756 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  $mul$i$i = $35<<2; //@line 1756 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
  _memmove(($33|0),($34|0),($mul$i$i|0))|0; //@line 1756 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 }
 $36 = $__result$addr$i$i; //@line 1757 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $37 = $__n$i$i; //@line 1757 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $add$ptr$i$i49 = (($36) + ($37<<2)|0); //@line 1757 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/algorithm"
 $__m = $add$ptr$i$i49; //@line 1402 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $38 = $__growing; //@line 1403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $tobool = $38&1; //@line 1403 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if ($tobool) {
  $39 = HEAP32[$__mid>>2]|0; //@line 1404 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $40 = $__last$addr; //@line 1404 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $41 = $__new_size; //@line 1404 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i68 = $this1;
  $this1$i69 = $this$addr$i68;
  $__end_$i70 = ((($this1$i69)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $42 = HEAP32[$__end_$i70>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $43 = HEAP32[$this1$i69>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$lhs$cast$i72 = $42; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$rhs$cast$i73 = $43; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$sub$i74 = (($sub$ptr$lhs$cast$i72) - ($sub$ptr$rhs$cast$i73))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub$ptr$div$i75 = (($sub$ptr$sub$i74|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $sub = (($41) - ($sub$ptr$div$i75))|0; //@line 1404 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j($this1,$39,$40,$sub); //@line 1404 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  STACKTOP = sp;return; //@line 1414 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $44 = $__m; //@line 1406 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i55 = $this1;
 $__new_last$addr$i = $44;
 $this1$i56 = $this$addr$i55;
 $this$addr$i$i54 = $this1$i56;
 $this1$i$i57 = $this$addr$i$i54;
 $__end_$i$i = ((($this1$i$i57)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $45 = HEAP32[$__end_$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $46 = HEAP32[$this1$i$i57>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i59 = $45; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i60 = $46; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i61 = (($sub$ptr$lhs$cast$i$i59) - ($sub$ptr$rhs$cast$i$i60))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i62 = (($sub$ptr$sub$i$i61|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__old_size$i = $sub$ptr$div$i$i62; //@line 812 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $47 = $__new_last$addr$i; //@line 813 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i2$i = $this1$i56;
 $__new_last$addr$i$i = $47;
 $this1$i3$i = $this$addr$i2$i;
 while(1) {
  $48 = $__new_last$addr$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i4$i = ((($this1$i3$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $49 = HEAP32[$__end_$i4$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i63 = ($48|0)!=($49|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i63)) {
   break;
  }
  $this$addr$i$i$i53 = $this1$i3$i;
  $this1$i$i$i64 = $this$addr$i$i$i53;
  $__end_cap_$i$i$i65 = ((($this1$i$i$i64)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i52 = $__end_cap_$i$i$i65;
  $this1$i$i$i$i66 = $this$addr$i$i$i$i52;
  $this$addr$i$i$i$i$i51 = $this1$i$i$i$i66;
  $this1$i$i$i$i$i67 = $this$addr$i$i$i$i$i51;
  $__end_2$i$i = ((($this1$i3$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $50 = HEAP32[$__end_2$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i = ((($50)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i>>2] = $incdec$ptr$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i = $incdec$ptr$i$i;
  $51 = $__p$addr$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i50 = $this1$i$i$i$i$i67;
  $__p$addr$i5$i$i = $51;
  $52 = $__a$addr$i$i$i50; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $53 = $__p$addr$i5$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i>>0]|0;
  $__a$addr$i$i$i$i = $52;
  $__p$addr$i$i$i$i = $53;
  $54 = $__a$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $55 = $__p$addr$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i = $54;
  $__p$addr$i$i$i$i$i = $55;
 }
 $56 = $__old_size$i; //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(213,($this1$i56|0),($56|0)); //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $57 = __THREW__; __THREW__ = 0;
 $58 = $57&1;
 if ($58) {
  $59 = ___cxa_find_matching_catch_3(0|0)|0;
  $60 = tempRet0;
  ___clang_call_terminate($59); //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  // unreachable; //@line 814 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 } else {
  STACKTOP = sp;return; //@line 1414 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
}
function __ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE10deallocateEv($this) {
 $this = $this|0;
 var $$addr$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$addr$i = 0, $__a$addr$i$i$i$i = 0, $__a$addr$i$i$i$i$i = 0, $__end_ = 0, $__end_$i$i = 0, $__end_$i$i$i = 0, $__end_2$i$i$i = 0, $__end_cap_$i = 0, $__end_cap_$i$i$i = 0, $__end_cap_$i$i$i$i = 0, $__end_cap_$i31 = 0, $__n$addr$i = 0, $__new_last$addr$i$i$i = 0, $__old_size$i = 0;
 var $__p$addr$i = 0, $__p$addr$i$i = 0, $__p$addr$i$i$i$i = 0, $__p$addr$i$i$i$i$i = 0, $__p$addr$i$i$i$i$i$i = 0, $__p$addr$i5$i$i$i = 0, $__ptr$addr$i$i$i = 0, $agg$tmp$i$i$i$i = 0, $agg$tmp1$i$i$i$i = 0, $cmp = 0, $cmp$i$i$i = 0, $incdec$ptr$i$i$i = 0, $sub$ptr$div$i$i = 0, $sub$ptr$div$i$i26 = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i$i23 = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i$i24 = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i$i25 = 0;
 var $this$addr = 0, $this$addr$i = 0, $this$addr$i$i = 0, $this$addr$i$i$i = 0, $this$addr$i$i$i$i = 0, $this$addr$i$i$i$i$i = 0, $this$addr$i$i$i$i$i$i = 0, $this$addr$i$i$i$i$i12 = 0, $this$addr$i$i$i$i13 = 0, $this$addr$i$i$i14 = 0, $this$addr$i$i$i27 = 0, $this$addr$i$i$i4$i$i$i = 0, $this$addr$i$i$i6 = 0, $this$addr$i$i15 = 0, $this$addr$i$i28 = 0, $this$addr$i$i34 = 0, $this$addr$i$i7 = 0, $this$addr$i16 = 0, $this$addr$i29 = 0, $this$addr$i3$i = 0;
 var $this$addr$i6$i = 0, $this$addr$i8 = 0, $this1 = 0, $this1$i = 0, $this1$i$i = 0, $this1$i$i$i = 0, $this1$i$i$i$i = 0, $this1$i$i$i$i$i = 0, $this1$i$i$i$i$i$i = 0, $this1$i$i$i$i$i21 = 0, $this1$i$i$i$i20 = 0, $this1$i$i$i11 = 0, $this1$i$i$i19 = 0, $this1$i$i$i33 = 0, $this1$i$i10 = 0, $this1$i$i18 = 0, $this1$i$i32 = 0, $this1$i17 = 0, $this1$i30 = 0, $this1$i4$i = 0;
 var $this1$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $agg$tmp1$i$i$i$i = sp;
 $agg$tmp$i$i$i$i = sp + 148|0;
 $this$addr = $this;
 $this1 = $this$addr;
 $0 = HEAP32[$this1>>2]|0; //@line 940 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $cmp = ($0|0)!=(0|0); //@line 940 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 if (!($cmp)) {
  STACKTOP = sp;return; //@line 946 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i = $this1;
 $this1$i = $this$addr$i;
 $this$addr$i$i = $this1$i;
 $this1$i$i = $this$addr$i$i;
 $__end_$i$i = ((($this1$i$i)) + 4|0); //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $1 = HEAP32[$__end_$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $2 = HEAP32[$this1$i$i>>2]|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i = $1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i = $2; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i = (($sub$ptr$sub$i$i|0) / 4)&-1; //@line 640 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__old_size$i = $sub$ptr$div$i$i; //@line 738 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i3$i = $this1$i;
 $this1$i4$i = $this$addr$i3$i;
 $3 = HEAP32[$this1$i4$i>>2]|0; //@line 369 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i = $this1$i4$i;
 $__new_last$addr$i$i$i = $3;
 $this1$i$i$i = $this$addr$i$i$i;
 while(1) {
  $4 = $__new_last$addr$i$i$i; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__end_$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $5 = HEAP32[$__end_$i$i$i>>2]|0; //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $cmp$i$i$i = ($4|0)!=($5|0); //@line 424 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  if (!($cmp$i$i$i)) {
   break;
  }
  $this$addr$i$i$i$i = $this1$i$i$i;
  $this1$i$i$i$i = $this$addr$i$i$i$i;
  $__end_cap_$i$i$i$i = ((($this1$i$i$i$i)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $this$addr$i$i$i$i$i = $__end_cap_$i$i$i$i;
  $this1$i$i$i$i$i = $this$addr$i$i$i$i$i;
  $this$addr$i$i$i$i$i$i = $this1$i$i$i$i$i;
  $this1$i$i$i$i$i$i = $this$addr$i$i$i$i$i$i;
  $__end_2$i$i$i = ((($this1$i$i$i)) + 4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $6 = HEAP32[$__end_2$i$i$i>>2]|0; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $incdec$ptr$i$i$i = ((($6)) + -4|0); //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  HEAP32[$__end_2$i$i$i>>2] = $incdec$ptr$i$i$i; //@line 425 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  $__p$addr$i$i$i$i = $incdec$ptr$i$i$i;
  $7 = $__p$addr$i$i$i$i; //@line 1067 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $__a$addr$i$i$i$i = $this1$i$i$i$i$i$i;
  $__p$addr$i5$i$i$i = $7;
  $8 = $__a$addr$i$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $9 = $__p$addr$i5$i$i$i; //@line 1536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  ;HEAP8[$agg$tmp1$i$i$i$i>>0]=HEAP8[$agg$tmp$i$i$i$i>>0]|0;
  $__a$addr$i$i$i$i$i = $8;
  $__p$addr$i$i$i$i$i = $9;
  $10 = $__a$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $11 = $__p$addr$i$i$i$i$i; //@line 1668 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
  $this$addr$i$i$i4$i$i$i = $10;
  $__p$addr$i$i$i$i$i$i = $11;
 }
 $12 = $__old_size$i; //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 __THREW__ = 0;
 invoke_vii(213,($this1$i|0),($12|0)); //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $15 = ___cxa_find_matching_catch_3(0|0)|0;
  $16 = tempRet0;
  ___clang_call_terminate($15); //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
  // unreachable; //@line 740 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 }
 $this$addr$i6$i = $this1$i;
 $this$addr$i8 = $this1;
 $this1$i9 = $this$addr$i8;
 $__end_cap_$i = ((($this1$i9)) + 8|0); //@line 351 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i7 = $__end_cap_$i;
 $this1$i$i10 = $this$addr$i$i7;
 $this$addr$i$i$i6 = $this1$i$i10;
 $this1$i$i$i11 = $this$addr$i$i$i6;
 $17 = HEAP32[$this1>>2]|0; //@line 943 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i16 = $this1;
 $this1$i17 = $this$addr$i16;
 $this$addr$i$i15 = $this1$i17;
 $this1$i$i18 = $this$addr$i$i15;
 $this$addr$i$i$i14 = $this1$i$i18;
 $this1$i$i$i19 = $this$addr$i$i$i14;
 $__end_cap_$i$i$i = ((($this1$i$i$i19)) + 8|0); //@line 360 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i$i$i13 = $__end_cap_$i$i$i;
 $this1$i$i$i$i20 = $this$addr$i$i$i$i13;
 $this$addr$i$i$i$i$i12 = $this1$i$i$i$i20;
 $this1$i$i$i$i$i21 = $this$addr$i$i$i$i$i12;
 $18 = HEAP32[$this1$i$i$i$i$i21>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $19 = HEAP32[$this1$i$i18>>2]|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$lhs$cast$i$i23 = $18; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$rhs$cast$i$i24 = $19; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$sub$i$i25 = (($sub$ptr$lhs$cast$i$i23) - ($sub$ptr$rhs$cast$i$i24))|0; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $sub$ptr$div$i$i26 = (($sub$ptr$sub$i$i25|0) / 4)&-1; //@line 372 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__a$addr$i = $this1$i$i$i11;
 $__p$addr$i = $17;
 $__n$addr$i = $sub$ptr$div$i$i26;
 $20 = $__a$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $21 = $__p$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $22 = $__n$addr$i; //@line 1496 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $this$addr$i$i34 = $20;
 $__p$addr$i$i = $21;
 $$addr$i$i = $22;
 $23 = $__p$addr$i$i; //@line 1739 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/memory"
 $__ptr$addr$i$i$i = $23;
 $24 = $__ptr$addr$i$i$i; //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 __ZdlPv($24); //@line 176 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/new"
 $this$addr$i29 = $this1;
 $this1$i30 = $this$addr$i29;
 $__end_cap_$i31 = ((($this1$i30)) + 8|0); //@line 357 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $this$addr$i$i28 = $__end_cap_$i31;
 $this1$i$i32 = $this$addr$i$i28;
 $this$addr$i$i$i27 = $this1$i$i32;
 $this1$i$i$i33 = $this$addr$i$i$i27;
 HEAP32[$this1$i$i$i33>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 $__end_ = ((($this1)) + 4|0); //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$__end_>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 HEAP32[$this1>>2] = 0; //@line 944 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
 STACKTOP = sp;return; //@line 946 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/vector"
}
function __ZN10emscripten8internal12MemberAccessI5HNodedE7getWireIS2_EEdRKMS2_dRKT_($field,$ptr) {
 $field = $field|0;
 $ptr = $ptr|0;
 var $0 = 0, $1 = 0, $2 = 0, $call = 0.0, $field$addr = 0, $memptr$offset = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $field$addr = $field;
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $field$addr; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = HEAP32[$1>>2]|0; //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($0) + ($2)|0); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (+__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($memptr$offset)); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return (+$call); //@line 527 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI5HNodedE7setWireIS2_EEvRKMS2_dRT_d($field,$ptr,$value) {
 $field = $field|0;
 $ptr = $ptr|0;
 $value = +$value;
 var $0 = 0.0, $1 = 0, $2 = 0, $3 = 0, $call = 0.0, $field$addr = 0, $memptr$offset = 0, $ptr$addr = 0, $value$addr = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $field$addr = $field;
 $ptr$addr = $ptr;
 $value$addr = $value;
 $0 = $value$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (+__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($0)); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $ptr$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $field$addr; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = HEAP32[$2>>2]|0; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$offset = (($1) + ($3)|0); //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAPF64[$memptr$offset>>3] = $call; //@line 536 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM5HNodedEEPT_RKS4_($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(4)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $1; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass6verifyI9HierarchyEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 1009 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13getActualTypeI9HierarchyEEPKvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $call = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal14getLightTypeIDI9HierarchyEEPKvRKT_($0)|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 1029 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterI9HierarchyEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1017 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterI9HierarchyEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1022 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI9HierarchyEEvPT_($ptr) {
 $ptr = $ptr|0;
 var $0 = 0, $isnull = 0, $ptr$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ptr$addr = $ptr;
 $0 = $ptr$addr; //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $isnull = ($0|0)==(0|0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($isnull) {
  STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 __ZN9HierarchyD2Ev($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZdlPv($0); //@line 452 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 453 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI9HierarchyE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDI9HierarchyE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI9HierarchyEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIP9HierarchyE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK9HierarchyEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIPK9HierarchyE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14getLightTypeIDI9HierarchyEEPKvRKT_($value) {
 $value = $value|0;
 var $value$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $value$addr = $value;
 STACKTOP = sp;return (400|0); //@line 69 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN9HierarchyD2Ev($this) {
 $this = $this|0;
 var $options = 0, $this$addr = 0, $this1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $this1 = $this$addr;
 $options = ((($this1)) + 24|0); //@line 477 "hierarchy.cpp"
 __ZN10emscripten3valD2Ev($options); //@line 477 "hierarchy.cpp"
 STACKTOP = sp;return; //@line 477 "hierarchy.cpp"
}
function __ZN10emscripten8internal11LightTypeIDI9HierarchyE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (400|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIP9HierarchyE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (408|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIPK9HierarchyE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (424|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal7InvokerIP9HierarchyJNS_3valES4_EE6invokeEPFS3_S4_S4_EPNS0_7_EM_VALES9_($fn,$args,$args1) {
 $fn = $fn|0;
 $args = $args|0;
 $args1 = $args1|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $agg$tmp = 0, $agg$tmp3 = 0, $args$addr = 0, $args$addr2 = 0, $call = 0, $call7 = 0, $ehselector$slot = 0;
 var $exn = 0, $exn$slot = 0, $fn$addr = 0, $sel = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $agg$tmp = sp + 12|0;
 $agg$tmp3 = sp + 8|0;
 $fn$addr = $fn;
 $args$addr = $args;
 $args$addr2 = $args1;
 $0 = $fn$addr; //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $args$addr; //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeINS_3valEE12fromWireTypeEPNS0_7_EM_VALE($agg$tmp,$1); //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = $args$addr2; //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __THREW__ = 0;
 invoke_vii(220,($agg$tmp3|0),($2|0)); //@line 331 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  $exn$slot = $9; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $ehselector$slot = $10; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  __ZN10emscripten3valD2Ev($agg$tmp); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $exn = $exn$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $sel = $ehselector$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  ___resumeException($exn|0);
  // unreachable;
 }
 __THREW__ = 0;
 $call = (invoke_iii($0|0,($agg$tmp|0),($agg$tmp3|0))|0); //@line 330 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if (!($6)) {
  __THREW__ = 0;
  $call7 = (invoke_ii(221,($call|0))|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __ZN10emscripten3valD2Ev($agg$tmp3); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   __ZN10emscripten3valD2Ev($agg$tmp); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
   STACKTOP = sp;return ($call7|0); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  }
 }
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $exn$slot = $11; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $ehselector$slot = $12; //@line 334 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZN10emscripten3valD2Ev($agg$tmp3); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 __ZN10emscripten3valD2Ev($agg$tmp); //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $exn = $exn$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $sel = $ehselector$slot; //@line 329 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 ___resumeException($exn|0);
 // unreachable;
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP9HierarchyNS_3valES7_EE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 3; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP9HierarchyNS_3valES7_EE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI9HierarchyEENS_3valES6_EEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIP9HierarchyE10toWireTypeES3_($p) {
 $p = $p|0;
 var $0 = 0, $p$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $p$addr = $p;
 $0 = $p$addr; //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 320 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI9HierarchyEENS_3valES6_EEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1356|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal13MethodInvokerIM9HierarchyFP5HNodevES4_PS2_JEE6invokeERKS6_S7_($method,$wireThis) {
 $method = $method|0;
 $wireThis = $wireThis|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $call = 0, $call1 = 0, $call2 = 0, $memptr$adj$shifted = 0, $memptr$isvirtual = 0, $memptr$nonvirtualfn = 0, $memptr$virtualfn = 0, $method$addr = 0, $vtable = 0, $wireThis$addr = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $method$addr = $method;
 $wireThis$addr = $wireThis;
 $0 = $wireThis$addr; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $call = (__ZN10emscripten8internal11BindingTypeIP9HierarchyE12fromWireTypeES3_($0)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $1 = $method$addr; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$1>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($1)) + 4|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$adj$shifted = $$field2 >> 1; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $2 = (($call) + ($memptr$adj$shifted)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $3 = $$field2 & 1; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $memptr$isvirtual = ($3|0)!=(0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 if ($memptr$isvirtual) {
  $vtable = HEAP32[$2>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $4 = (($vtable) + ($$field)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $memptr$virtualfn = HEAP32[$4>>2]|0; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $5 = $memptr$virtualfn;
  $call1 = (FUNCTION_TABLE_ii[$5 & 255]($2)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $call2 = (__ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_($call1)|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  STACKTOP = sp;return ($call2|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 } else {
  $memptr$nonvirtualfn = $$field; //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $5 = $memptr$nonvirtualfn;
  $call1 = (FUNCTION_TABLE_ii[$5 & 255]($2)|0); //@line 494 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  $call2 = (__ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_($call1)|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
  STACKTOP = sp;return ($call2|0); //@line 493 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 }
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeNS0_17AllowedRawPointerI9HierarchyEEEE8getCountEv($this) {
 $this = $this|0;
 var $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 STACKTOP = sp;return 2; //@line 203 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP5HNodeNS0_17AllowedRawPointerI9HierarchyEEEE8getTypesEv($this) {
 $this = $this|0;
 var $call = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI5HNodeEENS3_I9HierarchyEEEEEE3getEv()|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($call|0); //@line 207 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM9HierarchyFP5HNodevEEEPT_RKS7_($t) {
 $t = $t|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $0 = 0, $call = 0, $t$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $t$addr = $t;
 $call = (__Znwj(8)|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $0 = $t$addr; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field = HEAP32[$0>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index1 = ((($0)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$call>>2] = $$field; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 $$index5 = ((($call)) + 4|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($call|0); //@line 558 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11BindingTypeIP9HierarchyE12fromWireTypeES3_($wt) {
 $wt = $wt|0;
 var $0 = 0, $wt$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $wt$addr = $wt;
 $0 = $wt$addr; //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($0|0); //@line 323 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI5HNodeEENS3_I9HierarchyEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1368|0); //@line 187 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __GLOBAL__sub_I_hierarchy_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_2();
 return;
}
function ___cxx_global_var_init_2() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(8753); //@line 95 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 return; //@line 95 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($this) {
 $this = $this|0;
 var $call = 0, $call2 = 0, $call3 = 0, $call4 = 0, $call5 = 0, $call6 = 0, $this$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $this$addr = $this;
 $call = (__ZN10emscripten8internal6TypeIDIvE3getEv()|0); //@line 98 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_void(($call|0),(3640|0)); //@line 98 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call2 = (__ZN10emscripten8internal6TypeIDIbE3getEv()|0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_bool(($call2|0),(3645|0),1,1,0); //@line 100 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc(3650); //@line 102 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc(3655); //@line 103 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc(3667); //@line 104 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc(3681); //@line 105 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerItEEvPKc(3687); //@line 106 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc(3702); //@line 107 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc(3706); //@line 108 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc(3719); //@line 109 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerImEEvPKc(3724); //@line 110 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc(3738); //@line 112 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc(3744); //@line 113 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call3 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 115 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_std_string(($call3|0),(3751|0)); //@line 115 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call4 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 116 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_std_string(($call4|0),(3763|0)); //@line 116 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call5 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 117 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_std_wstring(($call5|0),4,(3796|0)); //@line 117 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call6 = (__ZN10emscripten8internal6TypeIDINS_3valEE3getEv()|0); //@line 118 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_emval(($call6|0),(3809|0)); //@line 118 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc(3825); //@line 126 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(3855); //@line 127 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(3892); //@line 128 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(3931); //@line 130 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(3962); //@line 131 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(4002); //@line 132 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(4031); //@line 133 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc(4069); //@line 134 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc(4099); //@line 135 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(4138); //@line 137 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(4170); //@line 138 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(4203); //@line 139 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(4236); //@line 140 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(4270); //@line 141 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(4303); //@line 142 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc(4337); //@line 144 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc(4368); //@line 145 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc(4400); //@line 147 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 149 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIcE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv = -128 << 24 >> 24; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv3 = 127 << 24 >> 24; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0)); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIaE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv = -128 << 24 >> 24; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv3 = 127 << 24 >> 24; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0)); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIhE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv = 0; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv3 = 255; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),1,($conv|0),($conv3|0)); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIsE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv = -32768 << 16 >> 16; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv3 = 32767 << 16 >> 16; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),2,($conv|0),($conv3|0)); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $conv = 0, $conv3 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDItE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv = 0; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $conv3 = 65535; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),2,($conv|0),($conv3|0)); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIiE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),4,-2147483648,2147483647); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),4,0,-1); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIlE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),4,-2147483648,2147483647); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDImE3getEv()|0); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_integer(($call|0),($0|0),4,0,-1); //@line 51 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIfE3getEv()|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_float(($call|0),($0|0),4); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 58 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_float(($call|0),($0|0),8); //@line 57 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 58 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc($name) {
 $name = $name|0;
 var $0 = 0, $call = 0, $call1 = 0, $name$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $name$addr = $name;
 $call = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $call1 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $0 = $name$addr; //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($call|0),($call1|0),($0|0)); //@line 91 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (440|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (448|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (456|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (464|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (472|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (480|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (488|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (496|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (504|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (512|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (520|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (528|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (40|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (536|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (560|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (856|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDImE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (848|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (840|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (832|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (824|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDItE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (816|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (808|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (792|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (800|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
 return ($call|0); //@line 77 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (784|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (776|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (760|0); //@line 60 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/emscripten/wire.h"
}
function ___getTypeName($ti) {
 $ti = $ti|0;
 var $0 = 0, $1 = 0, $__type_name$i = 0, $call1 = 0, $this$addr$i = 0, $this1$i = 0, $ti$addr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ti$addr = $ti;
 $0 = $ti$addr; //@line 37 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 $this$addr$i = $0;
 $this1$i = $this$addr$i;
 $__type_name$i = ((($this1$i)) + 4|0); //@line 98 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $1 = HEAP32[$__type_name$i>>2]|0; //@line 98 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/include/libcxx/typeinfo"
 $call1 = (___strdup($1)|0); //@line 37 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
 STACKTOP = sp;return ($call1|0); //@line 37 "/Users/tlagier/Projects/emsdk/emscripten/incoming/system/lib/embind/bind.cpp"
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (8168|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $call = 0, $call1 = 0, $call2 = 0, $fd = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $call = (_dummy_570($0)|0);
 HEAP32[$vararg_buffer>>2] = $call;
 $call1 = (___syscall6(6,($vararg_buffer|0))|0);
 $call2 = (___syscall_ret($call1)|0);
 STACKTOP = sp;return ($call2|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr32 = 0, $buf8 = 0, $buf_size = 0, $call = 0, $call40 = 0;
 var $call7 = 0, $call741 = 0, $call746 = 0, $cmp = 0, $cmp12 = 0, $cmp17 = 0, $cmp24 = 0, $cmp42 = 0, $cnt$0 = 0, $dec = 0, $fd = 0, $incdec$ptr = 0, $iov$043 = 0, $iov$1 = 0, $iov_base2 = 0, $iov_len = 0, $iov_len19 = 0, $iov_len23 = 0, $iov_len3 = 0, $iov_len36 = 0;
 var $iovcnt$045 = 0, $iovcnt$1 = 0, $iovs = 0, $or = 0, $rem$044 = 0, $retval$0 = 0, $sub = 0, $sub$ptr$sub = 0, $sub21 = 0, $sub28 = 0, $sub37 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $wbase = 0, $wend = 0, $wend14 = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $wbase = ((($f)) + 28|0);
 $0 = HEAP32[$wbase>>2]|0;
 HEAP32[$iovs>>2] = $0;
 $iov_len = ((($iovs)) + 4|0);
 $wpos = ((($f)) + 20|0);
 $1 = HEAP32[$wpos>>2]|0;
 $sub$ptr$sub = (($1) - ($0))|0;
 HEAP32[$iov_len>>2] = $sub$ptr$sub;
 $iov_base2 = ((($iovs)) + 8|0);
 HEAP32[$iov_base2>>2] = $buf;
 $iov_len3 = ((($iovs)) + 12|0);
 HEAP32[$iov_len3>>2] = $len;
 $add = (($sub$ptr$sub) + ($len))|0;
 $fd = ((($f)) + 60|0);
 $2 = HEAP32[$fd>>2]|0;
 $3 = $iovs;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $3;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $call40 = (___syscall146(146,($vararg_buffer|0))|0);
 $call741 = (___syscall_ret($call40)|0);
 $cmp42 = ($add|0)==($call741|0);
 L1: do {
  if ($cmp42) {
   label = 3;
  } else {
   $call746 = $call741;$iov$043 = $iovs;$iovcnt$045 = 2;$rem$044 = $add;
   while(1) {
    $cmp12 = ($call746|0)<(0);
    if ($cmp12) {
     break;
    }
    $sub21 = (($rem$044) - ($call746))|0;
    $iov_len23 = ((($iov$043)) + 4|0);
    $8 = HEAP32[$iov_len23>>2]|0;
    $cmp24 = ($call746>>>0)>($8>>>0);
    $incdec$ptr = ((($iov$043)) + 8|0);
    $iov$1 = $cmp24 ? $incdec$ptr : $iov$043;
    $dec = $cmp24 << 31 >> 31;
    $iovcnt$1 = (($dec) + ($iovcnt$045))|0;
    $sub28 = $cmp24 ? $8 : 0;
    $cnt$0 = (($call746) - ($sub28))|0;
    $9 = HEAP32[$iov$1>>2]|0;
    $add$ptr32 = (($9) + ($cnt$0)|0);
    HEAP32[$iov$1>>2] = $add$ptr32;
    $iov_len36 = ((($iov$1)) + 4|0);
    $10 = HEAP32[$iov_len36>>2]|0;
    $sub37 = (($10) - ($cnt$0))|0;
    HEAP32[$iov_len36>>2] = $sub37;
    $11 = HEAP32[$fd>>2]|0;
    $12 = $iov$1;
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $12;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $iovcnt$1;
    $call = (___syscall146(146,($vararg_buffer3|0))|0);
    $call7 = (___syscall_ret($call)|0);
    $cmp = ($sub21|0)==($call7|0);
    if ($cmp) {
     label = 3;
     break L1;
    } else {
     $call746 = $call7;$iov$043 = $iov$1;$iovcnt$045 = $iovcnt$1;$rem$044 = $sub21;
    }
   }
   $wend14 = ((($f)) + 16|0);
   HEAP32[$wend14>>2] = 0;
   HEAP32[$wbase>>2] = 0;
   HEAP32[$wpos>>2] = 0;
   $6 = HEAP32[$f>>2]|0;
   $or = $6 | 32;
   HEAP32[$f>>2] = $or;
   $cmp17 = ($iovcnt$045|0)==(2);
   if ($cmp17) {
    $retval$0 = 0;
   } else {
    $iov_len19 = ((($iov$043)) + 4|0);
    $7 = HEAP32[$iov_len19>>2]|0;
    $sub = (($len) - ($7))|0;
    $retval$0 = $sub;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $buf8 = ((($f)) + 44|0);
  $4 = HEAP32[$buf8>>2]|0;
  $buf_size = ((($f)) + 48|0);
  $5 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($4) + ($5)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  HEAP32[$wbase>>2] = $4;
  HEAP32[$wpos>>2] = $4;
  $retval$0 = $len;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $call = 0, $call1 = 0, $cmp = 0, $fd = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $1 = $ret;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $call = (___syscall140(140,($vararg_buffer|0))|0);
 $call1 = (___syscall_ret($call)|0);
 $cmp = ($call1|0)<(0);
 if ($cmp) {
  HEAP32[$ret>>2] = -1;
  $2 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $2 = $$pre;
 }
 STACKTOP = sp;return ($2|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $call = 0, $cmp = 0, $retval$0 = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($r>>>0)>(4294963200);
 if ($cmp) {
  $sub = (0 - ($r))|0;
  $call = (___errno_location()|0);
  HEAP32[$call>>2] = $sub;
  $retval$0 = -1;
 } else {
  $retval$0 = $r;
 }
 return ($retval$0|0);
}
function ___errno_location() {
 var $call = 0, $errno_val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_103()|0);
 $errno_val = ((($call)) + 64|0);
 return ($errno_val|0);
}
function ___pthread_self_103() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1504|0);
}
function _dummy_570($fd) {
 $fd = $fd|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($fd|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $call = 0, $call3 = 0, $fd = 0, $lbf = 0, $tobool = 0, $tobool2 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $write = 0, $wsz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $wsz = sp + 16|0;
 $write = ((($f)) + 36|0);
 HEAP32[$write>>2] = 64;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 64;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $fd = ((($f)) + 60|0);
  $1 = HEAP32[$fd>>2]|0;
  $2 = $wsz;
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $2;
  $call = (___syscall54(54,($vararg_buffer|0))|0);
  $tobool2 = ($call|0)==(0);
  if (!($tobool2)) {
   $lbf = ((($f)) + 75|0);
   HEAP8[$lbf>>0] = -1;
  }
 }
 $call3 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($call3|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$lcssa = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $cmp = 0, $cmp7 = 0, $conv5 = 0, $conv6 = 0, $incdec$ptr = 0, $incdec$ptr4 = 0, $l$addr$010 = 0, $or$cond = 0, $or$cond9 = 0, $r$addr$011 = 0, $sub = 0, $tobool = 0, $tobool8 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $cmp7 = ($0<<24>>24)!=($1<<24>>24);
 $tobool8 = ($0<<24>>24)==(0);
 $or$cond9 = $tobool8 | $cmp7;
 if ($or$cond9) {
  $$lcssa = $1;$$lcssa6 = $0;
 } else {
  $l$addr$010 = $l;$r$addr$011 = $r;
  while(1) {
   $incdec$ptr = ((($l$addr$010)) + 1|0);
   $incdec$ptr4 = ((($r$addr$011)) + 1|0);
   $2 = HEAP8[$incdec$ptr>>0]|0;
   $3 = HEAP8[$incdec$ptr4>>0]|0;
   $cmp = ($2<<24>>24)!=($3<<24>>24);
   $tobool = ($2<<24>>24)==(0);
   $or$cond = $tobool | $cmp;
   if ($or$cond) {
    $$lcssa = $3;$$lcssa6 = $2;
    break;
   } else {
    $l$addr$010 = $incdec$ptr;$r$addr$011 = $incdec$ptr4;
   }
  }
 }
 $conv5 = $$lcssa6&255;
 $conv6 = $$lcssa&255;
 $sub = (($conv5) - ($conv6))|0;
 return ($sub|0);
}
function _memcmp($vl,$vr,$n) {
 $vl = $vl|0;
 $vr = $vr|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $cmp = 0, $cond = 0, $conv5 = 0, $conv6 = 0, $dec = 0, $incdec$ptr = 0, $incdec$ptr3 = 0, $l$012 = 0, $n$addr$011 = 0, $r$013 = 0, $sub = 0, $tobool = 0, $tobool10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool10 = ($n|0)==(0);
 L1: do {
  if ($tobool10) {
   $cond = 0;
  } else {
   $l$012 = $vl;$n$addr$011 = $n;$r$013 = $vr;
   while(1) {
    $0 = HEAP8[$l$012>>0]|0;
    $1 = HEAP8[$r$013>>0]|0;
    $cmp = ($0<<24>>24)==($1<<24>>24);
    if (!($cmp)) {
     break;
    }
    $dec = (($n$addr$011) + -1)|0;
    $incdec$ptr = ((($l$012)) + 1|0);
    $incdec$ptr3 = ((($r$013)) + 1|0);
    $tobool = ($dec|0)==(0);
    if ($tobool) {
     $cond = 0;
     break L1;
    } else {
     $l$012 = $incdec$ptr;$n$addr$011 = $dec;$r$013 = $incdec$ptr3;
    }
   }
   $conv5 = $0&255;
   $conv6 = $1&255;
   $sub = (($conv5) - ($conv6))|0;
   $cond = $sub;
  }
 } while(0);
 return ($cond|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$call21 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $add$ptr = 0, $and = 0, $and11 = 0, $and36 = 0, $ap2 = 0, $buf = 0, $buf_size = 0, $call = 0, $call21 = 0, $call2130 = 0, $call6 = 0;
 var $cmp = 0, $cmp5 = 0, $cmp7 = 0, $cond = 0, $internal_buf = 0, $lock = 0, $mode = 0, $nl_arg = 0, $nl_type = 0, $or = 0, $ret$1 = 0, $ret$1$ = 0, $retval$0 = 0, $tobool = 0, $tobool22 = 0, $tobool26 = 0, $tobool37 = 0, $tobool41 = 0, $vacopy_currentptr = 0, $wbase = 0;
 var $wend = 0, $wpos = 0, $write = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $call = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $cmp = ($call|0)<(0);
 if ($cmp) {
  $retval$0 = -1;
 } else {
  $lock = ((($f)) + 76|0);
  $0 = HEAP32[$lock>>2]|0;
  $cmp5 = ($0|0)>(-1);
  if ($cmp5) {
   $call6 = (___lockfile($f)|0);
   $cond = $call6;
  } else {
   $cond = 0;
  }
  $1 = HEAP32[$f>>2]|0;
  $and = $1 & 32;
  $mode = ((($f)) + 74|0);
  $2 = HEAP8[$mode>>0]|0;
  $cmp7 = ($2<<24>>24)<(1);
  if ($cmp7) {
   $and11 = $1 & -33;
   HEAP32[$f>>2] = $and11;
  }
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $tobool = ($3|0)==(0);
  if ($tobool) {
   $buf = ((($f)) + 44|0);
   $4 = HEAP32[$buf>>2]|0;
   HEAP32[$buf>>2] = $internal_buf;
   $wbase = ((($f)) + 28|0);
   HEAP32[$wbase>>2] = $internal_buf;
   $wpos = ((($f)) + 20|0);
   HEAP32[$wpos>>2] = $internal_buf;
   HEAP32[$buf_size>>2] = 80;
   $add$ptr = ((($internal_buf)) + 80|0);
   $wend = ((($f)) + 16|0);
   HEAP32[$wend>>2] = $add$ptr;
   $call21 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $tobool22 = ($4|0)==(0|0);
   if ($tobool22) {
    $ret$1 = $call21;
   } else {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    (FUNCTION_TABLE_iiii[$5 & 255]($f,0,0)|0);
    $6 = HEAP32[$wpos>>2]|0;
    $tobool26 = ($6|0)==(0|0);
    $$call21 = $tobool26 ? -1 : $call21;
    HEAP32[$buf>>2] = $4;
    HEAP32[$buf_size>>2] = 0;
    HEAP32[$wend>>2] = 0;
    HEAP32[$wbase>>2] = 0;
    HEAP32[$wpos>>2] = 0;
    $ret$1 = $$call21;
   }
  } else {
   $call2130 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $call2130;
  }
  $7 = HEAP32[$f>>2]|0;
  $and36 = $7 & 32;
  $tobool37 = ($and36|0)==(0);
  $ret$1$ = $tobool37 ? $ret$1 : -1;
  $or = $7 | $and;
  HEAP32[$f>>2] = $or;
  $tobool41 = ($cond|0)==(0);
  if (!($tobool41)) {
   ___unlockfile($f);
  }
  $retval$0 = $ret$1$;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$ = 0, $$194$ = 0, $$197 = 0, $$add$ptr258 = 0, $$l10n$0 = 0, $$lcssa199 = 0, $$pre = 0, $$pre247 = 0, $$pre248 = 0, $$pre248$pre = 0, $$pre249 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$0$add$ptr206 = 0, $a$1 = 0, $a$2 = 0, $add = 0, $add$ptr = 0, $add$ptr139 = 0, $add$ptr206 = 0, $add$ptr258 = 0, $add$ptr341 = 0, $add$ptr360 = 0, $add$ptr43 = 0, $add$ptr43$arrayidx31 = 0, $add$ptr474 = 0, $add$ptr88 = 0, $add270 = 0, $add323 = 0;
 var $add396 = 0, $add413 = 0, $add442 = 0, $and = 0, $and211 = 0, $and215 = 0, $and217 = 0, $and220 = 0, $and250 = 0, $and255 = 0, $and264 = 0, $and290 = 0, $and295 = 0, $and310 = 0, $and310$fl$4 = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $arrayidx114 = 0, $arrayidx119 = 0, $arrayidx124 = 0, $arrayidx132 = 0, $arrayidx16 = 0, $arrayidx174 = 0, $arrayidx193 = 0, $arrayidx31 = 0, $arrayidx35 = 0, $arrayidx371 = 0, $arrayidx470 = 0, $arrayidx482 = 0, $arrayidx68 = 0, $arrayidx73 = 0, $arrayidx81 = 0, $buf = 0, $call = 0, $call104 = 0, $call160 = 0;
 var $call345 = 0, $call346 = 0, $call357 = 0, $call385 = 0, $call412 = 0, $call430 = 0, $cmp = 0, $cmp1 = 0, $cmp105 = 0, $cmp111 = 0, $cmp116 = 0, $cmp126 = 0, $cmp13 = 0, $cmp166 = 0, $cmp177 = 0, $cmp18 = 0, $cmp182 = 0, $cmp185 = 0, $cmp212 = 0, $cmp241 = 0;
 var $cmp271 = 0, $cmp307 = 0, $cmp324 = 0, $cmp37 = 0, $cmp378 = 0, $cmp378227 = 0, $cmp386 = 0, $cmp391 = 0, $cmp398 = 0, $cmp405 = 0, $cmp405237 = 0, $cmp414 = 0, $cmp422 = 0, $cmp435 = 0, $cmp443 = 0, $cmp467 = 0, $cmp479 = 0, $cmp50 = 0, $cmp50217 = 0, $cmp65 = 0;
 var $cmp75 = 0, $cmp97 = 0, $cnt$0 = 0, $cnt$1 = 0, $cond149 = 0, $cond246 = 0, $cond355 = 0, $cond427 = 0, $conv120 = 0, $conv134 = 0, $conv164 = 0, $conv172 = 0, $conv175 = 0, $conv208 = 0, $conv230 = 0, $conv233 = 0, $conv32 = 0, $conv48 = 0, $conv48215 = 0, $conv69 = 0;
 var $conv83 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $fl$0$lcssa = 0, $fl$0219 = 0, $fl$1 = 0, $fl$1$and220 = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa256 = 0;
 var $i$0229 = 0, $i$1238 = 0, $i$2210 = 0, $i$3207 = 0, $i137 = 0, $i86 = 0, $inc = 0, $inc489 = 0, $incdec$ptr = 0, $incdec$ptr159 = 0, $incdec$ptr171 = 0, $incdec$ptr23 = 0, $incdec$ptr384 = 0, $incdec$ptr411 = 0, $incdec$ptr62 = 0, $isdigit = 0, $isdigit188 = 0, $isdigit190 = 0, $isdigittmp = 0, $isdigittmp$ = 0;
 var $isdigittmp187 = 0, $isdigittmp189 = 0, $l$0 = 0, $l$1228 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $lnot = 0, $lnot$ext = 0, $lnot484 = 0, $mb = 0, $narrow = 0, $or = 0, $or$cond = 0, $or$cond192 = 0, $or$cond193 = 0, $or$cond195 = 0;
 var $or100 = 0, $or100$fl$0 = 0, $or247 = 0, $p$0 = 0, $p$0$p$0$add270 = 0, $p$1 = 0, $p$2 = 0, $p$2$add323 = 0, $p$2$add323$p$2 = 0, $p$3 = 0, $p$4253 = 0, $p$5 = 0, $pl$0 = 0, $pl$1 = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$1 = 0, $prefix$2 = 0, $retval$0 = 0, $s = 0;
 var $shl = 0, $shr = 0, $st$0 = 0, $storemerge = 0, $storemerge186218 = 0, $storemerge191 = 0, $sub = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast362 = 0, $sub$ptr$lhs$cast432 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast268 = 0, $sub$ptr$rhs$cast319 = 0, $sub$ptr$rhs$cast363 = 0, $sub$ptr$rhs$cast433 = 0, $sub$ptr$sub = 0, $sub$ptr$sub269 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub364 = 0;
 var $sub$ptr$sub434 = 0, $sub$ptr$sub434$p$5 = 0, $sub101 = 0, $sub101$w$0 = 0, $sub135 = 0, $sub165 = 0, $sub173 = 0, $sub176 = 0, $sub390 = 0, $sub49 = 0, $sub49216 = 0, $sub49220 = 0, $sub84 = 0, $t$0 = 0, $t$1 = 0, $tobool = 0, $tobool141 = 0, $tobool179 = 0, $tobool209 = 0, $tobool218 = 0;
 var $tobool25 = 0, $tobool256 = 0, $tobool265 = 0, $tobool28 = 0, $tobool291 = 0, $tobool296 = 0, $tobool315 = 0, $tobool350 = 0, $tobool358 = 0, $tobool381 = 0, $tobool408 = 0, $tobool460 = 0, $tobool463 = 0, $tobool471 = 0, $tobool55 = 0, $tobool90 = 0, $trunc = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $wc = 0, $ws$0230 = 0, $ws$1239 = 0, $xor = 0, $xor450 = 0, $xor458 = 0, $z$0$lcssa = 0, $z$0212 = 0, $z$1 = 0, $z$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $s = sp + 16|0;
 $arg = sp;
 $buf = sp + 24|0;
 $wc = sp + 8|0;
 $mb = sp + 20|0;
 HEAP32[$s>>2] = $fmt;
 $tobool25 = ($f|0)!=(0|0);
 $add$ptr206 = ((($buf)) + 40|0);
 $sub$ptr$lhs$cast318 = $add$ptr206;
 $add$ptr341 = ((($buf)) + 39|0);
 $arrayidx371 = ((($wc)) + 4|0);
 $1 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $cmp = ($cnt$0|0)>(-1);
  do {
   if ($cmp) {
    $sub = (2147483647 - ($cnt$0))|0;
    $cmp1 = ($l$0|0)>($sub|0);
    if ($cmp1) {
     $call = (___errno_location()|0);
     HEAP32[$call>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $add = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $add;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $0 = HEAP8[$1>>0]|0;
  $tobool = ($0<<24>>24)==(0);
  if ($tobool) {
   label = 87;
   break;
  } else {
   $2 = $0;$3 = $1;
  }
  L9: while(1) {
   switch ($2<<24>>24) {
   case 37:  {
    $4 = $3;$z$0212 = $3;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $7 = $3;$z$0$lcssa = $3;
    break L9;
    break;
   }
   default: {
   }
   }
   $incdec$ptr = ((($3)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $$pre = HEAP8[$incdec$ptr>>0]|0;
   $2 = $$pre;$3 = $incdec$ptr;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $arrayidx16 = ((($4)) + 1|0);
     $5 = HEAP8[$arrayidx16>>0]|0;
     $cmp18 = ($5<<24>>24)==(37);
     if (!($cmp18)) {
      $7 = $4;$z$0$lcssa = $z$0212;
      break L12;
     }
     $incdec$ptr23 = ((($z$0212)) + 1|0);
     $add$ptr = ((($4)) + 2|0);
     HEAP32[$s>>2] = $add$ptr;
     $6 = HEAP8[$add$ptr>>0]|0;
     $cmp13 = ($6<<24>>24)==(37);
     if ($cmp13) {
      $4 = $add$ptr;$z$0212 = $incdec$ptr23;
      label = 9;
     } else {
      $7 = $add$ptr;$z$0$lcssa = $incdec$ptr23;
      break;
     }
    }
   }
  } while(0);
  $sub$ptr$lhs$cast = $z$0$lcssa;
  $sub$ptr$rhs$cast = $1;
  $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
  if ($tobool25) {
   _out($f,$1,$sub$ptr$sub);
  }
  $tobool28 = ($sub$ptr$sub|0)==(0);
  if (!($tobool28)) {
   $l10n$0$phi = $l10n$0;$1 = $7;$cnt$0 = $cnt$1;$l$0 = $sub$ptr$sub;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $arrayidx31 = ((($7)) + 1|0);
  $8 = HEAP8[$arrayidx31>>0]|0;
  $conv32 = $8 << 24 >> 24;
  $isdigittmp = (($conv32) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $arrayidx35 = ((($7)) + 2|0);
   $9 = HEAP8[$arrayidx35>>0]|0;
   $cmp37 = ($9<<24>>24)==(36);
   $add$ptr43 = ((($7)) + 3|0);
   $add$ptr43$arrayidx31 = $cmp37 ? $add$ptr43 : $arrayidx31;
   $$l10n$0 = $cmp37 ? 1 : $l10n$0;
   $isdigittmp$ = $cmp37 ? $isdigittmp : -1;
   $argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $add$ptr43$arrayidx31;
  } else {
   $argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $arrayidx31;
  }
  HEAP32[$s>>2] = $storemerge;
  $10 = HEAP8[$storemerge>>0]|0;
  $conv48215 = $10 << 24 >> 24;
  $sub49216 = (($conv48215) + -32)|0;
  $cmp50217 = ($sub49216>>>0)<(32);
  L24: do {
   if ($cmp50217) {
    $149 = $10;$fl$0219 = 0;$storemerge186218 = $storemerge;$sub49220 = $sub49216;
    while(1) {
     $shl = 1 << $sub49220;
     $and = $shl & 75913;
     $tobool55 = ($and|0)==(0);
     if ($tobool55) {
      $$lcssa199 = $149;$12 = $storemerge186218;$fl$0$lcssa = $fl$0219;
      break L24;
     }
     $or = $shl | $fl$0219;
     $incdec$ptr62 = ((($storemerge186218)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr62;
     $11 = HEAP8[$incdec$ptr62>>0]|0;
     $conv48 = $11 << 24 >> 24;
     $sub49 = (($conv48) + -32)|0;
     $cmp50 = ($sub49>>>0)<(32);
     if ($cmp50) {
      $149 = $11;$fl$0219 = $or;$storemerge186218 = $incdec$ptr62;$sub49220 = $sub49;
     } else {
      $$lcssa199 = $11;$12 = $incdec$ptr62;$fl$0$lcssa = $or;
      break;
     }
    }
   } else {
    $$lcssa199 = $10;$12 = $storemerge;$fl$0$lcssa = 0;
   }
  } while(0);
  $cmp65 = ($$lcssa199<<24>>24)==(42);
  if ($cmp65) {
   $arrayidx68 = ((($12)) + 1|0);
   $13 = HEAP8[$arrayidx68>>0]|0;
   $conv69 = $13 << 24 >> 24;
   $isdigittmp189 = (($conv69) + -48)|0;
   $isdigit190 = ($isdigittmp189>>>0)<(10);
   if ($isdigit190) {
    $arrayidx73 = ((($12)) + 2|0);
    $14 = HEAP8[$arrayidx73>>0]|0;
    $cmp75 = ($14<<24>>24)==(36);
    if ($cmp75) {
     $arrayidx81 = (($nl_type) + ($isdigittmp189<<2)|0);
     HEAP32[$arrayidx81>>2] = 10;
     $15 = HEAP8[$arrayidx68>>0]|0;
     $conv83 = $15 << 24 >> 24;
     $sub84 = (($conv83) + -48)|0;
     $i86 = (($nl_arg) + ($sub84<<3)|0);
     $16 = $i86;
     $17 = $16;
     $18 = HEAP32[$17>>2]|0;
     $19 = (($16) + 4)|0;
     $20 = $19;
     $21 = HEAP32[$20>>2]|0;
     $add$ptr88 = ((($12)) + 3|0);
     $l10n$2 = 1;$storemerge191 = $add$ptr88;$w$0 = $18;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    $tobool90 = ($l10n$1|0)==(0);
    if (!($tobool90)) {
     $retval$0 = -1;
     break;
    }
    if ($tobool25) {
     $arglist_current = HEAP32[$ap>>2]|0;
     $22 = $arglist_current;
     $23 = ((0) + 4|0);
     $expanded4 = $23;
     $expanded = (($expanded4) - 1)|0;
     $24 = (($22) + ($expanded))|0;
     $25 = ((0) + 4|0);
     $expanded8 = $25;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $26 = $24 & $expanded6;
     $27 = $26;
     $28 = HEAP32[$27>>2]|0;
     $arglist_next = ((($27)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = $28;
    } else {
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = 0;
    }
   }
   HEAP32[$s>>2] = $storemerge191;
   $cmp97 = ($w$0|0)<(0);
   $or100 = $fl$0$lcssa | 8192;
   $sub101 = (0 - ($w$0))|0;
   $or100$fl$0 = $cmp97 ? $or100 : $fl$0$lcssa;
   $sub101$w$0 = $cmp97 ? $sub101 : $w$0;
   $30 = $storemerge191;$fl$1 = $or100$fl$0;$l10n$3 = $l10n$2;$w$1 = $sub101$w$0;
  } else {
   $call104 = (_getint($s)|0);
   $cmp105 = ($call104|0)<(0);
   if ($cmp105) {
    $retval$0 = -1;
    break;
   }
   $$pre247 = HEAP32[$s>>2]|0;
   $30 = $$pre247;$fl$1 = $fl$0$lcssa;$l10n$3 = $l10n$1;$w$1 = $call104;
  }
  $29 = HEAP8[$30>>0]|0;
  $cmp111 = ($29<<24>>24)==(46);
  do {
   if ($cmp111) {
    $arrayidx114 = ((($30)) + 1|0);
    $31 = HEAP8[$arrayidx114>>0]|0;
    $cmp116 = ($31<<24>>24)==(42);
    if (!($cmp116)) {
     $incdec$ptr159 = ((($30)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr159;
     $call160 = (_getint($s)|0);
     $$pre248$pre = HEAP32[$s>>2]|0;
     $$pre248 = $$pre248$pre;$p$0 = $call160;
     break;
    }
    $arrayidx119 = ((($30)) + 2|0);
    $32 = HEAP8[$arrayidx119>>0]|0;
    $conv120 = $32 << 24 >> 24;
    $isdigittmp187 = (($conv120) + -48)|0;
    $isdigit188 = ($isdigittmp187>>>0)<(10);
    if ($isdigit188) {
     $arrayidx124 = ((($30)) + 3|0);
     $33 = HEAP8[$arrayidx124>>0]|0;
     $cmp126 = ($33<<24>>24)==(36);
     if ($cmp126) {
      $arrayidx132 = (($nl_type) + ($isdigittmp187<<2)|0);
      HEAP32[$arrayidx132>>2] = 10;
      $34 = HEAP8[$arrayidx119>>0]|0;
      $conv134 = $34 << 24 >> 24;
      $sub135 = (($conv134) + -48)|0;
      $i137 = (($nl_arg) + ($sub135<<3)|0);
      $35 = $i137;
      $36 = $35;
      $37 = HEAP32[$36>>2]|0;
      $38 = (($35) + 4)|0;
      $39 = $38;
      $40 = HEAP32[$39>>2]|0;
      $add$ptr139 = ((($30)) + 4|0);
      HEAP32[$s>>2] = $add$ptr139;
      $$pre248 = $add$ptr139;$p$0 = $37;
      break;
     }
    }
    $tobool141 = ($l10n$3|0)==(0);
    if (!($tobool141)) {
     $retval$0 = -1;
     break L1;
    }
    if ($tobool25) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $41 = $arglist_current2;
     $42 = ((0) + 4|0);
     $expanded11 = $42;
     $expanded10 = (($expanded11) - 1)|0;
     $43 = (($41) + ($expanded10))|0;
     $44 = ((0) + 4|0);
     $expanded15 = $44;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $45 = $43 & $expanded13;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next3 = ((($46)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $cond149 = $47;
    } else {
     $cond149 = 0;
    }
    HEAP32[$s>>2] = $arrayidx119;
    $$pre248 = $arrayidx119;$p$0 = $cond149;
   } else {
    $$pre248 = $30;$p$0 = -1;
   }
  } while(0);
  $49 = $$pre248;$st$0 = 0;
  while(1) {
   $48 = HEAP8[$49>>0]|0;
   $conv164 = $48 << 24 >> 24;
   $sub165 = (($conv164) + -65)|0;
   $cmp166 = ($sub165>>>0)>(57);
   if ($cmp166) {
    $retval$0 = -1;
    break L1;
   }
   $incdec$ptr171 = ((($49)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr171;
   $50 = HEAP8[$49>>0]|0;
   $conv172 = $50 << 24 >> 24;
   $sub173 = (($conv172) + -65)|0;
   $arrayidx174 = ((4935 + (($st$0*58)|0)|0) + ($sub173)|0);
   $51 = HEAP8[$arrayidx174>>0]|0;
   $conv175 = $51&255;
   $sub176 = (($conv175) + -1)|0;
   $cmp177 = ($sub176>>>0)<(8);
   if ($cmp177) {
    $49 = $incdec$ptr171;$st$0 = $conv175;
   } else {
    break;
   }
  }
  $tobool179 = ($51<<24>>24)==(0);
  if ($tobool179) {
   $retval$0 = -1;
   break;
  }
  $cmp182 = ($51<<24>>24)==(19);
  $cmp185 = ($argpos$0|0)>(-1);
  do {
   if ($cmp182) {
    if ($cmp185) {
     $retval$0 = -1;
     break L1;
    } else {
     label = 49;
    }
   } else {
    if ($cmp185) {
     $arrayidx193 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$arrayidx193>>2] = $conv175;
     $52 = (($nl_arg) + ($argpos$0<<3)|0);
     $53 = $52;
     $54 = $53;
     $55 = HEAP32[$54>>2]|0;
     $56 = (($53) + 4)|0;
     $57 = $56;
     $58 = HEAP32[$57>>2]|0;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $55;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     label = 49;
     break;
    }
    if (!($tobool25)) {
     $retval$0 = 0;
     break L1;
    }
    _pop_arg($arg,$conv175,$ap);
   }
  } while(0);
  if ((label|0) == 49) {
   label = 0;
   if (!($tobool25)) {
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $63 = HEAP8[$49>>0]|0;
  $conv208 = $63 << 24 >> 24;
  $tobool209 = ($st$0|0)!=(0);
  $and211 = $conv208 & 15;
  $cmp212 = ($and211|0)==(3);
  $or$cond192 = $tobool209 & $cmp212;
  $and215 = $conv208 & -33;
  $t$0 = $or$cond192 ? $and215 : $conv208;
  $and217 = $fl$1 & 8192;
  $tobool218 = ($and217|0)==(0);
  $and220 = $fl$1 & -65537;
  $fl$1$and220 = $tobool218 ? $fl$1 : $and220;
  L71: do {
   switch ($t$0|0) {
   case 110:  {
    $trunc = $st$0&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $70 = HEAP32[$arg>>2]|0;
     HEAP32[$70>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $71 = HEAP32[$arg>>2]|0;
     HEAP32[$71>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $72 = ($cnt$1|0)<(0);
     $73 = $72 << 31 >> 31;
     $74 = HEAP32[$arg>>2]|0;
     $75 = $74;
     $76 = $75;
     HEAP32[$76>>2] = $cnt$1;
     $77 = (($75) + 4)|0;
     $78 = $77;
     HEAP32[$78>>2] = $73;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $conv230 = $cnt$1&65535;
     $79 = HEAP32[$arg>>2]|0;
     HEAP16[$79>>1] = $conv230;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $conv233 = $cnt$1&255;
     $80 = HEAP32[$arg>>2]|0;
     HEAP8[$80>>0] = $conv233;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $81 = HEAP32[$arg>>2]|0;
     HEAP32[$81>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $82 = ($cnt$1|0)<(0);
     $83 = $82 << 31 >> 31;
     $84 = HEAP32[$arg>>2]|0;
     $85 = $84;
     $86 = $85;
     HEAP32[$86>>2] = $cnt$1;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $83;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $cmp241 = ($p$0>>>0)>(8);
    $cond246 = $cmp241 ? $p$0 : 8;
    $or247 = $fl$1$and220 | 8;
    $fl$3 = $or247;$p$1 = $cond246;$t$1 = 120;
    label = 61;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$and220;$p$1 = $p$0;$t$1 = $t$0;
    label = 61;
    break;
   }
   case 111:  {
    $99 = $arg;
    $100 = $99;
    $101 = HEAP32[$100>>2]|0;
    $102 = (($99) + 4)|0;
    $103 = $102;
    $104 = HEAP32[$103>>2]|0;
    $105 = (_fmt_o($101,$104,$add$ptr206)|0);
    $and264 = $fl$1$and220 & 8;
    $tobool265 = ($and264|0)==(0);
    $sub$ptr$rhs$cast268 = $105;
    $sub$ptr$sub269 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast268))|0;
    $cmp271 = ($p$0|0)>($sub$ptr$sub269|0);
    $add270 = (($sub$ptr$sub269) + 1)|0;
    $106 = $tobool265 | $cmp271;
    $p$0$p$0$add270 = $106 ? $p$0 : $add270;
    $125 = $101;$127 = $104;$a$0 = $105;$fl$4 = $fl$1$and220;$p$2 = $p$0$p$0$add270;$pl$1 = 0;$prefix$1 = 5399;
    label = 67;
    break;
   }
   case 105: case 100:  {
    $107 = $arg;
    $108 = $107;
    $109 = HEAP32[$108>>2]|0;
    $110 = (($107) + 4)|0;
    $111 = $110;
    $112 = HEAP32[$111>>2]|0;
    $113 = ($112|0)<(0);
    if ($113) {
     $114 = (_i64Subtract(0,0,($109|0),($112|0))|0);
     $115 = tempRet0;
     $116 = $arg;
     $117 = $116;
     HEAP32[$117>>2] = $114;
     $118 = (($116) + 4)|0;
     $119 = $118;
     HEAP32[$119>>2] = $115;
     $121 = $114;$122 = $115;$pl$0 = 1;$prefix$0 = 5399;
     label = 66;
     break L71;
    } else {
     $and290 = $fl$1$and220 & 2048;
     $tobool291 = ($and290|0)==(0);
     $and295 = $fl$1$and220 & 1;
     $tobool296 = ($and295|0)==(0);
     $$ = $tobool296 ? 5399 : (5401);
     $$$ = $tobool291 ? $$ : (5400);
     $120 = $fl$1$and220 & 2049;
     $narrow = ($120|0)!=(0);
     $$194$ = $narrow&1;
     $121 = $109;$122 = $112;$pl$0 = $$194$;$prefix$0 = $$$;
     label = 66;
     break L71;
    }
    break;
   }
   case 117:  {
    $64 = $arg;
    $65 = $64;
    $66 = HEAP32[$65>>2]|0;
    $67 = (($64) + 4)|0;
    $68 = $67;
    $69 = HEAP32[$68>>2]|0;
    $121 = $66;$122 = $69;$pl$0 = 0;$prefix$0 = 5399;
    label = 66;
    break;
   }
   case 99:  {
    $129 = $arg;
    $130 = $129;
    $131 = HEAP32[$130>>2]|0;
    $132 = (($129) + 4)|0;
    $133 = $132;
    $134 = HEAP32[$133>>2]|0;
    $135 = $131&255;
    HEAP8[$add$ptr341>>0] = $135;
    $a$2 = $add$ptr341;$fl$6 = $and220;$p$5 = 1;$pl$2 = 0;$prefix$2 = 5399;$z$2 = $add$ptr206;
    break;
   }
   case 109:  {
    $call345 = (___errno_location()|0);
    $136 = HEAP32[$call345>>2]|0;
    $call346 = (_strerror($136)|0);
    $a$1 = $call346;
    label = 71;
    break;
   }
   case 115:  {
    $137 = HEAP32[$arg>>2]|0;
    $tobool350 = ($137|0)!=(0|0);
    $cond355 = $tobool350 ? $137 : 5409;
    $a$1 = $cond355;
    label = 71;
    break;
   }
   case 67:  {
    $138 = $arg;
    $139 = $138;
    $140 = HEAP32[$139>>2]|0;
    $141 = (($138) + 4)|0;
    $142 = $141;
    $143 = HEAP32[$142>>2]|0;
    HEAP32[$wc>>2] = $140;
    HEAP32[$arrayidx371>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $150 = $wc;$p$4253 = -1;
    label = 75;
    break;
   }
   case 83:  {
    $$pre249 = HEAP32[$arg>>2]|0;
    $cmp378227 = ($p$0|0)==(0);
    if ($cmp378227) {
     _pad_684($f,32,$w$1,0,$fl$1$and220);
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $150 = $$pre249;$p$4253 = $p$0;
     label = 75;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $146 = +HEAPF64[$arg>>3];
    $call430 = (_fmt_fp($f,$146,$w$1,$p$0,$fl$1$and220,$t$0)|0);
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $call430;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $1;$fl$6 = $fl$1$and220;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 5399;$z$2 = $add$ptr206;
   }
   }
  } while(0);
  L95: do {
   if ((label|0) == 61) {
    label = 0;
    $89 = $arg;
    $90 = $89;
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 4)|0;
    $93 = $92;
    $94 = HEAP32[$93>>2]|0;
    $and250 = $t$1 & 32;
    $95 = (_fmt_x($91,$94,$add$ptr206,$and250)|0);
    $96 = ($91|0)==(0);
    $97 = ($94|0)==(0);
    $98 = $96 & $97;
    $and255 = $fl$3 & 8;
    $tobool256 = ($and255|0)==(0);
    $or$cond193 = $tobool256 | $98;
    $shr = $t$1 >> 4;
    $add$ptr258 = (5399 + ($shr)|0);
    $$add$ptr258 = $or$cond193 ? 5399 : $add$ptr258;
    $$197 = $or$cond193 ? 0 : 2;
    $125 = $91;$127 = $94;$a$0 = $95;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = $$197;$prefix$1 = $$add$ptr258;
    label = 67;
   }
   else if ((label|0) == 66) {
    label = 0;
    $123 = (_fmt_u($121,$122,$add$ptr206)|0);
    $125 = $121;$127 = $122;$a$0 = $123;$fl$4 = $fl$1$and220;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 67;
   }
   else if ((label|0) == 71) {
    label = 0;
    $call357 = (_memchr($a$1,0,$p$0)|0);
    $tobool358 = ($call357|0)==(0|0);
    $sub$ptr$lhs$cast362 = $call357;
    $sub$ptr$rhs$cast363 = $a$1;
    $sub$ptr$sub364 = (($sub$ptr$lhs$cast362) - ($sub$ptr$rhs$cast363))|0;
    $add$ptr360 = (($a$1) + ($p$0)|0);
    $p$3 = $tobool358 ? $p$0 : $sub$ptr$sub364;
    $z$1 = $tobool358 ? $add$ptr360 : $call357;
    $a$2 = $a$1;$fl$6 = $and220;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 5399;$z$2 = $z$1;
   }
   else if ((label|0) == 75) {
    label = 0;
    $i$0229 = 0;$l$1228 = 0;$ws$0230 = $150;
    while(1) {
     $144 = HEAP32[$ws$0230>>2]|0;
     $tobool381 = ($144|0)==(0);
     if ($tobool381) {
      $i$0$lcssa = $i$0229;$l$2 = $l$1228;
      break;
     }
     $call385 = (_wctomb($mb,$144)|0);
     $cmp386 = ($call385|0)<(0);
     $sub390 = (($p$4253) - ($i$0229))|0;
     $cmp391 = ($call385>>>0)>($sub390>>>0);
     $or$cond195 = $cmp386 | $cmp391;
     if ($or$cond195) {
      $i$0$lcssa = $i$0229;$l$2 = $call385;
      break;
     }
     $incdec$ptr384 = ((($ws$0230)) + 4|0);
     $add396 = (($call385) + ($i$0229))|0;
     $cmp378 = ($p$4253>>>0)>($add396>>>0);
     if ($cmp378) {
      $i$0229 = $add396;$l$1228 = $call385;$ws$0230 = $incdec$ptr384;
     } else {
      $i$0$lcssa = $add396;$l$2 = $call385;
      break;
     }
    }
    $cmp398 = ($l$2|0)<(0);
    if ($cmp398) {
     $retval$0 = -1;
     break L1;
    }
    _pad_684($f,32,$w$1,$i$0$lcssa,$fl$1$and220);
    $cmp405237 = ($i$0$lcssa|0)==(0);
    if ($cmp405237) {
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $i$1238 = 0;$ws$1239 = $150;
     while(1) {
      $145 = HEAP32[$ws$1239>>2]|0;
      $tobool408 = ($145|0)==(0);
      if ($tobool408) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $call412 = (_wctomb($mb,$145)|0);
      $add413 = (($call412) + ($i$1238))|0;
      $cmp414 = ($add413|0)>($i$0$lcssa|0);
      if ($cmp414) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $incdec$ptr411 = ((($ws$1239)) + 4|0);
      _out($f,$mb,$call412);
      $cmp405 = ($add413>>>0)<($i$0$lcssa>>>0);
      if ($cmp405) {
       $i$1238 = $add413;$ws$1239 = $incdec$ptr411;
      } else {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 67) {
   label = 0;
   $cmp307 = ($p$2|0)>(-1);
   $and310 = $fl$4 & -65537;
   $and310$fl$4 = $cmp307 ? $and310 : $fl$4;
   $124 = ($125|0)!=(0);
   $126 = ($127|0)!=(0);
   $128 = $124 | $126;
   $tobool315 = ($p$2|0)!=(0);
   $or$cond = $tobool315 | $128;
   $sub$ptr$rhs$cast319 = $a$0;
   $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
   $lnot = $128 ^ 1;
   $lnot$ext = $lnot&1;
   $add323 = (($lnot$ext) + ($sub$ptr$sub320))|0;
   $cmp324 = ($p$2|0)>($add323|0);
   $p$2$add323 = $cmp324 ? $p$2 : $add323;
   $p$2$add323$p$2 = $or$cond ? $p$2$add323 : $p$2;
   $a$0$add$ptr206 = $or$cond ? $a$0 : $add$ptr206;
   $a$2 = $a$0$add$ptr206;$fl$6 = $and310$fl$4;$p$5 = $p$2$add323$p$2;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $add$ptr206;
  }
  else if ((label|0) == 84) {
   label = 0;
   $xor = $fl$1$and220 ^ 8192;
   _pad_684($f,32,$w$1,$i$0$lcssa256,$xor);
   $cmp422 = ($w$1|0)>($i$0$lcssa256|0);
   $cond427 = $cmp422 ? $w$1 : $i$0$lcssa256;
   $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $cond427;$l10n$0 = $l10n$3;
   continue;
  }
  $sub$ptr$lhs$cast432 = $z$2;
  $sub$ptr$rhs$cast433 = $a$2;
  $sub$ptr$sub434 = (($sub$ptr$lhs$cast432) - ($sub$ptr$rhs$cast433))|0;
  $cmp435 = ($p$5|0)<($sub$ptr$sub434|0);
  $sub$ptr$sub434$p$5 = $cmp435 ? $sub$ptr$sub434 : $p$5;
  $add442 = (($sub$ptr$sub434$p$5) + ($pl$2))|0;
  $cmp443 = ($w$1|0)<($add442|0);
  $w$2 = $cmp443 ? $add442 : $w$1;
  _pad_684($f,32,$w$2,$add442,$fl$6);
  _out($f,$prefix$2,$pl$2);
  $xor450 = $fl$6 ^ 65536;
  _pad_684($f,48,$w$2,$add442,$xor450);
  _pad_684($f,48,$sub$ptr$sub434$p$5,$sub$ptr$sub434,0);
  _out($f,$a$2,$sub$ptr$sub434);
  $xor458 = $fl$6 ^ 8192;
  _pad_684($f,32,$w$2,$add442,$xor458);
  $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L114: do {
  if ((label|0) == 87) {
   $tobool460 = ($f|0)==(0|0);
   if ($tobool460) {
    $tobool463 = ($l10n$0|0)==(0);
    if ($tobool463) {
     $retval$0 = 0;
    } else {
     $i$2210 = 1;
     while(1) {
      $arrayidx470 = (($nl_type) + ($i$2210<<2)|0);
      $147 = HEAP32[$arrayidx470>>2]|0;
      $tobool471 = ($147|0)==(0);
      if ($tobool471) {
       $i$3207 = $i$2210;
       break;
      }
      $add$ptr474 = (($nl_arg) + ($i$2210<<3)|0);
      _pop_arg($add$ptr474,$147,$ap);
      $inc = (($i$2210) + 1)|0;
      $cmp467 = ($inc|0)<(10);
      if ($cmp467) {
       $i$2210 = $inc;
      } else {
       $retval$0 = 1;
       break L114;
      }
     }
     while(1) {
      $arrayidx482 = (($nl_type) + ($i$3207<<2)|0);
      $148 = HEAP32[$arrayidx482>>2]|0;
      $lnot484 = ($148|0)==(0);
      $inc489 = (($i$3207) + 1)|0;
      if (!($lnot484)) {
       $retval$0 = -1;
       break L114;
      }
      $cmp479 = ($inc489|0)<(10);
      if ($cmp479) {
       $i$3207 = $inc489;
      } else {
       $retval$0 = 1;
       break;
      }
     }
    }
   } else {
    $retval$0 = $cnt$1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $and = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 32;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  (___fwritex($s,$l,$f)|0);
 }
 return;
}
function _getint($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add = 0, $conv = 0, $conv4 = 0, $i$0$lcssa = 0, $i$07 = 0, $incdec$ptr = 0, $isdigit = 0, $isdigit6 = 0, $isdigittmp = 0, $isdigittmp5 = 0, $isdigittmp8 = 0, $mul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$s>>2]|0;
 $1 = HEAP8[$0>>0]|0;
 $conv4 = $1 << 24 >> 24;
 $isdigittmp5 = (($conv4) + -48)|0;
 $isdigit6 = ($isdigittmp5>>>0)<(10);
 if ($isdigit6) {
  $2 = $0;$i$07 = 0;$isdigittmp8 = $isdigittmp5;
  while(1) {
   $mul = ($i$07*10)|0;
   $add = (($isdigittmp8) + ($mul))|0;
   $incdec$ptr = ((($2)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $3 = HEAP8[$incdec$ptr>>0]|0;
   $conv = $3 << 24 >> 24;
   $isdigittmp = (($conv) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $2 = $incdec$ptr;$i$07 = $add;$isdigittmp8 = $isdigittmp;
   } else {
    $i$0$lcssa = $add;
    break;
   }
  }
 } else {
  $i$0$lcssa = 0;
 }
 return ($i$0$lcssa|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $cmp = 0, $conv16 = 0, $conv22$mask = 0, $conv28 = 0, $conv34$mask = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($type>>>0)>(20);
 L1: do {
  if (!($cmp)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $0 = $arglist_current;
     $1 = ((0) + 4|0);
     $expanded28 = $1;
     $expanded = (($expanded28) - 1)|0;
     $2 = (($0) + ($expanded))|0;
     $3 = ((0) + 4|0);
     $expanded32 = $3;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $4 = $2 & $expanded30;
     $5 = $4;
     $6 = HEAP32[$5>>2]|0;
     $arglist_next = ((($5)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $6;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $7 = $arglist_current2;
     $8 = ((0) + 4|0);
     $expanded35 = $8;
     $expanded34 = (($expanded35) - 1)|0;
     $9 = (($7) + ($expanded34))|0;
     $10 = ((0) + 4|0);
     $expanded39 = $10;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $11 = $9 & $expanded37;
     $12 = $11;
     $13 = HEAP32[$12>>2]|0;
     $arglist_next3 = ((($12)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $14 = ($13|0)<(0);
     $15 = $14 << 31 >> 31;
     $16 = $arg;
     $17 = $16;
     HEAP32[$17>>2] = $13;
     $18 = (($16) + 4)|0;
     $19 = $18;
     HEAP32[$19>>2] = $15;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $20 = $arglist_current5;
     $21 = ((0) + 4|0);
     $expanded42 = $21;
     $expanded41 = (($expanded42) - 1)|0;
     $22 = (($20) + ($expanded41))|0;
     $23 = ((0) + 4|0);
     $expanded46 = $23;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $24 = $22 & $expanded44;
     $25 = $24;
     $26 = HEAP32[$25>>2]|0;
     $arglist_next6 = ((($25)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $27 = $arg;
     $28 = $27;
     HEAP32[$28>>2] = $26;
     $29 = (($27) + 4)|0;
     $30 = $29;
     HEAP32[$30>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $31 = $arglist_current8;
     $32 = ((0) + 8|0);
     $expanded49 = $32;
     $expanded48 = (($expanded49) - 1)|0;
     $33 = (($31) + ($expanded48))|0;
     $34 = ((0) + 8|0);
     $expanded53 = $34;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $35 = $33 & $expanded51;
     $36 = $35;
     $37 = $36;
     $38 = $37;
     $39 = HEAP32[$38>>2]|0;
     $40 = (($37) + 4)|0;
     $41 = $40;
     $42 = HEAP32[$41>>2]|0;
     $arglist_next9 = ((($36)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $43 = $arg;
     $44 = $43;
     HEAP32[$44>>2] = $39;
     $45 = (($43) + 4)|0;
     $46 = $45;
     HEAP32[$46>>2] = $42;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $47 = $arglist_current11;
     $48 = ((0) + 4|0);
     $expanded56 = $48;
     $expanded55 = (($expanded56) - 1)|0;
     $49 = (($47) + ($expanded55))|0;
     $50 = ((0) + 4|0);
     $expanded60 = $50;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $51 = $49 & $expanded58;
     $52 = $51;
     $53 = HEAP32[$52>>2]|0;
     $arglist_next12 = ((($52)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $conv16 = $53&65535;
     $54 = $conv16 << 16 >> 16;
     $55 = ($54|0)<(0);
     $56 = $55 << 31 >> 31;
     $57 = $arg;
     $58 = $57;
     HEAP32[$58>>2] = $54;
     $59 = (($57) + 4)|0;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $61 = $arglist_current14;
     $62 = ((0) + 4|0);
     $expanded63 = $62;
     $expanded62 = (($expanded63) - 1)|0;
     $63 = (($61) + ($expanded62))|0;
     $64 = ((0) + 4|0);
     $expanded67 = $64;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $65 = $63 & $expanded65;
     $66 = $65;
     $67 = HEAP32[$66>>2]|0;
     $arglist_next15 = ((($66)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $conv22$mask = $67 & 65535;
     $68 = $arg;
     $69 = $68;
     HEAP32[$69>>2] = $conv22$mask;
     $70 = (($68) + 4)|0;
     $71 = $70;
     HEAP32[$71>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $72 = $arglist_current17;
     $73 = ((0) + 4|0);
     $expanded70 = $73;
     $expanded69 = (($expanded70) - 1)|0;
     $74 = (($72) + ($expanded69))|0;
     $75 = ((0) + 4|0);
     $expanded74 = $75;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $76 = $74 & $expanded72;
     $77 = $76;
     $78 = HEAP32[$77>>2]|0;
     $arglist_next18 = ((($77)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $conv28 = $78&255;
     $79 = $conv28 << 24 >> 24;
     $80 = ($79|0)<(0);
     $81 = $80 << 31 >> 31;
     $82 = $arg;
     $83 = $82;
     HEAP32[$83>>2] = $79;
     $84 = (($82) + 4)|0;
     $85 = $84;
     HEAP32[$85>>2] = $81;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $86 = $arglist_current20;
     $87 = ((0) + 4|0);
     $expanded77 = $87;
     $expanded76 = (($expanded77) - 1)|0;
     $88 = (($86) + ($expanded76))|0;
     $89 = ((0) + 4|0);
     $expanded81 = $89;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $90 = $88 & $expanded79;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next21 = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $conv34$mask = $92 & 255;
     $93 = $arg;
     $94 = $93;
     HEAP32[$94>>2] = $conv34$mask;
     $95 = (($93) + 4)|0;
     $96 = $95;
     HEAP32[$96>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $97 = $arglist_current23;
     $98 = ((0) + 8|0);
     $expanded84 = $98;
     $expanded83 = (($expanded84) - 1)|0;
     $99 = (($97) + ($expanded83))|0;
     $100 = ((0) + 8|0);
     $expanded88 = $100;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $101 = $99 & $expanded86;
     $102 = $101;
     $103 = +HEAPF64[$102>>3];
     $arglist_next24 = ((($102)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $103;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $104 = $arglist_current26;
     $105 = ((0) + 8|0);
     $expanded91 = $105;
     $expanded90 = (($expanded91) - 1)|0;
     $106 = (($104) + ($expanded90))|0;
     $107 = ((0) + 8|0);
     $expanded95 = $107;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $108 = $106 & $expanded93;
     $109 = $108;
     $110 = +HEAPF64[$109>>3];
     $arglist_next27 = ((($109)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $110;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$s,$lower) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 $lower = $lower|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arrayidx = 0, $conv1 = 0, $conv4 = 0, $idxprom = 0, $incdec$ptr = 0, $or = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $5 = $0;$7 = $1;$s$addr$06 = $s;
  while(1) {
   $idxprom = $5 & 15;
   $arrayidx = (5451 + ($idxprom)|0);
   $6 = HEAP8[$arrayidx>>0]|0;
   $conv4 = $6&255;
   $or = $conv4 | $lower;
   $conv1 = $or&255;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv1;
   $8 = (_bitshift64Lshr(($5|0),($7|0),4)|0);
   $9 = tempRet0;
   $10 = ($8|0)==(0);
   $11 = ($9|0)==(0);
   $12 = $10 & $11;
   if ($12) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $5 = $8;$7 = $9;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_o($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $conv = 0, $incdec$ptr = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $6 = $0;$8 = $1;$s$addr$06 = $s;
  while(1) {
   $5 = $6&255;
   $7 = $5 & 7;
   $conv = $7 | 48;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $9 = (_bitshift64Lshr(($6|0),($8|0),3)|0);
   $10 = tempRet0;
   $11 = ($9|0)==(0);
   $12 = ($10|0)==(0);
   $13 = $11 & $12;
   if ($13) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $6 = $9;$8 = $10;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add5 = 0, $conv = 0;
 var $conv6 = 0, $div9 = 0, $incdec$ptr = 0, $incdec$ptr7 = 0, $rem4 = 0, $s$addr$0$lcssa = 0, $s$addr$013 = 0, $s$addr$1$lcssa = 0, $s$addr$19 = 0, $tobool8 = 0, $x$addr$0$lcssa$off0 = 0, $y$010 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $7 = $0;$8 = $1;$s$addr$013 = $s;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9&255;
   $conv = $11 | 48;
   $incdec$ptr = ((($s$addr$013)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $12 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $13 = tempRet0;
   $14 = ($8>>>0)>(9);
   $15 = ($7>>>0)>(4294967295);
   $16 = ($8|0)==(9);
   $17 = $16 & $15;
   $18 = $14 | $17;
   if ($18) {
    $7 = $12;$8 = $13;$s$addr$013 = $incdec$ptr;
   } else {
    break;
   }
  }
  $s$addr$0$lcssa = $incdec$ptr;$x$addr$0$lcssa$off0 = $12;
 } else {
  $s$addr$0$lcssa = $s;$x$addr$0$lcssa$off0 = $0;
 }
 $tobool8 = ($x$addr$0$lcssa$off0|0)==(0);
 if ($tobool8) {
  $s$addr$1$lcssa = $s$addr$0$lcssa;
 } else {
  $s$addr$19 = $s$addr$0$lcssa;$y$010 = $x$addr$0$lcssa$off0;
  while(1) {
   $rem4 = (($y$010>>>0) % 10)&-1;
   $add5 = $rem4 | 48;
   $conv6 = $add5&255;
   $incdec$ptr7 = ((($s$addr$19)) + -1|0);
   HEAP8[$incdec$ptr7>>0] = $conv6;
   $div9 = (($y$010>>>0) / 10)&-1;
   $19 = ($y$010>>>0)<(10);
   if ($19) {
    $s$addr$1$lcssa = $incdec$ptr7;
    break;
   } else {
    $s$addr$19 = $incdec$ptr7;$y$010 = $div9;
   }
  }
 }
 return ($s$addr$1$lcssa|0);
}
function _strerror($e) {
 $e = $e|0;
 var $0 = 0, $call = 0, $call1 = 0, $locale = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_104()|0);
 $locale = ((($call)) + 188|0);
 $0 = HEAP32[$locale>>2]|0;
 $call1 = (___strerror_l($e,$0)|0);
 return ($call1|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $and = 0, $and15 = 0, $and16 = 0, $and39 = 0, $cmp = 0, $cmp11 = 0, $cmp1132 = 0, $cmp28 = 0, $cmp8 = 0, $cond = 0, $conv1 = 0, $dec = 0;
 var $dec34 = 0, $incdec$ptr = 0, $incdec$ptr21 = 0, $incdec$ptr33 = 0, $lnot = 0, $mul = 0, $n$addr$0$lcssa = 0, $n$addr$0$lcssa52 = 0, $n$addr$043 = 0, $n$addr$1$lcssa = 0, $n$addr$133 = 0, $n$addr$227 = 0, $n$addr$3 = 0, $neg = 0, $or$cond = 0, $or$cond42 = 0, $s$0$lcssa = 0, $s$0$lcssa53 = 0, $s$044 = 0, $s$128 = 0;
 var $s$2 = 0, $sub = 0, $sub22 = 0, $tobool = 0, $tobool2 = 0, $tobool2$lcssa = 0, $tobool241 = 0, $tobool25 = 0, $tobool2526 = 0, $tobool36 = 0, $tobool40 = 0, $w$0$lcssa = 0, $w$034 = 0, $xor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv1 = $c & 255;
 $0 = $src;
 $and39 = $0 & 3;
 $tobool40 = ($and39|0)!=(0);
 $tobool241 = ($n|0)!=(0);
 $or$cond42 = $tobool241 & $tobool40;
 L1: do {
  if ($or$cond42) {
   $1 = $c&255;
   $n$addr$043 = $n;$s$044 = $src;
   while(1) {
    $2 = HEAP8[$s$044>>0]|0;
    $cmp = ($2<<24>>24)==($1<<24>>24);
    if ($cmp) {
     $n$addr$0$lcssa52 = $n$addr$043;$s$0$lcssa53 = $s$044;
     label = 6;
     break L1;
    }
    $incdec$ptr = ((($s$044)) + 1|0);
    $dec = (($n$addr$043) + -1)|0;
    $3 = $incdec$ptr;
    $and = $3 & 3;
    $tobool = ($and|0)!=(0);
    $tobool2 = ($dec|0)!=(0);
    $or$cond = $tobool2 & $tobool;
    if ($or$cond) {
     $n$addr$043 = $dec;$s$044 = $incdec$ptr;
    } else {
     $n$addr$0$lcssa = $dec;$s$0$lcssa = $incdec$ptr;$tobool2$lcssa = $tobool2;
     label = 5;
     break;
    }
   }
  } else {
   $n$addr$0$lcssa = $n;$s$0$lcssa = $src;$tobool2$lcssa = $tobool241;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($tobool2$lcssa) {
   $n$addr$0$lcssa52 = $n$addr$0$lcssa;$s$0$lcssa53 = $s$0$lcssa;
   label = 6;
  } else {
   $n$addr$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $4 = HEAP8[$s$0$lcssa53>>0]|0;
   $5 = $c&255;
   $cmp8 = ($4<<24>>24)==($5<<24>>24);
   if ($cmp8) {
    $n$addr$3 = $n$addr$0$lcssa52;$s$2 = $s$0$lcssa53;
   } else {
    $mul = Math_imul($conv1, 16843009)|0;
    $cmp1132 = ($n$addr$0$lcssa52>>>0)>(3);
    L11: do {
     if ($cmp1132) {
      $n$addr$133 = $n$addr$0$lcssa52;$w$034 = $s$0$lcssa53;
      while(1) {
       $6 = HEAP32[$w$034>>2]|0;
       $xor = $6 ^ $mul;
       $sub = (($xor) + -16843009)|0;
       $neg = $xor & -2139062144;
       $and15 = $neg ^ -2139062144;
       $and16 = $and15 & $sub;
       $lnot = ($and16|0)==(0);
       if (!($lnot)) {
        break;
       }
       $incdec$ptr21 = ((($w$034)) + 4|0);
       $sub22 = (($n$addr$133) + -4)|0;
       $cmp11 = ($sub22>>>0)>(3);
       if ($cmp11) {
        $n$addr$133 = $sub22;$w$034 = $incdec$ptr21;
       } else {
        $n$addr$1$lcssa = $sub22;$w$0$lcssa = $incdec$ptr21;
        label = 11;
        break L11;
       }
      }
      $n$addr$227 = $n$addr$133;$s$128 = $w$034;
     } else {
      $n$addr$1$lcssa = $n$addr$0$lcssa52;$w$0$lcssa = $s$0$lcssa53;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $tobool2526 = ($n$addr$1$lcssa|0)==(0);
     if ($tobool2526) {
      $n$addr$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $n$addr$227 = $n$addr$1$lcssa;$s$128 = $w$0$lcssa;
     }
    }
    while(1) {
     $7 = HEAP8[$s$128>>0]|0;
     $cmp28 = ($7<<24>>24)==($5<<24>>24);
     if ($cmp28) {
      $n$addr$3 = $n$addr$227;$s$2 = $s$128;
      break L8;
     }
     $incdec$ptr33 = ((($s$128)) + 1|0);
     $dec34 = (($n$addr$227) + -1)|0;
     $tobool25 = ($dec34|0)==(0);
     if ($tobool25) {
      $n$addr$3 = 0;$s$2 = $incdec$ptr33;
      break;
     } else {
      $n$addr$227 = $dec34;$s$128 = $incdec$ptr33;
     }
    }
   }
  }
 } while(0);
 $tobool36 = ($n$addr$3|0)!=(0);
 $cond = $tobool36 ? $s$2 : 0;
 return ($cond|0);
}
function _pad_684($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $cmp = 0, $cmp3 = 0, $cmp38 = 0, $cond = 0, $l$addr$0$lcssa = 0, $l$addr$09 = 0, $or$cond = 0, $pad = 0, $sub = 0, $sub6 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $pad = sp;
 $and = $fl & 73728;
 $tobool = ($and|0)==(0);
 $cmp = ($w|0)>($l|0);
 $or$cond = $cmp & $tobool;
 if ($or$cond) {
  $sub = (($w) - ($l))|0;
  $0 = ($sub>>>0)<(256);
  $cond = $0 ? $sub : 256;
  _memset(($pad|0),($c|0),($cond|0))|0;
  $cmp38 = ($sub>>>0)>(255);
  if ($cmp38) {
   $1 = (($w) - ($l))|0;
   $l$addr$09 = $sub;
   while(1) {
    _out($f,$pad,256);
    $sub6 = (($l$addr$09) + -256)|0;
    $cmp3 = ($sub6>>>0)>(255);
    if ($cmp3) {
     $l$addr$09 = $sub6;
    } else {
     break;
    }
   }
   $2 = $1 & 255;
   $l$addr$0$lcssa = $2;
  } else {
   $l$addr$0$lcssa = $sub;
  }
  _out($f,$pad,$l$addr$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 if ($tobool) {
  $retval$0 = 0;
 } else {
  $call = (_wcrtomb($s,$wc,0)|0);
  $retval$0 = $call;
 }
 return ($retval$0|0);
}
function _fmt_fp($f,$y,$w,$p,$fl,$t) {
 $f = $f|0;
 $y = +$y;
 $w = $w|0;
 $p = $p|0;
 $fl = $fl|0;
 $t = $t|0;
 var $$ = 0, $$$ = 0, $$$405 = 0.0, $$394$ = 0, $$397 = 0.0, $$405 = 0.0, $$p = 0, $$p$inc468 = 0, $$pr = 0, $$pr407 = 0, $$pre = 0, $$pre487 = 0, $$sub514 = 0, $$sub562 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $a$1$lcssa = 0, $a$1476 = 0, $a$2$ph = 0, $a$3$lcssa = 0, $a$3466 = 0, $a$5$lcssa = 0, $a$5448 = 0, $a$6 = 0, $a$8 = 0;
 var $a$9$ph = 0, $add = 0, $add$ptr213 = 0, $add$ptr311 = 0, $add$ptr311$z$4 = 0, $add$ptr354 = 0, $add$ptr358 = 0, $add$ptr373 = 0, $add$ptr442 = 0, $add$ptr442$z$3 = 0, $add$ptr65 = 0, $add$ptr671 = 0, $add$ptr742 = 0, $add$ptr756 = 0, $add113 = 0, $add150 = 0, $add150$pn = 0, $add165 = 0, $add273 = 0, $add275 = 0;
 var $add284 = 0, $add313 = 0, $add355 = 0, $add410 = 0.0, $add414 = 0, $add477$neg = 0, $add561 = 0, $add608 = 0, $add612 = 0, $add620 = 0, $add653 = 0, $add653$sink406 = 0, $add67 = 0, $add737 = 0, $add810 = 0, $add87 = 0.0, $add90 = 0.0, $and = 0, $and12 = 0, $and134 = 0;
 var $and282 = 0, $and36 = 0, $and379 = 0, $and45 = 0, $and483 = 0, $and610$pre$phiZ2D = 0, $and62 = 0, $arraydecay208$add$ptr213 = 0, $arrayidx = 0, $arrayidx117 = 0, $arrayidx251 = 0, $arrayidx453 = 0, $arrayidx489 = 0, $big = 0, $buf = 0, $call55 = 0.0, $carry$0471 = 0, $carry262$0462 = 0, $cmp103 = 0, $cmp127 = 0;
 var $cmp147 = 0, $cmp205 = 0, $cmp225 = 0, $cmp225474 = 0, $cmp235 = 0, $cmp235470 = 0, $cmp249 = 0, $cmp259 = 0, $cmp259464 = 0, $cmp277 = 0, $cmp277460 = 0, $cmp299 = 0, $cmp308 = 0, $cmp315 = 0, $cmp324 = 0, $cmp324456 = 0, $cmp333 = 0, $cmp338 = 0, $cmp350 = 0, $cmp363452 = 0;
 var $cmp374 = 0, $cmp38 = 0, $cmp385 = 0, $cmp390 = 0, $cmp403 = 0, $cmp411 = 0, $cmp416 = 0, $cmp416446 = 0, $cmp420 = 0, $cmp433 = 0, $cmp433442 = 0, $cmp443 = 0, $cmp450 = 0, $cmp450$lcssa = 0, $cmp470 = 0, $cmp473 = 0, $cmp495 = 0, $cmp495438 = 0, $cmp505 = 0, $cmp528 = 0;
 var $cmp577 = 0, $cmp59 = 0, $cmp614 = 0, $cmp617 = 0, $cmp623 = 0, $cmp636 = 0, $cmp636433 = 0, $cmp660 = 0, $cmp665 = 0, $cmp673 = 0, $cmp678 = 0, $cmp678419 = 0, $cmp68 = 0, $cmp686 = 0, $cmp707 = 0, $cmp707414 = 0, $cmp710 = 0, $cmp710415 = 0, $cmp722 = 0, $cmp722411 = 0;
 var $cmp745 = 0, $cmp748 = 0, $cmp748427 = 0, $cmp760 = 0, $cmp765 = 0, $cmp770 = 0, $cmp770423 = 0, $cmp777 = 0, $cmp790 = 0, $cmp818 = 0, $cmp82 = 0, $cmp94 = 0, $cond = 0, $cond100 = 0, $cond233 = 0, $cond271 = 0, $cond304 = 0, $cond43 = 0, $cond629 = 0, $cond732 = 0;
 var $cond800 = 0, $conv111 = 0, $conv114 = 0, $conv116 = 0, $conv118393 = 0, $conv121 = 0, $conv123 = 0.0, $conv216 = 0, $conv218 = 0.0, $conv644 = 0, $conv646 = 0, $d$0 = 0, $d$0469 = 0, $d$0472 = 0, $d$1461 = 0, $d$4 = 0, $d$5422 = 0, $d$6416 = 0, $d$7428 = 0, $dec = 0;
 var $dec476 = 0, $dec481 = 0, $dec78 = 0, $div274 = 0, $div356 = 0, $div378 = 0, $div384 = 0, $e$0458 = 0, $e$1 = 0, $e$2444 = 0, $e$4 = 0, $e$5$ph = 0, $e2 = 0, $ebuf0 = 0, $estr$0 = 0, $estr$1$lcssa = 0, $estr$1434 = 0, $estr$2 = 0, $exitcond = 0, $i$0457 = 0;
 var $i$1$lcssa = 0, $i$1453 = 0, $i$2443 = 0, $i$3439 = 0, $inc = 0, $inc425 = 0, $inc438 = 0, $inc468 = 0, $inc500 = 0, $incdec$ptr106 = 0, $incdec$ptr112 = 0, $incdec$ptr115 = 0, $incdec$ptr122 = 0, $incdec$ptr137 = 0, $incdec$ptr217 = 0, $incdec$ptr246 = 0, $incdec$ptr288 = 0, $incdec$ptr292 = 0, $incdec$ptr292$a$3 = 0, $incdec$ptr292$a$3492 = 0;
 var $incdec$ptr292$a$3494 = 0, $incdec$ptr292491 = 0, $incdec$ptr296 = 0, $incdec$ptr419 = 0, $incdec$ptr419$sink$lcssa = 0, $incdec$ptr419$sink447 = 0, $incdec$ptr423 = 0, $incdec$ptr639 = 0, $incdec$ptr645 = 0, $incdec$ptr647 = 0, $incdec$ptr681 = 0, $incdec$ptr689 = 0, $incdec$ptr698 = 0, $incdec$ptr725 = 0, $incdec$ptr734 = 0, $incdec$ptr763 = 0, $incdec$ptr773 = 0, $incdec$ptr776 = 0, $incdec$ptr808 = 0, $j$0 = 0;
 var $j$0451 = 0, $j$0454 = 0, $j$1440 = 0, $j$2 = 0, $l$0 = 0, $l$1 = 0, $land$ext$neg = 0, $lnot = 0, $lnot455 = 0, $lor$ext = 0, $mul = 0.0, $mul125 = 0.0, $mul202 = 0.0, $mul220 = 0.0, $mul286 = 0, $mul322 = 0, $mul328 = 0, $mul335 = 0, $mul349 = 0, $mul367 = 0;
 var $mul406 = 0.0, $mul406$$397 = 0.0, $mul407 = 0.0, $mul407$$$405 = 0.0, $mul431 = 0, $mul437 = 0, $mul499 = 0, $mul513 = 0, $mul80 = 0.0, $narrow = 0, $not$tobool341 = 0, $notlhs = 0, $notrhs = 0, $or = 0, $or$cond = 0, $or$cond1$not = 0, $or$cond2 = 0, $or$cond395 = 0, $or$cond396 = 0, $or$cond398 = 0;
 var $or$cond402 = 0, $or120 = 0, $or504 = 0, $or613 = 0, $p$addr$2 = 0, $p$addr$2$$sub514399 = 0, $p$addr$2$$sub562400 = 0, $p$addr$3 = 0, $p$addr$4$lcssa = 0, $p$addr$4417 = 0, $p$addr$5$lcssa = 0, $p$addr$5429 = 0, $pl$0 = 0, $prefix$0 = 0, $prefix$0$add$ptr65 = 0, $r$0$a$9 = 0, $re$1410 = 0, $rem360 = 0, $rem370 = 0, $rem494 = 0;
 var $rem494437 = 0, $round$0409 = 0.0, $round377$1 = 0.0, $s$0 = 0, $s$1 = 0, $s35$0 = 0, $s668$0420 = 0, $s668$1 = 0, $s715$0$lcssa = 0, $s715$0412 = 0, $s753$0 = 0, $s753$1424 = 0, $s753$2 = 0, $scevgep483 = 0, $scevgep483484 = 0, $shl280 = 0, $shr283 = 0, $shr285 = 0, $small$1 = 0.0, $sub = 0.0;
 var $sub$ptr$div = 0, $sub$ptr$div321 = 0, $sub$ptr$div347 = 0, $sub$ptr$div430 = 0, $sub$ptr$div511 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast143 = 0, $sub$ptr$lhs$cast151 = 0, $sub$ptr$lhs$cast305 = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast344 = 0, $sub$ptr$lhs$cast508 = 0, $sub$ptr$lhs$cast633 = 0, $sub$ptr$lhs$cast694 = 0, $sub$ptr$lhs$cast787 = 0, $sub$ptr$lhs$cast811 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast152 = 0, $sub$ptr$rhs$cast306 = 0, $sub$ptr$rhs$cast319 = 0;
 var $sub$ptr$rhs$cast428 = 0, $sub$ptr$rhs$cast634 = 0, $sub$ptr$rhs$cast634431 = 0, $sub$ptr$rhs$cast649 = 0, $sub$ptr$rhs$cast695 = 0, $sub$ptr$rhs$cast788 = 0, $sub$ptr$rhs$cast812 = 0, $sub$ptr$sub = 0, $sub$ptr$sub145 = 0, $sub$ptr$sub153 = 0, $sub$ptr$sub307 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub346 = 0, $sub$ptr$sub429 = 0, $sub$ptr$sub510 = 0, $sub$ptr$sub635 = 0, $sub$ptr$sub635432 = 0, $sub$ptr$sub650 = 0, $sub$ptr$sub650$pn = 0, $sub$ptr$sub696 = 0;
 var $sub$ptr$sub789 = 0, $sub$ptr$sub813 = 0, $sub124 = 0.0, $sub146 = 0, $sub181 = 0, $sub203 = 0, $sub219 = 0.0, $sub256 = 0, $sub264 = 0, $sub281 = 0, $sub336 = 0, $sub343 = 0, $sub357 = 0, $sub409 = 0, $sub478 = 0, $sub480 = 0, $sub514 = 0, $sub562 = 0, $sub626$le = 0, $sub735 = 0;
 var $sub74 = 0, $sub806 = 0, $sub85 = 0.0, $sub86 = 0.0, $sub88 = 0.0, $sub91 = 0.0, $sub97 = 0, $t$addr$0 = 0, $t$addr$1 = 0, $tobool13 = 0, $tobool135 = 0, $tobool139 = 0, $tobool140 = 0, $tobool222 = 0, $tobool244 = 0, $tobool290 = 0, $tobool290490 = 0, $tobool294 = 0, $tobool341 = 0, $tobool37 = 0;
 var $tobool371 = 0, $tobool380 = 0, $tobool400 = 0, $tobool484 = 0, $tobool490 = 0, $tobool56 = 0, $tobool63 = 0, $tobool76 = 0, $tobool76488 = 0, $tobool781 = 0, $tobool79 = 0, $tobool9 = 0, $w$add653 = 0, $xor = 0, $xor167 = 0, $xor186 = 0, $xor655 = 0, $xor816 = 0, $y$addr$0 = 0.0, $y$addr$1 = 0.0;
 var $y$addr$2 = 0.0, $y$addr$3 = 0.0, $y$addr$4 = 0.0, $z$0 = 0, $z$1$lcssa = 0, $z$1475 = 0, $z$2 = 0, $z$3$lcssa = 0, $z$3465 = 0, $z$4 = 0, $z$7 = 0, $z$7$add$ptr742 = 0, $z$7$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $big = sp + 8|0;
 $e2 = sp;
 $buf = sp + 524|0;
 $sub$ptr$rhs$cast = $buf;
 $ebuf0 = sp + 512|0;
 HEAP32[$e2>>2] = 0;
 $arrayidx = ((($ebuf0)) + 12|0);
 (___DOUBLE_BITS_685($y)|0);
 $0 = tempRet0;
 $1 = ($0|0)<(0);
 if ($1) {
  $sub = -$y;
  $pl$0 = 1;$prefix$0 = 5416;$y$addr$0 = $sub;
 } else {
  $and = $fl & 2048;
  $tobool9 = ($and|0)==(0);
  $and12 = $fl & 1;
  $tobool13 = ($and12|0)==(0);
  $$ = $tobool13 ? (5417) : (5422);
  $$$ = $tobool9 ? $$ : (5419);
  $2 = $fl & 2049;
  $narrow = ($2|0)!=(0);
  $$394$ = $narrow&1;
  $pl$0 = $$394$;$prefix$0 = $$$;$y$addr$0 = $y;
 }
 (___DOUBLE_BITS_685($y$addr$0)|0);
 $3 = tempRet0;
 $4 = $3 & 2146435072;
 $5 = ($4>>>0)<(2146435072);
 $6 = (0)<(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 do {
  if ($9) {
   $call55 = (+_frexpl($y$addr$0,$e2));
   $mul = $call55 * 2.0;
   $tobool56 = $mul != 0.0;
   if ($tobool56) {
    $10 = HEAP32[$e2>>2]|0;
    $dec = (($10) + -1)|0;
    HEAP32[$e2>>2] = $dec;
   }
   $or = $t | 32;
   $cmp59 = ($or|0)==(97);
   if ($cmp59) {
    $and62 = $t & 32;
    $tobool63 = ($and62|0)==(0);
    $add$ptr65 = ((($prefix$0)) + 9|0);
    $prefix$0$add$ptr65 = $tobool63 ? $prefix$0 : $add$ptr65;
    $add67 = $pl$0 | 2;
    $11 = ($p>>>0)>(11);
    $sub74 = (12 - ($p))|0;
    $tobool76488 = ($sub74|0)==(0);
    $tobool76 = $11 | $tobool76488;
    do {
     if ($tobool76) {
      $y$addr$1 = $mul;
     } else {
      $re$1410 = $sub74;$round$0409 = 8.0;
      while(1) {
       $dec78 = (($re$1410) + -1)|0;
       $mul80 = $round$0409 * 16.0;
       $tobool79 = ($dec78|0)==(0);
       if ($tobool79) {
        break;
       } else {
        $re$1410 = $dec78;$round$0409 = $mul80;
       }
      }
      $12 = HEAP8[$prefix$0$add$ptr65>>0]|0;
      $cmp82 = ($12<<24>>24)==(45);
      if ($cmp82) {
       $sub85 = -$mul;
       $sub86 = $sub85 - $mul80;
       $add87 = $mul80 + $sub86;
       $sub88 = -$add87;
       $y$addr$1 = $sub88;
       break;
      } else {
       $add90 = $mul + $mul80;
       $sub91 = $add90 - $mul80;
       $y$addr$1 = $sub91;
       break;
      }
     }
    } while(0);
    $13 = HEAP32[$e2>>2]|0;
    $cmp94 = ($13|0)<(0);
    $sub97 = (0 - ($13))|0;
    $cond100 = $cmp94 ? $sub97 : $13;
    $14 = ($cond100|0)<(0);
    $15 = $14 << 31 >> 31;
    $16 = (_fmt_u($cond100,$15,$arrayidx)|0);
    $cmp103 = ($16|0)==($arrayidx|0);
    if ($cmp103) {
     $incdec$ptr106 = ((($ebuf0)) + 11|0);
     HEAP8[$incdec$ptr106>>0] = 48;
     $estr$0 = $incdec$ptr106;
    } else {
     $estr$0 = $16;
    }
    $17 = $13 >> 31;
    $18 = $17 & 2;
    $19 = (($18) + 43)|0;
    $conv111 = $19&255;
    $incdec$ptr112 = ((($estr$0)) + -1|0);
    HEAP8[$incdec$ptr112>>0] = $conv111;
    $add113 = (($t) + 15)|0;
    $conv114 = $add113&255;
    $incdec$ptr115 = ((($estr$0)) + -2|0);
    HEAP8[$incdec$ptr115>>0] = $conv114;
    $notrhs = ($p|0)<(1);
    $and134 = $fl & 8;
    $tobool135 = ($and134|0)==(0);
    $s$0 = $buf;$y$addr$2 = $y$addr$1;
    while(1) {
     $conv116 = (~~(($y$addr$2)));
     $arrayidx117 = (5451 + ($conv116)|0);
     $20 = HEAP8[$arrayidx117>>0]|0;
     $conv118393 = $20&255;
     $or120 = $conv118393 | $and62;
     $conv121 = $or120&255;
     $incdec$ptr122 = ((($s$0)) + 1|0);
     HEAP8[$s$0>>0] = $conv121;
     $conv123 = (+($conv116|0));
     $sub124 = $y$addr$2 - $conv123;
     $mul125 = $sub124 * 16.0;
     $sub$ptr$lhs$cast = $incdec$ptr122;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp127 = ($sub$ptr$sub|0)==(1);
     if ($cmp127) {
      $notlhs = $mul125 == 0.0;
      $or$cond1$not = $notrhs & $notlhs;
      $or$cond = $tobool135 & $or$cond1$not;
      if ($or$cond) {
       $s$1 = $incdec$ptr122;
      } else {
       $incdec$ptr137 = ((($s$0)) + 2|0);
       HEAP8[$incdec$ptr122>>0] = 46;
       $s$1 = $incdec$ptr137;
      }
     } else {
      $s$1 = $incdec$ptr122;
     }
     $tobool139 = $mul125 != 0.0;
     if ($tobool139) {
      $s$0 = $s$1;$y$addr$2 = $mul125;
     } else {
      break;
     }
    }
    $tobool140 = ($p|0)!=(0);
    $sub$ptr$rhs$cast152 = $incdec$ptr115;
    $sub$ptr$lhs$cast151 = $arrayidx;
    $sub$ptr$lhs$cast143 = $s$1;
    $sub$ptr$sub145 = (($sub$ptr$lhs$cast143) - ($sub$ptr$rhs$cast))|0;
    $sub$ptr$sub153 = (($sub$ptr$lhs$cast151) - ($sub$ptr$rhs$cast152))|0;
    $sub146 = (($sub$ptr$sub145) + -2)|0;
    $cmp147 = ($sub146|0)<($p|0);
    $or$cond395 = $tobool140 & $cmp147;
    $add150 = (($p) + 2)|0;
    $add150$pn = $or$cond395 ? $add150 : $sub$ptr$sub145;
    $l$0 = (($sub$ptr$sub153) + ($add67))|0;
    $add165 = (($l$0) + ($add150$pn))|0;
    _pad_684($f,32,$w,$add165,$fl);
    _out($f,$prefix$0$add$ptr65,$add67);
    $xor167 = $fl ^ 65536;
    _pad_684($f,48,$w,$add165,$xor167);
    _out($f,$buf,$sub$ptr$sub145);
    $sub181 = (($add150$pn) - ($sub$ptr$sub145))|0;
    _pad_684($f,48,$sub181,0,0);
    _out($f,$incdec$ptr115,$sub$ptr$sub153);
    $xor186 = $fl ^ 8192;
    _pad_684($f,32,$w,$add165,$xor186);
    $add653$sink406 = $add165;
    break;
   }
   $cmp68 = ($p|0)<(0);
   $$p = $cmp68 ? 6 : $p;
   if ($tobool56) {
    $mul202 = $mul * 268435456.0;
    $21 = HEAP32[$e2>>2]|0;
    $sub203 = (($21) + -28)|0;
    HEAP32[$e2>>2] = $sub203;
    $$pr = $sub203;$y$addr$3 = $mul202;
   } else {
    $$pre = HEAP32[$e2>>2]|0;
    $$pr = $$pre;$y$addr$3 = $mul;
   }
   $cmp205 = ($$pr|0)<(0);
   $add$ptr213 = ((($big)) + 288|0);
   $arraydecay208$add$ptr213 = $cmp205 ? $big : $add$ptr213;
   $y$addr$4 = $y$addr$3;$z$0 = $arraydecay208$add$ptr213;
   while(1) {
    $conv216 = (~~(($y$addr$4))>>>0);
    HEAP32[$z$0>>2] = $conv216;
    $incdec$ptr217 = ((($z$0)) + 4|0);
    $conv218 = (+($conv216>>>0));
    $sub219 = $y$addr$4 - $conv218;
    $mul220 = $sub219 * 1.0E+9;
    $tobool222 = $mul220 != 0.0;
    if ($tobool222) {
     $y$addr$4 = $mul220;$z$0 = $incdec$ptr217;
    } else {
     break;
    }
   }
   $cmp225474 = ($$pr|0)>(0);
   if ($cmp225474) {
    $23 = $$pr;$a$1476 = $arraydecay208$add$ptr213;$z$1475 = $incdec$ptr217;
    while(1) {
     $22 = ($23|0)<(29);
     $cond233 = $22 ? $23 : 29;
     $d$0469 = ((($z$1475)) + -4|0);
     $cmp235470 = ($d$0469>>>0)<($a$1476>>>0);
     if ($cmp235470) {
      $a$2$ph = $a$1476;
     } else {
      $carry$0471 = 0;$d$0472 = $d$0469;
      while(1) {
       $24 = HEAP32[$d$0472>>2]|0;
       $25 = (_bitshift64Shl(($24|0),0,($cond233|0))|0);
       $26 = tempRet0;
       $27 = (_i64Add(($25|0),($26|0),($carry$0471|0),0)|0);
       $28 = tempRet0;
       $29 = (___uremdi3(($27|0),($28|0),1000000000,0)|0);
       $30 = tempRet0;
       HEAP32[$d$0472>>2] = $29;
       $31 = (___udivdi3(($27|0),($28|0),1000000000,0)|0);
       $32 = tempRet0;
       $d$0 = ((($d$0472)) + -4|0);
       $cmp235 = ($d$0>>>0)<($a$1476>>>0);
       if ($cmp235) {
        break;
       } else {
        $carry$0471 = $31;$d$0472 = $d$0;
       }
      }
      $tobool244 = ($31|0)==(0);
      if ($tobool244) {
       $a$2$ph = $a$1476;
      } else {
       $incdec$ptr246 = ((($a$1476)) + -4|0);
       HEAP32[$incdec$ptr246>>2] = $31;
       $a$2$ph = $incdec$ptr246;
      }
     }
     $z$2 = $z$1475;
     while(1) {
      $cmp249 = ($z$2>>>0)>($a$2$ph>>>0);
      if (!($cmp249)) {
       break;
      }
      $arrayidx251 = ((($z$2)) + -4|0);
      $33 = HEAP32[$arrayidx251>>2]|0;
      $lnot = ($33|0)==(0);
      if ($lnot) {
       $z$2 = $arrayidx251;
      } else {
       break;
      }
     }
     $34 = HEAP32[$e2>>2]|0;
     $sub256 = (($34) - ($cond233))|0;
     HEAP32[$e2>>2] = $sub256;
     $cmp225 = ($sub256|0)>(0);
     if ($cmp225) {
      $23 = $sub256;$a$1476 = $a$2$ph;$z$1475 = $z$2;
     } else {
      $$pr407 = $sub256;$a$1$lcssa = $a$2$ph;$z$1$lcssa = $z$2;
      break;
     }
    }
   } else {
    $$pr407 = $$pr;$a$1$lcssa = $arraydecay208$add$ptr213;$z$1$lcssa = $incdec$ptr217;
   }
   $cmp259464 = ($$pr407|0)<(0);
   if ($cmp259464) {
    $add273 = (($$p) + 25)|0;
    $div274 = (($add273|0) / 9)&-1;
    $add275 = (($div274) + 1)|0;
    $cmp299 = ($or|0)==(102);
    $35 = $$pr407;$a$3466 = $a$1$lcssa;$z$3465 = $z$1$lcssa;
    while(1) {
     $sub264 = (0 - ($35))|0;
     $36 = ($sub264|0)<(9);
     $cond271 = $36 ? $sub264 : 9;
     $cmp277460 = ($a$3466>>>0)<($z$3465>>>0);
     if ($cmp277460) {
      $shl280 = 1 << $cond271;
      $sub281 = (($shl280) + -1)|0;
      $shr285 = 1000000000 >>> $cond271;
      $carry262$0462 = 0;$d$1461 = $a$3466;
      while(1) {
       $38 = HEAP32[$d$1461>>2]|0;
       $and282 = $38 & $sub281;
       $shr283 = $38 >>> $cond271;
       $add284 = (($shr283) + ($carry262$0462))|0;
       HEAP32[$d$1461>>2] = $add284;
       $mul286 = Math_imul($and282, $shr285)|0;
       $incdec$ptr288 = ((($d$1461)) + 4|0);
       $cmp277 = ($incdec$ptr288>>>0)<($z$3465>>>0);
       if ($cmp277) {
        $carry262$0462 = $mul286;$d$1461 = $incdec$ptr288;
       } else {
        break;
       }
      }
      $39 = HEAP32[$a$3466>>2]|0;
      $tobool290 = ($39|0)==(0);
      $incdec$ptr292 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3 = $tobool290 ? $incdec$ptr292 : $a$3466;
      $tobool294 = ($mul286|0)==(0);
      if ($tobool294) {
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $z$3465;
      } else {
       $incdec$ptr296 = ((($z$3465)) + 4|0);
       HEAP32[$z$3465>>2] = $mul286;
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $incdec$ptr296;
      }
     } else {
      $37 = HEAP32[$a$3466>>2]|0;
      $tobool290490 = ($37|0)==(0);
      $incdec$ptr292491 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3492 = $tobool290490 ? $incdec$ptr292491 : $a$3466;
      $incdec$ptr292$a$3494 = $incdec$ptr292$a$3492;$z$4 = $z$3465;
     }
     $cond304 = $cmp299 ? $arraydecay208$add$ptr213 : $incdec$ptr292$a$3494;
     $sub$ptr$lhs$cast305 = $z$4;
     $sub$ptr$rhs$cast306 = $cond304;
     $sub$ptr$sub307 = (($sub$ptr$lhs$cast305) - ($sub$ptr$rhs$cast306))|0;
     $sub$ptr$div = $sub$ptr$sub307 >> 2;
     $cmp308 = ($sub$ptr$div|0)>($add275|0);
     $add$ptr311 = (($cond304) + ($add275<<2)|0);
     $add$ptr311$z$4 = $cmp308 ? $add$ptr311 : $z$4;
     $40 = HEAP32[$e2>>2]|0;
     $add313 = (($40) + ($cond271))|0;
     HEAP32[$e2>>2] = $add313;
     $cmp259 = ($add313|0)<(0);
     if ($cmp259) {
      $35 = $add313;$a$3466 = $incdec$ptr292$a$3494;$z$3465 = $add$ptr311$z$4;
     } else {
      $a$3$lcssa = $incdec$ptr292$a$3494;$z$3$lcssa = $add$ptr311$z$4;
      break;
     }
    }
   } else {
    $a$3$lcssa = $a$1$lcssa;$z$3$lcssa = $z$1$lcssa;
   }
   $cmp315 = ($a$3$lcssa>>>0)<($z$3$lcssa>>>0);
   $sub$ptr$lhs$cast318 = $arraydecay208$add$ptr213;
   if ($cmp315) {
    $sub$ptr$rhs$cast319 = $a$3$lcssa;
    $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
    $sub$ptr$div321 = $sub$ptr$sub320 >> 2;
    $mul322 = ($sub$ptr$div321*9)|0;
    $41 = HEAP32[$a$3$lcssa>>2]|0;
    $cmp324456 = ($41>>>0)<(10);
    if ($cmp324456) {
     $e$1 = $mul322;
    } else {
     $e$0458 = $mul322;$i$0457 = 10;
     while(1) {
      $mul328 = ($i$0457*10)|0;
      $inc = (($e$0458) + 1)|0;
      $cmp324 = ($41>>>0)<($mul328>>>0);
      if ($cmp324) {
       $e$1 = $inc;
       break;
      } else {
       $e$0458 = $inc;$i$0457 = $mul328;
      }
     }
    }
   } else {
    $e$1 = 0;
   }
   $cmp333 = ($or|0)!=(102);
   $mul335 = $cmp333 ? $e$1 : 0;
   $sub336 = (($$p) - ($mul335))|0;
   $cmp338 = ($or|0)==(103);
   $tobool341 = ($$p|0)!=(0);
   $42 = $tobool341 & $cmp338;
   $land$ext$neg = $42 << 31 >> 31;
   $sub343 = (($sub336) + ($land$ext$neg))|0;
   $sub$ptr$lhs$cast344 = $z$3$lcssa;
   $sub$ptr$sub346 = (($sub$ptr$lhs$cast344) - ($sub$ptr$lhs$cast318))|0;
   $sub$ptr$div347 = $sub$ptr$sub346 >> 2;
   $43 = ($sub$ptr$div347*9)|0;
   $mul349 = (($43) + -9)|0;
   $cmp350 = ($sub343|0)<($mul349|0);
   if ($cmp350) {
    $add$ptr354 = ((($arraydecay208$add$ptr213)) + 4|0);
    $add355 = (($sub343) + 9216)|0;
    $div356 = (($add355|0) / 9)&-1;
    $sub357 = (($div356) + -1024)|0;
    $add$ptr358 = (($add$ptr354) + ($sub357<<2)|0);
    $rem360 = (($add355|0) % 9)&-1;
    $j$0451 = (($rem360) + 1)|0;
    $cmp363452 = ($j$0451|0)<(9);
    if ($cmp363452) {
     $i$1453 = 10;$j$0454 = $j$0451;
     while(1) {
      $mul367 = ($i$1453*10)|0;
      $j$0 = (($j$0454) + 1)|0;
      $exitcond = ($j$0|0)==(9);
      if ($exitcond) {
       $i$1$lcssa = $mul367;
       break;
      } else {
       $i$1453 = $mul367;$j$0454 = $j$0;
      }
     }
    } else {
     $i$1$lcssa = 10;
    }
    $44 = HEAP32[$add$ptr358>>2]|0;
    $rem370 = (($44>>>0) % ($i$1$lcssa>>>0))&-1;
    $tobool371 = ($rem370|0)==(0);
    $add$ptr373 = ((($add$ptr358)) + 4|0);
    $cmp374 = ($add$ptr373|0)==($z$3$lcssa|0);
    $or$cond396 = $cmp374 & $tobool371;
    if ($or$cond396) {
     $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
    } else {
     $div378 = (($44>>>0) / ($i$1$lcssa>>>0))&-1;
     $and379 = $div378 & 1;
     $tobool380 = ($and379|0)==(0);
     $$397 = $tobool380 ? 9007199254740992.0 : 9007199254740994.0;
     $div384 = (($i$1$lcssa|0) / 2)&-1;
     $cmp385 = ($rem370>>>0)<($div384>>>0);
     $cmp390 = ($rem370|0)==($div384|0);
     $or$cond398 = $cmp374 & $cmp390;
     $$405 = $or$cond398 ? 1.0 : 1.5;
     $$$405 = $cmp385 ? 0.5 : $$405;
     $tobool400 = ($pl$0|0)==(0);
     if ($tobool400) {
      $round377$1 = $$397;$small$1 = $$$405;
     } else {
      $45 = HEAP8[$prefix$0>>0]|0;
      $cmp403 = ($45<<24>>24)==(45);
      $mul406 = -$$397;
      $mul407 = -$$$405;
      $mul406$$397 = $cmp403 ? $mul406 : $$397;
      $mul407$$$405 = $cmp403 ? $mul407 : $$$405;
      $round377$1 = $mul406$$397;$small$1 = $mul407$$$405;
     }
     $sub409 = (($44) - ($rem370))|0;
     HEAP32[$add$ptr358>>2] = $sub409;
     $add410 = $round377$1 + $small$1;
     $cmp411 = $add410 != $round377$1;
     if ($cmp411) {
      $add414 = (($sub409) + ($i$1$lcssa))|0;
      HEAP32[$add$ptr358>>2] = $add414;
      $cmp416446 = ($add414>>>0)>(999999999);
      if ($cmp416446) {
       $a$5448 = $a$3$lcssa;$incdec$ptr419$sink447 = $add$ptr358;
       while(1) {
        $incdec$ptr419 = ((($incdec$ptr419$sink447)) + -4|0);
        HEAP32[$incdec$ptr419$sink447>>2] = 0;
        $cmp420 = ($incdec$ptr419>>>0)<($a$5448>>>0);
        if ($cmp420) {
         $incdec$ptr423 = ((($a$5448)) + -4|0);
         HEAP32[$incdec$ptr423>>2] = 0;
         $a$6 = $incdec$ptr423;
        } else {
         $a$6 = $a$5448;
        }
        $46 = HEAP32[$incdec$ptr419>>2]|0;
        $inc425 = (($46) + 1)|0;
        HEAP32[$incdec$ptr419>>2] = $inc425;
        $cmp416 = ($inc425>>>0)>(999999999);
        if ($cmp416) {
         $a$5448 = $a$6;$incdec$ptr419$sink447 = $incdec$ptr419;
        } else {
         $a$5$lcssa = $a$6;$incdec$ptr419$sink$lcssa = $incdec$ptr419;
         break;
        }
       }
      } else {
       $a$5$lcssa = $a$3$lcssa;$incdec$ptr419$sink$lcssa = $add$ptr358;
      }
      $sub$ptr$rhs$cast428 = $a$5$lcssa;
      $sub$ptr$sub429 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast428))|0;
      $sub$ptr$div430 = $sub$ptr$sub429 >> 2;
      $mul431 = ($sub$ptr$div430*9)|0;
      $47 = HEAP32[$a$5$lcssa>>2]|0;
      $cmp433442 = ($47>>>0)<(10);
      if ($cmp433442) {
       $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $mul431;
      } else {
       $e$2444 = $mul431;$i$2443 = 10;
       while(1) {
        $mul437 = ($i$2443*10)|0;
        $inc438 = (($e$2444) + 1)|0;
        $cmp433 = ($47>>>0)<($mul437>>>0);
        if ($cmp433) {
         $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $inc438;
         break;
        } else {
         $e$2444 = $inc438;$i$2443 = $mul437;
        }
       }
      }
     } else {
      $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
     }
    }
    $add$ptr442 = ((($d$4)) + 4|0);
    $cmp443 = ($z$3$lcssa>>>0)>($add$ptr442>>>0);
    $add$ptr442$z$3 = $cmp443 ? $add$ptr442 : $z$3$lcssa;
    $a$9$ph = $a$8;$e$5$ph = $e$4;$z$7$ph = $add$ptr442$z$3;
   } else {
    $a$9$ph = $a$3$lcssa;$e$5$ph = $e$1;$z$7$ph = $z$3$lcssa;
   }
   $z$7 = $z$7$ph;
   while(1) {
    $cmp450 = ($z$7>>>0)>($a$9$ph>>>0);
    if (!($cmp450)) {
     $cmp450$lcssa = 0;
     break;
    }
    $arrayidx453 = ((($z$7)) + -4|0);
    $48 = HEAP32[$arrayidx453>>2]|0;
    $lnot455 = ($48|0)==(0);
    if ($lnot455) {
     $z$7 = $arrayidx453;
    } else {
     $cmp450$lcssa = 1;
     break;
    }
   }
   $sub626$le = (0 - ($e$5$ph))|0;
   do {
    if ($cmp338) {
     $not$tobool341 = $tobool341 ^ 1;
     $inc468 = $not$tobool341&1;
     $$p$inc468 = (($inc468) + ($$p))|0;
     $cmp470 = ($$p$inc468|0)>($e$5$ph|0);
     $cmp473 = ($e$5$ph|0)>(-5);
     $or$cond2 = $cmp470 & $cmp473;
     if ($or$cond2) {
      $dec476 = (($t) + -1)|0;
      $add477$neg = (($$p$inc468) + -1)|0;
      $sub478 = (($add477$neg) - ($e$5$ph))|0;
      $p$addr$2 = $sub478;$t$addr$0 = $dec476;
     } else {
      $sub480 = (($t) + -2)|0;
      $dec481 = (($$p$inc468) + -1)|0;
      $p$addr$2 = $dec481;$t$addr$0 = $sub480;
     }
     $and483 = $fl & 8;
     $tobool484 = ($and483|0)==(0);
     if ($tobool484) {
      if ($cmp450$lcssa) {
       $arrayidx489 = ((($z$7)) + -4|0);
       $49 = HEAP32[$arrayidx489>>2]|0;
       $tobool490 = ($49|0)==(0);
       if ($tobool490) {
        $j$2 = 9;
       } else {
        $rem494437 = (($49>>>0) % 10)&-1;
        $cmp495438 = ($rem494437|0)==(0);
        if ($cmp495438) {
         $i$3439 = 10;$j$1440 = 0;
         while(1) {
          $mul499 = ($i$3439*10)|0;
          $inc500 = (($j$1440) + 1)|0;
          $rem494 = (($49>>>0) % ($mul499>>>0))&-1;
          $cmp495 = ($rem494|0)==(0);
          if ($cmp495) {
           $i$3439 = $mul499;$j$1440 = $inc500;
          } else {
           $j$2 = $inc500;
           break;
          }
         }
        } else {
         $j$2 = 0;
        }
       }
      } else {
       $j$2 = 9;
      }
      $or504 = $t$addr$0 | 32;
      $cmp505 = ($or504|0)==(102);
      $sub$ptr$lhs$cast508 = $z$7;
      $sub$ptr$sub510 = (($sub$ptr$lhs$cast508) - ($sub$ptr$lhs$cast318))|0;
      $sub$ptr$div511 = $sub$ptr$sub510 >> 2;
      $50 = ($sub$ptr$div511*9)|0;
      $mul513 = (($50) + -9)|0;
      if ($cmp505) {
       $sub514 = (($mul513) - ($j$2))|0;
       $51 = ($sub514|0)>(0);
       $$sub514 = $51 ? $sub514 : 0;
       $cmp528 = ($p$addr$2|0)<($$sub514|0);
       $p$addr$2$$sub514399 = $cmp528 ? $p$addr$2 : $$sub514;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub514399;$t$addr$1 = $t$addr$0;
       break;
      } else {
       $add561 = (($mul513) + ($e$5$ph))|0;
       $sub562 = (($add561) - ($j$2))|0;
       $52 = ($sub562|0)>(0);
       $$sub562 = $52 ? $sub562 : 0;
       $cmp577 = ($p$addr$2|0)<($$sub562|0);
       $p$addr$2$$sub562400 = $cmp577 ? $p$addr$2 : $$sub562;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub562400;$t$addr$1 = $t$addr$0;
       break;
      }
     } else {
      $and610$pre$phiZ2D = $and483;$p$addr$3 = $p$addr$2;$t$addr$1 = $t$addr$0;
     }
    } else {
     $$pre487 = $fl & 8;
     $and610$pre$phiZ2D = $$pre487;$p$addr$3 = $$p;$t$addr$1 = $t;
    }
   } while(0);
   $53 = $p$addr$3 | $and610$pre$phiZ2D;
   $54 = ($53|0)!=(0);
   $lor$ext = $54&1;
   $or613 = $t$addr$1 | 32;
   $cmp614 = ($or613|0)==(102);
   if ($cmp614) {
    $cmp617 = ($e$5$ph|0)>(0);
    $add620 = $cmp617 ? $e$5$ph : 0;
    $estr$2 = 0;$sub$ptr$sub650$pn = $add620;
   } else {
    $cmp623 = ($e$5$ph|0)<(0);
    $cond629 = $cmp623 ? $sub626$le : $e$5$ph;
    $55 = ($cond629|0)<(0);
    $56 = $55 << 31 >> 31;
    $57 = (_fmt_u($cond629,$56,$arrayidx)|0);
    $sub$ptr$lhs$cast633 = $arrayidx;
    $sub$ptr$rhs$cast634431 = $57;
    $sub$ptr$sub635432 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634431))|0;
    $cmp636433 = ($sub$ptr$sub635432|0)<(2);
    if ($cmp636433) {
     $estr$1434 = $57;
     while(1) {
      $incdec$ptr639 = ((($estr$1434)) + -1|0);
      HEAP8[$incdec$ptr639>>0] = 48;
      $sub$ptr$rhs$cast634 = $incdec$ptr639;
      $sub$ptr$sub635 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634))|0;
      $cmp636 = ($sub$ptr$sub635|0)<(2);
      if ($cmp636) {
       $estr$1434 = $incdec$ptr639;
      } else {
       $estr$1$lcssa = $incdec$ptr639;
       break;
      }
     }
    } else {
     $estr$1$lcssa = $57;
    }
    $58 = $e$5$ph >> 31;
    $59 = $58 & 2;
    $60 = (($59) + 43)|0;
    $conv644 = $60&255;
    $incdec$ptr645 = ((($estr$1$lcssa)) + -1|0);
    HEAP8[$incdec$ptr645>>0] = $conv644;
    $conv646 = $t$addr$1&255;
    $incdec$ptr647 = ((($estr$1$lcssa)) + -2|0);
    HEAP8[$incdec$ptr647>>0] = $conv646;
    $sub$ptr$rhs$cast649 = $incdec$ptr647;
    $sub$ptr$sub650 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast649))|0;
    $estr$2 = $incdec$ptr647;$sub$ptr$sub650$pn = $sub$ptr$sub650;
   }
   $add608 = (($pl$0) + 1)|0;
   $add612 = (($add608) + ($p$addr$3))|0;
   $l$1 = (($add612) + ($lor$ext))|0;
   $add653 = (($l$1) + ($sub$ptr$sub650$pn))|0;
   _pad_684($f,32,$w,$add653,$fl);
   _out($f,$prefix$0,$pl$0);
   $xor655 = $fl ^ 65536;
   _pad_684($f,48,$w,$add653,$xor655);
   if ($cmp614) {
    $cmp660 = ($a$9$ph>>>0)>($arraydecay208$add$ptr213>>>0);
    $r$0$a$9 = $cmp660 ? $arraydecay208$add$ptr213 : $a$9$ph;
    $add$ptr671 = ((($buf)) + 9|0);
    $sub$ptr$lhs$cast694 = $add$ptr671;
    $incdec$ptr689 = ((($buf)) + 8|0);
    $d$5422 = $r$0$a$9;
    while(1) {
     $61 = HEAP32[$d$5422>>2]|0;
     $62 = (_fmt_u($61,0,$add$ptr671)|0);
     $cmp673 = ($d$5422|0)==($r$0$a$9|0);
     if ($cmp673) {
      $cmp686 = ($62|0)==($add$ptr671|0);
      if ($cmp686) {
       HEAP8[$incdec$ptr689>>0] = 48;
       $s668$1 = $incdec$ptr689;
      } else {
       $s668$1 = $62;
      }
     } else {
      $cmp678419 = ($62>>>0)>($buf>>>0);
      if ($cmp678419) {
       $63 = $62;
       $64 = (($63) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($64|0))|0;
       $s668$0420 = $62;
       while(1) {
        $incdec$ptr681 = ((($s668$0420)) + -1|0);
        $cmp678 = ($incdec$ptr681>>>0)>($buf>>>0);
        if ($cmp678) {
         $s668$0420 = $incdec$ptr681;
        } else {
         $s668$1 = $incdec$ptr681;
         break;
        }
       }
      } else {
       $s668$1 = $62;
      }
     }
     $sub$ptr$rhs$cast695 = $s668$1;
     $sub$ptr$sub696 = (($sub$ptr$lhs$cast694) - ($sub$ptr$rhs$cast695))|0;
     _out($f,$s668$1,$sub$ptr$sub696);
     $incdec$ptr698 = ((($d$5422)) + 4|0);
     $cmp665 = ($incdec$ptr698>>>0)>($arraydecay208$add$ptr213>>>0);
     if ($cmp665) {
      break;
     } else {
      $d$5422 = $incdec$ptr698;
     }
    }
    $65 = ($53|0)==(0);
    if (!($65)) {
     _out($f,5467,1);
    }
    $cmp707414 = ($incdec$ptr698>>>0)<($z$7>>>0);
    $cmp710415 = ($p$addr$3|0)>(0);
    $66 = $cmp707414 & $cmp710415;
    if ($66) {
     $d$6416 = $incdec$ptr698;$p$addr$4417 = $p$addr$3;
     while(1) {
      $67 = HEAP32[$d$6416>>2]|0;
      $68 = (_fmt_u($67,0,$add$ptr671)|0);
      $cmp722411 = ($68>>>0)>($buf>>>0);
      if ($cmp722411) {
       $69 = $68;
       $70 = (($69) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($70|0))|0;
       $s715$0412 = $68;
       while(1) {
        $incdec$ptr725 = ((($s715$0412)) + -1|0);
        $cmp722 = ($incdec$ptr725>>>0)>($buf>>>0);
        if ($cmp722) {
         $s715$0412 = $incdec$ptr725;
        } else {
         $s715$0$lcssa = $incdec$ptr725;
         break;
        }
       }
      } else {
       $s715$0$lcssa = $68;
      }
      $71 = ($p$addr$4417|0)<(9);
      $cond732 = $71 ? $p$addr$4417 : 9;
      _out($f,$s715$0$lcssa,$cond732);
      $incdec$ptr734 = ((($d$6416)) + 4|0);
      $sub735 = (($p$addr$4417) + -9)|0;
      $cmp707 = ($incdec$ptr734>>>0)<($z$7>>>0);
      $cmp710 = ($p$addr$4417|0)>(9);
      $72 = $cmp707 & $cmp710;
      if ($72) {
       $d$6416 = $incdec$ptr734;$p$addr$4417 = $sub735;
      } else {
       $p$addr$4$lcssa = $sub735;
       break;
      }
     }
    } else {
     $p$addr$4$lcssa = $p$addr$3;
    }
    $add737 = (($p$addr$4$lcssa) + 9)|0;
    _pad_684($f,48,$add737,9,0);
   } else {
    $add$ptr742 = ((($a$9$ph)) + 4|0);
    $z$7$add$ptr742 = $cmp450$lcssa ? $z$7 : $add$ptr742;
    $cmp748427 = ($p$addr$3|0)>(-1);
    if ($cmp748427) {
     $add$ptr756 = ((($buf)) + 9|0);
     $tobool781 = ($and610$pre$phiZ2D|0)==(0);
     $sub$ptr$lhs$cast787 = $add$ptr756;
     $73 = (0 - ($sub$ptr$rhs$cast))|0;
     $incdec$ptr763 = ((($buf)) + 8|0);
     $d$7428 = $a$9$ph;$p$addr$5429 = $p$addr$3;
     while(1) {
      $74 = HEAP32[$d$7428>>2]|0;
      $75 = (_fmt_u($74,0,$add$ptr756)|0);
      $cmp760 = ($75|0)==($add$ptr756|0);
      if ($cmp760) {
       HEAP8[$incdec$ptr763>>0] = 48;
       $s753$0 = $incdec$ptr763;
      } else {
       $s753$0 = $75;
      }
      $cmp765 = ($d$7428|0)==($a$9$ph|0);
      do {
       if ($cmp765) {
        $incdec$ptr776 = ((($s753$0)) + 1|0);
        _out($f,$s753$0,1);
        $cmp777 = ($p$addr$5429|0)<(1);
        $or$cond402 = $tobool781 & $cmp777;
        if ($or$cond402) {
         $s753$2 = $incdec$ptr776;
         break;
        }
        _out($f,5467,1);
        $s753$2 = $incdec$ptr776;
       } else {
        $cmp770423 = ($s753$0>>>0)>($buf>>>0);
        if (!($cmp770423)) {
         $s753$2 = $s753$0;
         break;
        }
        $scevgep483 = (($s753$0) + ($73)|0);
        $scevgep483484 = $scevgep483;
        _memset(($buf|0),48,($scevgep483484|0))|0;
        $s753$1424 = $s753$0;
        while(1) {
         $incdec$ptr773 = ((($s753$1424)) + -1|0);
         $cmp770 = ($incdec$ptr773>>>0)>($buf>>>0);
         if ($cmp770) {
          $s753$1424 = $incdec$ptr773;
         } else {
          $s753$2 = $incdec$ptr773;
          break;
         }
        }
       }
      } while(0);
      $sub$ptr$rhs$cast788 = $s753$2;
      $sub$ptr$sub789 = (($sub$ptr$lhs$cast787) - ($sub$ptr$rhs$cast788))|0;
      $cmp790 = ($p$addr$5429|0)>($sub$ptr$sub789|0);
      $cond800 = $cmp790 ? $sub$ptr$sub789 : $p$addr$5429;
      _out($f,$s753$2,$cond800);
      $sub806 = (($p$addr$5429) - ($sub$ptr$sub789))|0;
      $incdec$ptr808 = ((($d$7428)) + 4|0);
      $cmp745 = ($incdec$ptr808>>>0)<($z$7$add$ptr742>>>0);
      $cmp748 = ($sub806|0)>(-1);
      $76 = $cmp745 & $cmp748;
      if ($76) {
       $d$7428 = $incdec$ptr808;$p$addr$5429 = $sub806;
      } else {
       $p$addr$5$lcssa = $sub806;
       break;
      }
     }
    } else {
     $p$addr$5$lcssa = $p$addr$3;
    }
    $add810 = (($p$addr$5$lcssa) + 18)|0;
    _pad_684($f,48,$add810,18,0);
    $sub$ptr$lhs$cast811 = $arrayidx;
    $sub$ptr$rhs$cast812 = $estr$2;
    $sub$ptr$sub813 = (($sub$ptr$lhs$cast811) - ($sub$ptr$rhs$cast812))|0;
    _out($f,$estr$2,$sub$ptr$sub813);
   }
   $xor816 = $fl ^ 8192;
   _pad_684($f,32,$w,$add653,$xor816);
   $add653$sink406 = $add653;
  } else {
   $and36 = $t & 32;
   $tobool37 = ($and36|0)!=(0);
   $cond = $tobool37 ? 5435 : 5439;
   $cmp38 = ($y$addr$0 != $y$addr$0) | (0.0 != 0.0);
   $cond43 = $tobool37 ? 5443 : 5447;
   $s35$0 = $cmp38 ? $cond43 : $cond;
   $add = (($pl$0) + 3)|0;
   $and45 = $fl & -65537;
   _pad_684($f,32,$w,$add,$and45);
   _out($f,$prefix$0,$pl$0);
   _out($f,$s35$0,3);
   $xor = $fl ^ 8192;
   _pad_684($f,32,$w,$add,$xor);
   $add653$sink406 = $add;
  }
 } while(0);
 $cmp818 = ($add653$sink406|0)<($w|0);
 $w$add653 = $cmp818 ? $w : $add653$sink406;
 STACKTOP = sp;return ($w$add653|0);
}
function ___DOUBLE_BITS_685($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $call = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (+_frexp($x,$e));
 return (+$call);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $call = 0.0, $conv = 0, $mul = 0.0, $retval$0 = 0.0, $storemerge = 0, $sub = 0, $sub8 = 0, $tobool1 = 0, $trunc$clear = 0, $x$addr$0 = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2&65535;
 $trunc$clear = $4 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $tobool1 = $x != 0.0;
  if ($tobool1) {
   $mul = $x * 1.8446744073709552E+19;
   $call = (+_frexp($mul,$e));
   $5 = HEAP32[$e>>2]|0;
   $sub = (($5) + -64)|0;
   $storemerge = $sub;$x$addr$0 = $call;
  } else {
   $storemerge = 0;$x$addr$0 = $x;
  }
  HEAP32[$e>>2] = $storemerge;
  $retval$0 = $x$addr$0;
  break;
 }
 case 2047:  {
  $retval$0 = $x;
  break;
 }
 default: {
  $conv = $2 & 2047;
  $sub8 = (($conv) + -1022)|0;
  HEAP32[$e>>2] = $sub8;
  $6 = $1 & -2146435073;
  $7 = $6 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $7;$8 = +HEAPF64[tempDoublePtr>>3];
  $retval$0 = $8;
 }
 }
 return (+$retval$0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $and = 0, $and32 = 0, $and36 = 0, $and49 = 0, $and54 = 0, $and58 = 0, $call = 0, $call10 = 0, $call66 = 0, $cmp = 0, $cmp14 = 0, $cmp21 = 0, $cmp24 = 0, $cmp41 = 0, $cmp7 = 0, $conv = 0;
 var $conv12 = 0, $conv17 = 0, $conv19 = 0, $conv29 = 0, $conv34 = 0, $conv38 = 0, $conv46 = 0, $conv51 = 0, $conv56 = 0, $conv60 = 0, $incdec$ptr = 0, $incdec$ptr30 = 0, $incdec$ptr35 = 0, $incdec$ptr47 = 0, $incdec$ptr52 = 0, $incdec$ptr57 = 0, $locale = 0, $not$tobool2 = 0, $or = 0, $or$cond = 0;
 var $or18 = 0, $or28 = 0, $or33 = 0, $or37 = 0, $or45 = 0, $or50 = 0, $or55 = 0, $or59 = 0, $retval$0 = 0, $shr2729 = 0, $shr3130 = 0, $shr32 = 0, $shr4426 = 0, $shr4827 = 0, $shr5328 = 0, $sub40 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 do {
  if ($tobool) {
   $retval$0 = 1;
  } else {
   $cmp = ($wc>>>0)<(128);
   if ($cmp) {
    $conv = $wc&255;
    HEAP8[$s>>0] = $conv;
    $retval$0 = 1;
    break;
   }
   $call = (___pthread_self_431()|0);
   $locale = ((($call)) + 188|0);
   $0 = HEAP32[$locale>>2]|0;
   $1 = HEAP32[$0>>2]|0;
   $not$tobool2 = ($1|0)==(0|0);
   if ($not$tobool2) {
    $2 = $wc & -128;
    $cmp7 = ($2|0)==(57216);
    if ($cmp7) {
     $conv12 = $wc&255;
     HEAP8[$s>>0] = $conv12;
     $retval$0 = 1;
     break;
    } else {
     $call10 = (___errno_location()|0);
     HEAP32[$call10>>2] = 84;
     $retval$0 = -1;
     break;
    }
   }
   $cmp14 = ($wc>>>0)<(2048);
   if ($cmp14) {
    $shr32 = $wc >>> 6;
    $or = $shr32 | 192;
    $conv17 = $or&255;
    $incdec$ptr = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv17;
    $and = $wc & 63;
    $or18 = $and | 128;
    $conv19 = $or18&255;
    HEAP8[$incdec$ptr>>0] = $conv19;
    $retval$0 = 2;
    break;
   }
   $cmp21 = ($wc>>>0)<(55296);
   $3 = $wc & -8192;
   $cmp24 = ($3|0)==(57344);
   $or$cond = $cmp21 | $cmp24;
   if ($or$cond) {
    $shr2729 = $wc >>> 12;
    $or28 = $shr2729 | 224;
    $conv29 = $or28&255;
    $incdec$ptr30 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv29;
    $shr3130 = $wc >>> 6;
    $and32 = $shr3130 & 63;
    $or33 = $and32 | 128;
    $conv34 = $or33&255;
    $incdec$ptr35 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr30>>0] = $conv34;
    $and36 = $wc & 63;
    $or37 = $and36 | 128;
    $conv38 = $or37&255;
    HEAP8[$incdec$ptr35>>0] = $conv38;
    $retval$0 = 3;
    break;
   }
   $sub40 = (($wc) + -65536)|0;
   $cmp41 = ($sub40>>>0)<(1048576);
   if ($cmp41) {
    $shr4426 = $wc >>> 18;
    $or45 = $shr4426 | 240;
    $conv46 = $or45&255;
    $incdec$ptr47 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv46;
    $shr4827 = $wc >>> 12;
    $and49 = $shr4827 & 63;
    $or50 = $and49 | 128;
    $conv51 = $or50&255;
    $incdec$ptr52 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr47>>0] = $conv51;
    $shr5328 = $wc >>> 6;
    $and54 = $shr5328 & 63;
    $or55 = $and54 | 128;
    $conv56 = $or55&255;
    $incdec$ptr57 = ((($s)) + 3|0);
    HEAP8[$incdec$ptr52>>0] = $conv56;
    $and58 = $wc & 63;
    $or59 = $and58 | 128;
    $conv60 = $or59&255;
    HEAP8[$incdec$ptr57>>0] = $conv60;
    $retval$0 = 4;
    break;
   } else {
    $call66 = (___errno_location()|0);
    HEAP32[$call66>>2] = 84;
    $retval$0 = -1;
    break;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___pthread_self_431() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___pthread_self_104() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___strerror_l($e,$loc) {
 $e = $e|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $2 = 0, $arrayidx = 0, $arrayidx15 = 0, $call = 0, $cmp = 0, $conv = 0, $dec = 0, $i$012 = 0, $i$111 = 0, $inc = 0, $incdec$ptr = 0, $s$0$lcssa = 0, $s$010 = 0, $s$1 = 0, $tobool = 0, $tobool5 = 0, $tobool59 = 0, $tobool8 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $i$012 = 0;
 while(1) {
  $arrayidx = (5469 + ($i$012)|0);
  $0 = HEAP8[$arrayidx>>0]|0;
  $conv = $0&255;
  $cmp = ($conv|0)==($e|0);
  if ($cmp) {
   label = 2;
   break;
  }
  $inc = (($i$012) + 1)|0;
  $tobool = ($inc|0)==(87);
  if ($tobool) {
   $i$111 = 87;$s$010 = 5557;
   label = 5;
   break;
  } else {
   $i$012 = $inc;
  }
 }
 if ((label|0) == 2) {
  $tobool59 = ($i$012|0)==(0);
  if ($tobool59) {
   $s$0$lcssa = 5557;
  } else {
   $i$111 = $i$012;$s$010 = 5557;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$010;
   while(1) {
    $1 = HEAP8[$s$1>>0]|0;
    $tobool8 = ($1<<24>>24)==(0);
    $incdec$ptr = ((($s$1)) + 1|0);
    if ($tobool8) {
     break;
    } else {
     $s$1 = $incdec$ptr;
    }
   }
   $dec = (($i$111) + -1)|0;
   $tobool5 = ($dec|0)==(0);
   if ($tobool5) {
    $s$0$lcssa = $incdec$ptr;
    break;
   } else {
    $i$111 = $dec;$s$010 = $incdec$ptr;
    label = 5;
   }
  }
 }
 $arrayidx15 = ((($loc)) + 20|0);
 $2 = HEAP32[$arrayidx15>>2]|0;
 $call = (___lctrans($s$0$lcssa,$2)|0);
 return ($call|0);
}
function ___lctrans($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___lctrans_impl($msg,$lm)|0);
 return ($call|0);
}
function ___lctrans_impl($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $0 = 0, $1 = 0, $call = 0, $cond = 0, $map_size = 0, $tobool = 0, $tobool1 = 0, $trans$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($lm|0)==(0|0);
 if ($tobool) {
  $trans$0 = 0;
 } else {
  $0 = HEAP32[$lm>>2]|0;
  $map_size = ((($lm)) + 4|0);
  $1 = HEAP32[$map_size>>2]|0;
  $call = (___mo_lookup($0,$1,$msg)|0);
  $trans$0 = $call;
 }
 $tobool1 = ($trans$0|0)!=(0|0);
 $cond = $tobool1 ? $trans$0 : $msg;
 return ($cond|0);
}
function ___mo_lookup($p,$size,$s) {
 $p = $p|0;
 $size = $size|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr65 = 0, $add$ptr65$ = 0, $add16 = 0, $add23 = 0, $add31 = 0, $add42 = 0, $add49 = 0, $add59 = 0;
 var $arrayidx = 0, $arrayidx1 = 0, $arrayidx17 = 0, $arrayidx24 = 0, $arrayidx3 = 0, $arrayidx32 = 0, $arrayidx43 = 0, $arrayidx50 = 0, $arrayidx60 = 0, $b$0 = 0, $b$1 = 0, $call = 0, $call18 = 0, $call2 = 0, $call25 = 0, $call36 = 0, $call4 = 0, $call44 = 0, $call51 = 0, $cmp = 0;
 var $cmp10 = 0, $cmp26 = 0, $cmp29 = 0, $cmp52 = 0, $cmp56 = 0, $cmp6 = 0, $cmp67 = 0, $cmp71 = 0, $div = 0, $div12 = 0, $div13 = 0, $div14 = 0, $mul = 0, $mul15 = 0, $n$0 = 0, $n$1 = 0, $or = 0, $or$cond = 0, $or$cond66 = 0, $or$cond67 = 0;
 var $rem = 0, $retval$4 = 0, $sub = 0, $sub28 = 0, $sub5 = 0, $sub55 = 0, $sub79 = 0, $tobool = 0, $tobool33 = 0, $tobool37 = 0, $tobool62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $sub = (($0) + 1794895138)|0;
 $arrayidx = ((($p)) + 8|0);
 $1 = HEAP32[$arrayidx>>2]|0;
 $call = (_swapc($1,$sub)|0);
 $arrayidx1 = ((($p)) + 12|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 $call2 = (_swapc($2,$sub)|0);
 $arrayidx3 = ((($p)) + 16|0);
 $3 = HEAP32[$arrayidx3>>2]|0;
 $call4 = (_swapc($3,$sub)|0);
 $div = $size >>> 2;
 $cmp = ($call>>>0)<($div>>>0);
 L1: do {
  if ($cmp) {
   $mul = $call << 2;
   $sub5 = (($size) - ($mul))|0;
   $cmp6 = ($call2>>>0)<($sub5>>>0);
   $cmp10 = ($call4>>>0)<($sub5>>>0);
   $or$cond = $cmp6 & $cmp10;
   if ($or$cond) {
    $or = $call4 | $call2;
    $rem = $or & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $div12 = $call2 >>> 2;
     $div13 = $call4 >>> 2;
     $b$0 = 0;$n$0 = $call;
     while(1) {
      $div14 = $n$0 >>> 1;
      $add = (($b$0) + ($div14))|0;
      $mul15 = $add << 1;
      $add16 = (($mul15) + ($div12))|0;
      $arrayidx17 = (($p) + ($add16<<2)|0);
      $4 = HEAP32[$arrayidx17>>2]|0;
      $call18 = (_swapc($4,$sub)|0);
      $add23 = (($add16) + 1)|0;
      $arrayidx24 = (($p) + ($add23<<2)|0);
      $5 = HEAP32[$arrayidx24>>2]|0;
      $call25 = (_swapc($5,$sub)|0);
      $cmp26 = ($call25>>>0)<($size>>>0);
      $sub28 = (($size) - ($call25))|0;
      $cmp29 = ($call18>>>0)<($sub28>>>0);
      $or$cond66 = $cmp26 & $cmp29;
      if (!($or$cond66)) {
       $retval$4 = 0;
       break L1;
      }
      $add31 = (($call25) + ($call18))|0;
      $arrayidx32 = (($p) + ($add31)|0);
      $6 = HEAP8[$arrayidx32>>0]|0;
      $tobool33 = ($6<<24>>24)==(0);
      if (!($tobool33)) {
       $retval$4 = 0;
       break L1;
      }
      $add$ptr = (($p) + ($call25)|0);
      $call36 = (_strcmp($s,$add$ptr)|0);
      $tobool37 = ($call36|0)==(0);
      if ($tobool37) {
       break;
      }
      $cmp67 = ($n$0|0)==(1);
      $cmp71 = ($call36|0)<(0);
      $sub79 = (($n$0) - ($div14))|0;
      $n$1 = $cmp71 ? $div14 : $sub79;
      $b$1 = $cmp71 ? $b$0 : $add;
      if ($cmp67) {
       $retval$4 = 0;
       break L1;
      } else {
       $b$0 = $b$1;$n$0 = $n$1;
      }
     }
     $add42 = (($mul15) + ($div13))|0;
     $arrayidx43 = (($p) + ($add42<<2)|0);
     $7 = HEAP32[$arrayidx43>>2]|0;
     $call44 = (_swapc($7,$sub)|0);
     $add49 = (($add42) + 1)|0;
     $arrayidx50 = (($p) + ($add49<<2)|0);
     $8 = HEAP32[$arrayidx50>>2]|0;
     $call51 = (_swapc($8,$sub)|0);
     $cmp52 = ($call51>>>0)<($size>>>0);
     $sub55 = (($size) - ($call51))|0;
     $cmp56 = ($call44>>>0)<($sub55>>>0);
     $or$cond67 = $cmp52 & $cmp56;
     if ($or$cond67) {
      $add$ptr65 = (($p) + ($call51)|0);
      $add59 = (($call51) + ($call44))|0;
      $arrayidx60 = (($p) + ($add59)|0);
      $9 = HEAP8[$arrayidx60>>0]|0;
      $tobool62 = ($9<<24>>24)==(0);
      $add$ptr65$ = $tobool62 ? $add$ptr65 : 0;
      $retval$4 = $add$ptr65$;
     } else {
      $retval$4 = 0;
     }
    } else {
     $retval$4 = 0;
    }
   } else {
    $retval$4 = 0;
   }
  } else {
   $retval$4 = 0;
  }
 } while(0);
 return ($retval$4|0);
}
function _swapc($x,$c) {
 $x = $x|0;
 $c = $c|0;
 var $or5 = 0, $tobool = 0, $x$or5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($c|0)==(0);
 $or5 = (_llvm_bswap_i32(($x|0))|0);
 $x$or5 = $tobool ? $x : $or5;
 return ($x$or5|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$pre = 0, $$pre33 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr26 = 0, $arrayidx = 0, $call = 0, $call16 = 0, $call4 = 0;
 var $cmp = 0, $cmp11 = 0, $cmp17 = 0, $cmp6 = 0, $i$0 = 0, $i$1 = 0, $l$addr$0 = 0, $l$addr$1 = 0, $lbf = 0, $retval$1 = 0, $s$addr$1 = 0, $sub = 0, $sub$ptr$sub = 0, $tobool = 0, $tobool1 = 0, $tobool9 = 0, $wend = 0, $wpos = 0, $write = 0, $write15 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $tobool = ($0|0)==(0|0);
 if ($tobool) {
  $call = (___towrite($f)|0);
  $tobool1 = ($call|0)==(0);
  if ($tobool1) {
   $$pre = HEAP32[$wend>>2]|0;
   $3 = $$pre;
   label = 5;
  } else {
   $retval$1 = 0;
  }
 } else {
  $1 = $0;
  $3 = $1;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $wpos = ((($f)) + 20|0);
   $2 = HEAP32[$wpos>>2]|0;
   $sub$ptr$sub = (($3) - ($2))|0;
   $cmp = ($sub$ptr$sub>>>0)<($l>>>0);
   $4 = $2;
   if ($cmp) {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    $call4 = (FUNCTION_TABLE_iiii[$5 & 255]($f,$s,$l)|0);
    $retval$1 = $call4;
    break;
   }
   $lbf = ((($f)) + 75|0);
   $6 = HEAP8[$lbf>>0]|0;
   $cmp6 = ($6<<24>>24)>(-1);
   L10: do {
    if ($cmp6) {
     $i$0 = $l;
     while(1) {
      $tobool9 = ($i$0|0)==(0);
      if ($tobool9) {
       $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
       break L10;
      }
      $sub = (($i$0) + -1)|0;
      $arrayidx = (($s) + ($sub)|0);
      $7 = HEAP8[$arrayidx>>0]|0;
      $cmp11 = ($7<<24>>24)==(10);
      if ($cmp11) {
       break;
      } else {
       $i$0 = $sub;
      }
     }
     $write15 = ((($f)) + 36|0);
     $8 = HEAP32[$write15>>2]|0;
     $call16 = (FUNCTION_TABLE_iiii[$8 & 255]($f,$s,$i$0)|0);
     $cmp17 = ($call16>>>0)<($i$0>>>0);
     if ($cmp17) {
      $retval$1 = $call16;
      break L5;
     }
     $add$ptr = (($s) + ($i$0)|0);
     $l$addr$0 = (($l) - ($i$0))|0;
     $$pre33 = HEAP32[$wpos>>2]|0;
     $9 = $$pre33;$i$1 = $i$0;$l$addr$1 = $l$addr$0;$s$addr$1 = $add$ptr;
    } else {
     $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
    }
   } while(0);
   _memcpy(($9|0),($s$addr$1|0),($l$addr$1|0))|0;
   $10 = HEAP32[$wpos>>2]|0;
   $add$ptr26 = (($10) + ($l$addr$1)|0);
   HEAP32[$wpos>>2] = $add$ptr26;
   $add = (($i$1) + ($l$addr$1))|0;
   $retval$1 = $add;
  }
 } while(0);
 return ($retval$1|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $and = 0, $buf = 0, $buf_size = 0, $conv = 0, $conv3 = 0, $mode = 0, $or = 0, $or5 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $sub = 0, $tobool = 0, $wbase = 0, $wend = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $mode = ((($f)) + 74|0);
 $0 = HEAP8[$mode>>0]|0;
 $conv = $0 << 24 >> 24;
 $sub = (($conv) + 255)|0;
 $or = $sub | $conv;
 $conv3 = $or&255;
 HEAP8[$mode>>0] = $conv3;
 $1 = HEAP32[$f>>2]|0;
 $and = $1 & 8;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $rend = ((($f)) + 8|0);
  HEAP32[$rend>>2] = 0;
  $rpos = ((($f)) + 4|0);
  HEAP32[$rpos>>2] = 0;
  $buf = ((($f)) + 44|0);
  $2 = HEAP32[$buf>>2]|0;
  $wbase = ((($f)) + 28|0);
  HEAP32[$wbase>>2] = $2;
  $wpos = ((($f)) + 20|0);
  HEAP32[$wpos>>2] = $2;
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($2) + ($3)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  $retval$0 = 0;
 } else {
  $or5 = $1 | 32;
  HEAP32[$f>>2] = $or5;
  $retval$0 = -1;
 }
 return ($retval$0|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $and = 0, $and3 = 0, $incdec$ptr = 0, $incdec$ptr1323 = 0, $incdec$ptr7 = 0, $lnot = 0, $neg = 0, $rem = 0, $rem13 = 0, $s$addr$0$lcssa = 0, $s$addr$015 = 0, $s$addr$1$lcssa = 0;
 var $sub = 0, $sub$ptr$lhs$cast15 = 0, $sub$ptr$lhs$cast15$sink = 0, $sub$ptr$sub17 = 0, $tobool = 0, $tobool1 = 0, $tobool10 = 0, $tobool1021 = 0, $tobool14 = 0, $w$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $rem13 = $0 & 3;
 $tobool14 = ($rem13|0)==(0);
 L1: do {
  if ($tobool14) {
   $s$addr$0$lcssa = $s;
   label = 4;
  } else {
   $5 = $0;$s$addr$015 = $s;
   while(1) {
    $1 = HEAP8[$s$addr$015>>0]|0;
    $tobool1 = ($1<<24>>24)==(0);
    if ($tobool1) {
     $sub$ptr$lhs$cast15$sink = $5;
     break L1;
    }
    $incdec$ptr = ((($s$addr$015)) + 1|0);
    $2 = $incdec$ptr;
    $rem = $2 & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $s$addr$0$lcssa = $incdec$ptr;
     label = 4;
     break;
    } else {
     $5 = $2;$s$addr$015 = $incdec$ptr;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $s$addr$0$lcssa;
  while(1) {
   $3 = HEAP32[$w$0>>2]|0;
   $sub = (($3) + -16843009)|0;
   $neg = $3 & -2139062144;
   $and = $neg ^ -2139062144;
   $and3 = $and & $sub;
   $lnot = ($and3|0)==(0);
   $incdec$ptr7 = ((($w$0)) + 4|0);
   if ($lnot) {
    $w$0 = $incdec$ptr7;
   } else {
    break;
   }
  }
  $4 = $3&255;
  $tobool1021 = ($4<<24>>24)==(0);
  if ($tobool1021) {
   $s$addr$1$lcssa = $w$0;
  } else {
   $$pn = $w$0;
   while(1) {
    $incdec$ptr1323 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$incdec$ptr1323>>0]|0;
    $tobool10 = ($$pre<<24>>24)==(0);
    if ($tobool10) {
     $s$addr$1$lcssa = $incdec$ptr1323;
     break;
    } else {
     $$pn = $incdec$ptr1323;
    }
   }
  }
  $sub$ptr$lhs$cast15 = $s$addr$1$lcssa;
  $sub$ptr$lhs$cast15$sink = $sub$ptr$lhs$cast15;
 }
 $sub$ptr$sub17 = (($sub$ptr$lhs$cast15$sink) - ($0))|0;
 return ($sub$ptr$sub17|0);
}
function _fmax($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cmp34 = 0, $cmp53 = 0, $cond = 0.0, $cond58 = 0.0, $retval$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___DOUBLE_BITS_268($x)|0);
 $1 = tempRet0;
 $2 = $1 & 2147483647;
 $3 = ($2>>>0)>(2146435072);
 $4 = ($0>>>0)>(0);
 $5 = ($2|0)==(2146435072);
 $6 = $5 & $4;
 $7 = $3 | $6;
 do {
  if ($7) {
   $retval$0 = $y;
  } else {
   $8 = (___DOUBLE_BITS_268($y)|0);
   $9 = tempRet0;
   $10 = $9 & 2147483647;
   $11 = ($10>>>0)>(2146435072);
   $12 = ($8>>>0)>(0);
   $13 = ($10|0)==(2146435072);
   $14 = $13 & $12;
   $15 = $11 | $14;
   if ($15) {
    $retval$0 = $x;
   } else {
    $16 = (_bitshift64Lshr(($0|0),($1|0),63)|0);
    $17 = tempRet0;
    $18 = (_bitshift64Lshr(($8|0),($9|0),63)|0);
    $19 = tempRet0;
    $cmp34 = ($16|0)==($18|0);
    if ($cmp34) {
     $cmp53 = $x < $y;
     $cond58 = $cmp53 ? $y : $x;
     $retval$0 = $cond58;
     break;
    } else {
     $20 = ($1|0)<(0);
     $cond = $20 ? $y : $x;
     $retval$0 = $cond;
     break;
    }
   }
  }
 } while(0);
 return (+$retval$0);
}
function ___DOUBLE_BITS_268($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function _fmin($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cmp34 = 0, $cmp53 = 0, $cond = 0.0, $cond58 = 0.0, $retval$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___DOUBLE_BITS_270($x)|0);
 $1 = tempRet0;
 $2 = $1 & 2147483647;
 $3 = ($2>>>0)>(2146435072);
 $4 = ($0>>>0)>(0);
 $5 = ($2|0)==(2146435072);
 $6 = $5 & $4;
 $7 = $3 | $6;
 do {
  if ($7) {
   $retval$0 = $y;
  } else {
   $8 = (___DOUBLE_BITS_270($y)|0);
   $9 = tempRet0;
   $10 = $9 & 2147483647;
   $11 = ($10>>>0)>(2146435072);
   $12 = ($8>>>0)>(0);
   $13 = ($10|0)==(2146435072);
   $14 = $13 & $12;
   $15 = $11 | $14;
   if ($15) {
    $retval$0 = $x;
   } else {
    $16 = (_bitshift64Lshr(($0|0),($1|0),63)|0);
    $17 = tempRet0;
    $18 = (_bitshift64Lshr(($8|0),($9|0),63)|0);
    $19 = tempRet0;
    $cmp34 = ($16|0)==($18|0);
    if ($cmp34) {
     $cmp53 = $x < $y;
     $cond58 = $cmp53 ? $x : $y;
     $retval$0 = $cond58;
     break;
    } else {
     $20 = ($1|0)<(0);
     $cond = $20 ? $x : $y;
     $retval$0 = $cond;
     break;
    }
   }
  }
 } while(0);
 return (+$retval$0);
}
function ___DOUBLE_BITS_270($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function ___strdup($s) {
 $s = $s|0;
 var $add = 0, $call = 0, $call1 = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_strlen($s)|0);
 $add = (($call) + 1)|0;
 $call1 = (_malloc($add)|0);
 $tobool = ($call1|0)==(0|0);
 if ($tobool) {
  $retval$0 = 0;
 } else {
  _memcpy(($call1|0),($s|0),($add|0))|0;
  $retval$0 = $call1;
 }
 return ($retval$0|0);
}
function ___overflow($f,$_c) {
 $f = $f|0;
 $_c = $_c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $c = 0, $call = 0, $call13 = 0, $cmp = 0, $cmp14 = 0, $cmp7 = 0, $conv = 0, $conv18 = 0, $conv5 = 0, $conv6 = 0, $incdec$ptr = 0, $lbf = 0, $retval$0 = 0;
 var $tobool = 0, $tobool1 = 0, $wend = 0, $wpos = 0, $write = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $c = sp;
 $conv = $_c&255;
 HEAP8[$c>>0] = $conv;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $tobool = ($0|0)==(0|0);
 if ($tobool) {
  $call = (___towrite($f)|0);
  $tobool1 = ($call|0)==(0);
  if ($tobool1) {
   $$pre = HEAP32[$wend>>2]|0;
   $2 = $$pre;
   label = 4;
  } else {
   $retval$0 = -1;
  }
 } else {
  $2 = $0;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $wpos = ((($f)) + 20|0);
   $1 = HEAP32[$wpos>>2]|0;
   $cmp = ($1>>>0)<($2>>>0);
   if ($cmp) {
    $conv5 = $_c & 255;
    $lbf = ((($f)) + 75|0);
    $3 = HEAP8[$lbf>>0]|0;
    $conv6 = $3 << 24 >> 24;
    $cmp7 = ($conv5|0)==($conv6|0);
    if (!($cmp7)) {
     $incdec$ptr = ((($1)) + 1|0);
     HEAP32[$wpos>>2] = $incdec$ptr;
     HEAP8[$1>>0] = $conv;
     $retval$0 = $conv5;
     break;
    }
   }
   $write = ((($f)) + 36|0);
   $4 = HEAP32[$write>>2]|0;
   $call13 = (FUNCTION_TABLE_iiii[$4 & 255]($f,$c,1)|0);
   $cmp14 = ($call13|0)==(1);
   if ($cmp14) {
    $5 = HEAP8[$c>>0]|0;
    $conv18 = $5&255;
    $retval$0 = $conv18;
   } else {
    $retval$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((8232|0));
 return (8240|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((8232|0));
 return;
}
function _fflush($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $call = 0, $call1 = 0, $call11 = 0, $call118 = 0, $call17 = 0, $call23 = 0, $call7 = 0, $cmp = 0, $cmp15 = 0, $cmp21 = 0, $cond10 = 0, $cond20 = 0, $f$addr$0 = 0, $f$addr$019 = 0;
 var $f$addr$022 = 0, $lock = 0, $lock14 = 0, $next = 0, $or = 0, $phitmp = 0, $r$0$lcssa = 0, $r$021 = 0, $r$1 = 0, $retval$0 = 0, $tobool = 0, $tobool12 = 0, $tobool1220 = 0, $tobool25 = 0, $tobool5 = 0, $wbase = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($f|0)==(0|0);
 do {
  if ($tobool) {
   $1 = HEAP32[468]|0;
   $tobool5 = ($1|0)==(0|0);
   if ($tobool5) {
    $cond10 = 0;
   } else {
    $2 = HEAP32[468]|0;
    $call7 = (_fflush($2)|0);
    $cond10 = $call7;
   }
   $call11 = (___ofl_lock()|0);
   $f$addr$019 = HEAP32[$call11>>2]|0;
   $tobool1220 = ($f$addr$019|0)==(0|0);
   if ($tobool1220) {
    $r$0$lcssa = $cond10;
   } else {
    $f$addr$022 = $f$addr$019;$r$021 = $cond10;
    while(1) {
     $lock14 = ((($f$addr$022)) + 76|0);
     $3 = HEAP32[$lock14>>2]|0;
     $cmp15 = ($3|0)>(-1);
     if ($cmp15) {
      $call17 = (___lockfile($f$addr$022)|0);
      $cond20 = $call17;
     } else {
      $cond20 = 0;
     }
     $wpos = ((($f$addr$022)) + 20|0);
     $4 = HEAP32[$wpos>>2]|0;
     $wbase = ((($f$addr$022)) + 28|0);
     $5 = HEAP32[$wbase>>2]|0;
     $cmp21 = ($4>>>0)>($5>>>0);
     if ($cmp21) {
      $call23 = (___fflush_unlocked($f$addr$022)|0);
      $or = $call23 | $r$021;
      $r$1 = $or;
     } else {
      $r$1 = $r$021;
     }
     $tobool25 = ($cond20|0)==(0);
     if (!($tobool25)) {
      ___unlockfile($f$addr$022);
     }
     $next = ((($f$addr$022)) + 56|0);
     $f$addr$0 = HEAP32[$next>>2]|0;
     $tobool12 = ($f$addr$0|0)==(0|0);
     if ($tobool12) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $f$addr$022 = $f$addr$0;$r$021 = $r$1;
     }
    }
   }
   ___ofl_unlock();
   $retval$0 = $r$0$lcssa;
  } else {
   $lock = ((($f)) + 76|0);
   $0 = HEAP32[$lock>>2]|0;
   $cmp = ($0|0)>(-1);
   if (!($cmp)) {
    $call118 = (___fflush_unlocked($f)|0);
    $retval$0 = $call118;
    break;
   }
   $call = (___lockfile($f)|0);
   $phitmp = ($call|0)==(0);
   $call1 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $retval$0 = $call1;
   } else {
    ___unlockfile($f);
    $retval$0 = $call1;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $cmp = 0, $cmp4 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $seek = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool = 0, $wbase = 0, $wend = 0, $wpos = 0;
 var $write = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $wpos = ((($f)) + 20|0);
 $0 = HEAP32[$wpos>>2]|0;
 $wbase = ((($f)) + 28|0);
 $1 = HEAP32[$wbase>>2]|0;
 $cmp = ($0>>>0)>($1>>>0);
 if ($cmp) {
  $write = ((($f)) + 36|0);
  $2 = HEAP32[$write>>2]|0;
  (FUNCTION_TABLE_iiii[$2 & 255]($f,0,0)|0);
  $3 = HEAP32[$wpos>>2]|0;
  $tobool = ($3|0)==(0|0);
  if ($tobool) {
   $retval$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $rpos = ((($f)) + 4|0);
  $4 = HEAP32[$rpos>>2]|0;
  $rend = ((($f)) + 8|0);
  $5 = HEAP32[$rend>>2]|0;
  $cmp4 = ($4>>>0)<($5>>>0);
  if ($cmp4) {
   $sub$ptr$lhs$cast = $4;
   $sub$ptr$rhs$cast = $5;
   $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
   $seek = ((($f)) + 40|0);
   $6 = HEAP32[$seek>>2]|0;
   (FUNCTION_TABLE_iiii[$6 & 255]($f,$sub$ptr$sub,1)|0);
  }
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = 0;
  HEAP32[$wbase>>2] = 0;
  HEAP32[$wpos>>2] = 0;
  HEAP32[$rend>>2] = 0;
  HEAP32[$rpos>>2] = 0;
  $retval$0 = 0;
 }
 return ($retval$0|0);
}
function _fputc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $call = 0, $call10 = 0, $call28 = 0, $cmp = 0, $cmp15 = 0, $cmp20 = 0, $cmp3 = 0, $cmp5 = 0, $cond30 = 0, $conv = 0, $conv1 = 0, $conv14 = 0, $conv2 = 0;
 var $incdec$ptr = 0, $incdec$ptr25 = 0, $lbf = 0, $lbf13 = 0, $lock = 0, $retval$0 = 0, $tobool = 0, $wend = 0, $wend19 = 0, $wpos = 0, $wpos18 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $lock = ((($f)) + 76|0);
 $0 = HEAP32[$lock>>2]|0;
 $cmp = ($0|0)<(0);
 $conv = $c&255;
 $conv1 = $c & 255;
 if ($cmp) {
  label = 3;
 } else {
  $call = (___lockfile($f)|0);
  $tobool = ($call|0)==(0);
  if ($tobool) {
   label = 3;
  } else {
   $lbf13 = ((($f)) + 75|0);
   $4 = HEAP8[$lbf13>>0]|0;
   $conv14 = $4 << 24 >> 24;
   $cmp15 = ($conv1|0)==($conv14|0);
   if ($cmp15) {
    label = 10;
   } else {
    $wpos18 = ((($f)) + 20|0);
    $5 = HEAP32[$wpos18>>2]|0;
    $wend19 = ((($f)) + 16|0);
    $6 = HEAP32[$wend19>>2]|0;
    $cmp20 = ($5>>>0)<($6>>>0);
    if ($cmp20) {
     $incdec$ptr25 = ((($5)) + 1|0);
     HEAP32[$wpos18>>2] = $incdec$ptr25;
     HEAP8[$5>>0] = $conv;
     $cond30 = $conv1;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $call28 = (___overflow($f,$c)|0);
    $cond30 = $call28;
   }
   ___unlockfile($f);
   $retval$0 = $cond30;
  }
 }
 do {
  if ((label|0) == 3) {
   $lbf = ((($f)) + 75|0);
   $1 = HEAP8[$lbf>>0]|0;
   $conv2 = $1 << 24 >> 24;
   $cmp3 = ($conv1|0)==($conv2|0);
   if (!($cmp3)) {
    $wpos = ((($f)) + 20|0);
    $2 = HEAP32[$wpos>>2]|0;
    $wend = ((($f)) + 16|0);
    $3 = HEAP32[$wend>>2]|0;
    $cmp5 = ($2>>>0)<($3>>>0);
    if ($cmp5) {
     $incdec$ptr = ((($2)) + 1|0);
     HEAP32[$wpos>>2] = $incdec$ptr;
     HEAP8[$2>>0] = $conv;
     $retval$0 = $conv1;
     break;
    }
   }
   $call10 = (___overflow($f,$c)|0);
   $retval$0 = $call10;
  }
 } while(0);
 return ($retval$0|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i175 = 0, $$pre$i178 = 0, $$pre$i45$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i176Z2D = 0, $$pre$phi$i46$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$pre5$i$i = 0, $$sink$i = 0, $$sink$i$i = 0, $$sink$i154 = 0, $$sink2$i = 0, $$sink2$i172 = 0, $$sink5$i = 0, $$v$0$i = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F$0$i$i = 0, $F104$0 = 0, $F197$0$i = 0, $F224$0$i$i = 0, $F290$0$i = 0, $I252$0$i$i = 0, $I316$0$i = 0, $I57$0$i$i = 0, $K105$0$i$i = 0, $K305$0$i$i = 0, $K373$0$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i165 = 0, $R$3$i = 0;
 var $R$3$i$i = 0, $R$3$i168 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i164 = 0, $T$0$i = 0, $T$0$i$i = 0, $T$0$i47$i = 0, $add$i = 0, $add$i$i = 0, $add$i145 = 0, $add$i179 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i$i = 0, $add$ptr$i$i$i = 0, $add$ptr$i158 = 0, $add$ptr$i16$i = 0, $add$ptr$i192 = 0, $add$ptr$i2$i$i = 0;
 var $add$ptr$i21$i = 0, $add$ptr$i49$i = 0, $add$ptr14$i$i = 0, $add$ptr15$i$i = 0, $add$ptr16$i$i = 0, $add$ptr166 = 0, $add$ptr169 = 0, $add$ptr17$i$i = 0, $add$ptr178 = 0, $add$ptr181$i = 0, $add$ptr182 = 0, $add$ptr189$i = 0, $add$ptr190$i = 0, $add$ptr193 = 0, $add$ptr199 = 0, $add$ptr2$i$i = 0, $add$ptr205$i$i = 0, $add$ptr212$i$i = 0, $add$ptr225$i = 0, $add$ptr227$i = 0;
 var $add$ptr24$i$i = 0, $add$ptr262$i = 0, $add$ptr269$i = 0, $add$ptr273$i = 0, $add$ptr282$i = 0, $add$ptr3$i$i = 0, $add$ptr30$i$i = 0, $add$ptr369$i$i = 0, $add$ptr4$i$i = 0, $add$ptr4$i$i$i = 0, $add$ptr4$i26$i = 0, $add$ptr4$i54$i = 0, $add$ptr441$i = 0, $add$ptr5$i$i = 0, $add$ptr6$i$i = 0, $add$ptr6$i$i$i = 0, $add$ptr6$i58$i = 0, $add$ptr7$i$i = 0, $add$ptr81$i$i = 0, $add$ptr95 = 0;
 var $add$ptr98 = 0, $add10$i = 0, $add101$i = 0, $add110$i = 0, $add13$i = 0, $add14$i = 0, $add140$i = 0, $add144 = 0, $add150$i = 0, $add17$i = 0, $add17$i182 = 0, $add177$i = 0, $add18$i = 0, $add19$i = 0, $add2 = 0, $add20$i = 0, $add206$i$i = 0, $add212$i = 0, $add215$i = 0, $add22$i = 0;
 var $add246$i = 0, $add26$i$i = 0, $add268$i = 0, $add269$i$i = 0, $add274$i$i = 0, $add278$i$i = 0, $add280$i$i = 0, $add283$i$i = 0, $add337$i = 0, $add342$i = 0, $add346$i = 0, $add348$i = 0, $add351$i = 0, $add46$i = 0, $add50 = 0, $add51$i = 0, $add54 = 0, $add54$i = 0, $add58 = 0, $add62 = 0;
 var $add64 = 0, $add74$i$i = 0, $add77$i = 0, $add78$i = 0, $add79$i$i = 0, $add8 = 0, $add82$i = 0, $add83$i$i = 0, $add85$i$i = 0, $add86$i = 0, $add88$i$i = 0, $add9$i = 0, $add90$i = 0, $add92$i = 0, $and = 0, $and$i = 0, $and$i$i = 0, $and$i$i$i = 0, $and$i142 = 0, $and$i17$i = 0;
 var $and$i22$i = 0, $and$i50$i = 0, $and100$i = 0, $and103$i = 0, $and104$i = 0, $and106 = 0, $and11$add51$i = 0, $and11$i = 0, $and119$i$i = 0, $and12$i = 0, $and13$i = 0, $and13$i$i = 0, $and133$i$i = 0, $and14 = 0, $and145 = 0, $and17$i = 0, $and194$i = 0, $and194$i203 = 0, $and199$i = 0, $and209$i$i = 0;
 var $and21$i = 0, $and21$i148 = 0, $and227$i$i = 0, $and236$i = 0, $and264$i$i = 0, $and268$i$i = 0, $and273$i$i = 0, $and282$i$i = 0, $and29$i = 0, $and292$i = 0, $and295$i$i = 0, $and3$i = 0, $and3$i$i = 0, $and3$i$i$i = 0, $and3$i24$i = 0, $and3$i52$i = 0, $and30$i = 0, $and318$i$i = 0, $and32$i = 0, $and32$i$i = 0;
 var $and33$i$i = 0, $and331$i = 0, $and336$i = 0, $and341$i = 0, $and350$i = 0, $and363$i = 0, $and37$i$i = 0, $and387$i = 0, $and4 = 0, $and40$i$i = 0, $and41 = 0, $and42$i = 0, $and43 = 0, $and46 = 0, $and49 = 0, $and49$i = 0, $and49$i$i = 0, $and53 = 0, $and57 = 0, $and6$i = 0;
 var $and6$i$i = 0, $and6$i10$i = 0, $and6$i27$i = 0, $and61 = 0, $and64$i = 0, $and68$i = 0, $and69$i$i = 0, $and7 = 0, $and73$i = 0, $and73$i$i = 0, $and74 = 0, $and77$i = 0, $and78$i$i = 0, $and8$i = 0, $and80$i = 0, $and81$i = 0, $and85$i = 0, $and87$i$i = 0, $and89$i = 0, $and9$i = 0;
 var $and96$i$i = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i14$i = 0, $arrayidx$i149 = 0, $arrayidx$i37$i = 0, $arrayidx103 = 0, $arrayidx103$i$i = 0, $arrayidx106$i = 0, $arrayidx107$i$i = 0, $arrayidx113$i = 0, $arrayidx113$i155 = 0, $arrayidx121$i = 0, $arrayidx123$i$i = 0, $arrayidx126$i$i = 0, $arrayidx137$i = 0, $arrayidx143$i$i = 0, $arrayidx148$i = 0, $arrayidx151$i = 0;
 var $arrayidx151$i$i = 0, $arrayidx154$i = 0, $arrayidx155$i = 0, $arrayidx161$i = 0, $arrayidx165$i = 0, $arrayidx165$i166 = 0, $arrayidx178$i$i = 0, $arrayidx184$i = 0, $arrayidx184$i$i = 0, $arrayidx195$i$i = 0, $arrayidx196$i = 0, $arrayidx204$i = 0, $arrayidx212$i = 0, $arrayidx223$i$i = 0, $arrayidx228$i = 0, $arrayidx23$i = 0, $arrayidx233$i = 0, $arrayidx239$i = 0, $arrayidx245$i = 0, $arrayidx256$i = 0;
 var $arrayidx27$i = 0, $arrayidx276$i = 0, $arrayidx287$i$i = 0, $arrayidx289$i = 0, $arrayidx290$i$i = 0, $arrayidx325$i$i = 0, $arrayidx355$i = 0, $arrayidx358$i = 0, $arrayidx394$i = 0, $arrayidx40$i = 0, $arrayidx44$i = 0, $arrayidx61$i = 0, $arrayidx65$i = 0, $arrayidx66 = 0, $arrayidx71$i = 0, $arrayidx75$i = 0, $arrayidx91$i$i = 0, $arrayidx92$i$i = 0, $arrayidx94$i = 0, $arrayidx94$i153 = 0;
 var $arrayidx96$i$i = 0, $bk = 0, $bk$i = 0, $bk$i$i = 0, $bk$i160 = 0, $bk$i35$i = 0, $bk102$i$i = 0, $bk122 = 0, $bk124 = 0, $bk136$i = 0, $bk139$i$i = 0, $bk158$i$i = 0, $bk161$i$i = 0, $bk218$i = 0, $bk220$i = 0, $bk246$i$i = 0, $bk248$i$i = 0, $bk302$i$i = 0, $bk311$i = 0, $bk313$i = 0;
 var $bk338$i$i = 0, $bk357$i$i = 0, $bk360$i$i = 0, $bk370$i = 0, $bk407$i = 0, $bk429$i = 0, $bk43$i$i = 0, $bk432$i = 0, $bk47$i = 0, $bk55$i$i = 0, $bk67$i$i = 0, $bk74$i$i = 0, $bk78 = 0, $bk82$i$i = 0, $br$2$ph$i = 0, $call107$i = 0, $call131$i = 0, $call132$i = 0, $call275$i = 0, $call37$i = 0;
 var $call68$i = 0, $call83$i = 0, $child$i$i = 0, $child166$i$i = 0, $child289$i$i = 0, $child357$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i11$i = 0, $cmp$i177 = 0, $cmp$i18$i = 0, $cmp$i23$i = 0, $cmp$i3$i$i = 0, $cmp$i51$i = 0, $cmp$i9$i = 0, $cmp1 = 0, $cmp1$i = 0, $cmp10 = 0, $cmp100$i$i = 0;
 var $cmp102$i = 0, $cmp104$i$i = 0, $cmp105$i = 0, $cmp106$i$i = 0, $cmp107$i = 0, $cmp108$i = 0, $cmp108$i$i = 0, $cmp112$i$i = 0, $cmp113 = 0, $cmp116$i = 0, $cmp118$i = 0, $cmp119$i = 0, $cmp12$i = 0, $cmp120$i$i = 0, $cmp120$i42$i = 0, $cmp121$i = 0, $cmp123$i = 0, $cmp124$i$i = 0, $cmp126$i = 0, $cmp127$i = 0;
 var $cmp128 = 0, $cmp128$i = 0, $cmp128$i$i = 0, $cmp130$i = 0, $cmp133$i = 0, $cmp133$i$i = 0, $cmp133$i195 = 0, $cmp135$i = 0, $cmp137$i = 0, $cmp137$i$i = 0, $cmp137$i196 = 0, $cmp138$i = 0, $cmp139 = 0, $cmp140$i = 0, $cmp141$i = 0, $cmp142$i = 0, $cmp146 = 0, $cmp147$i = 0, $cmp14799$i = 0, $cmp15 = 0;
 var $cmp15$i = 0, $cmp151$i = 0, $cmp152$i = 0, $cmp153$i$i = 0, $cmp155$i = 0, $cmp156 = 0, $cmp156$i = 0, $cmp156$i$i = 0, $cmp157$i = 0, $cmp159$i = 0, $cmp159$i198 = 0, $cmp16 = 0, $cmp160$i$i = 0, $cmp162 = 0, $cmp162$i = 0, $cmp162$i199 = 0, $cmp166$i = 0, $cmp168$i$i = 0, $cmp171$i = 0, $cmp172$i$i = 0;
 var $cmp174$i = 0, $cmp180$i = 0, $cmp185$i = 0, $cmp185$i$i = 0, $cmp186 = 0, $cmp186$i = 0, $cmp189$i$i = 0, $cmp19$i = 0, $cmp190$i = 0, $cmp191$i = 0, $cmp198$i = 0, $cmp2$i$i = 0, $cmp2$i$i$i = 0, $cmp20$i$i = 0, $cmp203$i = 0, $cmp208$i = 0, $cmp209$i = 0, $cmp21$i = 0, $cmp215$i$i = 0, $cmp217$i = 0;
 var $cmp218$i = 0, $cmp221$i = 0, $cmp224$i = 0, $cmp228$i = 0, $cmp229$i = 0, $cmp233$i = 0, $cmp236$i$i = 0, $cmp24$i = 0, $cmp24$i$i = 0, $cmp246$i = 0, $cmp250$i = 0, $cmp254$i$i = 0, $cmp257$i = 0, $cmp258$i$i = 0, $cmp26$i = 0, $cmp265$i = 0, $cmp27$i$i = 0, $cmp28$i = 0, $cmp28$i$i = 0, $cmp284$i = 0;
 var $cmp287$i = 0, $cmp29 = 0, $cmp3$i$i = 0, $cmp301$i = 0, $cmp306$i$i = 0, $cmp31 = 0, $cmp319$i = 0, $cmp319$i$i = 0, $cmp32$i = 0, $cmp32$i184 = 0, $cmp323$i = 0, $cmp327$i$i = 0, $cmp33$i = 0, $cmp332$i$i = 0, $cmp34$i = 0, $cmp34$i$i = 0, $cmp35$i = 0, $cmp350$i$i = 0, $cmp36$i = 0, $cmp36$i$i = 0;
 var $cmp374$i = 0, $cmp38$i = 0, $cmp38$i$i = 0, $cmp388$i = 0, $cmp396$i = 0, $cmp40$i = 0, $cmp401$i = 0, $cmp41$i$i = 0, $cmp42$i$i = 0, $cmp422$i = 0, $cmp43$i = 0, $cmp44$i$i = 0, $cmp45$i = 0, $cmp45$i152 = 0, $cmp46$i = 0, $cmp46$i$i = 0, $cmp46$i38$i = 0, $cmp48$i = 0, $cmp49$i = 0, $cmp5 = 0;
 var $cmp51$i = 0, $cmp54$i$i = 0, $cmp55$i = 0, $cmp55$i185 = 0, $cmp57$i = 0, $cmp57$i$i = 0, $cmp57$i186 = 0, $cmp59$i$i = 0, $cmp60$i = 0, $cmp60$i$i = 0, $cmp62$i = 0, $cmp63$i = 0, $cmp63$i$i = 0, $cmp65$i = 0, $cmp66$i = 0, $cmp66$i189 = 0, $cmp69$i = 0, $cmp7$i$i = 0, $cmp70 = 0, $cmp72$i = 0;
 var $cmp75$i$i = 0, $cmp76 = 0, $cmp76$i = 0, $cmp79 = 0, $cmp81$i = 0, $cmp81$i$i = 0, $cmp81$i190 = 0, $cmp83$i$i = 0, $cmp85$i = 0, $cmp86$i$i = 0, $cmp89$i = 0, $cmp9$i$i = 0, $cmp90$i = 0, $cmp91$i = 0, $cmp93$i = 0, $cmp95$i = 0, $cmp96$i = 0, $cmp97$i = 0, $cmp97$i$i = 0, $cmp977$i = 0;
 var $cmp99 = 0, $cond = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i150 = 0, $cond$i19$i = 0, $cond$i25$i = 0, $cond$i53$i = 0, $cond115$i$i = 0, $cond13$i$i = 0, $cond15$i$i = 0, $cond2$i$i = 0, $cond3$i = 0, $cond315$i$i = 0, $cond383$i = 0, $exitcond$i$i = 0, $fd$i = 0, $fd$i$i = 0, $fd$i161 = 0;
 var $fd103$i$i = 0, $fd123 = 0, $fd139$i = 0, $fd140$i$i = 0, $fd148$i$i = 0, $fd160$i$i = 0, $fd219$i = 0, $fd247$i$i = 0, $fd303$i$i = 0, $fd312$i = 0, $fd339$i$i = 0, $fd344$i$i = 0, $fd359$i$i = 0, $fd371$i = 0, $fd408$i = 0, $fd416$i = 0, $fd431$i = 0, $fd50$i = 0, $fd54$i$i = 0, $fd59$i$i = 0;
 var $fd68$pre$phi$i$iZ2D = 0, $fd69 = 0, $fd78$i$i = 0, $fd85$i$i = 0, $fd9 = 0, $head = 0, $head$i = 0, $head$i$i = 0, $head$i$i$i = 0, $head$i151 = 0, $head$i20$i = 0, $head$i31$i = 0, $head$i57$i = 0, $head118$i$i = 0, $head168 = 0, $head173 = 0, $head177 = 0, $head179 = 0, $head179$i = 0, $head182$i = 0;
 var $head187$i = 0, $head189$i = 0, $head195 = 0, $head198 = 0, $head208$i$i = 0, $head211$i$i = 0, $head23$i$i = 0, $head25 = 0, $head26$i$i = 0, $head265$i = 0, $head268$i = 0, $head271$i = 0, $head274$i = 0, $head279$i = 0, $head281$i = 0, $head29$i = 0, $head29$i$i = 0, $head317$i$i = 0, $head32$i$i = 0, $head34$i$i = 0;
 var $head386$i = 0, $head7$i$i = 0, $head7$i$i$i = 0, $head7$i59$i = 0, $head94 = 0, $head97 = 0, $head99$i = 0, $i$01$i$i = 0, $idx$0$i = 0, $inc$i$i = 0, $index$i = 0, $index$i$i = 0, $index$i169 = 0, $index$i43$i = 0, $index288$i$i = 0, $index356$i = 0, $magic$i$i = 0, $nb$0 = 0, $neg = 0, $neg$i = 0;
 var $neg$i$i = 0, $neg$i170 = 0, $neg$i181 = 0, $neg103$i = 0, $neg13 = 0, $neg132$i$i = 0, $neg48$i = 0, $neg73 = 0, $next$i = 0, $next$i$i = 0, $next$i$i$i = 0, $next231$i = 0, $not$cmp$i = 0, $not$cmp107$i = 0, $not$cmp114$i = 0, $not$cmp141$i = 0, $not$cmp144$i$i = 0, $not$cmp150$i$i = 0, $not$cmp205$i = 0, $not$cmp346$i$i = 0;
 var $not$cmp4$i = 0, $not$cmp418$i = 0, $not$cmp494$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i187 = 0, $or$cond1$i = 0, $or$cond1$i183 = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond7$i = 0, $or$cond7$not$i = 0, $or$cond8$i = 0, $or$cond97$i = 0, $or$cond98$i = 0, $or$i = 0, $or$i$i = 0, $or$i$i$i = 0;
 var $or$i194 = 0, $or$i56$i = 0, $or101$i$i = 0, $or110 = 0, $or167 = 0, $or172 = 0, $or176 = 0, $or178$i = 0, $or180 = 0, $or183$i = 0, $or186$i = 0, $or188$i = 0, $or19$i$i = 0, $or194 = 0, $or197 = 0, $or204$i = 0, $or210$i$i = 0, $or22$i$i = 0, $or23 = 0, $or232$i$i = 0;
 var $or26 = 0, $or264$i = 0, $or267$i = 0, $or270$i = 0, $or275$i = 0, $or278$i = 0, $or28$i$i = 0, $or280$i = 0, $or297$i = 0, $or300$i$i = 0, $or33$i$i = 0, $or368$i = 0, $or40 = 0, $or44$i$i = 0, $or93 = 0, $or96 = 0, $parent$i = 0, $parent$i$i = 0, $parent$i159 = 0, $parent$i40$i = 0;
 var $parent135$i = 0, $parent138$i$i = 0, $parent149$i = 0, $parent162$i$i = 0, $parent165$i$i = 0, $parent166$i = 0, $parent179$i$i = 0, $parent196$i$i = 0, $parent226$i = 0, $parent240$i = 0, $parent257$i = 0, $parent301$i$i = 0, $parent337$i$i = 0, $parent361$i$i = 0, $parent369$i = 0, $parent406$i = 0, $parent433$i = 0, $qsize$0$i$i = 0, $retval$0 = 0, $rsize$0$i = 0;
 var $rsize$0$lcssa$i = 0, $rsize$08$i = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$49$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sflags193$i = 0, $sflags235$i = 0, $shl = 0, $shl$i = 0, $shl$i$i = 0, $shl$i13$i = 0, $shl$i143 = 0, $shl$i36$i = 0, $shl102 = 0, $shl105 = 0, $shl116$i$i = 0, $shl12 = 0;
 var $shl127$i$i = 0, $shl131$i$i = 0, $shl15$i = 0, $shl18$i = 0, $shl192$i = 0, $shl195$i = 0, $shl198$i = 0, $shl22 = 0, $shl222$i$i = 0, $shl226$i$i = 0, $shl265$i$i = 0, $shl270$i$i = 0, $shl276$i$i = 0, $shl279$i$i = 0, $shl288$i = 0, $shl291$i = 0, $shl294$i$i = 0, $shl31$i = 0, $shl316$i$i = 0, $shl326$i$i = 0;
 var $shl333$i = 0, $shl338$i = 0, $shl344$i = 0, $shl347$i = 0, $shl35 = 0, $shl362$i = 0, $shl37 = 0, $shl384$i = 0, $shl39$i$i = 0, $shl395$i = 0, $shl48$i$i = 0, $shl52$i = 0, $shl60$i = 0, $shl65 = 0, $shl70$i$i = 0, $shl72 = 0, $shl75$i$i = 0, $shl81$i$i = 0, $shl84$i$i = 0, $shl9$i = 0;
 var $shl90 = 0, $shl95$i$i = 0, $shr = 0, $shr$i = 0, $shr$i$i = 0, $shr$i139 = 0, $shr$i34$i = 0, $shr101 = 0, $shr11$i = 0, $shr11$i146 = 0, $shr110$i$i = 0, $shr12$i = 0, $shr124$i$i = 0, $shr15$i = 0, $shr16$i = 0, $shr16$i147 = 0, $shr19$i = 0, $shr194$i = 0, $shr20$i = 0, $shr214$i$i = 0;
 var $shr253$i$i = 0, $shr263$i$i = 0, $shr267$i$i = 0, $shr27$i = 0, $shr272$i$i = 0, $shr277$i$i = 0, $shr281$i$i = 0, $shr283$i = 0, $shr3 = 0, $shr310$i$i = 0, $shr318$i = 0, $shr323$i$i = 0, $shr330$i = 0, $shr335$i = 0, $shr340$i = 0, $shr345$i = 0, $shr349$i = 0, $shr378$i = 0, $shr392$i = 0, $shr4$i = 0;
 var $shr42$i = 0, $shr45 = 0, $shr47 = 0, $shr48 = 0, $shr5$i = 0, $shr5$i141 = 0, $shr51 = 0, $shr52 = 0, $shr55 = 0, $shr56 = 0, $shr58$i$i = 0, $shr59 = 0, $shr60 = 0, $shr63 = 0, $shr68$i$i = 0, $shr7$i = 0, $shr7$i144 = 0, $shr72$i = 0, $shr72$i$i = 0, $shr75$i = 0;
 var $shr76$i = 0, $shr77$i$i = 0, $shr79$i = 0, $shr8$i = 0, $shr80$i = 0, $shr82$i$i = 0, $shr83$i = 0, $shr84$i = 0, $shr86$i$i = 0, $shr87$i = 0, $shr88$i = 0, $shr91$i = 0, $size$i$i = 0, $size$i$i$i = 0, $size188$i = 0, $size245$i = 0, $sizebits$0$i = 0, $sizebits$0$shl52$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0;
 var $sp$0108$i = 0, $sp$1107$i = 0, $ssize$2$ph$i = 0, $sub = 0, $sub$i = 0, $sub$i138 = 0, $sub$i180 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i28$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i29$i = 0, $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i30$i = 0, $sub$ptr$sub$tsize$4$i = 0, $sub10$i = 0, $sub101$i = 0, $sub101$rsize$4$i = 0;
 var $sub112$i = 0, $sub113$i$i = 0, $sub118$i = 0, $sub14$i = 0, $sub16$i$i = 0, $sub160 = 0, $sub172$i = 0, $sub18$i$i = 0, $sub190 = 0, $sub2$i = 0, $sub22$i = 0, $sub260$i = 0, $sub262$i$i = 0, $sub266$i$i = 0, $sub271$i$i = 0, $sub275$i$i = 0, $sub30$i = 0, $sub31$i = 0, $sub31$rsize$0$i = 0, $sub313$i$i = 0;
 var $sub329$i = 0, $sub33$i = 0, $sub334$i = 0, $sub339$i = 0, $sub343$i = 0, $sub381$i = 0, $sub4$i = 0, $sub41$i = 0, $sub42 = 0, $sub44 = 0, $sub5$i$i = 0, $sub5$i$i$i = 0, $sub5$i55$i = 0, $sub50$i = 0, $sub6$i = 0, $sub63$i = 0, $sub67$i = 0, $sub67$i$i = 0, $sub70$i = 0, $sub71$i$i = 0;
 var $sub76$i$i = 0, $sub80$i$i = 0, $sub91 = 0, $sub99$i = 0, $t$0$i = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$48$i = 0, $tbase$796$i = 0, $tobool$i$i = 0, $tobool107 = 0, $tobool195$i = 0, $tobool200$i = 0, $tobool228$i$i = 0, $tobool237$i = 0, $tobool293$i = 0, $tobool296$i$i = 0, $tobool30$i = 0, $tobool364$i = 0;
 var $tobool97$i$i = 0, $tsize$2657583$i = 0, $tsize$4$i = 0, $tsize$795$i = 0, $v$0$i = 0, $v$0$lcssa$i = 0, $v$09$i = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$4$ph$i = 0, $v$410$i = 0, $xor$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $magic$i$i = sp;
 $cmp = ($bytes>>>0)<(245);
 do {
  if ($cmp) {
   $cmp1 = ($bytes>>>0)<(11);
   $add2 = (($bytes) + 11)|0;
   $and = $add2 & -8;
   $cond = $cmp1 ? 16 : $and;
   $shr = $cond >>> 3;
   $0 = HEAP32[2061]|0;
   $shr3 = $0 >>> $shr;
   $and4 = $shr3 & 3;
   $cmp5 = ($and4|0)==(0);
   if (!($cmp5)) {
    $neg = $shr3 & 1;
    $and7 = $neg ^ 1;
    $add8 = (($and7) + ($shr))|0;
    $shl = $add8 << 1;
    $arrayidx = (8284 + ($shl<<2)|0);
    $1 = ((($arrayidx)) + 8|0);
    $2 = HEAP32[$1>>2]|0;
    $fd9 = ((($2)) + 8|0);
    $3 = HEAP32[$fd9>>2]|0;
    $cmp10 = ($arrayidx|0)==($3|0);
    do {
     if ($cmp10) {
      $shl12 = 1 << $add8;
      $neg13 = $shl12 ^ -1;
      $and14 = $0 & $neg13;
      HEAP32[2061] = $and14;
     } else {
      $4 = HEAP32[(8260)>>2]|0;
      $cmp15 = ($3>>>0)<($4>>>0);
      if ($cmp15) {
       _abort();
       // unreachable;
      }
      $bk = ((($3)) + 12|0);
      $5 = HEAP32[$bk>>2]|0;
      $cmp16 = ($5|0)==($2|0);
      if ($cmp16) {
       HEAP32[$bk>>2] = $arrayidx;
       HEAP32[$1>>2] = $3;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $shl22 = $add8 << 3;
    $or23 = $shl22 | 3;
    $head = ((($2)) + 4|0);
    HEAP32[$head>>2] = $or23;
    $add$ptr = (($2) + ($shl22)|0);
    $head25 = ((($add$ptr)) + 4|0);
    $6 = HEAP32[$head25>>2]|0;
    $or26 = $6 | 1;
    HEAP32[$head25>>2] = $or26;
    $retval$0 = $fd9;
    STACKTOP = sp;return ($retval$0|0);
   }
   $7 = HEAP32[(8252)>>2]|0;
   $cmp29 = ($cond>>>0)>($7>>>0);
   if ($cmp29) {
    $cmp31 = ($shr3|0)==(0);
    if (!($cmp31)) {
     $shl35 = $shr3 << $shr;
     $shl37 = 2 << $shr;
     $sub = (0 - ($shl37))|0;
     $or40 = $shl37 | $sub;
     $and41 = $shl35 & $or40;
     $sub42 = (0 - ($and41))|0;
     $and43 = $and41 & $sub42;
     $sub44 = (($and43) + -1)|0;
     $shr45 = $sub44 >>> 12;
     $and46 = $shr45 & 16;
     $shr47 = $sub44 >>> $and46;
     $shr48 = $shr47 >>> 5;
     $and49 = $shr48 & 8;
     $add50 = $and49 | $and46;
     $shr51 = $shr47 >>> $and49;
     $shr52 = $shr51 >>> 2;
     $and53 = $shr52 & 4;
     $add54 = $add50 | $and53;
     $shr55 = $shr51 >>> $and53;
     $shr56 = $shr55 >>> 1;
     $and57 = $shr56 & 2;
     $add58 = $add54 | $and57;
     $shr59 = $shr55 >>> $and57;
     $shr60 = $shr59 >>> 1;
     $and61 = $shr60 & 1;
     $add62 = $add58 | $and61;
     $shr63 = $shr59 >>> $and61;
     $add64 = (($add62) + ($shr63))|0;
     $shl65 = $add64 << 1;
     $arrayidx66 = (8284 + ($shl65<<2)|0);
     $8 = ((($arrayidx66)) + 8|0);
     $9 = HEAP32[$8>>2]|0;
     $fd69 = ((($9)) + 8|0);
     $10 = HEAP32[$fd69>>2]|0;
     $cmp70 = ($arrayidx66|0)==($10|0);
     do {
      if ($cmp70) {
       $shl72 = 1 << $add64;
       $neg73 = $shl72 ^ -1;
       $and74 = $0 & $neg73;
       HEAP32[2061] = $and74;
       $14 = $and74;
      } else {
       $11 = HEAP32[(8260)>>2]|0;
       $cmp76 = ($10>>>0)<($11>>>0);
       if ($cmp76) {
        _abort();
        // unreachable;
       }
       $bk78 = ((($10)) + 12|0);
       $12 = HEAP32[$bk78>>2]|0;
       $cmp79 = ($12|0)==($9|0);
       if ($cmp79) {
        HEAP32[$bk78>>2] = $arrayidx66;
        HEAP32[$8>>2] = $10;
        $14 = $0;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $shl90 = $add64 << 3;
     $sub91 = (($shl90) - ($cond))|0;
     $or93 = $cond | 3;
     $head94 = ((($9)) + 4|0);
     HEAP32[$head94>>2] = $or93;
     $add$ptr95 = (($9) + ($cond)|0);
     $or96 = $sub91 | 1;
     $head97 = ((($add$ptr95)) + 4|0);
     HEAP32[$head97>>2] = $or96;
     $add$ptr98 = (($add$ptr95) + ($sub91)|0);
     HEAP32[$add$ptr98>>2] = $sub91;
     $cmp99 = ($7|0)==(0);
     if (!($cmp99)) {
      $13 = HEAP32[(8264)>>2]|0;
      $shr101 = $7 >>> 3;
      $shl102 = $shr101 << 1;
      $arrayidx103 = (8284 + ($shl102<<2)|0);
      $shl105 = 1 << $shr101;
      $and106 = $14 & $shl105;
      $tobool107 = ($and106|0)==(0);
      if ($tobool107) {
       $or110 = $14 | $shl105;
       HEAP32[2061] = $or110;
       $$pre = ((($arrayidx103)) + 8|0);
       $$pre$phiZ2D = $$pre;$F104$0 = $arrayidx103;
      } else {
       $15 = ((($arrayidx103)) + 8|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = HEAP32[(8260)>>2]|0;
       $cmp113 = ($16>>>0)<($17>>>0);
       if ($cmp113) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $15;$F104$0 = $16;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $13;
      $bk122 = ((($F104$0)) + 12|0);
      HEAP32[$bk122>>2] = $13;
      $fd123 = ((($13)) + 8|0);
      HEAP32[$fd123>>2] = $F104$0;
      $bk124 = ((($13)) + 12|0);
      HEAP32[$bk124>>2] = $arrayidx103;
     }
     HEAP32[(8252)>>2] = $sub91;
     HEAP32[(8264)>>2] = $add$ptr95;
     $retval$0 = $fd69;
     STACKTOP = sp;return ($retval$0|0);
    }
    $18 = HEAP32[(8248)>>2]|0;
    $cmp128 = ($18|0)==(0);
    if ($cmp128) {
     $nb$0 = $cond;
    } else {
     $sub$i = (0 - ($18))|0;
     $and$i = $18 & $sub$i;
     $sub2$i = (($and$i) + -1)|0;
     $shr$i = $sub2$i >>> 12;
     $and3$i = $shr$i & 16;
     $shr4$i = $sub2$i >>> $and3$i;
     $shr5$i = $shr4$i >>> 5;
     $and6$i = $shr5$i & 8;
     $add$i = $and6$i | $and3$i;
     $shr7$i = $shr4$i >>> $and6$i;
     $shr8$i = $shr7$i >>> 2;
     $and9$i = $shr8$i & 4;
     $add10$i = $add$i | $and9$i;
     $shr11$i = $shr7$i >>> $and9$i;
     $shr12$i = $shr11$i >>> 1;
     $and13$i = $shr12$i & 2;
     $add14$i = $add10$i | $and13$i;
     $shr15$i = $shr11$i >>> $and13$i;
     $shr16$i = $shr15$i >>> 1;
     $and17$i = $shr16$i & 1;
     $add18$i = $add14$i | $and17$i;
     $shr19$i = $shr15$i >>> $and17$i;
     $add20$i = (($add18$i) + ($shr19$i))|0;
     $arrayidx$i = (8548 + ($add20$i<<2)|0);
     $19 = HEAP32[$arrayidx$i>>2]|0;
     $head$i = ((($19)) + 4|0);
     $20 = HEAP32[$head$i>>2]|0;
     $and21$i = $20 & -8;
     $sub22$i = (($and21$i) - ($cond))|0;
     $arrayidx233$i = ((($19)) + 16|0);
     $21 = HEAP32[$arrayidx233$i>>2]|0;
     $not$cmp4$i = ($21|0)==(0|0);
     $$sink5$i = $not$cmp4$i&1;
     $arrayidx276$i = (((($19)) + 16|0) + ($$sink5$i<<2)|0);
     $22 = HEAP32[$arrayidx276$i>>2]|0;
     $cmp287$i = ($22|0)==(0|0);
     if ($cmp287$i) {
      $rsize$0$lcssa$i = $sub22$i;$v$0$lcssa$i = $19;
     } else {
      $23 = $22;$rsize$08$i = $sub22$i;$v$09$i = $19;
      while(1) {
       $head29$i = ((($23)) + 4|0);
       $24 = HEAP32[$head29$i>>2]|0;
       $and30$i = $24 & -8;
       $sub31$i = (($and30$i) - ($cond))|0;
       $cmp32$i = ($sub31$i>>>0)<($rsize$08$i>>>0);
       $sub31$rsize$0$i = $cmp32$i ? $sub31$i : $rsize$08$i;
       $$v$0$i = $cmp32$i ? $23 : $v$09$i;
       $arrayidx23$i = ((($23)) + 16|0);
       $25 = HEAP32[$arrayidx23$i>>2]|0;
       $not$cmp$i = ($25|0)==(0|0);
       $$sink$i = $not$cmp$i&1;
       $arrayidx27$i = (((($23)) + 16|0) + ($$sink$i<<2)|0);
       $26 = HEAP32[$arrayidx27$i>>2]|0;
       $cmp28$i = ($26|0)==(0|0);
       if ($cmp28$i) {
        $rsize$0$lcssa$i = $sub31$rsize$0$i;$v$0$lcssa$i = $$v$0$i;
        break;
       } else {
        $23 = $26;$rsize$08$i = $sub31$rsize$0$i;$v$09$i = $$v$0$i;
       }
      }
     }
     $27 = HEAP32[(8260)>>2]|0;
     $cmp33$i = ($v$0$lcssa$i>>>0)<($27>>>0);
     if ($cmp33$i) {
      _abort();
      // unreachable;
     }
     $add$ptr$i = (($v$0$lcssa$i) + ($cond)|0);
     $cmp35$i = ($v$0$lcssa$i>>>0)<($add$ptr$i>>>0);
     if (!($cmp35$i)) {
      _abort();
      // unreachable;
     }
     $parent$i = ((($v$0$lcssa$i)) + 24|0);
     $28 = HEAP32[$parent$i>>2]|0;
     $bk$i = ((($v$0$lcssa$i)) + 12|0);
     $29 = HEAP32[$bk$i>>2]|0;
     $cmp40$i = ($29|0)==($v$0$lcssa$i|0);
     do {
      if ($cmp40$i) {
       $arrayidx61$i = ((($v$0$lcssa$i)) + 20|0);
       $33 = HEAP32[$arrayidx61$i>>2]|0;
       $cmp62$i = ($33|0)==(0|0);
       if ($cmp62$i) {
        $arrayidx65$i = ((($v$0$lcssa$i)) + 16|0);
        $34 = HEAP32[$arrayidx65$i>>2]|0;
        $cmp66$i = ($34|0)==(0|0);
        if ($cmp66$i) {
         $R$3$i = 0;
         break;
        } else {
         $R$1$i = $34;$RP$1$i = $arrayidx65$i;
        }
       } else {
        $R$1$i = $33;$RP$1$i = $arrayidx61$i;
       }
       while(1) {
        $arrayidx71$i = ((($R$1$i)) + 20|0);
        $35 = HEAP32[$arrayidx71$i>>2]|0;
        $cmp72$i = ($35|0)==(0|0);
        if (!($cmp72$i)) {
         $R$1$i = $35;$RP$1$i = $arrayidx71$i;
         continue;
        }
        $arrayidx75$i = ((($R$1$i)) + 16|0);
        $36 = HEAP32[$arrayidx75$i>>2]|0;
        $cmp76$i = ($36|0)==(0|0);
        if ($cmp76$i) {
         break;
        } else {
         $R$1$i = $36;$RP$1$i = $arrayidx75$i;
        }
       }
       $cmp81$i = ($RP$1$i>>>0)<($27>>>0);
       if ($cmp81$i) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$1$i>>2] = 0;
        $R$3$i = $R$1$i;
        break;
       }
      } else {
       $fd$i = ((($v$0$lcssa$i)) + 8|0);
       $30 = HEAP32[$fd$i>>2]|0;
       $cmp45$i = ($30>>>0)<($27>>>0);
       if ($cmp45$i) {
        _abort();
        // unreachable;
       }
       $bk47$i = ((($30)) + 12|0);
       $31 = HEAP32[$bk47$i>>2]|0;
       $cmp48$i = ($31|0)==($v$0$lcssa$i|0);
       if (!($cmp48$i)) {
        _abort();
        // unreachable;
       }
       $fd50$i = ((($29)) + 8|0);
       $32 = HEAP32[$fd50$i>>2]|0;
       $cmp51$i = ($32|0)==($v$0$lcssa$i|0);
       if ($cmp51$i) {
        HEAP32[$bk47$i>>2] = $29;
        HEAP32[$fd50$i>>2] = $30;
        $R$3$i = $29;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $cmp90$i = ($28|0)==(0|0);
     L73: do {
      if (!($cmp90$i)) {
       $index$i = ((($v$0$lcssa$i)) + 28|0);
       $37 = HEAP32[$index$i>>2]|0;
       $arrayidx94$i = (8548 + ($37<<2)|0);
       $38 = HEAP32[$arrayidx94$i>>2]|0;
       $cmp95$i = ($v$0$lcssa$i|0)==($38|0);
       do {
        if ($cmp95$i) {
         HEAP32[$arrayidx94$i>>2] = $R$3$i;
         $cond$i = ($R$3$i|0)==(0|0);
         if ($cond$i) {
          $shl$i = 1 << $37;
          $neg$i = $shl$i ^ -1;
          $and103$i = $18 & $neg$i;
          HEAP32[(8248)>>2] = $and103$i;
          break L73;
         }
        } else {
         $39 = HEAP32[(8260)>>2]|0;
         $cmp107$i = ($28>>>0)<($39>>>0);
         if ($cmp107$i) {
          _abort();
          // unreachable;
         } else {
          $arrayidx113$i = ((($28)) + 16|0);
          $40 = HEAP32[$arrayidx113$i>>2]|0;
          $not$cmp114$i = ($40|0)!=($v$0$lcssa$i|0);
          $$sink2$i = $not$cmp114$i&1;
          $arrayidx121$i = (((($28)) + 16|0) + ($$sink2$i<<2)|0);
          HEAP32[$arrayidx121$i>>2] = $R$3$i;
          $cmp126$i = ($R$3$i|0)==(0|0);
          if ($cmp126$i) {
           break L73;
          } else {
           break;
          }
         }
        }
       } while(0);
       $41 = HEAP32[(8260)>>2]|0;
       $cmp130$i = ($R$3$i>>>0)<($41>>>0);
       if ($cmp130$i) {
        _abort();
        // unreachable;
       }
       $parent135$i = ((($R$3$i)) + 24|0);
       HEAP32[$parent135$i>>2] = $28;
       $arrayidx137$i = ((($v$0$lcssa$i)) + 16|0);
       $42 = HEAP32[$arrayidx137$i>>2]|0;
       $cmp138$i = ($42|0)==(0|0);
       do {
        if (!($cmp138$i)) {
         $cmp142$i = ($42>>>0)<($41>>>0);
         if ($cmp142$i) {
          _abort();
          // unreachable;
         } else {
          $arrayidx148$i = ((($R$3$i)) + 16|0);
          HEAP32[$arrayidx148$i>>2] = $42;
          $parent149$i = ((($42)) + 24|0);
          HEAP32[$parent149$i>>2] = $R$3$i;
          break;
         }
        }
       } while(0);
       $arrayidx154$i = ((($v$0$lcssa$i)) + 20|0);
       $43 = HEAP32[$arrayidx154$i>>2]|0;
       $cmp155$i = ($43|0)==(0|0);
       if (!($cmp155$i)) {
        $44 = HEAP32[(8260)>>2]|0;
        $cmp159$i = ($43>>>0)<($44>>>0);
        if ($cmp159$i) {
         _abort();
         // unreachable;
        } else {
         $arrayidx165$i = ((($R$3$i)) + 20|0);
         HEAP32[$arrayidx165$i>>2] = $43;
         $parent166$i = ((($43)) + 24|0);
         HEAP32[$parent166$i>>2] = $R$3$i;
         break;
        }
       }
      }
     } while(0);
     $cmp174$i = ($rsize$0$lcssa$i>>>0)<(16);
     if ($cmp174$i) {
      $add177$i = (($rsize$0$lcssa$i) + ($cond))|0;
      $or178$i = $add177$i | 3;
      $head179$i = ((($v$0$lcssa$i)) + 4|0);
      HEAP32[$head179$i>>2] = $or178$i;
      $add$ptr181$i = (($v$0$lcssa$i) + ($add177$i)|0);
      $head182$i = ((($add$ptr181$i)) + 4|0);
      $45 = HEAP32[$head182$i>>2]|0;
      $or183$i = $45 | 1;
      HEAP32[$head182$i>>2] = $or183$i;
     } else {
      $or186$i = $cond | 3;
      $head187$i = ((($v$0$lcssa$i)) + 4|0);
      HEAP32[$head187$i>>2] = $or186$i;
      $or188$i = $rsize$0$lcssa$i | 1;
      $head189$i = ((($add$ptr$i)) + 4|0);
      HEAP32[$head189$i>>2] = $or188$i;
      $add$ptr190$i = (($add$ptr$i) + ($rsize$0$lcssa$i)|0);
      HEAP32[$add$ptr190$i>>2] = $rsize$0$lcssa$i;
      $cmp191$i = ($7|0)==(0);
      if (!($cmp191$i)) {
       $46 = HEAP32[(8264)>>2]|0;
       $shr194$i = $7 >>> 3;
       $shl195$i = $shr194$i << 1;
       $arrayidx196$i = (8284 + ($shl195$i<<2)|0);
       $shl198$i = 1 << $shr194$i;
       $and199$i = $0 & $shl198$i;
       $tobool200$i = ($and199$i|0)==(0);
       if ($tobool200$i) {
        $or204$i = $0 | $shl198$i;
        HEAP32[2061] = $or204$i;
        $$pre$i = ((($arrayidx196$i)) + 8|0);
        $$pre$phi$iZ2D = $$pre$i;$F197$0$i = $arrayidx196$i;
       } else {
        $47 = ((($arrayidx196$i)) + 8|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = HEAP32[(8260)>>2]|0;
        $cmp208$i = ($48>>>0)<($49>>>0);
        if ($cmp208$i) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $47;$F197$0$i = $48;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $46;
       $bk218$i = ((($F197$0$i)) + 12|0);
       HEAP32[$bk218$i>>2] = $46;
       $fd219$i = ((($46)) + 8|0);
       HEAP32[$fd219$i>>2] = $F197$0$i;
       $bk220$i = ((($46)) + 12|0);
       HEAP32[$bk220$i>>2] = $arrayidx196$i;
      }
      HEAP32[(8252)>>2] = $rsize$0$lcssa$i;
      HEAP32[(8264)>>2] = $add$ptr$i;
     }
     $add$ptr225$i = ((($v$0$lcssa$i)) + 8|0);
     $retval$0 = $add$ptr225$i;
     STACKTOP = sp;return ($retval$0|0);
    }
   } else {
    $nb$0 = $cond;
   }
  } else {
   $cmp139 = ($bytes>>>0)>(4294967231);
   if ($cmp139) {
    $nb$0 = -1;
   } else {
    $add144 = (($bytes) + 11)|0;
    $and145 = $add144 & -8;
    $50 = HEAP32[(8248)>>2]|0;
    $cmp146 = ($50|0)==(0);
    if ($cmp146) {
     $nb$0 = $and145;
    } else {
     $sub$i138 = (0 - ($and145))|0;
     $shr$i139 = $add144 >>> 8;
     $cmp$i = ($shr$i139|0)==(0);
     if ($cmp$i) {
      $idx$0$i = 0;
     } else {
      $cmp1$i = ($and145>>>0)>(16777215);
      if ($cmp1$i) {
       $idx$0$i = 31;
      } else {
       $sub4$i = (($shr$i139) + 1048320)|0;
       $shr5$i141 = $sub4$i >>> 16;
       $and$i142 = $shr5$i141 & 8;
       $shl$i143 = $shr$i139 << $and$i142;
       $sub6$i = (($shl$i143) + 520192)|0;
       $shr7$i144 = $sub6$i >>> 16;
       $and8$i = $shr7$i144 & 4;
       $add$i145 = $and8$i | $and$i142;
       $shl9$i = $shl$i143 << $and8$i;
       $sub10$i = (($shl9$i) + 245760)|0;
       $shr11$i146 = $sub10$i >>> 16;
       $and12$i = $shr11$i146 & 2;
       $add13$i = $add$i145 | $and12$i;
       $sub14$i = (14 - ($add13$i))|0;
       $shl15$i = $shl9$i << $and12$i;
       $shr16$i147 = $shl15$i >>> 15;
       $add17$i = (($sub14$i) + ($shr16$i147))|0;
       $shl18$i = $add17$i << 1;
       $add19$i = (($add17$i) + 7)|0;
       $shr20$i = $and145 >>> $add19$i;
       $and21$i148 = $shr20$i & 1;
       $add22$i = $and21$i148 | $shl18$i;
       $idx$0$i = $add22$i;
      }
     }
     $arrayidx$i149 = (8548 + ($idx$0$i<<2)|0);
     $51 = HEAP32[$arrayidx$i149>>2]|0;
     $cmp24$i = ($51|0)==(0|0);
     L117: do {
      if ($cmp24$i) {
       $rsize$3$i = $sub$i138;$t$2$i = 0;$v$3$i = 0;
       label = 81;
      } else {
       $cmp26$i = ($idx$0$i|0)==(31);
       $shr27$i = $idx$0$i >>> 1;
       $sub30$i = (25 - ($shr27$i))|0;
       $cond$i150 = $cmp26$i ? 0 : $sub30$i;
       $shl31$i = $and145 << $cond$i150;
       $rsize$0$i = $sub$i138;$rst$0$i = 0;$sizebits$0$i = $shl31$i;$t$0$i = $51;$v$0$i = 0;
       while(1) {
        $head$i151 = ((($t$0$i)) + 4|0);
        $52 = HEAP32[$head$i151>>2]|0;
        $and32$i = $52 & -8;
        $sub33$i = (($and32$i) - ($and145))|0;
        $cmp34$i = ($sub33$i>>>0)<($rsize$0$i>>>0);
        if ($cmp34$i) {
         $cmp36$i = ($sub33$i|0)==(0);
         if ($cmp36$i) {
          $rsize$49$i = 0;$t$48$i = $t$0$i;$v$410$i = $t$0$i;
          label = 85;
          break L117;
         } else {
          $rsize$1$i = $sub33$i;$v$1$i = $t$0$i;
         }
        } else {
         $rsize$1$i = $rsize$0$i;$v$1$i = $v$0$i;
        }
        $arrayidx40$i = ((($t$0$i)) + 20|0);
        $53 = HEAP32[$arrayidx40$i>>2]|0;
        $shr42$i = $sizebits$0$i >>> 31;
        $arrayidx44$i = (((($t$0$i)) + 16|0) + ($shr42$i<<2)|0);
        $54 = HEAP32[$arrayidx44$i>>2]|0;
        $cmp45$i152 = ($53|0)==(0|0);
        $cmp46$i = ($53|0)==($54|0);
        $or$cond1$i = $cmp45$i152 | $cmp46$i;
        $rst$1$i = $or$cond1$i ? $rst$0$i : $53;
        $cmp49$i = ($54|0)==(0|0);
        $not$cmp494$i = $cmp49$i ^ 1;
        $shl52$i = $not$cmp494$i&1;
        $sizebits$0$shl52$i = $sizebits$0$i << $shl52$i;
        if ($cmp49$i) {
         $rsize$3$i = $rsize$1$i;$t$2$i = $rst$1$i;$v$3$i = $v$1$i;
         label = 81;
         break;
        } else {
         $rsize$0$i = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $sizebits$0$shl52$i;$t$0$i = $54;$v$0$i = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 81) {
      $cmp55$i = ($t$2$i|0)==(0|0);
      $cmp57$i = ($v$3$i|0)==(0|0);
      $or$cond$i = $cmp55$i & $cmp57$i;
      if ($or$cond$i) {
       $shl60$i = 2 << $idx$0$i;
       $sub63$i = (0 - ($shl60$i))|0;
       $or$i = $shl60$i | $sub63$i;
       $and64$i = $50 & $or$i;
       $cmp65$i = ($and64$i|0)==(0);
       if ($cmp65$i) {
        $nb$0 = $and145;
        break;
       }
       $sub67$i = (0 - ($and64$i))|0;
       $and68$i = $and64$i & $sub67$i;
       $sub70$i = (($and68$i) + -1)|0;
       $shr72$i = $sub70$i >>> 12;
       $and73$i = $shr72$i & 16;
       $shr75$i = $sub70$i >>> $and73$i;
       $shr76$i = $shr75$i >>> 5;
       $and77$i = $shr76$i & 8;
       $add78$i = $and77$i | $and73$i;
       $shr79$i = $shr75$i >>> $and77$i;
       $shr80$i = $shr79$i >>> 2;
       $and81$i = $shr80$i & 4;
       $add82$i = $add78$i | $and81$i;
       $shr83$i = $shr79$i >>> $and81$i;
       $shr84$i = $shr83$i >>> 1;
       $and85$i = $shr84$i & 2;
       $add86$i = $add82$i | $and85$i;
       $shr87$i = $shr83$i >>> $and85$i;
       $shr88$i = $shr87$i >>> 1;
       $and89$i = $shr88$i & 1;
       $add90$i = $add86$i | $and89$i;
       $shr91$i = $shr87$i >>> $and89$i;
       $add92$i = (($add90$i) + ($shr91$i))|0;
       $arrayidx94$i153 = (8548 + ($add92$i<<2)|0);
       $55 = HEAP32[$arrayidx94$i153>>2]|0;
       $t$4$ph$i = $55;$v$4$ph$i = 0;
      } else {
       $t$4$ph$i = $t$2$i;$v$4$ph$i = $v$3$i;
      }
      $cmp977$i = ($t$4$ph$i|0)==(0|0);
      if ($cmp977$i) {
       $rsize$4$lcssa$i = $rsize$3$i;$v$4$lcssa$i = $v$4$ph$i;
      } else {
       $rsize$49$i = $rsize$3$i;$t$48$i = $t$4$ph$i;$v$410$i = $v$4$ph$i;
       label = 85;
      }
     }
     if ((label|0) == 85) {
      while(1) {
       label = 0;
       $head99$i = ((($t$48$i)) + 4|0);
       $56 = HEAP32[$head99$i>>2]|0;
       $and100$i = $56 & -8;
       $sub101$i = (($and100$i) - ($and145))|0;
       $cmp102$i = ($sub101$i>>>0)<($rsize$49$i>>>0);
       $sub101$rsize$4$i = $cmp102$i ? $sub101$i : $rsize$49$i;
       $t$4$v$4$i = $cmp102$i ? $t$48$i : $v$410$i;
       $arrayidx106$i = ((($t$48$i)) + 16|0);
       $57 = HEAP32[$arrayidx106$i>>2]|0;
       $not$cmp107$i = ($57|0)==(0|0);
       $$sink$i154 = $not$cmp107$i&1;
       $arrayidx113$i155 = (((($t$48$i)) + 16|0) + ($$sink$i154<<2)|0);
       $58 = HEAP32[$arrayidx113$i155>>2]|0;
       $cmp97$i = ($58|0)==(0|0);
       if ($cmp97$i) {
        $rsize$4$lcssa$i = $sub101$rsize$4$i;$v$4$lcssa$i = $t$4$v$4$i;
        break;
       } else {
        $rsize$49$i = $sub101$rsize$4$i;$t$48$i = $58;$v$410$i = $t$4$v$4$i;
        label = 85;
       }
      }
     }
     $cmp116$i = ($v$4$lcssa$i|0)==(0|0);
     if ($cmp116$i) {
      $nb$0 = $and145;
     } else {
      $59 = HEAP32[(8252)>>2]|0;
      $sub118$i = (($59) - ($and145))|0;
      $cmp119$i = ($rsize$4$lcssa$i>>>0)<($sub118$i>>>0);
      if ($cmp119$i) {
       $60 = HEAP32[(8260)>>2]|0;
       $cmp121$i = ($v$4$lcssa$i>>>0)<($60>>>0);
       if ($cmp121$i) {
        _abort();
        // unreachable;
       }
       $add$ptr$i158 = (($v$4$lcssa$i) + ($and145)|0);
       $cmp123$i = ($v$4$lcssa$i>>>0)<($add$ptr$i158>>>0);
       if (!($cmp123$i)) {
        _abort();
        // unreachable;
       }
       $parent$i159 = ((($v$4$lcssa$i)) + 24|0);
       $61 = HEAP32[$parent$i159>>2]|0;
       $bk$i160 = ((($v$4$lcssa$i)) + 12|0);
       $62 = HEAP32[$bk$i160>>2]|0;
       $cmp128$i = ($62|0)==($v$4$lcssa$i|0);
       do {
        if ($cmp128$i) {
         $arrayidx151$i = ((($v$4$lcssa$i)) + 20|0);
         $66 = HEAP32[$arrayidx151$i>>2]|0;
         $cmp152$i = ($66|0)==(0|0);
         if ($cmp152$i) {
          $arrayidx155$i = ((($v$4$lcssa$i)) + 16|0);
          $67 = HEAP32[$arrayidx155$i>>2]|0;
          $cmp156$i = ($67|0)==(0|0);
          if ($cmp156$i) {
           $R$3$i168 = 0;
           break;
          } else {
           $R$1$i165 = $67;$RP$1$i164 = $arrayidx155$i;
          }
         } else {
          $R$1$i165 = $66;$RP$1$i164 = $arrayidx151$i;
         }
         while(1) {
          $arrayidx161$i = ((($R$1$i165)) + 20|0);
          $68 = HEAP32[$arrayidx161$i>>2]|0;
          $cmp162$i = ($68|0)==(0|0);
          if (!($cmp162$i)) {
           $R$1$i165 = $68;$RP$1$i164 = $arrayidx161$i;
           continue;
          }
          $arrayidx165$i166 = ((($R$1$i165)) + 16|0);
          $69 = HEAP32[$arrayidx165$i166>>2]|0;
          $cmp166$i = ($69|0)==(0|0);
          if ($cmp166$i) {
           break;
          } else {
           $R$1$i165 = $69;$RP$1$i164 = $arrayidx165$i166;
          }
         }
         $cmp171$i = ($RP$1$i164>>>0)<($60>>>0);
         if ($cmp171$i) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$1$i164>>2] = 0;
          $R$3$i168 = $R$1$i165;
          break;
         }
        } else {
         $fd$i161 = ((($v$4$lcssa$i)) + 8|0);
         $63 = HEAP32[$fd$i161>>2]|0;
         $cmp133$i = ($63>>>0)<($60>>>0);
         if ($cmp133$i) {
          _abort();
          // unreachable;
         }
         $bk136$i = ((($63)) + 12|0);
         $64 = HEAP32[$bk136$i>>2]|0;
         $cmp137$i = ($64|0)==($v$4$lcssa$i|0);
         if (!($cmp137$i)) {
          _abort();
          // unreachable;
         }
         $fd139$i = ((($62)) + 8|0);
         $65 = HEAP32[$fd139$i>>2]|0;
         $cmp140$i = ($65|0)==($v$4$lcssa$i|0);
         if ($cmp140$i) {
          HEAP32[$bk136$i>>2] = $62;
          HEAP32[$fd139$i>>2] = $63;
          $R$3$i168 = $62;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $cmp180$i = ($61|0)==(0|0);
       L164: do {
        if ($cmp180$i) {
         $83 = $50;
        } else {
         $index$i169 = ((($v$4$lcssa$i)) + 28|0);
         $70 = HEAP32[$index$i169>>2]|0;
         $arrayidx184$i = (8548 + ($70<<2)|0);
         $71 = HEAP32[$arrayidx184$i>>2]|0;
         $cmp185$i = ($v$4$lcssa$i|0)==($71|0);
         do {
          if ($cmp185$i) {
           HEAP32[$arrayidx184$i>>2] = $R$3$i168;
           $cond3$i = ($R$3$i168|0)==(0|0);
           if ($cond3$i) {
            $shl192$i = 1 << $70;
            $neg$i170 = $shl192$i ^ -1;
            $and194$i = $50 & $neg$i170;
            HEAP32[(8248)>>2] = $and194$i;
            $83 = $and194$i;
            break L164;
           }
          } else {
           $72 = HEAP32[(8260)>>2]|0;
           $cmp198$i = ($61>>>0)<($72>>>0);
           if ($cmp198$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx204$i = ((($61)) + 16|0);
            $73 = HEAP32[$arrayidx204$i>>2]|0;
            $not$cmp205$i = ($73|0)!=($v$4$lcssa$i|0);
            $$sink2$i172 = $not$cmp205$i&1;
            $arrayidx212$i = (((($61)) + 16|0) + ($$sink2$i172<<2)|0);
            HEAP32[$arrayidx212$i>>2] = $R$3$i168;
            $cmp217$i = ($R$3$i168|0)==(0|0);
            if ($cmp217$i) {
             $83 = $50;
             break L164;
            } else {
             break;
            }
           }
          }
         } while(0);
         $74 = HEAP32[(8260)>>2]|0;
         $cmp221$i = ($R$3$i168>>>0)<($74>>>0);
         if ($cmp221$i) {
          _abort();
          // unreachable;
         }
         $parent226$i = ((($R$3$i168)) + 24|0);
         HEAP32[$parent226$i>>2] = $61;
         $arrayidx228$i = ((($v$4$lcssa$i)) + 16|0);
         $75 = HEAP32[$arrayidx228$i>>2]|0;
         $cmp229$i = ($75|0)==(0|0);
         do {
          if (!($cmp229$i)) {
           $cmp233$i = ($75>>>0)<($74>>>0);
           if ($cmp233$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx239$i = ((($R$3$i168)) + 16|0);
            HEAP32[$arrayidx239$i>>2] = $75;
            $parent240$i = ((($75)) + 24|0);
            HEAP32[$parent240$i>>2] = $R$3$i168;
            break;
           }
          }
         } while(0);
         $arrayidx245$i = ((($v$4$lcssa$i)) + 20|0);
         $76 = HEAP32[$arrayidx245$i>>2]|0;
         $cmp246$i = ($76|0)==(0|0);
         if ($cmp246$i) {
          $83 = $50;
         } else {
          $77 = HEAP32[(8260)>>2]|0;
          $cmp250$i = ($76>>>0)<($77>>>0);
          if ($cmp250$i) {
           _abort();
           // unreachable;
          } else {
           $arrayidx256$i = ((($R$3$i168)) + 20|0);
           HEAP32[$arrayidx256$i>>2] = $76;
           $parent257$i = ((($76)) + 24|0);
           HEAP32[$parent257$i>>2] = $R$3$i168;
           $83 = $50;
           break;
          }
         }
        }
       } while(0);
       $cmp265$i = ($rsize$4$lcssa$i>>>0)<(16);
       do {
        if ($cmp265$i) {
         $add268$i = (($rsize$4$lcssa$i) + ($and145))|0;
         $or270$i = $add268$i | 3;
         $head271$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head271$i>>2] = $or270$i;
         $add$ptr273$i = (($v$4$lcssa$i) + ($add268$i)|0);
         $head274$i = ((($add$ptr273$i)) + 4|0);
         $78 = HEAP32[$head274$i>>2]|0;
         $or275$i = $78 | 1;
         HEAP32[$head274$i>>2] = $or275$i;
        } else {
         $or278$i = $and145 | 3;
         $head279$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head279$i>>2] = $or278$i;
         $or280$i = $rsize$4$lcssa$i | 1;
         $head281$i = ((($add$ptr$i158)) + 4|0);
         HEAP32[$head281$i>>2] = $or280$i;
         $add$ptr282$i = (($add$ptr$i158) + ($rsize$4$lcssa$i)|0);
         HEAP32[$add$ptr282$i>>2] = $rsize$4$lcssa$i;
         $shr283$i = $rsize$4$lcssa$i >>> 3;
         $cmp284$i = ($rsize$4$lcssa$i>>>0)<(256);
         if ($cmp284$i) {
          $shl288$i = $shr283$i << 1;
          $arrayidx289$i = (8284 + ($shl288$i<<2)|0);
          $79 = HEAP32[2061]|0;
          $shl291$i = 1 << $shr283$i;
          $and292$i = $79 & $shl291$i;
          $tobool293$i = ($and292$i|0)==(0);
          if ($tobool293$i) {
           $or297$i = $79 | $shl291$i;
           HEAP32[2061] = $or297$i;
           $$pre$i175 = ((($arrayidx289$i)) + 8|0);
           $$pre$phi$i176Z2D = $$pre$i175;$F290$0$i = $arrayidx289$i;
          } else {
           $80 = ((($arrayidx289$i)) + 8|0);
           $81 = HEAP32[$80>>2]|0;
           $82 = HEAP32[(8260)>>2]|0;
           $cmp301$i = ($81>>>0)<($82>>>0);
           if ($cmp301$i) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i176Z2D = $80;$F290$0$i = $81;
           }
          }
          HEAP32[$$pre$phi$i176Z2D>>2] = $add$ptr$i158;
          $bk311$i = ((($F290$0$i)) + 12|0);
          HEAP32[$bk311$i>>2] = $add$ptr$i158;
          $fd312$i = ((($add$ptr$i158)) + 8|0);
          HEAP32[$fd312$i>>2] = $F290$0$i;
          $bk313$i = ((($add$ptr$i158)) + 12|0);
          HEAP32[$bk313$i>>2] = $arrayidx289$i;
          break;
         }
         $shr318$i = $rsize$4$lcssa$i >>> 8;
         $cmp319$i = ($shr318$i|0)==(0);
         if ($cmp319$i) {
          $I316$0$i = 0;
         } else {
          $cmp323$i = ($rsize$4$lcssa$i>>>0)>(16777215);
          if ($cmp323$i) {
           $I316$0$i = 31;
          } else {
           $sub329$i = (($shr318$i) + 1048320)|0;
           $shr330$i = $sub329$i >>> 16;
           $and331$i = $shr330$i & 8;
           $shl333$i = $shr318$i << $and331$i;
           $sub334$i = (($shl333$i) + 520192)|0;
           $shr335$i = $sub334$i >>> 16;
           $and336$i = $shr335$i & 4;
           $add337$i = $and336$i | $and331$i;
           $shl338$i = $shl333$i << $and336$i;
           $sub339$i = (($shl338$i) + 245760)|0;
           $shr340$i = $sub339$i >>> 16;
           $and341$i = $shr340$i & 2;
           $add342$i = $add337$i | $and341$i;
           $sub343$i = (14 - ($add342$i))|0;
           $shl344$i = $shl338$i << $and341$i;
           $shr345$i = $shl344$i >>> 15;
           $add346$i = (($sub343$i) + ($shr345$i))|0;
           $shl347$i = $add346$i << 1;
           $add348$i = (($add346$i) + 7)|0;
           $shr349$i = $rsize$4$lcssa$i >>> $add348$i;
           $and350$i = $shr349$i & 1;
           $add351$i = $and350$i | $shl347$i;
           $I316$0$i = $add351$i;
          }
         }
         $arrayidx355$i = (8548 + ($I316$0$i<<2)|0);
         $index356$i = ((($add$ptr$i158)) + 28|0);
         HEAP32[$index356$i>>2] = $I316$0$i;
         $child357$i = ((($add$ptr$i158)) + 16|0);
         $arrayidx358$i = ((($child357$i)) + 4|0);
         HEAP32[$arrayidx358$i>>2] = 0;
         HEAP32[$child357$i>>2] = 0;
         $shl362$i = 1 << $I316$0$i;
         $and363$i = $83 & $shl362$i;
         $tobool364$i = ($and363$i|0)==(0);
         if ($tobool364$i) {
          $or368$i = $83 | $shl362$i;
          HEAP32[(8248)>>2] = $or368$i;
          HEAP32[$arrayidx355$i>>2] = $add$ptr$i158;
          $parent369$i = ((($add$ptr$i158)) + 24|0);
          HEAP32[$parent369$i>>2] = $arrayidx355$i;
          $bk370$i = ((($add$ptr$i158)) + 12|0);
          HEAP32[$bk370$i>>2] = $add$ptr$i158;
          $fd371$i = ((($add$ptr$i158)) + 8|0);
          HEAP32[$fd371$i>>2] = $add$ptr$i158;
          break;
         }
         $84 = HEAP32[$arrayidx355$i>>2]|0;
         $cmp374$i = ($I316$0$i|0)==(31);
         $shr378$i = $I316$0$i >>> 1;
         $sub381$i = (25 - ($shr378$i))|0;
         $cond383$i = $cmp374$i ? 0 : $sub381$i;
         $shl384$i = $rsize$4$lcssa$i << $cond383$i;
         $K373$0$i = $shl384$i;$T$0$i = $84;
         while(1) {
          $head386$i = ((($T$0$i)) + 4|0);
          $85 = HEAP32[$head386$i>>2]|0;
          $and387$i = $85 & -8;
          $cmp388$i = ($and387$i|0)==($rsize$4$lcssa$i|0);
          if ($cmp388$i) {
           label = 139;
           break;
          }
          $shr392$i = $K373$0$i >>> 31;
          $arrayidx394$i = (((($T$0$i)) + 16|0) + ($shr392$i<<2)|0);
          $shl395$i = $K373$0$i << 1;
          $86 = HEAP32[$arrayidx394$i>>2]|0;
          $cmp396$i = ($86|0)==(0|0);
          if ($cmp396$i) {
           label = 136;
           break;
          } else {
           $K373$0$i = $shl395$i;$T$0$i = $86;
          }
         }
         if ((label|0) == 136) {
          $87 = HEAP32[(8260)>>2]|0;
          $cmp401$i = ($arrayidx394$i>>>0)<($87>>>0);
          if ($cmp401$i) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$arrayidx394$i>>2] = $add$ptr$i158;
           $parent406$i = ((($add$ptr$i158)) + 24|0);
           HEAP32[$parent406$i>>2] = $T$0$i;
           $bk407$i = ((($add$ptr$i158)) + 12|0);
           HEAP32[$bk407$i>>2] = $add$ptr$i158;
           $fd408$i = ((($add$ptr$i158)) + 8|0);
           HEAP32[$fd408$i>>2] = $add$ptr$i158;
           break;
          }
         }
         else if ((label|0) == 139) {
          $fd416$i = ((($T$0$i)) + 8|0);
          $88 = HEAP32[$fd416$i>>2]|0;
          $89 = HEAP32[(8260)>>2]|0;
          $cmp422$i = ($88>>>0)>=($89>>>0);
          $not$cmp418$i = ($T$0$i>>>0)>=($89>>>0);
          $90 = $cmp422$i & $not$cmp418$i;
          if ($90) {
           $bk429$i = ((($88)) + 12|0);
           HEAP32[$bk429$i>>2] = $add$ptr$i158;
           HEAP32[$fd416$i>>2] = $add$ptr$i158;
           $fd431$i = ((($add$ptr$i158)) + 8|0);
           HEAP32[$fd431$i>>2] = $88;
           $bk432$i = ((($add$ptr$i158)) + 12|0);
           HEAP32[$bk432$i>>2] = $T$0$i;
           $parent433$i = ((($add$ptr$i158)) + 24|0);
           HEAP32[$parent433$i>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $add$ptr441$i = ((($v$4$lcssa$i)) + 8|0);
       $retval$0 = $add$ptr441$i;
       STACKTOP = sp;return ($retval$0|0);
      } else {
       $nb$0 = $and145;
      }
     }
    }
   }
  }
 } while(0);
 $91 = HEAP32[(8252)>>2]|0;
 $cmp156 = ($91>>>0)<($nb$0>>>0);
 if (!($cmp156)) {
  $sub160 = (($91) - ($nb$0))|0;
  $92 = HEAP32[(8264)>>2]|0;
  $cmp162 = ($sub160>>>0)>(15);
  if ($cmp162) {
   $add$ptr166 = (($92) + ($nb$0)|0);
   HEAP32[(8264)>>2] = $add$ptr166;
   HEAP32[(8252)>>2] = $sub160;
   $or167 = $sub160 | 1;
   $head168 = ((($add$ptr166)) + 4|0);
   HEAP32[$head168>>2] = $or167;
   $add$ptr169 = (($add$ptr166) + ($sub160)|0);
   HEAP32[$add$ptr169>>2] = $sub160;
   $or172 = $nb$0 | 3;
   $head173 = ((($92)) + 4|0);
   HEAP32[$head173>>2] = $or172;
  } else {
   HEAP32[(8252)>>2] = 0;
   HEAP32[(8264)>>2] = 0;
   $or176 = $91 | 3;
   $head177 = ((($92)) + 4|0);
   HEAP32[$head177>>2] = $or176;
   $add$ptr178 = (($92) + ($91)|0);
   $head179 = ((($add$ptr178)) + 4|0);
   $93 = HEAP32[$head179>>2]|0;
   $or180 = $93 | 1;
   HEAP32[$head179>>2] = $or180;
  }
  $add$ptr182 = ((($92)) + 8|0);
  $retval$0 = $add$ptr182;
  STACKTOP = sp;return ($retval$0|0);
 }
 $94 = HEAP32[(8256)>>2]|0;
 $cmp186 = ($94>>>0)>($nb$0>>>0);
 if ($cmp186) {
  $sub190 = (($94) - ($nb$0))|0;
  HEAP32[(8256)>>2] = $sub190;
  $95 = HEAP32[(8268)>>2]|0;
  $add$ptr193 = (($95) + ($nb$0)|0);
  HEAP32[(8268)>>2] = $add$ptr193;
  $or194 = $sub190 | 1;
  $head195 = ((($add$ptr193)) + 4|0);
  HEAP32[$head195>>2] = $or194;
  $or197 = $nb$0 | 3;
  $head198 = ((($95)) + 4|0);
  HEAP32[$head198>>2] = $or197;
  $add$ptr199 = ((($95)) + 8|0);
  $retval$0 = $add$ptr199;
  STACKTOP = sp;return ($retval$0|0);
 }
 $96 = HEAP32[2179]|0;
 $cmp$i177 = ($96|0)==(0);
 if ($cmp$i177) {
  HEAP32[(8724)>>2] = 4096;
  HEAP32[(8720)>>2] = 4096;
  HEAP32[(8728)>>2] = -1;
  HEAP32[(8732)>>2] = -1;
  HEAP32[(8736)>>2] = 0;
  HEAP32[(8688)>>2] = 0;
  $97 = $magic$i$i;
  $xor$i$i = $97 & -16;
  $and6$i$i = $xor$i$i ^ 1431655768;
  HEAP32[$magic$i$i>>2] = $and6$i$i;
  HEAP32[2179] = $and6$i$i;
  $98 = 4096;
 } else {
  $$pre$i178 = HEAP32[(8724)>>2]|0;
  $98 = $$pre$i178;
 }
 $add$i179 = (($nb$0) + 48)|0;
 $sub$i180 = (($nb$0) + 47)|0;
 $add9$i = (($98) + ($sub$i180))|0;
 $neg$i181 = (0 - ($98))|0;
 $and11$i = $add9$i & $neg$i181;
 $cmp12$i = ($and11$i>>>0)>($nb$0>>>0);
 if (!($cmp12$i)) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $99 = HEAP32[(8684)>>2]|0;
 $cmp15$i = ($99|0)==(0);
 if (!($cmp15$i)) {
  $100 = HEAP32[(8676)>>2]|0;
  $add17$i182 = (($100) + ($and11$i))|0;
  $cmp19$i = ($add17$i182>>>0)<=($100>>>0);
  $cmp21$i = ($add17$i182>>>0)>($99>>>0);
  $or$cond1$i183 = $cmp19$i | $cmp21$i;
  if ($or$cond1$i183) {
   $retval$0 = 0;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $101 = HEAP32[(8688)>>2]|0;
 $and29$i = $101 & 4;
 $tobool30$i = ($and29$i|0)==(0);
 L244: do {
  if ($tobool30$i) {
   $102 = HEAP32[(8268)>>2]|0;
   $cmp32$i184 = ($102|0)==(0|0);
   L246: do {
    if ($cmp32$i184) {
     label = 163;
    } else {
     $sp$0$i$i = (8692);
     while(1) {
      $103 = HEAP32[$sp$0$i$i>>2]|0;
      $cmp$i11$i = ($103>>>0)>($102>>>0);
      if (!($cmp$i11$i)) {
       $size$i$i = ((($sp$0$i$i)) + 4|0);
       $104 = HEAP32[$size$i$i>>2]|0;
       $add$ptr$i$i = (($103) + ($104)|0);
       $cmp2$i$i = ($add$ptr$i$i>>>0)>($102>>>0);
       if ($cmp2$i$i) {
        break;
       }
      }
      $next$i$i = ((($sp$0$i$i)) + 8|0);
      $105 = HEAP32[$next$i$i>>2]|0;
      $cmp3$i$i = ($105|0)==(0|0);
      if ($cmp3$i$i) {
       label = 163;
       break L246;
      } else {
       $sp$0$i$i = $105;
      }
     }
     $add77$i = (($add9$i) - ($94))|0;
     $and80$i = $add77$i & $neg$i181;
     $cmp81$i190 = ($and80$i>>>0)<(2147483647);
     if ($cmp81$i190) {
      $call83$i = (_sbrk(($and80$i|0))|0);
      $110 = HEAP32[$sp$0$i$i>>2]|0;
      $111 = HEAP32[$size$i$i>>2]|0;
      $add$ptr$i192 = (($110) + ($111)|0);
      $cmp85$i = ($call83$i|0)==($add$ptr$i192|0);
      if ($cmp85$i) {
       $cmp89$i = ($call83$i|0)==((-1)|0);
       if ($cmp89$i) {
        $tsize$2657583$i = $and80$i;
       } else {
        $tbase$796$i = $call83$i;$tsize$795$i = $and80$i;
        label = 180;
        break L244;
       }
      } else {
       $br$2$ph$i = $call83$i;$ssize$2$ph$i = $and80$i;
       label = 171;
      }
     } else {
      $tsize$2657583$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 163) {
     $call37$i = (_sbrk(0)|0);
     $cmp38$i = ($call37$i|0)==((-1)|0);
     if ($cmp38$i) {
      $tsize$2657583$i = 0;
     } else {
      $106 = $call37$i;
      $107 = HEAP32[(8720)>>2]|0;
      $sub41$i = (($107) + -1)|0;
      $and42$i = $sub41$i & $106;
      $cmp43$i = ($and42$i|0)==(0);
      $add46$i = (($sub41$i) + ($106))|0;
      $neg48$i = (0 - ($107))|0;
      $and49$i = $add46$i & $neg48$i;
      $sub50$i = (($and49$i) - ($106))|0;
      $add51$i = $cmp43$i ? 0 : $sub50$i;
      $and11$add51$i = (($add51$i) + ($and11$i))|0;
      $108 = HEAP32[(8676)>>2]|0;
      $add54$i = (($and11$add51$i) + ($108))|0;
      $cmp55$i185 = ($and11$add51$i>>>0)>($nb$0>>>0);
      $cmp57$i186 = ($and11$add51$i>>>0)<(2147483647);
      $or$cond$i187 = $cmp55$i185 & $cmp57$i186;
      if ($or$cond$i187) {
       $109 = HEAP32[(8684)>>2]|0;
       $cmp60$i = ($109|0)==(0);
       if (!($cmp60$i)) {
        $cmp63$i = ($add54$i>>>0)<=($108>>>0);
        $cmp66$i189 = ($add54$i>>>0)>($109>>>0);
        $or$cond2$i = $cmp63$i | $cmp66$i189;
        if ($or$cond2$i) {
         $tsize$2657583$i = 0;
         break;
        }
       }
       $call68$i = (_sbrk(($and11$add51$i|0))|0);
       $cmp69$i = ($call68$i|0)==($call37$i|0);
       if ($cmp69$i) {
        $tbase$796$i = $call37$i;$tsize$795$i = $and11$add51$i;
        label = 180;
        break L244;
       } else {
        $br$2$ph$i = $call68$i;$ssize$2$ph$i = $and11$add51$i;
        label = 171;
       }
      } else {
       $tsize$2657583$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 171) {
     $sub112$i = (0 - ($ssize$2$ph$i))|0;
     $cmp91$i = ($br$2$ph$i|0)!=((-1)|0);
     $cmp93$i = ($ssize$2$ph$i>>>0)<(2147483647);
     $or$cond5$i = $cmp93$i & $cmp91$i;
     $cmp96$i = ($add$i179>>>0)>($ssize$2$ph$i>>>0);
     $or$cond3$i = $cmp96$i & $or$cond5$i;
     if (!($or$cond3$i)) {
      $cmp118$i = ($br$2$ph$i|0)==((-1)|0);
      if ($cmp118$i) {
       $tsize$2657583$i = 0;
       break;
      } else {
       $tbase$796$i = $br$2$ph$i;$tsize$795$i = $ssize$2$ph$i;
       label = 180;
       break L244;
      }
     }
     $112 = HEAP32[(8724)>>2]|0;
     $sub99$i = (($sub$i180) - ($ssize$2$ph$i))|0;
     $add101$i = (($sub99$i) + ($112))|0;
     $neg103$i = (0 - ($112))|0;
     $and104$i = $add101$i & $neg103$i;
     $cmp105$i = ($and104$i>>>0)<(2147483647);
     if (!($cmp105$i)) {
      $tbase$796$i = $br$2$ph$i;$tsize$795$i = $ssize$2$ph$i;
      label = 180;
      break L244;
     }
     $call107$i = (_sbrk(($and104$i|0))|0);
     $cmp108$i = ($call107$i|0)==((-1)|0);
     if ($cmp108$i) {
      (_sbrk(($sub112$i|0))|0);
      $tsize$2657583$i = 0;
      break;
     } else {
      $add110$i = (($and104$i) + ($ssize$2$ph$i))|0;
      $tbase$796$i = $br$2$ph$i;$tsize$795$i = $add110$i;
      label = 180;
      break L244;
     }
    }
   } while(0);
   $113 = HEAP32[(8688)>>2]|0;
   $or$i194 = $113 | 4;
   HEAP32[(8688)>>2] = $or$i194;
   $tsize$4$i = $tsize$2657583$i;
   label = 178;
  } else {
   $tsize$4$i = 0;
   label = 178;
  }
 } while(0);
 if ((label|0) == 178) {
  $cmp127$i = ($and11$i>>>0)<(2147483647);
  if ($cmp127$i) {
   $call131$i = (_sbrk(($and11$i|0))|0);
   $call132$i = (_sbrk(0)|0);
   $cmp133$i195 = ($call131$i|0)!=((-1)|0);
   $cmp135$i = ($call132$i|0)!=((-1)|0);
   $or$cond4$i = $cmp133$i195 & $cmp135$i;
   $cmp137$i196 = ($call131$i>>>0)<($call132$i>>>0);
   $or$cond7$i = $cmp137$i196 & $or$cond4$i;
   $sub$ptr$lhs$cast$i = $call132$i;
   $sub$ptr$rhs$cast$i = $call131$i;
   $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0;
   $add140$i = (($nb$0) + 40)|0;
   $cmp141$i = ($sub$ptr$sub$i>>>0)>($add140$i>>>0);
   $sub$ptr$sub$tsize$4$i = $cmp141$i ? $sub$ptr$sub$i : $tsize$4$i;
   $or$cond7$not$i = $or$cond7$i ^ 1;
   $cmp14799$i = ($call131$i|0)==((-1)|0);
   $not$cmp141$i = $cmp141$i ^ 1;
   $cmp147$i = $cmp14799$i | $not$cmp141$i;
   $or$cond97$i = $cmp147$i | $or$cond7$not$i;
   if (!($or$cond97$i)) {
    $tbase$796$i = $call131$i;$tsize$795$i = $sub$ptr$sub$tsize$4$i;
    label = 180;
   }
  }
 }
 if ((label|0) == 180) {
  $114 = HEAP32[(8676)>>2]|0;
  $add150$i = (($114) + ($tsize$795$i))|0;
  HEAP32[(8676)>>2] = $add150$i;
  $115 = HEAP32[(8680)>>2]|0;
  $cmp151$i = ($add150$i>>>0)>($115>>>0);
  if ($cmp151$i) {
   HEAP32[(8680)>>2] = $add150$i;
  }
  $116 = HEAP32[(8268)>>2]|0;
  $cmp157$i = ($116|0)==(0|0);
  do {
   if ($cmp157$i) {
    $117 = HEAP32[(8260)>>2]|0;
    $cmp159$i198 = ($117|0)==(0|0);
    $cmp162$i199 = ($tbase$796$i>>>0)<($117>>>0);
    $or$cond8$i = $cmp159$i198 | $cmp162$i199;
    if ($or$cond8$i) {
     HEAP32[(8260)>>2] = $tbase$796$i;
    }
    HEAP32[(8692)>>2] = $tbase$796$i;
    HEAP32[(8696)>>2] = $tsize$795$i;
    HEAP32[(8704)>>2] = 0;
    $118 = HEAP32[2179]|0;
    HEAP32[(8280)>>2] = $118;
    HEAP32[(8276)>>2] = -1;
    $i$01$i$i = 0;
    while(1) {
     $shl$i13$i = $i$01$i$i << 1;
     $arrayidx$i14$i = (8284 + ($shl$i13$i<<2)|0);
     $119 = ((($arrayidx$i14$i)) + 12|0);
     HEAP32[$119>>2] = $arrayidx$i14$i;
     $120 = ((($arrayidx$i14$i)) + 8|0);
     HEAP32[$120>>2] = $arrayidx$i14$i;
     $inc$i$i = (($i$01$i$i) + 1)|0;
     $exitcond$i$i = ($inc$i$i|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$01$i$i = $inc$i$i;
     }
    }
    $sub172$i = (($tsize$795$i) + -40)|0;
    $add$ptr$i16$i = ((($tbase$796$i)) + 8|0);
    $121 = $add$ptr$i16$i;
    $and$i17$i = $121 & 7;
    $cmp$i18$i = ($and$i17$i|0)==(0);
    $122 = (0 - ($121))|0;
    $and3$i$i = $122 & 7;
    $cond$i19$i = $cmp$i18$i ? 0 : $and3$i$i;
    $add$ptr4$i$i = (($tbase$796$i) + ($cond$i19$i)|0);
    $sub5$i$i = (($sub172$i) - ($cond$i19$i))|0;
    HEAP32[(8268)>>2] = $add$ptr4$i$i;
    HEAP32[(8256)>>2] = $sub5$i$i;
    $or$i$i = $sub5$i$i | 1;
    $head$i20$i = ((($add$ptr4$i$i)) + 4|0);
    HEAP32[$head$i20$i>>2] = $or$i$i;
    $add$ptr6$i$i = (($add$ptr4$i$i) + ($sub5$i$i)|0);
    $head7$i$i = ((($add$ptr6$i$i)) + 4|0);
    HEAP32[$head7$i$i>>2] = 40;
    $123 = HEAP32[(8732)>>2]|0;
    HEAP32[(8272)>>2] = $123;
   } else {
    $sp$0108$i = (8692);
    while(1) {
     $124 = HEAP32[$sp$0108$i>>2]|0;
     $size188$i = ((($sp$0108$i)) + 4|0);
     $125 = HEAP32[$size188$i>>2]|0;
     $add$ptr189$i = (($124) + ($125)|0);
     $cmp190$i = ($tbase$796$i|0)==($add$ptr189$i|0);
     if ($cmp190$i) {
      label = 190;
      break;
     }
     $next$i = ((($sp$0108$i)) + 8|0);
     $126 = HEAP32[$next$i>>2]|0;
     $cmp186$i = ($126|0)==(0|0);
     if ($cmp186$i) {
      break;
     } else {
      $sp$0108$i = $126;
     }
    }
    if ((label|0) == 190) {
     $sflags193$i = ((($sp$0108$i)) + 12|0);
     $127 = HEAP32[$sflags193$i>>2]|0;
     $and194$i203 = $127 & 8;
     $tobool195$i = ($and194$i203|0)==(0);
     if ($tobool195$i) {
      $cmp203$i = ($116>>>0)>=($124>>>0);
      $cmp209$i = ($116>>>0)<($tbase$796$i>>>0);
      $or$cond98$i = $cmp209$i & $cmp203$i;
      if ($or$cond98$i) {
       $add212$i = (($125) + ($tsize$795$i))|0;
       HEAP32[$size188$i>>2] = $add212$i;
       $128 = HEAP32[(8256)>>2]|0;
       $add$ptr$i49$i = ((($116)) + 8|0);
       $129 = $add$ptr$i49$i;
       $and$i50$i = $129 & 7;
       $cmp$i51$i = ($and$i50$i|0)==(0);
       $130 = (0 - ($129))|0;
       $and3$i52$i = $130 & 7;
       $cond$i53$i = $cmp$i51$i ? 0 : $and3$i52$i;
       $add$ptr4$i54$i = (($116) + ($cond$i53$i)|0);
       $add215$i = (($tsize$795$i) - ($cond$i53$i))|0;
       $sub5$i55$i = (($128) + ($add215$i))|0;
       HEAP32[(8268)>>2] = $add$ptr4$i54$i;
       HEAP32[(8256)>>2] = $sub5$i55$i;
       $or$i56$i = $sub5$i55$i | 1;
       $head$i57$i = ((($add$ptr4$i54$i)) + 4|0);
       HEAP32[$head$i57$i>>2] = $or$i56$i;
       $add$ptr6$i58$i = (($add$ptr4$i54$i) + ($sub5$i55$i)|0);
       $head7$i59$i = ((($add$ptr6$i58$i)) + 4|0);
       HEAP32[$head7$i59$i>>2] = 40;
       $131 = HEAP32[(8732)>>2]|0;
       HEAP32[(8272)>>2] = $131;
       break;
      }
     }
    }
    $132 = HEAP32[(8260)>>2]|0;
    $cmp218$i = ($tbase$796$i>>>0)<($132>>>0);
    if ($cmp218$i) {
     HEAP32[(8260)>>2] = $tbase$796$i;
     $147 = $tbase$796$i;
    } else {
     $147 = $132;
    }
    $add$ptr227$i = (($tbase$796$i) + ($tsize$795$i)|0);
    $sp$1107$i = (8692);
    while(1) {
     $133 = HEAP32[$sp$1107$i>>2]|0;
     $cmp228$i = ($133|0)==($add$ptr227$i|0);
     if ($cmp228$i) {
      label = 198;
      break;
     }
     $next231$i = ((($sp$1107$i)) + 8|0);
     $134 = HEAP32[$next231$i>>2]|0;
     $cmp224$i = ($134|0)==(0|0);
     if ($cmp224$i) {
      break;
     } else {
      $sp$1107$i = $134;
     }
    }
    if ((label|0) == 198) {
     $sflags235$i = ((($sp$1107$i)) + 12|0);
     $135 = HEAP32[$sflags235$i>>2]|0;
     $and236$i = $135 & 8;
     $tobool237$i = ($and236$i|0)==(0);
     if ($tobool237$i) {
      HEAP32[$sp$1107$i>>2] = $tbase$796$i;
      $size245$i = ((($sp$1107$i)) + 4|0);
      $136 = HEAP32[$size245$i>>2]|0;
      $add246$i = (($136) + ($tsize$795$i))|0;
      HEAP32[$size245$i>>2] = $add246$i;
      $add$ptr$i21$i = ((($tbase$796$i)) + 8|0);
      $137 = $add$ptr$i21$i;
      $and$i22$i = $137 & 7;
      $cmp$i23$i = ($and$i22$i|0)==(0);
      $138 = (0 - ($137))|0;
      $and3$i24$i = $138 & 7;
      $cond$i25$i = $cmp$i23$i ? 0 : $and3$i24$i;
      $add$ptr4$i26$i = (($tbase$796$i) + ($cond$i25$i)|0);
      $add$ptr5$i$i = ((($add$ptr227$i)) + 8|0);
      $139 = $add$ptr5$i$i;
      $and6$i27$i = $139 & 7;
      $cmp7$i$i = ($and6$i27$i|0)==(0);
      $140 = (0 - ($139))|0;
      $and13$i$i = $140 & 7;
      $cond15$i$i = $cmp7$i$i ? 0 : $and13$i$i;
      $add$ptr16$i$i = (($add$ptr227$i) + ($cond15$i$i)|0);
      $sub$ptr$lhs$cast$i28$i = $add$ptr16$i$i;
      $sub$ptr$rhs$cast$i29$i = $add$ptr4$i26$i;
      $sub$ptr$sub$i30$i = (($sub$ptr$lhs$cast$i28$i) - ($sub$ptr$rhs$cast$i29$i))|0;
      $add$ptr17$i$i = (($add$ptr4$i26$i) + ($nb$0)|0);
      $sub18$i$i = (($sub$ptr$sub$i30$i) - ($nb$0))|0;
      $or19$i$i = $nb$0 | 3;
      $head$i31$i = ((($add$ptr4$i26$i)) + 4|0);
      HEAP32[$head$i31$i>>2] = $or19$i$i;
      $cmp20$i$i = ($add$ptr16$i$i|0)==($116|0);
      do {
       if ($cmp20$i$i) {
        $141 = HEAP32[(8256)>>2]|0;
        $add$i$i = (($141) + ($sub18$i$i))|0;
        HEAP32[(8256)>>2] = $add$i$i;
        HEAP32[(8268)>>2] = $add$ptr17$i$i;
        $or22$i$i = $add$i$i | 1;
        $head23$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head23$i$i>>2] = $or22$i$i;
       } else {
        $142 = HEAP32[(8264)>>2]|0;
        $cmp24$i$i = ($add$ptr16$i$i|0)==($142|0);
        if ($cmp24$i$i) {
         $143 = HEAP32[(8252)>>2]|0;
         $add26$i$i = (($143) + ($sub18$i$i))|0;
         HEAP32[(8252)>>2] = $add26$i$i;
         HEAP32[(8264)>>2] = $add$ptr17$i$i;
         $or28$i$i = $add26$i$i | 1;
         $head29$i$i = ((($add$ptr17$i$i)) + 4|0);
         HEAP32[$head29$i$i>>2] = $or28$i$i;
         $add$ptr30$i$i = (($add$ptr17$i$i) + ($add26$i$i)|0);
         HEAP32[$add$ptr30$i$i>>2] = $add26$i$i;
         break;
        }
        $head32$i$i = ((($add$ptr16$i$i)) + 4|0);
        $144 = HEAP32[$head32$i$i>>2]|0;
        $and33$i$i = $144 & 3;
        $cmp34$i$i = ($and33$i$i|0)==(1);
        if ($cmp34$i$i) {
         $and37$i$i = $144 & -8;
         $shr$i34$i = $144 >>> 3;
         $cmp38$i$i = ($144>>>0)<(256);
         L314: do {
          if ($cmp38$i$i) {
           $fd$i$i = ((($add$ptr16$i$i)) + 8|0);
           $145 = HEAP32[$fd$i$i>>2]|0;
           $bk$i35$i = ((($add$ptr16$i$i)) + 12|0);
           $146 = HEAP32[$bk$i35$i>>2]|0;
           $shl$i36$i = $shr$i34$i << 1;
           $arrayidx$i37$i = (8284 + ($shl$i36$i<<2)|0);
           $cmp41$i$i = ($145|0)==($arrayidx$i37$i|0);
           do {
            if (!($cmp41$i$i)) {
             $cmp42$i$i = ($145>>>0)<($147>>>0);
             if ($cmp42$i$i) {
              _abort();
              // unreachable;
             }
             $bk43$i$i = ((($145)) + 12|0);
             $148 = HEAP32[$bk43$i$i>>2]|0;
             $cmp44$i$i = ($148|0)==($add$ptr16$i$i|0);
             if ($cmp44$i$i) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $cmp46$i38$i = ($146|0)==($145|0);
           if ($cmp46$i38$i) {
            $shl48$i$i = 1 << $shr$i34$i;
            $neg$i$i = $shl48$i$i ^ -1;
            $149 = HEAP32[2061]|0;
            $and49$i$i = $149 & $neg$i$i;
            HEAP32[2061] = $and49$i$i;
            break;
           }
           $cmp54$i$i = ($146|0)==($arrayidx$i37$i|0);
           do {
            if ($cmp54$i$i) {
             $$pre5$i$i = ((($146)) + 8|0);
             $fd68$pre$phi$i$iZ2D = $$pre5$i$i;
            } else {
             $cmp57$i$i = ($146>>>0)<($147>>>0);
             if ($cmp57$i$i) {
              _abort();
              // unreachable;
             }
             $fd59$i$i = ((($146)) + 8|0);
             $150 = HEAP32[$fd59$i$i>>2]|0;
             $cmp60$i$i = ($150|0)==($add$ptr16$i$i|0);
             if ($cmp60$i$i) {
              $fd68$pre$phi$i$iZ2D = $fd59$i$i;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $bk67$i$i = ((($145)) + 12|0);
           HEAP32[$bk67$i$i>>2] = $146;
           HEAP32[$fd68$pre$phi$i$iZ2D>>2] = $145;
          } else {
           $parent$i40$i = ((($add$ptr16$i$i)) + 24|0);
           $151 = HEAP32[$parent$i40$i>>2]|0;
           $bk74$i$i = ((($add$ptr16$i$i)) + 12|0);
           $152 = HEAP32[$bk74$i$i>>2]|0;
           $cmp75$i$i = ($152|0)==($add$ptr16$i$i|0);
           do {
            if ($cmp75$i$i) {
             $child$i$i = ((($add$ptr16$i$i)) + 16|0);
             $arrayidx96$i$i = ((($child$i$i)) + 4|0);
             $156 = HEAP32[$arrayidx96$i$i>>2]|0;
             $cmp97$i$i = ($156|0)==(0|0);
             if ($cmp97$i$i) {
              $157 = HEAP32[$child$i$i>>2]|0;
              $cmp100$i$i = ($157|0)==(0|0);
              if ($cmp100$i$i) {
               $R$3$i$i = 0;
               break;
              } else {
               $R$1$i$i = $157;$RP$1$i$i = $child$i$i;
              }
             } else {
              $R$1$i$i = $156;$RP$1$i$i = $arrayidx96$i$i;
             }
             while(1) {
              $arrayidx103$i$i = ((($R$1$i$i)) + 20|0);
              $158 = HEAP32[$arrayidx103$i$i>>2]|0;
              $cmp104$i$i = ($158|0)==(0|0);
              if (!($cmp104$i$i)) {
               $R$1$i$i = $158;$RP$1$i$i = $arrayidx103$i$i;
               continue;
              }
              $arrayidx107$i$i = ((($R$1$i$i)) + 16|0);
              $159 = HEAP32[$arrayidx107$i$i>>2]|0;
              $cmp108$i$i = ($159|0)==(0|0);
              if ($cmp108$i$i) {
               break;
              } else {
               $R$1$i$i = $159;$RP$1$i$i = $arrayidx107$i$i;
              }
             }
             $cmp112$i$i = ($RP$1$i$i>>>0)<($147>>>0);
             if ($cmp112$i$i) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$1$i$i>>2] = 0;
              $R$3$i$i = $R$1$i$i;
              break;
             }
            } else {
             $fd78$i$i = ((($add$ptr16$i$i)) + 8|0);
             $153 = HEAP32[$fd78$i$i>>2]|0;
             $cmp81$i$i = ($153>>>0)<($147>>>0);
             if ($cmp81$i$i) {
              _abort();
              // unreachable;
             }
             $bk82$i$i = ((($153)) + 12|0);
             $154 = HEAP32[$bk82$i$i>>2]|0;
             $cmp83$i$i = ($154|0)==($add$ptr16$i$i|0);
             if (!($cmp83$i$i)) {
              _abort();
              // unreachable;
             }
             $fd85$i$i = ((($152)) + 8|0);
             $155 = HEAP32[$fd85$i$i>>2]|0;
             $cmp86$i$i = ($155|0)==($add$ptr16$i$i|0);
             if ($cmp86$i$i) {
              HEAP32[$bk82$i$i>>2] = $152;
              HEAP32[$fd85$i$i>>2] = $153;
              $R$3$i$i = $152;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $cmp120$i42$i = ($151|0)==(0|0);
           if ($cmp120$i42$i) {
            break;
           }
           $index$i43$i = ((($add$ptr16$i$i)) + 28|0);
           $160 = HEAP32[$index$i43$i>>2]|0;
           $arrayidx123$i$i = (8548 + ($160<<2)|0);
           $161 = HEAP32[$arrayidx123$i$i>>2]|0;
           $cmp124$i$i = ($add$ptr16$i$i|0)==($161|0);
           do {
            if ($cmp124$i$i) {
             HEAP32[$arrayidx123$i$i>>2] = $R$3$i$i;
             $cond2$i$i = ($R$3$i$i|0)==(0|0);
             if (!($cond2$i$i)) {
              break;
             }
             $shl131$i$i = 1 << $160;
             $neg132$i$i = $shl131$i$i ^ -1;
             $162 = HEAP32[(8248)>>2]|0;
             $and133$i$i = $162 & $neg132$i$i;
             HEAP32[(8248)>>2] = $and133$i$i;
             break L314;
            } else {
             $163 = HEAP32[(8260)>>2]|0;
             $cmp137$i$i = ($151>>>0)<($163>>>0);
             if ($cmp137$i$i) {
              _abort();
              // unreachable;
             } else {
              $arrayidx143$i$i = ((($151)) + 16|0);
              $164 = HEAP32[$arrayidx143$i$i>>2]|0;
              $not$cmp144$i$i = ($164|0)!=($add$ptr16$i$i|0);
              $$sink$i$i = $not$cmp144$i$i&1;
              $arrayidx151$i$i = (((($151)) + 16|0) + ($$sink$i$i<<2)|0);
              HEAP32[$arrayidx151$i$i>>2] = $R$3$i$i;
              $cmp156$i$i = ($R$3$i$i|0)==(0|0);
              if ($cmp156$i$i) {
               break L314;
              } else {
               break;
              }
             }
            }
           } while(0);
           $165 = HEAP32[(8260)>>2]|0;
           $cmp160$i$i = ($R$3$i$i>>>0)<($165>>>0);
           if ($cmp160$i$i) {
            _abort();
            // unreachable;
           }
           $parent165$i$i = ((($R$3$i$i)) + 24|0);
           HEAP32[$parent165$i$i>>2] = $151;
           $child166$i$i = ((($add$ptr16$i$i)) + 16|0);
           $166 = HEAP32[$child166$i$i>>2]|0;
           $cmp168$i$i = ($166|0)==(0|0);
           do {
            if (!($cmp168$i$i)) {
             $cmp172$i$i = ($166>>>0)<($165>>>0);
             if ($cmp172$i$i) {
              _abort();
              // unreachable;
             } else {
              $arrayidx178$i$i = ((($R$3$i$i)) + 16|0);
              HEAP32[$arrayidx178$i$i>>2] = $166;
              $parent179$i$i = ((($166)) + 24|0);
              HEAP32[$parent179$i$i>>2] = $R$3$i$i;
              break;
             }
            }
           } while(0);
           $arrayidx184$i$i = ((($child166$i$i)) + 4|0);
           $167 = HEAP32[$arrayidx184$i$i>>2]|0;
           $cmp185$i$i = ($167|0)==(0|0);
           if ($cmp185$i$i) {
            break;
           }
           $168 = HEAP32[(8260)>>2]|0;
           $cmp189$i$i = ($167>>>0)<($168>>>0);
           if ($cmp189$i$i) {
            _abort();
            // unreachable;
           } else {
            $arrayidx195$i$i = ((($R$3$i$i)) + 20|0);
            HEAP32[$arrayidx195$i$i>>2] = $167;
            $parent196$i$i = ((($167)) + 24|0);
            HEAP32[$parent196$i$i>>2] = $R$3$i$i;
            break;
           }
          }
         } while(0);
         $add$ptr205$i$i = (($add$ptr16$i$i) + ($and37$i$i)|0);
         $add206$i$i = (($and37$i$i) + ($sub18$i$i))|0;
         $oldfirst$0$i$i = $add$ptr205$i$i;$qsize$0$i$i = $add206$i$i;
        } else {
         $oldfirst$0$i$i = $add$ptr16$i$i;$qsize$0$i$i = $sub18$i$i;
        }
        $head208$i$i = ((($oldfirst$0$i$i)) + 4|0);
        $169 = HEAP32[$head208$i$i>>2]|0;
        $and209$i$i = $169 & -2;
        HEAP32[$head208$i$i>>2] = $and209$i$i;
        $or210$i$i = $qsize$0$i$i | 1;
        $head211$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head211$i$i>>2] = $or210$i$i;
        $add$ptr212$i$i = (($add$ptr17$i$i) + ($qsize$0$i$i)|0);
        HEAP32[$add$ptr212$i$i>>2] = $qsize$0$i$i;
        $shr214$i$i = $qsize$0$i$i >>> 3;
        $cmp215$i$i = ($qsize$0$i$i>>>0)<(256);
        if ($cmp215$i$i) {
         $shl222$i$i = $shr214$i$i << 1;
         $arrayidx223$i$i = (8284 + ($shl222$i$i<<2)|0);
         $170 = HEAP32[2061]|0;
         $shl226$i$i = 1 << $shr214$i$i;
         $and227$i$i = $170 & $shl226$i$i;
         $tobool228$i$i = ($and227$i$i|0)==(0);
         do {
          if ($tobool228$i$i) {
           $or232$i$i = $170 | $shl226$i$i;
           HEAP32[2061] = $or232$i$i;
           $$pre$i45$i = ((($arrayidx223$i$i)) + 8|0);
           $$pre$phi$i46$iZ2D = $$pre$i45$i;$F224$0$i$i = $arrayidx223$i$i;
          } else {
           $171 = ((($arrayidx223$i$i)) + 8|0);
           $172 = HEAP32[$171>>2]|0;
           $173 = HEAP32[(8260)>>2]|0;
           $cmp236$i$i = ($172>>>0)<($173>>>0);
           if (!($cmp236$i$i)) {
            $$pre$phi$i46$iZ2D = $171;$F224$0$i$i = $172;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i46$iZ2D>>2] = $add$ptr17$i$i;
         $bk246$i$i = ((($F224$0$i$i)) + 12|0);
         HEAP32[$bk246$i$i>>2] = $add$ptr17$i$i;
         $fd247$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd247$i$i>>2] = $F224$0$i$i;
         $bk248$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk248$i$i>>2] = $arrayidx223$i$i;
         break;
        }
        $shr253$i$i = $qsize$0$i$i >>> 8;
        $cmp254$i$i = ($shr253$i$i|0)==(0);
        do {
         if ($cmp254$i$i) {
          $I252$0$i$i = 0;
         } else {
          $cmp258$i$i = ($qsize$0$i$i>>>0)>(16777215);
          if ($cmp258$i$i) {
           $I252$0$i$i = 31;
           break;
          }
          $sub262$i$i = (($shr253$i$i) + 1048320)|0;
          $shr263$i$i = $sub262$i$i >>> 16;
          $and264$i$i = $shr263$i$i & 8;
          $shl265$i$i = $shr253$i$i << $and264$i$i;
          $sub266$i$i = (($shl265$i$i) + 520192)|0;
          $shr267$i$i = $sub266$i$i >>> 16;
          $and268$i$i = $shr267$i$i & 4;
          $add269$i$i = $and268$i$i | $and264$i$i;
          $shl270$i$i = $shl265$i$i << $and268$i$i;
          $sub271$i$i = (($shl270$i$i) + 245760)|0;
          $shr272$i$i = $sub271$i$i >>> 16;
          $and273$i$i = $shr272$i$i & 2;
          $add274$i$i = $add269$i$i | $and273$i$i;
          $sub275$i$i = (14 - ($add274$i$i))|0;
          $shl276$i$i = $shl270$i$i << $and273$i$i;
          $shr277$i$i = $shl276$i$i >>> 15;
          $add278$i$i = (($sub275$i$i) + ($shr277$i$i))|0;
          $shl279$i$i = $add278$i$i << 1;
          $add280$i$i = (($add278$i$i) + 7)|0;
          $shr281$i$i = $qsize$0$i$i >>> $add280$i$i;
          $and282$i$i = $shr281$i$i & 1;
          $add283$i$i = $and282$i$i | $shl279$i$i;
          $I252$0$i$i = $add283$i$i;
         }
        } while(0);
        $arrayidx287$i$i = (8548 + ($I252$0$i$i<<2)|0);
        $index288$i$i = ((($add$ptr17$i$i)) + 28|0);
        HEAP32[$index288$i$i>>2] = $I252$0$i$i;
        $child289$i$i = ((($add$ptr17$i$i)) + 16|0);
        $arrayidx290$i$i = ((($child289$i$i)) + 4|0);
        HEAP32[$arrayidx290$i$i>>2] = 0;
        HEAP32[$child289$i$i>>2] = 0;
        $174 = HEAP32[(8248)>>2]|0;
        $shl294$i$i = 1 << $I252$0$i$i;
        $and295$i$i = $174 & $shl294$i$i;
        $tobool296$i$i = ($and295$i$i|0)==(0);
        if ($tobool296$i$i) {
         $or300$i$i = $174 | $shl294$i$i;
         HEAP32[(8248)>>2] = $or300$i$i;
         HEAP32[$arrayidx287$i$i>>2] = $add$ptr17$i$i;
         $parent301$i$i = ((($add$ptr17$i$i)) + 24|0);
         HEAP32[$parent301$i$i>>2] = $arrayidx287$i$i;
         $bk302$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk302$i$i>>2] = $add$ptr17$i$i;
         $fd303$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd303$i$i>>2] = $add$ptr17$i$i;
         break;
        }
        $175 = HEAP32[$arrayidx287$i$i>>2]|0;
        $cmp306$i$i = ($I252$0$i$i|0)==(31);
        $shr310$i$i = $I252$0$i$i >>> 1;
        $sub313$i$i = (25 - ($shr310$i$i))|0;
        $cond315$i$i = $cmp306$i$i ? 0 : $sub313$i$i;
        $shl316$i$i = $qsize$0$i$i << $cond315$i$i;
        $K305$0$i$i = $shl316$i$i;$T$0$i47$i = $175;
        while(1) {
         $head317$i$i = ((($T$0$i47$i)) + 4|0);
         $176 = HEAP32[$head317$i$i>>2]|0;
         $and318$i$i = $176 & -8;
         $cmp319$i$i = ($and318$i$i|0)==($qsize$0$i$i|0);
         if ($cmp319$i$i) {
          label = 265;
          break;
         }
         $shr323$i$i = $K305$0$i$i >>> 31;
         $arrayidx325$i$i = (((($T$0$i47$i)) + 16|0) + ($shr323$i$i<<2)|0);
         $shl326$i$i = $K305$0$i$i << 1;
         $177 = HEAP32[$arrayidx325$i$i>>2]|0;
         $cmp327$i$i = ($177|0)==(0|0);
         if ($cmp327$i$i) {
          label = 262;
          break;
         } else {
          $K305$0$i$i = $shl326$i$i;$T$0$i47$i = $177;
         }
        }
        if ((label|0) == 262) {
         $178 = HEAP32[(8260)>>2]|0;
         $cmp332$i$i = ($arrayidx325$i$i>>>0)<($178>>>0);
         if ($cmp332$i$i) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$arrayidx325$i$i>>2] = $add$ptr17$i$i;
          $parent337$i$i = ((($add$ptr17$i$i)) + 24|0);
          HEAP32[$parent337$i$i>>2] = $T$0$i47$i;
          $bk338$i$i = ((($add$ptr17$i$i)) + 12|0);
          HEAP32[$bk338$i$i>>2] = $add$ptr17$i$i;
          $fd339$i$i = ((($add$ptr17$i$i)) + 8|0);
          HEAP32[$fd339$i$i>>2] = $add$ptr17$i$i;
          break;
         }
        }
        else if ((label|0) == 265) {
         $fd344$i$i = ((($T$0$i47$i)) + 8|0);
         $179 = HEAP32[$fd344$i$i>>2]|0;
         $180 = HEAP32[(8260)>>2]|0;
         $cmp350$i$i = ($179>>>0)>=($180>>>0);
         $not$cmp346$i$i = ($T$0$i47$i>>>0)>=($180>>>0);
         $181 = $cmp350$i$i & $not$cmp346$i$i;
         if ($181) {
          $bk357$i$i = ((($179)) + 12|0);
          HEAP32[$bk357$i$i>>2] = $add$ptr17$i$i;
          HEAP32[$fd344$i$i>>2] = $add$ptr17$i$i;
          $fd359$i$i = ((($add$ptr17$i$i)) + 8|0);
          HEAP32[$fd359$i$i>>2] = $179;
          $bk360$i$i = ((($add$ptr17$i$i)) + 12|0);
          HEAP32[$bk360$i$i>>2] = $T$0$i47$i;
          $parent361$i$i = ((($add$ptr17$i$i)) + 24|0);
          HEAP32[$parent361$i$i>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $add$ptr369$i$i = ((($add$ptr4$i26$i)) + 8|0);
      $retval$0 = $add$ptr369$i$i;
      STACKTOP = sp;return ($retval$0|0);
     }
    }
    $sp$0$i$i$i = (8692);
    while(1) {
     $182 = HEAP32[$sp$0$i$i$i>>2]|0;
     $cmp$i$i$i = ($182>>>0)>($116>>>0);
     if (!($cmp$i$i$i)) {
      $size$i$i$i = ((($sp$0$i$i$i)) + 4|0);
      $183 = HEAP32[$size$i$i$i>>2]|0;
      $add$ptr$i$i$i = (($182) + ($183)|0);
      $cmp2$i$i$i = ($add$ptr$i$i$i>>>0)>($116>>>0);
      if ($cmp2$i$i$i) {
       break;
      }
     }
     $next$i$i$i = ((($sp$0$i$i$i)) + 8|0);
     $184 = HEAP32[$next$i$i$i>>2]|0;
     $sp$0$i$i$i = $184;
    }
    $add$ptr2$i$i = ((($add$ptr$i$i$i)) + -47|0);
    $add$ptr3$i$i = ((($add$ptr2$i$i)) + 8|0);
    $185 = $add$ptr3$i$i;
    $and$i$i = $185 & 7;
    $cmp$i9$i = ($and$i$i|0)==(0);
    $186 = (0 - ($185))|0;
    $and6$i10$i = $186 & 7;
    $cond$i$i = $cmp$i9$i ? 0 : $and6$i10$i;
    $add$ptr7$i$i = (($add$ptr2$i$i) + ($cond$i$i)|0);
    $add$ptr81$i$i = ((($116)) + 16|0);
    $cmp9$i$i = ($add$ptr7$i$i>>>0)<($add$ptr81$i$i>>>0);
    $cond13$i$i = $cmp9$i$i ? $116 : $add$ptr7$i$i;
    $add$ptr14$i$i = ((($cond13$i$i)) + 8|0);
    $add$ptr15$i$i = ((($cond13$i$i)) + 24|0);
    $sub16$i$i = (($tsize$795$i) + -40)|0;
    $add$ptr$i2$i$i = ((($tbase$796$i)) + 8|0);
    $187 = $add$ptr$i2$i$i;
    $and$i$i$i = $187 & 7;
    $cmp$i3$i$i = ($and$i$i$i|0)==(0);
    $188 = (0 - ($187))|0;
    $and3$i$i$i = $188 & 7;
    $cond$i$i$i = $cmp$i3$i$i ? 0 : $and3$i$i$i;
    $add$ptr4$i$i$i = (($tbase$796$i) + ($cond$i$i$i)|0);
    $sub5$i$i$i = (($sub16$i$i) - ($cond$i$i$i))|0;
    HEAP32[(8268)>>2] = $add$ptr4$i$i$i;
    HEAP32[(8256)>>2] = $sub5$i$i$i;
    $or$i$i$i = $sub5$i$i$i | 1;
    $head$i$i$i = ((($add$ptr4$i$i$i)) + 4|0);
    HEAP32[$head$i$i$i>>2] = $or$i$i$i;
    $add$ptr6$i$i$i = (($add$ptr4$i$i$i) + ($sub5$i$i$i)|0);
    $head7$i$i$i = ((($add$ptr6$i$i$i)) + 4|0);
    HEAP32[$head7$i$i$i>>2] = 40;
    $189 = HEAP32[(8732)>>2]|0;
    HEAP32[(8272)>>2] = $189;
    $head$i$i = ((($cond13$i$i)) + 4|0);
    HEAP32[$head$i$i>>2] = 27;
    ;HEAP32[$add$ptr14$i$i>>2]=HEAP32[(8692)>>2]|0;HEAP32[$add$ptr14$i$i+4>>2]=HEAP32[(8692)+4>>2]|0;HEAP32[$add$ptr14$i$i+8>>2]=HEAP32[(8692)+8>>2]|0;HEAP32[$add$ptr14$i$i+12>>2]=HEAP32[(8692)+12>>2]|0;
    HEAP32[(8692)>>2] = $tbase$796$i;
    HEAP32[(8696)>>2] = $tsize$795$i;
    HEAP32[(8704)>>2] = 0;
    HEAP32[(8700)>>2] = $add$ptr14$i$i;
    $190 = $add$ptr15$i$i;
    while(1) {
     $add$ptr24$i$i = ((($190)) + 4|0);
     HEAP32[$add$ptr24$i$i>>2] = 7;
     $head26$i$i = ((($190)) + 8|0);
     $cmp27$i$i = ($head26$i$i>>>0)<($add$ptr$i$i$i>>>0);
     if ($cmp27$i$i) {
      $190 = $add$ptr24$i$i;
     } else {
      break;
     }
    }
    $cmp28$i$i = ($cond13$i$i|0)==($116|0);
    if (!($cmp28$i$i)) {
     $sub$ptr$lhs$cast$i$i = $cond13$i$i;
     $sub$ptr$rhs$cast$i$i = $116;
     $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
     $191 = HEAP32[$head$i$i>>2]|0;
     $and32$i$i = $191 & -2;
     HEAP32[$head$i$i>>2] = $and32$i$i;
     $or33$i$i = $sub$ptr$sub$i$i | 1;
     $head34$i$i = ((($116)) + 4|0);
     HEAP32[$head34$i$i>>2] = $or33$i$i;
     HEAP32[$cond13$i$i>>2] = $sub$ptr$sub$i$i;
     $shr$i$i = $sub$ptr$sub$i$i >>> 3;
     $cmp36$i$i = ($sub$ptr$sub$i$i>>>0)<(256);
     if ($cmp36$i$i) {
      $shl$i$i = $shr$i$i << 1;
      $arrayidx$i$i = (8284 + ($shl$i$i<<2)|0);
      $192 = HEAP32[2061]|0;
      $shl39$i$i = 1 << $shr$i$i;
      $and40$i$i = $192 & $shl39$i$i;
      $tobool$i$i = ($and40$i$i|0)==(0);
      if ($tobool$i$i) {
       $or44$i$i = $192 | $shl39$i$i;
       HEAP32[2061] = $or44$i$i;
       $$pre$i$i = ((($arrayidx$i$i)) + 8|0);
       $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $arrayidx$i$i;
      } else {
       $193 = ((($arrayidx$i$i)) + 8|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = HEAP32[(8260)>>2]|0;
       $cmp46$i$i = ($194>>>0)<($195>>>0);
       if ($cmp46$i$i) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $193;$F$0$i$i = $194;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $116;
      $bk$i$i = ((($F$0$i$i)) + 12|0);
      HEAP32[$bk$i$i>>2] = $116;
      $fd54$i$i = ((($116)) + 8|0);
      HEAP32[$fd54$i$i>>2] = $F$0$i$i;
      $bk55$i$i = ((($116)) + 12|0);
      HEAP32[$bk55$i$i>>2] = $arrayidx$i$i;
      break;
     }
     $shr58$i$i = $sub$ptr$sub$i$i >>> 8;
     $cmp59$i$i = ($shr58$i$i|0)==(0);
     if ($cmp59$i$i) {
      $I57$0$i$i = 0;
     } else {
      $cmp63$i$i = ($sub$ptr$sub$i$i>>>0)>(16777215);
      if ($cmp63$i$i) {
       $I57$0$i$i = 31;
      } else {
       $sub67$i$i = (($shr58$i$i) + 1048320)|0;
       $shr68$i$i = $sub67$i$i >>> 16;
       $and69$i$i = $shr68$i$i & 8;
       $shl70$i$i = $shr58$i$i << $and69$i$i;
       $sub71$i$i = (($shl70$i$i) + 520192)|0;
       $shr72$i$i = $sub71$i$i >>> 16;
       $and73$i$i = $shr72$i$i & 4;
       $add74$i$i = $and73$i$i | $and69$i$i;
       $shl75$i$i = $shl70$i$i << $and73$i$i;
       $sub76$i$i = (($shl75$i$i) + 245760)|0;
       $shr77$i$i = $sub76$i$i >>> 16;
       $and78$i$i = $shr77$i$i & 2;
       $add79$i$i = $add74$i$i | $and78$i$i;
       $sub80$i$i = (14 - ($add79$i$i))|0;
       $shl81$i$i = $shl75$i$i << $and78$i$i;
       $shr82$i$i = $shl81$i$i >>> 15;
       $add83$i$i = (($sub80$i$i) + ($shr82$i$i))|0;
       $shl84$i$i = $add83$i$i << 1;
       $add85$i$i = (($add83$i$i) + 7)|0;
       $shr86$i$i = $sub$ptr$sub$i$i >>> $add85$i$i;
       $and87$i$i = $shr86$i$i & 1;
       $add88$i$i = $and87$i$i | $shl84$i$i;
       $I57$0$i$i = $add88$i$i;
      }
     }
     $arrayidx91$i$i = (8548 + ($I57$0$i$i<<2)|0);
     $index$i$i = ((($116)) + 28|0);
     HEAP32[$index$i$i>>2] = $I57$0$i$i;
     $arrayidx92$i$i = ((($116)) + 20|0);
     HEAP32[$arrayidx92$i$i>>2] = 0;
     HEAP32[$add$ptr81$i$i>>2] = 0;
     $196 = HEAP32[(8248)>>2]|0;
     $shl95$i$i = 1 << $I57$0$i$i;
     $and96$i$i = $196 & $shl95$i$i;
     $tobool97$i$i = ($and96$i$i|0)==(0);
     if ($tobool97$i$i) {
      $or101$i$i = $196 | $shl95$i$i;
      HEAP32[(8248)>>2] = $or101$i$i;
      HEAP32[$arrayidx91$i$i>>2] = $116;
      $parent$i$i = ((($116)) + 24|0);
      HEAP32[$parent$i$i>>2] = $arrayidx91$i$i;
      $bk102$i$i = ((($116)) + 12|0);
      HEAP32[$bk102$i$i>>2] = $116;
      $fd103$i$i = ((($116)) + 8|0);
      HEAP32[$fd103$i$i>>2] = $116;
      break;
     }
     $197 = HEAP32[$arrayidx91$i$i>>2]|0;
     $cmp106$i$i = ($I57$0$i$i|0)==(31);
     $shr110$i$i = $I57$0$i$i >>> 1;
     $sub113$i$i = (25 - ($shr110$i$i))|0;
     $cond115$i$i = $cmp106$i$i ? 0 : $sub113$i$i;
     $shl116$i$i = $sub$ptr$sub$i$i << $cond115$i$i;
     $K105$0$i$i = $shl116$i$i;$T$0$i$i = $197;
     while(1) {
      $head118$i$i = ((($T$0$i$i)) + 4|0);
      $198 = HEAP32[$head118$i$i>>2]|0;
      $and119$i$i = $198 & -8;
      $cmp120$i$i = ($and119$i$i|0)==($sub$ptr$sub$i$i|0);
      if ($cmp120$i$i) {
       label = 292;
       break;
      }
      $shr124$i$i = $K105$0$i$i >>> 31;
      $arrayidx126$i$i = (((($T$0$i$i)) + 16|0) + ($shr124$i$i<<2)|0);
      $shl127$i$i = $K105$0$i$i << 1;
      $199 = HEAP32[$arrayidx126$i$i>>2]|0;
      $cmp128$i$i = ($199|0)==(0|0);
      if ($cmp128$i$i) {
       label = 289;
       break;
      } else {
       $K105$0$i$i = $shl127$i$i;$T$0$i$i = $199;
      }
     }
     if ((label|0) == 289) {
      $200 = HEAP32[(8260)>>2]|0;
      $cmp133$i$i = ($arrayidx126$i$i>>>0)<($200>>>0);
      if ($cmp133$i$i) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$arrayidx126$i$i>>2] = $116;
       $parent138$i$i = ((($116)) + 24|0);
       HEAP32[$parent138$i$i>>2] = $T$0$i$i;
       $bk139$i$i = ((($116)) + 12|0);
       HEAP32[$bk139$i$i>>2] = $116;
       $fd140$i$i = ((($116)) + 8|0);
       HEAP32[$fd140$i$i>>2] = $116;
       break;
      }
     }
     else if ((label|0) == 292) {
      $fd148$i$i = ((($T$0$i$i)) + 8|0);
      $201 = HEAP32[$fd148$i$i>>2]|0;
      $202 = HEAP32[(8260)>>2]|0;
      $cmp153$i$i = ($201>>>0)>=($202>>>0);
      $not$cmp150$i$i = ($T$0$i$i>>>0)>=($202>>>0);
      $203 = $cmp153$i$i & $not$cmp150$i$i;
      if ($203) {
       $bk158$i$i = ((($201)) + 12|0);
       HEAP32[$bk158$i$i>>2] = $116;
       HEAP32[$fd148$i$i>>2] = $116;
       $fd160$i$i = ((($116)) + 8|0);
       HEAP32[$fd160$i$i>>2] = $201;
       $bk161$i$i = ((($116)) + 12|0);
       HEAP32[$bk161$i$i>>2] = $T$0$i$i;
       $parent162$i$i = ((($116)) + 24|0);
       HEAP32[$parent162$i$i>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $204 = HEAP32[(8256)>>2]|0;
  $cmp257$i = ($204>>>0)>($nb$0>>>0);
  if ($cmp257$i) {
   $sub260$i = (($204) - ($nb$0))|0;
   HEAP32[(8256)>>2] = $sub260$i;
   $205 = HEAP32[(8268)>>2]|0;
   $add$ptr262$i = (($205) + ($nb$0)|0);
   HEAP32[(8268)>>2] = $add$ptr262$i;
   $or264$i = $sub260$i | 1;
   $head265$i = ((($add$ptr262$i)) + 4|0);
   HEAP32[$head265$i>>2] = $or264$i;
   $or267$i = $nb$0 | 3;
   $head268$i = ((($205)) + 4|0);
   HEAP32[$head268$i>>2] = $or267$i;
   $add$ptr269$i = ((($205)) + 8|0);
   $retval$0 = $add$ptr269$i;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $call275$i = (___errno_location()|0);
 HEAP32[$call275$i>>2] = 12;
 $retval$0 = 0;
 STACKTOP = sp;return ($retval$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre308 = 0, $$pre309 = 0, $$sink = 0, $$sink4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0;
 var $9 = 0, $F510$0 = 0, $I534$0 = 0, $K583$0 = 0, $R$1 = 0, $R$3 = 0, $R332$1 = 0, $R332$3 = 0, $RP$1 = 0, $RP360$1 = 0, $T$0 = 0, $add$ptr = 0, $add$ptr16 = 0, $add$ptr217 = 0, $add$ptr261 = 0, $add$ptr482 = 0, $add$ptr498 = 0, $add$ptr6 = 0, $add17 = 0, $add246 = 0;
 var $add258 = 0, $add267 = 0, $add550 = 0, $add555 = 0, $add559 = 0, $add561 = 0, $add564 = 0, $and = 0, $and140 = 0, $and210 = 0, $and215 = 0, $and232 = 0, $and240 = 0, $and266 = 0, $and301 = 0, $and410 = 0, $and46 = 0, $and495 = 0, $and5 = 0, $and512 = 0;
 var $and545 = 0, $and549 = 0, $and554 = 0, $and563 = 0, $and574 = 0, $and592 = 0, $and8 = 0, $arrayidx = 0, $arrayidx108 = 0, $arrayidx113 = 0, $arrayidx130 = 0, $arrayidx149 = 0, $arrayidx157 = 0, $arrayidx182 = 0, $arrayidx188 = 0, $arrayidx198 = 0, $arrayidx279 = 0, $arrayidx362 = 0, $arrayidx374 = 0, $arrayidx379 = 0;
 var $arrayidx400 = 0, $arrayidx419 = 0, $arrayidx427 = 0, $arrayidx454 = 0, $arrayidx460 = 0, $arrayidx470 = 0, $arrayidx509 = 0, $arrayidx567 = 0, $arrayidx570 = 0, $arrayidx599 = 0, $arrayidx99 = 0, $bk = 0, $bk275 = 0, $bk286 = 0, $bk321 = 0, $bk333 = 0, $bk34 = 0, $bk343 = 0, $bk529 = 0, $bk531 = 0;
 var $bk580 = 0, $bk611 = 0, $bk631 = 0, $bk634 = 0, $bk66 = 0, $bk73 = 0, $bk82 = 0, $child = 0, $child171 = 0, $child361 = 0, $child443 = 0, $child569 = 0, $cmp = 0, $cmp$i = 0, $cmp1 = 0, $cmp100 = 0, $cmp104 = 0, $cmp109 = 0, $cmp114 = 0, $cmp118 = 0;
 var $cmp127 = 0, $cmp13 = 0, $cmp131 = 0, $cmp143 = 0, $cmp162 = 0, $cmp165 = 0, $cmp173 = 0, $cmp176 = 0, $cmp18 = 0, $cmp189 = 0, $cmp192 = 0, $cmp2 = 0, $cmp211 = 0, $cmp22 = 0, $cmp228 = 0, $cmp243 = 0, $cmp249 = 0, $cmp25 = 0, $cmp255 = 0, $cmp269 = 0;
 var $cmp280 = 0, $cmp283 = 0, $cmp287 = 0, $cmp29 = 0, $cmp296 = 0, $cmp305 = 0, $cmp308 = 0, $cmp31 = 0, $cmp312 = 0, $cmp334 = 0, $cmp340 = 0, $cmp344 = 0, $cmp348 = 0, $cmp35 = 0, $cmp363 = 0, $cmp368 = 0, $cmp375 = 0, $cmp380 = 0, $cmp386 = 0, $cmp395 = 0;
 var $cmp401 = 0, $cmp413 = 0, $cmp42 = 0, $cmp432 = 0, $cmp435 = 0, $cmp445 = 0, $cmp448 = 0, $cmp461 = 0, $cmp464 = 0, $cmp484 = 0, $cmp50 = 0, $cmp502 = 0, $cmp519 = 0, $cmp53 = 0, $cmp536 = 0, $cmp540 = 0, $cmp57 = 0, $cmp584 = 0, $cmp593 = 0, $cmp601 = 0;
 var $cmp605 = 0, $cmp624 = 0, $cmp640 = 0, $cmp74 = 0, $cmp80 = 0, $cmp83 = 0, $cmp87 = 0, $cond = 0, $cond292 = 0, $cond293 = 0, $dec = 0, $fd = 0, $fd273 = 0, $fd311 = 0, $fd322$pre$phiZ2D = 0, $fd338 = 0, $fd347 = 0, $fd530 = 0, $fd56 = 0, $fd581 = 0;
 var $fd612 = 0, $fd620 = 0, $fd633 = 0, $fd67$pre$phiZ2D = 0, $fd78 = 0, $fd86 = 0, $head = 0, $head209 = 0, $head216 = 0, $head231 = 0, $head248 = 0, $head260 = 0, $head481 = 0, $head497 = 0, $head591 = 0, $idx$neg = 0, $index = 0, $index399 = 0, $index568 = 0, $neg = 0;
 var $neg139 = 0, $neg300 = 0, $neg409 = 0, $next4$i = 0, $not$cmp150 = 0, $not$cmp420 = 0, $not$cmp621 = 0, $or = 0, $or247 = 0, $or259 = 0, $or480 = 0, $or496 = 0, $or516 = 0, $or578 = 0, $p$1 = 0, $parent = 0, $parent170 = 0, $parent183 = 0, $parent199 = 0, $parent331 = 0;
 var $parent442 = 0, $parent455 = 0, $parent471 = 0, $parent579 = 0, $parent610 = 0, $parent635 = 0, $psize$1 = 0, $psize$2 = 0, $shl = 0, $shl138 = 0, $shl278 = 0, $shl299 = 0, $shl408 = 0, $shl45 = 0, $shl508 = 0, $shl511 = 0, $shl546 = 0, $shl551 = 0, $shl557 = 0, $shl560 = 0;
 var $shl573 = 0, $shl590 = 0, $shl600 = 0, $shr = 0, $shr268 = 0, $shr501 = 0, $shr535 = 0, $shr544 = 0, $shr548 = 0, $shr553 = 0, $shr558 = 0, $shr562 = 0, $shr586 = 0, $shr597 = 0, $sp$0$i = 0, $sp$0$in$i = 0, $sub = 0, $sub547 = 0, $sub552 = 0, $sub556 = 0;
 var $sub589 = 0, $tobool233 = 0, $tobool241 = 0, $tobool513 = 0, $tobool575 = 0, $tobool9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($mem|0)==(0|0);
 if ($cmp) {
  return;
 }
 $add$ptr = ((($mem)) + -8|0);
 $0 = HEAP32[(8260)>>2]|0;
 $cmp1 = ($add$ptr>>>0)<($0>>>0);
 if ($cmp1) {
  _abort();
  // unreachable;
 }
 $head = ((($mem)) + -4|0);
 $1 = HEAP32[$head>>2]|0;
 $and = $1 & 3;
 $cmp2 = ($and|0)==(1);
 if ($cmp2) {
  _abort();
  // unreachable;
 }
 $and5 = $1 & -8;
 $add$ptr6 = (($add$ptr) + ($and5)|0);
 $and8 = $1 & 1;
 $tobool9 = ($and8|0)==(0);
 L10: do {
  if ($tobool9) {
   $2 = HEAP32[$add$ptr>>2]|0;
   $cmp13 = ($and|0)==(0);
   if ($cmp13) {
    return;
   }
   $idx$neg = (0 - ($2))|0;
   $add$ptr16 = (($add$ptr) + ($idx$neg)|0);
   $add17 = (($2) + ($and5))|0;
   $cmp18 = ($add$ptr16>>>0)<($0>>>0);
   if ($cmp18) {
    _abort();
    // unreachable;
   }
   $3 = HEAP32[(8264)>>2]|0;
   $cmp22 = ($add$ptr16|0)==($3|0);
   if ($cmp22) {
    $head209 = ((($add$ptr6)) + 4|0);
    $27 = HEAP32[$head209>>2]|0;
    $and210 = $27 & 3;
    $cmp211 = ($and210|0)==(3);
    if (!($cmp211)) {
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
    $add$ptr217 = (($add$ptr16) + ($add17)|0);
    $head216 = ((($add$ptr16)) + 4|0);
    $or = $add17 | 1;
    $and215 = $27 & -2;
    HEAP32[(8252)>>2] = $add17;
    HEAP32[$head209>>2] = $and215;
    HEAP32[$head216>>2] = $or;
    HEAP32[$add$ptr217>>2] = $add17;
    return;
   }
   $shr = $2 >>> 3;
   $cmp25 = ($2>>>0)<(256);
   if ($cmp25) {
    $fd = ((($add$ptr16)) + 8|0);
    $4 = HEAP32[$fd>>2]|0;
    $bk = ((($add$ptr16)) + 12|0);
    $5 = HEAP32[$bk>>2]|0;
    $shl = $shr << 1;
    $arrayidx = (8284 + ($shl<<2)|0);
    $cmp29 = ($4|0)==($arrayidx|0);
    if (!($cmp29)) {
     $cmp31 = ($4>>>0)<($0>>>0);
     if ($cmp31) {
      _abort();
      // unreachable;
     }
     $bk34 = ((($4)) + 12|0);
     $6 = HEAP32[$bk34>>2]|0;
     $cmp35 = ($6|0)==($add$ptr16|0);
     if (!($cmp35)) {
      _abort();
      // unreachable;
     }
    }
    $cmp42 = ($5|0)==($4|0);
    if ($cmp42) {
     $shl45 = 1 << $shr;
     $neg = $shl45 ^ -1;
     $7 = HEAP32[2061]|0;
     $and46 = $7 & $neg;
     HEAP32[2061] = $and46;
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
    $cmp50 = ($5|0)==($arrayidx|0);
    if ($cmp50) {
     $$pre309 = ((($5)) + 8|0);
     $fd67$pre$phiZ2D = $$pre309;
    } else {
     $cmp53 = ($5>>>0)<($0>>>0);
     if ($cmp53) {
      _abort();
      // unreachable;
     }
     $fd56 = ((($5)) + 8|0);
     $8 = HEAP32[$fd56>>2]|0;
     $cmp57 = ($8|0)==($add$ptr16|0);
     if ($cmp57) {
      $fd67$pre$phiZ2D = $fd56;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk66 = ((($4)) + 12|0);
    HEAP32[$bk66>>2] = $5;
    HEAP32[$fd67$pre$phiZ2D>>2] = $4;
    $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    break;
   }
   $parent = ((($add$ptr16)) + 24|0);
   $9 = HEAP32[$parent>>2]|0;
   $bk73 = ((($add$ptr16)) + 12|0);
   $10 = HEAP32[$bk73>>2]|0;
   $cmp74 = ($10|0)==($add$ptr16|0);
   do {
    if ($cmp74) {
     $child = ((($add$ptr16)) + 16|0);
     $arrayidx99 = ((($child)) + 4|0);
     $14 = HEAP32[$arrayidx99>>2]|0;
     $cmp100 = ($14|0)==(0|0);
     if ($cmp100) {
      $15 = HEAP32[$child>>2]|0;
      $cmp104 = ($15|0)==(0|0);
      if ($cmp104) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $15;$RP$1 = $child;
      }
     } else {
      $R$1 = $14;$RP$1 = $arrayidx99;
     }
     while(1) {
      $arrayidx108 = ((($R$1)) + 20|0);
      $16 = HEAP32[$arrayidx108>>2]|0;
      $cmp109 = ($16|0)==(0|0);
      if (!($cmp109)) {
       $R$1 = $16;$RP$1 = $arrayidx108;
       continue;
      }
      $arrayidx113 = ((($R$1)) + 16|0);
      $17 = HEAP32[$arrayidx113>>2]|0;
      $cmp114 = ($17|0)==(0|0);
      if ($cmp114) {
       break;
      } else {
       $R$1 = $17;$RP$1 = $arrayidx113;
      }
     }
     $cmp118 = ($RP$1>>>0)<($0>>>0);
     if ($cmp118) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1>>2] = 0;
      $R$3 = $R$1;
      break;
     }
    } else {
     $fd78 = ((($add$ptr16)) + 8|0);
     $11 = HEAP32[$fd78>>2]|0;
     $cmp80 = ($11>>>0)<($0>>>0);
     if ($cmp80) {
      _abort();
      // unreachable;
     }
     $bk82 = ((($11)) + 12|0);
     $12 = HEAP32[$bk82>>2]|0;
     $cmp83 = ($12|0)==($add$ptr16|0);
     if (!($cmp83)) {
      _abort();
      // unreachable;
     }
     $fd86 = ((($10)) + 8|0);
     $13 = HEAP32[$fd86>>2]|0;
     $cmp87 = ($13|0)==($add$ptr16|0);
     if ($cmp87) {
      HEAP32[$bk82>>2] = $10;
      HEAP32[$fd86>>2] = $11;
      $R$3 = $10;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $cmp127 = ($9|0)==(0|0);
   if ($cmp127) {
    $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
   } else {
    $index = ((($add$ptr16)) + 28|0);
    $18 = HEAP32[$index>>2]|0;
    $arrayidx130 = (8548 + ($18<<2)|0);
    $19 = HEAP32[$arrayidx130>>2]|0;
    $cmp131 = ($add$ptr16|0)==($19|0);
    do {
     if ($cmp131) {
      HEAP32[$arrayidx130>>2] = $R$3;
      $cond292 = ($R$3|0)==(0|0);
      if ($cond292) {
       $shl138 = 1 << $18;
       $neg139 = $shl138 ^ -1;
       $20 = HEAP32[(8248)>>2]|0;
       $and140 = $20 & $neg139;
       HEAP32[(8248)>>2] = $and140;
       $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
       break L10;
      }
     } else {
      $21 = HEAP32[(8260)>>2]|0;
      $cmp143 = ($9>>>0)<($21>>>0);
      if ($cmp143) {
       _abort();
       // unreachable;
      } else {
       $arrayidx149 = ((($9)) + 16|0);
       $22 = HEAP32[$arrayidx149>>2]|0;
       $not$cmp150 = ($22|0)!=($add$ptr16|0);
       $$sink = $not$cmp150&1;
       $arrayidx157 = (((($9)) + 16|0) + ($$sink<<2)|0);
       HEAP32[$arrayidx157>>2] = $R$3;
       $cmp162 = ($R$3|0)==(0|0);
       if ($cmp162) {
        $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
        break L10;
       } else {
        break;
       }
      }
     }
    } while(0);
    $23 = HEAP32[(8260)>>2]|0;
    $cmp165 = ($R$3>>>0)<($23>>>0);
    if ($cmp165) {
     _abort();
     // unreachable;
    }
    $parent170 = ((($R$3)) + 24|0);
    HEAP32[$parent170>>2] = $9;
    $child171 = ((($add$ptr16)) + 16|0);
    $24 = HEAP32[$child171>>2]|0;
    $cmp173 = ($24|0)==(0|0);
    do {
     if (!($cmp173)) {
      $cmp176 = ($24>>>0)<($23>>>0);
      if ($cmp176) {
       _abort();
       // unreachable;
      } else {
       $arrayidx182 = ((($R$3)) + 16|0);
       HEAP32[$arrayidx182>>2] = $24;
       $parent183 = ((($24)) + 24|0);
       HEAP32[$parent183>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $arrayidx188 = ((($child171)) + 4|0);
    $25 = HEAP32[$arrayidx188>>2]|0;
    $cmp189 = ($25|0)==(0|0);
    if ($cmp189) {
     $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    } else {
     $26 = HEAP32[(8260)>>2]|0;
     $cmp192 = ($25>>>0)<($26>>>0);
     if ($cmp192) {
      _abort();
      // unreachable;
     } else {
      $arrayidx198 = ((($R$3)) + 20|0);
      HEAP32[$arrayidx198>>2] = $25;
      $parent199 = ((($25)) + 24|0);
      HEAP32[$parent199>>2] = $R$3;
      $28 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
      break;
     }
    }
   }
  } else {
   $28 = $add$ptr;$p$1 = $add$ptr;$psize$1 = $and5;
  }
 } while(0);
 $cmp228 = ($28>>>0)<($add$ptr6>>>0);
 if (!($cmp228)) {
  _abort();
  // unreachable;
 }
 $head231 = ((($add$ptr6)) + 4|0);
 $29 = HEAP32[$head231>>2]|0;
 $and232 = $29 & 1;
 $tobool233 = ($and232|0)==(0);
 if ($tobool233) {
  _abort();
  // unreachable;
 }
 $and240 = $29 & 2;
 $tobool241 = ($and240|0)==(0);
 if ($tobool241) {
  $30 = HEAP32[(8268)>>2]|0;
  $cmp243 = ($add$ptr6|0)==($30|0);
  $31 = HEAP32[(8264)>>2]|0;
  if ($cmp243) {
   $32 = HEAP32[(8256)>>2]|0;
   $add246 = (($32) + ($psize$1))|0;
   HEAP32[(8256)>>2] = $add246;
   HEAP32[(8268)>>2] = $p$1;
   $or247 = $add246 | 1;
   $head248 = ((($p$1)) + 4|0);
   HEAP32[$head248>>2] = $or247;
   $cmp249 = ($p$1|0)==($31|0);
   if (!($cmp249)) {
    return;
   }
   HEAP32[(8264)>>2] = 0;
   HEAP32[(8252)>>2] = 0;
   return;
  }
  $cmp255 = ($add$ptr6|0)==($31|0);
  if ($cmp255) {
   $33 = HEAP32[(8252)>>2]|0;
   $add258 = (($33) + ($psize$1))|0;
   HEAP32[(8252)>>2] = $add258;
   HEAP32[(8264)>>2] = $28;
   $or259 = $add258 | 1;
   $head260 = ((($p$1)) + 4|0);
   HEAP32[$head260>>2] = $or259;
   $add$ptr261 = (($28) + ($add258)|0);
   HEAP32[$add$ptr261>>2] = $add258;
   return;
  }
  $and266 = $29 & -8;
  $add267 = (($and266) + ($psize$1))|0;
  $shr268 = $29 >>> 3;
  $cmp269 = ($29>>>0)<(256);
  L108: do {
   if ($cmp269) {
    $fd273 = ((($add$ptr6)) + 8|0);
    $34 = HEAP32[$fd273>>2]|0;
    $bk275 = ((($add$ptr6)) + 12|0);
    $35 = HEAP32[$bk275>>2]|0;
    $shl278 = $shr268 << 1;
    $arrayidx279 = (8284 + ($shl278<<2)|0);
    $cmp280 = ($34|0)==($arrayidx279|0);
    if (!($cmp280)) {
     $36 = HEAP32[(8260)>>2]|0;
     $cmp283 = ($34>>>0)<($36>>>0);
     if ($cmp283) {
      _abort();
      // unreachable;
     }
     $bk286 = ((($34)) + 12|0);
     $37 = HEAP32[$bk286>>2]|0;
     $cmp287 = ($37|0)==($add$ptr6|0);
     if (!($cmp287)) {
      _abort();
      // unreachable;
     }
    }
    $cmp296 = ($35|0)==($34|0);
    if ($cmp296) {
     $shl299 = 1 << $shr268;
     $neg300 = $shl299 ^ -1;
     $38 = HEAP32[2061]|0;
     $and301 = $38 & $neg300;
     HEAP32[2061] = $and301;
     break;
    }
    $cmp305 = ($35|0)==($arrayidx279|0);
    if ($cmp305) {
     $$pre308 = ((($35)) + 8|0);
     $fd322$pre$phiZ2D = $$pre308;
    } else {
     $39 = HEAP32[(8260)>>2]|0;
     $cmp308 = ($35>>>0)<($39>>>0);
     if ($cmp308) {
      _abort();
      // unreachable;
     }
     $fd311 = ((($35)) + 8|0);
     $40 = HEAP32[$fd311>>2]|0;
     $cmp312 = ($40|0)==($add$ptr6|0);
     if ($cmp312) {
      $fd322$pre$phiZ2D = $fd311;
     } else {
      _abort();
      // unreachable;
     }
    }
    $bk321 = ((($34)) + 12|0);
    HEAP32[$bk321>>2] = $35;
    HEAP32[$fd322$pre$phiZ2D>>2] = $34;
   } else {
    $parent331 = ((($add$ptr6)) + 24|0);
    $41 = HEAP32[$parent331>>2]|0;
    $bk333 = ((($add$ptr6)) + 12|0);
    $42 = HEAP32[$bk333>>2]|0;
    $cmp334 = ($42|0)==($add$ptr6|0);
    do {
     if ($cmp334) {
      $child361 = ((($add$ptr6)) + 16|0);
      $arrayidx362 = ((($child361)) + 4|0);
      $47 = HEAP32[$arrayidx362>>2]|0;
      $cmp363 = ($47|0)==(0|0);
      if ($cmp363) {
       $48 = HEAP32[$child361>>2]|0;
       $cmp368 = ($48|0)==(0|0);
       if ($cmp368) {
        $R332$3 = 0;
        break;
       } else {
        $R332$1 = $48;$RP360$1 = $child361;
       }
      } else {
       $R332$1 = $47;$RP360$1 = $arrayidx362;
      }
      while(1) {
       $arrayidx374 = ((($R332$1)) + 20|0);
       $49 = HEAP32[$arrayidx374>>2]|0;
       $cmp375 = ($49|0)==(0|0);
       if (!($cmp375)) {
        $R332$1 = $49;$RP360$1 = $arrayidx374;
        continue;
       }
       $arrayidx379 = ((($R332$1)) + 16|0);
       $50 = HEAP32[$arrayidx379>>2]|0;
       $cmp380 = ($50|0)==(0|0);
       if ($cmp380) {
        break;
       } else {
        $R332$1 = $50;$RP360$1 = $arrayidx379;
       }
      }
      $51 = HEAP32[(8260)>>2]|0;
      $cmp386 = ($RP360$1>>>0)<($51>>>0);
      if ($cmp386) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP360$1>>2] = 0;
       $R332$3 = $R332$1;
       break;
      }
     } else {
      $fd338 = ((($add$ptr6)) + 8|0);
      $43 = HEAP32[$fd338>>2]|0;
      $44 = HEAP32[(8260)>>2]|0;
      $cmp340 = ($43>>>0)<($44>>>0);
      if ($cmp340) {
       _abort();
       // unreachable;
      }
      $bk343 = ((($43)) + 12|0);
      $45 = HEAP32[$bk343>>2]|0;
      $cmp344 = ($45|0)==($add$ptr6|0);
      if (!($cmp344)) {
       _abort();
       // unreachable;
      }
      $fd347 = ((($42)) + 8|0);
      $46 = HEAP32[$fd347>>2]|0;
      $cmp348 = ($46|0)==($add$ptr6|0);
      if ($cmp348) {
       HEAP32[$bk343>>2] = $42;
       HEAP32[$fd347>>2] = $43;
       $R332$3 = $42;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $cmp395 = ($41|0)==(0|0);
    if (!($cmp395)) {
     $index399 = ((($add$ptr6)) + 28|0);
     $52 = HEAP32[$index399>>2]|0;
     $arrayidx400 = (8548 + ($52<<2)|0);
     $53 = HEAP32[$arrayidx400>>2]|0;
     $cmp401 = ($add$ptr6|0)==($53|0);
     do {
      if ($cmp401) {
       HEAP32[$arrayidx400>>2] = $R332$3;
       $cond293 = ($R332$3|0)==(0|0);
       if ($cond293) {
        $shl408 = 1 << $52;
        $neg409 = $shl408 ^ -1;
        $54 = HEAP32[(8248)>>2]|0;
        $and410 = $54 & $neg409;
        HEAP32[(8248)>>2] = $and410;
        break L108;
       }
      } else {
       $55 = HEAP32[(8260)>>2]|0;
       $cmp413 = ($41>>>0)<($55>>>0);
       if ($cmp413) {
        _abort();
        // unreachable;
       } else {
        $arrayidx419 = ((($41)) + 16|0);
        $56 = HEAP32[$arrayidx419>>2]|0;
        $not$cmp420 = ($56|0)!=($add$ptr6|0);
        $$sink4 = $not$cmp420&1;
        $arrayidx427 = (((($41)) + 16|0) + ($$sink4<<2)|0);
        HEAP32[$arrayidx427>>2] = $R332$3;
        $cmp432 = ($R332$3|0)==(0|0);
        if ($cmp432) {
         break L108;
        } else {
         break;
        }
       }
      }
     } while(0);
     $57 = HEAP32[(8260)>>2]|0;
     $cmp435 = ($R332$3>>>0)<($57>>>0);
     if ($cmp435) {
      _abort();
      // unreachable;
     }
     $parent442 = ((($R332$3)) + 24|0);
     HEAP32[$parent442>>2] = $41;
     $child443 = ((($add$ptr6)) + 16|0);
     $58 = HEAP32[$child443>>2]|0;
     $cmp445 = ($58|0)==(0|0);
     do {
      if (!($cmp445)) {
       $cmp448 = ($58>>>0)<($57>>>0);
       if ($cmp448) {
        _abort();
        // unreachable;
       } else {
        $arrayidx454 = ((($R332$3)) + 16|0);
        HEAP32[$arrayidx454>>2] = $58;
        $parent455 = ((($58)) + 24|0);
        HEAP32[$parent455>>2] = $R332$3;
        break;
       }
      }
     } while(0);
     $arrayidx460 = ((($child443)) + 4|0);
     $59 = HEAP32[$arrayidx460>>2]|0;
     $cmp461 = ($59|0)==(0|0);
     if (!($cmp461)) {
      $60 = HEAP32[(8260)>>2]|0;
      $cmp464 = ($59>>>0)<($60>>>0);
      if ($cmp464) {
       _abort();
       // unreachable;
      } else {
       $arrayidx470 = ((($R332$3)) + 20|0);
       HEAP32[$arrayidx470>>2] = $59;
       $parent471 = ((($59)) + 24|0);
       HEAP32[$parent471>>2] = $R332$3;
       break;
      }
     }
    }
   }
  } while(0);
  $or480 = $add267 | 1;
  $head481 = ((($p$1)) + 4|0);
  HEAP32[$head481>>2] = $or480;
  $add$ptr482 = (($28) + ($add267)|0);
  HEAP32[$add$ptr482>>2] = $add267;
  $61 = HEAP32[(8264)>>2]|0;
  $cmp484 = ($p$1|0)==($61|0);
  if ($cmp484) {
   HEAP32[(8252)>>2] = $add267;
   return;
  } else {
   $psize$2 = $add267;
  }
 } else {
  $and495 = $29 & -2;
  HEAP32[$head231>>2] = $and495;
  $or496 = $psize$1 | 1;
  $head497 = ((($p$1)) + 4|0);
  HEAP32[$head497>>2] = $or496;
  $add$ptr498 = (($28) + ($psize$1)|0);
  HEAP32[$add$ptr498>>2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $shr501 = $psize$2 >>> 3;
 $cmp502 = ($psize$2>>>0)<(256);
 if ($cmp502) {
  $shl508 = $shr501 << 1;
  $arrayidx509 = (8284 + ($shl508<<2)|0);
  $62 = HEAP32[2061]|0;
  $shl511 = 1 << $shr501;
  $and512 = $62 & $shl511;
  $tobool513 = ($and512|0)==(0);
  if ($tobool513) {
   $or516 = $62 | $shl511;
   HEAP32[2061] = $or516;
   $$pre = ((($arrayidx509)) + 8|0);
   $$pre$phiZ2D = $$pre;$F510$0 = $arrayidx509;
  } else {
   $63 = ((($arrayidx509)) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = HEAP32[(8260)>>2]|0;
   $cmp519 = ($64>>>0)<($65>>>0);
   if ($cmp519) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $63;$F510$0 = $64;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$1;
  $bk529 = ((($F510$0)) + 12|0);
  HEAP32[$bk529>>2] = $p$1;
  $fd530 = ((($p$1)) + 8|0);
  HEAP32[$fd530>>2] = $F510$0;
  $bk531 = ((($p$1)) + 12|0);
  HEAP32[$bk531>>2] = $arrayidx509;
  return;
 }
 $shr535 = $psize$2 >>> 8;
 $cmp536 = ($shr535|0)==(0);
 if ($cmp536) {
  $I534$0 = 0;
 } else {
  $cmp540 = ($psize$2>>>0)>(16777215);
  if ($cmp540) {
   $I534$0 = 31;
  } else {
   $sub = (($shr535) + 1048320)|0;
   $shr544 = $sub >>> 16;
   $and545 = $shr544 & 8;
   $shl546 = $shr535 << $and545;
   $sub547 = (($shl546) + 520192)|0;
   $shr548 = $sub547 >>> 16;
   $and549 = $shr548 & 4;
   $add550 = $and549 | $and545;
   $shl551 = $shl546 << $and549;
   $sub552 = (($shl551) + 245760)|0;
   $shr553 = $sub552 >>> 16;
   $and554 = $shr553 & 2;
   $add555 = $add550 | $and554;
   $sub556 = (14 - ($add555))|0;
   $shl557 = $shl551 << $and554;
   $shr558 = $shl557 >>> 15;
   $add559 = (($sub556) + ($shr558))|0;
   $shl560 = $add559 << 1;
   $add561 = (($add559) + 7)|0;
   $shr562 = $psize$2 >>> $add561;
   $and563 = $shr562 & 1;
   $add564 = $and563 | $shl560;
   $I534$0 = $add564;
  }
 }
 $arrayidx567 = (8548 + ($I534$0<<2)|0);
 $index568 = ((($p$1)) + 28|0);
 HEAP32[$index568>>2] = $I534$0;
 $child569 = ((($p$1)) + 16|0);
 $arrayidx570 = ((($p$1)) + 20|0);
 HEAP32[$arrayidx570>>2] = 0;
 HEAP32[$child569>>2] = 0;
 $66 = HEAP32[(8248)>>2]|0;
 $shl573 = 1 << $I534$0;
 $and574 = $66 & $shl573;
 $tobool575 = ($and574|0)==(0);
 do {
  if ($tobool575) {
   $or578 = $66 | $shl573;
   HEAP32[(8248)>>2] = $or578;
   HEAP32[$arrayidx567>>2] = $p$1;
   $parent579 = ((($p$1)) + 24|0);
   HEAP32[$parent579>>2] = $arrayidx567;
   $bk580 = ((($p$1)) + 12|0);
   HEAP32[$bk580>>2] = $p$1;
   $fd581 = ((($p$1)) + 8|0);
   HEAP32[$fd581>>2] = $p$1;
  } else {
   $67 = HEAP32[$arrayidx567>>2]|0;
   $cmp584 = ($I534$0|0)==(31);
   $shr586 = $I534$0 >>> 1;
   $sub589 = (25 - ($shr586))|0;
   $cond = $cmp584 ? 0 : $sub589;
   $shl590 = $psize$2 << $cond;
   $K583$0 = $shl590;$T$0 = $67;
   while(1) {
    $head591 = ((($T$0)) + 4|0);
    $68 = HEAP32[$head591>>2]|0;
    $and592 = $68 & -8;
    $cmp593 = ($and592|0)==($psize$2|0);
    if ($cmp593) {
     label = 124;
     break;
    }
    $shr597 = $K583$0 >>> 31;
    $arrayidx599 = (((($T$0)) + 16|0) + ($shr597<<2)|0);
    $shl600 = $K583$0 << 1;
    $69 = HEAP32[$arrayidx599>>2]|0;
    $cmp601 = ($69|0)==(0|0);
    if ($cmp601) {
     label = 121;
     break;
    } else {
     $K583$0 = $shl600;$T$0 = $69;
    }
   }
   if ((label|0) == 121) {
    $70 = HEAP32[(8260)>>2]|0;
    $cmp605 = ($arrayidx599>>>0)<($70>>>0);
    if ($cmp605) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$arrayidx599>>2] = $p$1;
     $parent610 = ((($p$1)) + 24|0);
     HEAP32[$parent610>>2] = $T$0;
     $bk611 = ((($p$1)) + 12|0);
     HEAP32[$bk611>>2] = $p$1;
     $fd612 = ((($p$1)) + 8|0);
     HEAP32[$fd612>>2] = $p$1;
     break;
    }
   }
   else if ((label|0) == 124) {
    $fd620 = ((($T$0)) + 8|0);
    $71 = HEAP32[$fd620>>2]|0;
    $72 = HEAP32[(8260)>>2]|0;
    $cmp624 = ($71>>>0)>=($72>>>0);
    $not$cmp621 = ($T$0>>>0)>=($72>>>0);
    $73 = $cmp624 & $not$cmp621;
    if ($73) {
     $bk631 = ((($71)) + 12|0);
     HEAP32[$bk631>>2] = $p$1;
     HEAP32[$fd620>>2] = $p$1;
     $fd633 = ((($p$1)) + 8|0);
     HEAP32[$fd633>>2] = $71;
     $bk634 = ((($p$1)) + 12|0);
     HEAP32[$bk634>>2] = $T$0;
     $parent635 = ((($p$1)) + 24|0);
     HEAP32[$parent635>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $74 = HEAP32[(8276)>>2]|0;
 $dec = (($74) + -1)|0;
 HEAP32[(8276)>>2] = $dec;
 $cmp640 = ($dec|0)==(0);
 if ($cmp640) {
  $sp$0$in$i = (8700);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $cmp$i = ($sp$0$i|0)==(0|0);
  $next4$i = ((($sp$0$i)) + 8|0);
  if ($cmp$i) {
   break;
  } else {
   $sp$0$in$i = $next4$i;
  }
 }
 HEAP32[(8276)>>2] = -1;
 return;
}
function __ZNSt3__211char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__c2>>0]|0;
 HEAP8[$__c1>>0] = $0;
 return;
}
function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $exception = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $exception = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(222,($exception|0),(7361|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___cxa_free_exception(($exception|0));
  ___resumeException($2|0);
  // unreachable;
 } else {
  HEAP32[$exception>>2] = (2032);
  ___cxa_throw(($exception|0),(680|0),(85|0));
  // unreachable;
 }
}
function __Znwj($size) {
 $size = $size|0;
 var $$size = 0, $call = 0, $call2 = 0, $cmp = 0, $cmp1 = 0, $exception = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($size|0)==(0);
 $$size = $cmp ? 1 : $size;
 while(1) {
  $call = (_malloc($$size)|0);
  $cmp1 = ($call|0)==(0|0);
  if (!($cmp1)) {
   label = 6;
   break;
  }
  $call2 = (__ZSt15get_new_handlerv()|0);
  $tobool = ($call2|0)==(0|0);
  if ($tobool) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$call2 & 255]();
 }
 if ((label|0) == 5) {
  $exception = (___cxa_allocate_exception(4)|0);
  __ZNSt9bad_allocC2Ev($exception);
  ___cxa_throw(($exception|0),(648|0),(80|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($call|0);
 }
 return (0)|0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZNSt3__218__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $add2 = 0, $add6 = 0, $call = 0, $call3 = 0, $call5 = 0, $cap = 0, $count = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_strlen($msg)|0);
 $add2 = (($call) + 13)|0;
 $call3 = (__Znwj($add2)|0);
 HEAP32[$call3>>2] = $call;
 $cap = ((($call3)) + 4|0);
 HEAP32[$cap>>2] = $call;
 $count = ((($call3)) + 8|0);
 HEAP32[$count>>2] = 0;
 $call5 = (__ZNSt3__218__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE($call3)|0);
 $add6 = (($call) + 1)|0;
 _memcpy(($call5|0),($msg|0),($add6|0))|0;
 HEAP32[$this>>2] = $call5;
 return;
}
function __ZNSt3__218__libcpp_refstring13data_from_repEPNS0_9_Rep_baseE($rep) {
 $rep = $rep|0;
 var $add$ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $add$ptr2 = ((($rep)) + 12|0);
 return ($add$ptr2|0);
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__imp_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2012);
 $__imp_ = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(223,($__imp_|0),($msg|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___resumeException($2|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $exception = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $exception = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(222,($exception|0),(7368|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___cxa_free_exception(($exception|0));
  ___resumeException($2|0);
  // unreachable;
 } else {
  HEAP32[$exception>>2] = (2032);
  ___cxa_throw(($exception|0),(680|0),(85|0));
  // unreachable;
 }
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $exception = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $exception = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(222,($exception|0),(7368|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $2 = ___cxa_find_matching_catch_2()|0;
  $3 = tempRet0;
  ___cxa_free_exception(($exception|0));
  ___resumeException($2|0);
  // unreachable;
 } else {
  HEAP32[$exception>>2] = (2052);
  ___cxa_throw(($exception|0),(696|0),(85|0));
  // unreachable;
 }
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $__cap_$i = 0, $__p$0 = 0, $__size_$i = 0, $__size_$i12 = 0, $add$i$i = 0, $and$i$i = 0, $arrayidx = 0, $call$i$i$i = 0, $cmp = 0, $cmp2 = 0, $conv$i = 0, $or$i = 0, $ref$tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $ref$tmp = sp;
 $cmp = ($__sz>>>0)>(4294967279);
 if ($cmp) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($this);
  label = 5;
 } else {
  $cmp2 = ($__sz>>>0)<(11);
  if ($cmp2) {
   $conv$i = $__sz&255;
   $__size_$i = ((($this)) + 11|0);
   HEAP8[$__size_$i>>0] = $conv$i;
   $__p$0 = $this;
  } else {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $add$i$i = (($__sz) + 16)|0;
  $and$i$i = $add$i$i & -16;
  $call$i$i$i = (__Znwj($and$i$i)|0);
  HEAP32[$this>>2] = $call$i$i$i;
  $or$i = $and$i$i | -2147483648;
  $__cap_$i = ((($this)) + 8|0);
  HEAP32[$__cap_$i>>2] = $or$i;
  $__size_$i12 = ((($this)) + 4|0);
  HEAP32[$__size_$i12>>2] = $__sz;
  $__p$0 = $call$i$i$i;
 }
 (__ZNSt3__211char_traitsIcE4copyEPcPKcj($__p$0,$__s,$__sz)|0);
 $arrayidx = (($__p$0) + ($__sz)|0);
 HEAP8[$ref$tmp>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($arrayidx,$ref$tmp);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE4copyEPcPKcj($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($__n|0)==(0);
 if (!($cmp)) {
  _memcpy(($__s1|0),($__s2|0),($__n|0))|0;
 }
 return ($__s1|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__size_$i = 0, $tobool$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i>>0]|0;
 $tobool$i = ($0<<24>>24)<(0);
 if ($tobool$i) {
  $1 = HEAP32[$this>>2]|0;
  __ZdlPv($1);
 }
 return;
}
function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this,$__pos1,$__n1,$__s,$__n2) {
 $this = $this|0;
 $__pos1 = $__pos1|0;
 $__n1 = $__n1|0;
 $__s = $__s|0;
 $__n2 = $__n2|0;
 var $$$call6 = 0, $$call6 = 0, $$pre = 0, $$sroa$speculated = 0, $$sroa$speculated15 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $__size_$i$i = 0, $__size_$i3$i = 0, $add$ptr = 0, $call6 = 0, $cmp = 0, $cmp$i$i$i = 0, $cmp$i$i$i7 = 0, $cmp2 = 0, $cmp7 = 0, $cmp9 = 0, $cond$i = 0;
 var $cond$i$i = 0, $conv$i$i = 0, $or$cond = 0, $sub = 0, $tobool$i$i = 0, $tobool$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__size_$i$i = ((($this)) + 11|0);
 $0 = HEAP8[$__size_$i$i>>0]|0;
 $tobool$i$i = ($0<<24>>24)<(0);
 if ($tobool$i$i) {
  $__size_$i3$i = ((($this)) + 4|0);
  $1 = HEAP32[$__size_$i3$i>>2]|0;
  $cond$i = $1;
 } else {
  $conv$i$i = $0&255;
  $cond$i = $conv$i$i;
 }
 $cmp = ($cond$i>>>0)<($__pos1>>>0);
 $cmp2 = ($__n2|0)==(-1);
 $or$cond = $cmp2 | $cmp;
 if ($or$cond) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  $$pre = HEAP8[$__size_$i$i>>0]|0;
  $2 = $$pre;
 } else {
  $2 = $0;
 }
 $sub = (($cond$i) - ($__pos1))|0;
 $cmp$i$i$i = ($sub>>>0)<($__n1>>>0);
 $$sroa$speculated = $cmp$i$i$i ? $sub : $__n1;
 $tobool$i$i$i = ($2<<24>>24)<(0);
 if ($tobool$i$i$i) {
  $3 = HEAP32[$this>>2]|0;
  $cond$i$i = $3;
 } else {
  $cond$i$i = $this;
 }
 $add$ptr = (($cond$i$i) + ($__pos1)|0);
 $cmp$i$i$i7 = ($$sroa$speculated>>>0)>($__n2>>>0);
 $$sroa$speculated15 = $cmp$i$i$i7 ? $__n2 : $$sroa$speculated;
 $call6 = (__ZNSt3__211char_traitsIcE7compareEPKcS3_j($add$ptr,$__s,$$sroa$speculated15)|0);
 $cmp7 = ($call6|0)==(0);
 if ($cmp7) {
  $cmp9 = ($$sroa$speculated>>>0)<($__n2>>>0);
  $$call6 = $cmp$i$i$i7&1;
  $$$call6 = $cmp9 ? -1 : $$call6;
  return ($$$call6|0);
 } else {
  return ($call6|0);
 }
 return (0)|0;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__type_name$i = 0, $add$ptr = 0, $call = 0, $call10 = 0, $call14 = 0, $cond = 0, $exception_class = 0, $primaryException = 0, $thrown_object = 0, $tobool = 0, $tobool1 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vfn = 0, $vfn13 = 0, $vtable = 0, $vtable12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $call = (___cxa_get_globals_fast()|0);
 $tobool = ($call|0)==(0|0);
 if (!($tobool)) {
  $0 = HEAP32[$call>>2]|0;
  $tobool1 = ($0|0)==(0|0);
  if (!($tobool1)) {
   $add$ptr = ((($0)) + 80|0);
   $exception_class = ((($0)) + 48|0);
   $1 = $exception_class;
   $2 = $1;
   $3 = HEAP32[$2>>2]|0;
   $4 = (($1) + 4)|0;
   $5 = $4;
   $6 = HEAP32[$5>>2]|0;
   $7 = $3 & -256;
   $8 = ($7|0)==(1126902528);
   $9 = ($6|0)==(1129074247);
   $10 = $8 & $9;
   if (!($10)) {
    $21 = HEAP32[470]|0;
    HEAP32[$vararg_buffer7>>2] = $21;
    _abort_message(7467,$vararg_buffer7);
    // unreachable;
   }
   $11 = ($3|0)==(1126902529);
   $12 = ($6|0)==(1129074247);
   $13 = $11 & $12;
   if ($13) {
    $primaryException = ((($0)) + 44|0);
    $14 = HEAP32[$primaryException>>2]|0;
    $cond = $14;
   } else {
    $cond = $add$ptr;
   }
   HEAP32[$thrown_object>>2] = $cond;
   $15 = HEAP32[$0>>2]|0;
   $__type_name$i = ((($15)) + 4|0);
   $16 = HEAP32[$__type_name$i>>2]|0;
   $vtable = HEAP32[146]|0;
   $vfn = ((($vtable)) + 16|0);
   $17 = HEAP32[$vfn>>2]|0;
   $call10 = (FUNCTION_TABLE_iiii[$17 & 255](584,$15,$thrown_object)|0);
   $18 = HEAP32[470]|0;
   if ($call10) {
    $19 = HEAP32[$thrown_object>>2]|0;
    $vtable12 = HEAP32[$19>>2]|0;
    $vfn13 = ((($vtable12)) + 8|0);
    $20 = HEAP32[$vfn13>>2]|0;
    $call14 = (FUNCTION_TABLE_ii[$20 & 255]($19)|0);
    HEAP32[$vararg_buffer>>2] = $18;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $16;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $call14;
    _abort_message(7381,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = $18;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $16;
    _abort_message(7426,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(7505,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $call = 0, $call1 = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $call = (_pthread_once((8740|0),(224|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  $0 = HEAP32[2186]|0;
  $call1 = (_pthread_getspecific(($0|0))|0);
  STACKTOP = sp;return ($call1|0);
 } else {
  _abort_message(7656,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[344]|0;
 (_vfprintf($0,$format,$list)|0);
 (_fputc(10,$0)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $call = 0, $cmp = 0, $cmp4 = 0, $dst_ptr_leading_to_static_ptr = 0, $info = 0, $number_of_dst_type = 0, $path_dst_ptr_to_static_ptr = 0, $retval$0 = 0, $retval$2 = 0, $src2dst_offset = 0, $static_type = 0, $vfn = 0, $vtable = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $info = sp;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$thrown_type,0)|0);
 if ($call) {
  $retval$2 = 1;
 } else {
  $0 = ($thrown_type|0)==(0|0);
  if ($0) {
   $retval$2 = 0;
  } else {
   $1 = (___dynamic_cast($thrown_type,608,592,0)|0);
   $cmp = ($1|0)==(0|0);
   if ($cmp) {
    $retval$2 = 0;
   } else {
    $2 = ((($info)) + 4|0);
    dest=$2; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $1;
    $static_type = ((($info)) + 8|0);
    HEAP32[$static_type>>2] = $this;
    $src2dst_offset = ((($info)) + 12|0);
    HEAP32[$src2dst_offset>>2] = -1;
    $number_of_dst_type = ((($info)) + 48|0);
    HEAP32[$number_of_dst_type>>2] = 1;
    $vtable = HEAP32[$1>>2]|0;
    $vfn = ((($vtable)) + 28|0);
    $3 = HEAP32[$vfn>>2]|0;
    $4 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$3 & 255]($1,$info,$4,1);
    $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
    $5 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
    $cmp4 = ($5|0)==(1);
    if ($cmp4) {
     $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
     $6 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
     HEAP32[$adjustedPtr>>2] = $6;
     $retval$0 = 1;
    } else {
     $retval$0 = 0;
    }
    $retval$2 = $retval$0;
   }
  }
 }
 STACKTOP = sp;return ($retval$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $call = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $add = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp12 = 0, $cmp13 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0;
 var $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   if ($call3) {
    $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
    $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
    $cmp = ($2|0)==($current_ptr|0);
    $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
    if (!($cmp)) {
     $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
     $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
     $cmp5 = ($3|0)==($current_ptr|0);
     if (!($cmp5)) {
      HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
      HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
      $number_to_dst_ptr = ((($info)) + 40|0);
      $4 = HEAP32[$number_to_dst_ptr>>2]|0;
      $add = (($4) + 1)|0;
      HEAP32[$number_to_dst_ptr>>2] = $add;
      $number_to_static_ptr = ((($info)) + 36|0);
      $5 = HEAP32[$number_to_static_ptr>>2]|0;
      $cmp12 = ($5|0)==(1);
      if ($cmp12) {
       $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
       $6 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
       $cmp13 = ($6|0)==(2);
       if ($cmp13) {
        $search_done = ((($info)) + 54|0);
        HEAP8[$search_done>>0] = 1;
       }
      }
      $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
      HEAP32[$is_dst_type_derived_from_static_type>>2] = 4;
      break;
     }
    }
    $cmp7 = ($path_below|0)==(1);
    if ($cmp7) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $call = 0, $static_type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($x,$y,$0) {
 $x = $x|0;
 $y = $y|0;
 $0 = $0|0;
 var $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($x|0)==($y|0);
 return ($cmp|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $add = 0, $cmp = 0, $cmp4 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $number_to_static_ptr = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
 $0 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
 $cmp = ($0|0)==(0|0);
 $number_to_static_ptr = ((($info)) + 36|0);
 $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
 do {
  if ($cmp) {
   HEAP32[$dst_ptr_leading_to_static_ptr>>2] = $adjustedPtr;
   HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
   HEAP32[$number_to_static_ptr>>2] = 1;
  } else {
   $cmp4 = ($0|0)==($adjustedPtr|0);
   if (!($cmp4)) {
    $2 = HEAP32[$number_to_static_ptr>>2]|0;
    $add = (($2) + 1)|0;
    HEAP32[$number_to_static_ptr>>2] = $add;
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = 2;
    $search_done = ((($info)) + 54|0);
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $1 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp7 = ($1|0)==(2);
   if ($cmp7) {
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($this,$info,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $cmp = 0, $cmp2 = 0, $path_dynamic_ptr_to_static_ptr = 0, $static_ptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_ptr = ((($info)) + 4|0);
 $0 = HEAP32[$static_ptr>>2]|0;
 $cmp = ($0|0)==($current_ptr|0);
 if ($cmp) {
  $path_dynamic_ptr_to_static_ptr = ((($info)) + 28|0);
  $1 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
  $cmp2 = ($1|0)==(1);
  if (!($cmp2)) {
   HEAP32[$path_dynamic_ptr_to_static_ptr>>2] = $path_below;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $add = 0, $cmp = 0, $cmp10 = 0, $cmp13 = 0, $cmp18 = 0, $cmp2 = 0, $cmp21 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $number_of_dst_type = 0;
 var $number_to_static_ptr = 0, $or$cond = 0, $or$cond19 = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, $static_ptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $found_any_static_type = ((($info)) + 53|0);
 HEAP8[$found_any_static_type>>0] = 1;
 $static_ptr = ((($info)) + 4|0);
 $0 = HEAP32[$static_ptr>>2]|0;
 $cmp = ($0|0)==($current_ptr|0);
 do {
  if ($cmp) {
   $found_our_static_ptr = ((($info)) + 52|0);
   HEAP8[$found_our_static_ptr>>0] = 1;
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $1 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp2 = ($1|0)==(0|0);
   $search_done = ((($info)) + 54|0);
   $number_of_dst_type = ((($info)) + 48|0);
   $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
   $number_to_static_ptr = ((($info)) + 36|0);
   if ($cmp2) {
    HEAP32[$dst_ptr_leading_to_static_ptr>>2] = $dst_ptr;
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
    HEAP32[$number_to_static_ptr>>2] = 1;
    $2 = HEAP32[$number_of_dst_type>>2]|0;
    $cmp5 = ($2|0)==(1);
    $cmp7 = ($path_below|0)==(1);
    $or$cond = $cmp5 & $cmp7;
    if (!($or$cond)) {
     break;
    }
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $cmp10 = ($1|0)==($dst_ptr|0);
   if (!($cmp10)) {
    $6 = HEAP32[$number_to_static_ptr>>2]|0;
    $add = (($6) + 1)|0;
    HEAP32[$number_to_static_ptr>>2] = $add;
    HEAP8[$search_done>>0] = 1;
    break;
   }
   $3 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp13 = ($3|0)==(2);
   if ($cmp13) {
    HEAP32[$path_dst_ptr_to_static_ptr>>2] = $path_below;
    $5 = $path_below;
   } else {
    $5 = $3;
   }
   $4 = HEAP32[$number_of_dst_type>>2]|0;
   $cmp18 = ($4|0)==(1);
   $cmp21 = ($5|0)==(1);
   $or$cond19 = $cmp18 & $cmp21;
   if ($or$cond19) {
    HEAP8[$search_done>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add$ptr = 0, $add$ptr$ = 0, $arrayidx = 0;
 var $arrayidx1 = 0, $call = 0, $cmp = 0, $cmp14 = 0, $cmp16 = 0, $cmp19 = 0, $cmp25 = 0, $cmp27 = 0, $cmp30 = 0, $cmp33 = 0, $dst_ptr$0 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $info = 0, $number_of_dst_type = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $or$cond = 0, $or$cond15 = 0, $or$cond16 = 0;
 var $or$cond17 = 0, $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $path_dynamic_ptr_to_static_ptr = 0, $src2dst_offset5 = 0, $static_ptr3 = 0, $static_type4 = 0, $vfn = 0, $vfn11 = 0, $vtable10 = 0, $vtable7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $arrayidx = ((($0)) + -8|0);
 $1 = HEAP32[$arrayidx>>2]|0;
 $add$ptr = (($static_ptr) + ($1)|0);
 $arrayidx1 = ((($0)) + -4|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $static_ptr3 = ((($info)) + 4|0);
 HEAP32[$static_ptr3>>2] = $static_ptr;
 $static_type4 = ((($info)) + 8|0);
 HEAP32[$static_type4>>2] = $static_type;
 $src2dst_offset5 = ((($info)) + 12|0);
 HEAP32[$src2dst_offset5>>2] = $src2dst_offset;
 $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
 $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
 $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
 $path_dynamic_ptr_to_static_ptr = ((($info)) + 28|0);
 $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
 $number_to_dst_ptr = ((($info)) + 40|0);
 dest=$dst_ptr_leading_to_static_ptr; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$dst_ptr_leading_to_static_ptr+36>>1]=0|0;HEAP8[$dst_ptr_leading_to_static_ptr+38>>0]=0|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($2,$dst_type,0)|0);
 L1: do {
  if ($call) {
   $number_of_dst_type = ((($info)) + 48|0);
   HEAP32[$number_of_dst_type>>2] = 1;
   $vtable7 = HEAP32[$2>>2]|0;
   $vfn = ((($vtable7)) + 20|0);
   $3 = HEAP32[$vfn>>2]|0;
   FUNCTION_TABLE_viiiiii[$3 & 127]($2,$info,$add$ptr,$add$ptr,1,0);
   $4 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp = ($4|0)==(1);
   $add$ptr$ = $cmp ? $add$ptr : 0;
   $dst_ptr$0 = $add$ptr$;
  } else {
   $number_to_static_ptr = ((($info)) + 36|0);
   $vtable10 = HEAP32[$2>>2]|0;
   $vfn11 = ((($vtable10)) + 24|0);
   $5 = HEAP32[$vfn11>>2]|0;
   FUNCTION_TABLE_viiiii[$5 & 127]($2,$info,$add$ptr,1,0);
   $6 = HEAP32[$number_to_static_ptr>>2]|0;
   switch ($6|0) {
   case 0:  {
    $7 = HEAP32[$number_to_dst_ptr>>2]|0;
    $cmp14 = ($7|0)==(1);
    $8 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
    $cmp16 = ($8|0)==(1);
    $or$cond = $cmp14 & $cmp16;
    $9 = HEAP32[$path_dynamic_ptr_to_dst_ptr>>2]|0;
    $cmp19 = ($9|0)==(1);
    $or$cond15 = $or$cond & $cmp19;
    $10 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $$ = $or$cond15 ? $10 : 0;
    $dst_ptr$0 = $$;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $11 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
   $cmp25 = ($11|0)==(1);
   if (!($cmp25)) {
    $12 = HEAP32[$number_to_dst_ptr>>2]|0;
    $cmp27 = ($12|0)==(0);
    $13 = HEAP32[$path_dynamic_ptr_to_static_ptr>>2]|0;
    $cmp30 = ($13|0)==(1);
    $or$cond16 = $cmp27 & $cmp30;
    $14 = HEAP32[$path_dynamic_ptr_to_dst_ptr>>2]|0;
    $cmp33 = ($14|0)==(1);
    $or$cond17 = $or$cond16 & $cmp33;
    if (!($or$cond17)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $15 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $dst_ptr$0 = $15;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_type = 0, $call = 0, $static_type = 0, $vfn = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $__base_type = ((($this)) + 8|0);
  $1 = HEAP32[$__base_type>>2]|0;
  $vtable = HEAP32[$1>>2]|0;
  $vfn = ((($vtable)) + 20|0);
  $2 = HEAP32[$vfn>>2]|0;
  FUNCTION_TABLE_viiiiii[$2 & 127]($1,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_type = 0, $add = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp11 = 0;
 var $cmp26 = 0, $cmp27 = 0, $cmp5 = 0, $cmp7 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $is_dst_type_derived_from_static_type13$0$off032 = 0, $is_dst_type_derived_from_static_type13$0$off033 = 0, $not$tobool19 = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $path_dst_ptr_to_static_ptr = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done = 0, $static_type = 0, $tobool16 = 0, $vfn = 0;
 var $vfn42 = 0, $vtable = 0, $vtable41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   $__base_type = ((($this)) + 8|0);
   if (!($call3)) {
    $12 = HEAP32[$__base_type>>2]|0;
    $vtable41 = HEAP32[$12>>2]|0;
    $vfn42 = ((($vtable41)) + 24|0);
    $13 = HEAP32[$vfn42>>2]|0;
    FUNCTION_TABLE_viiiii[$13 & 127]($12,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp = ($2|0)==($current_ptr|0);
   $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
   if (!($cmp)) {
    $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
    $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $cmp5 = ($3|0)==($current_ptr|0);
    if (!($cmp5)) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
     $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
     $4 = HEAP32[$is_dst_type_derived_from_static_type>>2]|0;
     $cmp11 = ($4|0)==(4);
     if ($cmp11) {
      break;
     }
     $found_our_static_ptr = ((($info)) + 52|0);
     HEAP8[$found_our_static_ptr>>0] = 0;
     $found_any_static_type = ((($info)) + 53|0);
     HEAP8[$found_any_static_type>>0] = 0;
     $5 = HEAP32[$__base_type>>2]|0;
     $vtable = HEAP32[$5>>2]|0;
     $vfn = ((($vtable)) + 20|0);
     $6 = HEAP32[$vfn>>2]|0;
     FUNCTION_TABLE_viiiiii[$6 & 127]($5,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $7 = HEAP8[$found_any_static_type>>0]|0;
     $tobool16 = ($7<<24>>24)==(0);
     if ($tobool16) {
      $is_dst_type_derived_from_static_type13$0$off032 = 4;
      label = 11;
     } else {
      $8 = HEAP8[$found_our_static_ptr>>0]|0;
      $not$tobool19 = ($8<<24>>24)==(0);
      if ($not$tobool19) {
       $is_dst_type_derived_from_static_type13$0$off032 = 3;
       label = 11;
      } else {
       $is_dst_type_derived_from_static_type13$0$off033 = 3;
      }
     }
     if ((label|0) == 11) {
      HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
      $number_to_dst_ptr = ((($info)) + 40|0);
      $9 = HEAP32[$number_to_dst_ptr>>2]|0;
      $add = (($9) + 1)|0;
      HEAP32[$number_to_dst_ptr>>2] = $add;
      $number_to_static_ptr = ((($info)) + 36|0);
      $10 = HEAP32[$number_to_static_ptr>>2]|0;
      $cmp26 = ($10|0)==(1);
      if ($cmp26) {
       $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
       $11 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
       $cmp27 = ($11|0)==(2);
       if ($cmp27) {
        $search_done = ((($info)) + 54|0);
        HEAP8[$search_done>>0] = 1;
        $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
       } else {
        $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
       }
      } else {
       $is_dst_type_derived_from_static_type13$0$off033 = $is_dst_type_derived_from_static_type13$0$off032;
      }
     }
     HEAP32[$is_dst_type_derived_from_static_type>>2] = $is_dst_type_derived_from_static_type13$0$off033;
     break;
    }
   }
   $cmp7 = ($path_below|0)==(1);
   if ($cmp7) {
    HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_type = 0, $call = 0, $static_type = 0, $vfn = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $__base_type = ((($this)) + 8|0);
  $1 = HEAP32[$__base_type>>2]|0;
  $vtable = HEAP32[$1>>2]|0;
  $vfn = ((($vtable)) + 28|0);
  $2 = HEAP32[$vfn>>2]|0;
  FUNCTION_TABLE_viiii[$2 & 255]($1,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $call = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $call = (_pthread_key_create((8744|0),(225|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  STACKTOP = sp;return;
 } else {
  _abort_message(7705,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $call = 0, $cmp = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[2186]|0;
 $call = (_pthread_setspecific(($0|0),(0|0))|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  STACKTOP = sp;return;
 } else {
  _abort_message(7755,$vararg_buffer);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $call = 0, $call8 = 0, $exception_class = 0, $terminateHandler = 0;
 var $tobool = 0, $tobool1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $call = (invoke_i(226)|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $tobool = ($call|0)==(0|0);
 if (!($tobool)) {
  $2 = HEAP32[$call>>2]|0;
  $tobool1 = ($2|0)==(0|0);
  if (!($tobool1)) {
   $exception_class = ((($2)) + 48|0);
   $3 = $exception_class;
   $4 = $3;
   $5 = HEAP32[$4>>2]|0;
   $6 = (($3) + 4)|0;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = $5 & -256;
   $10 = ($9|0)==(1126902528);
   $11 = ($8|0)==(1129074247);
   $12 = $10 & $11;
   if ($12) {
    $terminateHandler = ((($2)) + 12|0);
    $13 = HEAP32[$terminateHandler>>2]|0;
    __ZSt11__terminatePFvvE($13);
    // unreachable;
   }
  }
 }
 $call8 = (__ZSt13get_terminatev()|0);
 __ZSt11__terminatePFvvE($call8);
 // unreachable;
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(227,(7808|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
 }
 $3 = ___cxa_find_matching_catch_3(0|0)|0;
 $4 = tempRet0;
 (___cxa_begin_catch(($3|0))|0);
 __THREW__ = 0;
 invoke_vii(227,(7848|0),($vararg_buffer1|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = ___cxa_find_matching_catch_3(0|0)|0;
 $7 = tempRet0;
 __THREW__ = 0;
 invoke_v(199);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_3(0|0)|0;
  $11 = tempRet0;
  ___clang_call_terminate($10);
  // unreachable;
 } else {
  ___clang_call_terminate($6);
  // unreachable;
 }
}
function __ZSt13get_terminatev() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[469]|0;HEAP32[469] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt9bad_allocD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7898|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9exceptionD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9exception4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7926|0);
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $__imp_ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (2012);
 $__imp_ = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($__imp_);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $__imp_ = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__imp_ = ((($this)) + 4|0);
 $call = (__ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv($__imp_)|0);
 return ($call|0);
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5c_strEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 return ($0|0);
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $add$ptr = 0, $call = 0, $cmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv($this)|0);
 $0 = HEAP32[$call>>2]|0;HEAP32[$call>>2] = (($0+-1)|0);
 $1 = (($0) + -1)|0;
 $cmp = ($1|0)<(0);
 if ($cmp) {
  $2 = HEAP32[$this>>2]|0;
  $add$ptr = ((($2)) + -12|0);
  __ZdlPv($add$ptr);
 }
 return;
}
function __ZNK12_GLOBAL__N_114__libcpp_nmstr5countEv($this) {
 $this = $this|0;
 var $0 = 0, $count = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $count = ((($0)) + -4|0);
 return ($count|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$thrown_type,0)|0);
 return ($call|0);
}
function __ZN10__cxxabiv119__pointer_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__flags = 0, $__flags4 = 0, $__pointee = 0, $__pointee7 = 0, $and = 0, $call = 0, $call12 = 0, $call8 = 0, $cmp = 0, $cmp19 = 0, $cmp26 = 0, $cmp29 = 0, $dst_ptr_leading_to_static_ptr = 0, $info = 0, $neg = 0, $number_of_dst_type = 0, $path_dst_ptr_to_static_ptr = 0, $retval$0 = 0, $retval$4 = 0, $src2dst_offset = 0;
 var $static_type = 0, $tobool = 0, $vfn = 0, $vtable = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $info = sp;
 $0 = HEAP32[$adjustedPtr>>2]|0;
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$adjustedPtr>>2] = $1;
 $call = (__ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,0)|0);
 if ($call) {
  $retval$4 = 1;
 } else {
  $2 = ($thrown_type|0)==(0|0);
  if ($2) {
   $retval$4 = 0;
  } else {
   $3 = (___dynamic_cast($thrown_type,608,728,0)|0);
   $cmp = ($3|0)==(0|0);
   if ($cmp) {
    $retval$4 = 0;
   } else {
    $__flags = ((($3)) + 8|0);
    $4 = HEAP32[$__flags>>2]|0;
    $__flags4 = ((($this)) + 8|0);
    $5 = HEAP32[$__flags4>>2]|0;
    $neg = $5 ^ -1;
    $and = $4 & $neg;
    $tobool = ($and|0)==(0);
    if ($tobool) {
     $__pointee = ((($this)) + 12|0);
     $6 = HEAP32[$__pointee>>2]|0;
     $__pointee7 = ((($3)) + 12|0);
     $7 = HEAP32[$__pointee7>>2]|0;
     $call8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($6,$7,0)|0);
     if ($call8) {
      $retval$4 = 1;
     } else {
      $8 = HEAP32[$__pointee>>2]|0;
      $call12 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($8,760,0)|0);
      if ($call12) {
       $retval$4 = 1;
      } else {
       $9 = HEAP32[$__pointee>>2]|0;
       $10 = ($9|0)==(0|0);
       if ($10) {
        $retval$4 = 0;
       } else {
        $11 = (___dynamic_cast($9,608,592,0)|0);
        $cmp19 = ($11|0)==(0|0);
        if ($cmp19) {
         $retval$4 = 0;
        } else {
         $12 = HEAP32[$__pointee7>>2]|0;
         $13 = ($12|0)==(0|0);
         if ($13) {
          $retval$4 = 0;
         } else {
          $14 = (___dynamic_cast($12,608,592,0)|0);
          $cmp26 = ($14|0)==(0|0);
          if ($cmp26) {
           $retval$4 = 0;
          } else {
           $15 = ((($info)) + 4|0);
           dest=$15; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
           HEAP32[$info>>2] = $14;
           $static_type = ((($info)) + 8|0);
           HEAP32[$static_type>>2] = $11;
           $src2dst_offset = ((($info)) + 12|0);
           HEAP32[$src2dst_offset>>2] = -1;
           $number_of_dst_type = ((($info)) + 48|0);
           HEAP32[$number_of_dst_type>>2] = 1;
           $vtable = HEAP32[$14>>2]|0;
           $vfn = ((($vtable)) + 28|0);
           $16 = HEAP32[$vfn>>2]|0;
           $17 = HEAP32[$adjustedPtr>>2]|0;
           FUNCTION_TABLE_viiii[$16 & 255]($14,$info,$17,1);
           $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
           $18 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
           $cmp29 = ($18|0)==(1);
           if ($cmp29) {
            $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
            $19 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
            HEAP32[$adjustedPtr>>2] = $19;
            $retval$0 = 1;
           } else {
            $retval$0 = 0;
           }
           $retval$4 = $retval$0;
          }
         }
        }
       }
      }
     }
    } else {
     $retval$4 = 0;
    }
   }
  }
 }
 STACKTOP = sp;return ($retval$4|0);
}
function __ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $call = 0, $call2 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$thrown_type,0)|0);
 if ($call) {
  $retval$0 = 1;
 } else {
  $call2 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($thrown_type,768,0)|0);
  $retval$0 = $call2;
 }
 return ($retval$0|0);
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_count = 0, $__flags = 0, $add$ptr = 0, $and = 0, $and30 = 0, $arraydecay = 0, $call = 0, $cmp = 0, $cmp19 = 0, $cmp40 = 0;
 var $found_any_static_type5 = 0, $found_our_static_ptr2 = 0, $incdec$ptr = 0, $incdec$ptr39 = 0, $p$0 = 0, $path_dst_ptr_to_static_ptr = 0, $search_done = 0, $static_type = 0, $tobool14 = 0, $tobool17 = 0, $tobool22 = 0, $tobool27 = 0, $tobool31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 if ($call) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $found_our_static_ptr2 = ((($info)) + 52|0);
  $1 = HEAP8[$found_our_static_ptr2>>0]|0;
  $found_any_static_type5 = ((($info)) + 53|0);
  $2 = HEAP8[$found_any_static_type5>>0]|0;
  $arraydecay = ((($this)) + 16|0);
  $__base_count = ((($this)) + 12|0);
  $3 = HEAP32[$__base_count>>2]|0;
  $add$ptr = (((($this)) + 16|0) + ($3<<3)|0);
  HEAP8[$found_our_static_ptr2>>0] = 0;
  HEAP8[$found_any_static_type5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($arraydecay,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $cmp = ($3|0)>(1);
  L4: do {
   if ($cmp) {
    $incdec$ptr = ((($this)) + 24|0);
    $path_dst_ptr_to_static_ptr = ((($info)) + 24|0);
    $search_done = ((($info)) + 54|0);
    $__flags = ((($this)) + 8|0);
    $p$0 = $incdec$ptr;
    while(1) {
     $4 = HEAP8[$search_done>>0]|0;
     $tobool14 = ($4<<24>>24)==(0);
     if (!($tobool14)) {
      break L4;
     }
     $5 = HEAP8[$found_our_static_ptr2>>0]|0;
     $tobool17 = ($5<<24>>24)==(0);
     if ($tobool17) {
      $8 = HEAP8[$found_any_static_type5>>0]|0;
      $tobool27 = ($8<<24>>24)==(0);
      if (!($tobool27)) {
       $9 = HEAP32[$__flags>>2]|0;
       $and30 = $9 & 1;
       $tobool31 = ($and30|0)==(0);
       if ($tobool31) {
        break L4;
       }
      }
     } else {
      $6 = HEAP32[$path_dst_ptr_to_static_ptr>>2]|0;
      $cmp19 = ($6|0)==(1);
      if ($cmp19) {
       break L4;
      }
      $7 = HEAP32[$__flags>>2]|0;
      $and = $7 & 2;
      $tobool22 = ($and|0)==(0);
      if ($tobool22) {
       break L4;
      }
     }
     HEAP8[$found_our_static_ptr2>>0] = 0;
     HEAP8[$found_any_static_type5>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $incdec$ptr39 = ((($p$0)) + 8|0);
     $cmp40 = ($incdec$ptr39>>>0)<($add$ptr>>>0);
     if ($cmp40) {
      $p$0 = $incdec$ptr39;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$found_our_static_ptr2>>0] = $1;
  HEAP8[$found_any_static_type5>>0] = $2;
 }
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__base_count = 0, $__flags = 0, $add = 0, $add$ptr = 0, $add$ptr64 = 0, $and = 0, $and35 = 0, $and73 = 0, $and88 = 0, $arraydecay = 0, $call = 0, $call3 = 0, $cmp = 0, $cmp100 = 0, $cmp106 = 0;
 var $cmp11 = 0, $cmp115 = 0, $cmp121 = 0, $cmp16 = 0, $cmp27 = 0, $cmp44 = 0, $cmp46 = 0, $cmp5 = 0, $cmp7 = 0, $cmp70 = 0, $cmp77 = 0, $cmp85 = 0, $cmp97 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $dst_ptr_leading_to_static_ptr = 0, $dst_ptr_not_leading_to_static_ptr = 0, $found_any_static_type = 0, $found_our_static_ptr = 0, $incdec$ptr = 0;
 var $incdec$ptr105 = 0, $incdec$ptr120 = 0, $incdec$ptr69 = 0, $incdec$ptr84 = 0, $is_dst_type_derived_from_static_type = 0, $is_dst_type_derived_from_static_type13$0$off0 = 0, $is_dst_type_derived_from_static_type13$1$off0 = 0, $is_dst_type_derived_from_static_type13$2$off0 = 0, $number_to_dst_ptr = 0, $number_to_static_ptr = 0, $p$0 = 0, $p65$0 = 0, $p65$1 = 0, $p65$2 = 0, $path_dst_ptr_to_static_ptr45 = 0, $path_dynamic_ptr_to_dst_ptr = 0, $search_done48 = 0, $static_type = 0, $tobool111 = 0, $tobool18 = 0;
 var $tobool22 = 0, $tobool25 = 0, $tobool30 = 0, $tobool36 = 0, $tobool74 = 0, $tobool80 = 0, $tobool89 = 0, $tobool93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,$use_strcmp)|0);
 L1: do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$info,$current_ptr,$path_below);
  } else {
   $1 = HEAP32[$info>>2]|0;
   $call3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$1,$use_strcmp)|0);
   $__base_count = ((($this)) + 12|0);
   $path_dst_ptr_to_static_ptr45 = ((($info)) + 24|0);
   $number_to_static_ptr = ((($info)) + 36|0);
   $search_done48 = ((($info)) + 54|0);
   $__flags = ((($this)) + 8|0);
   $arraydecay = ((($this)) + 16|0);
   if (!($call3)) {
    $16 = HEAP32[$__base_count>>2]|0;
    $add$ptr64 = (((($this)) + 16|0) + ($16<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($arraydecay,$info,$current_ptr,$path_below,$use_strcmp);
    $incdec$ptr69 = ((($this)) + 24|0);
    $cmp70 = ($16|0)>(1);
    if (!($cmp70)) {
     break;
    }
    $17 = HEAP32[$__flags>>2]|0;
    $and73 = $17 & 2;
    $tobool74 = ($and73|0)==(0);
    if ($tobool74) {
     $18 = HEAP32[$number_to_static_ptr>>2]|0;
     $cmp77 = ($18|0)==(1);
     if ($cmp77) {
      $p65$0 = $incdec$ptr69;
     } else {
      $and88 = $17 & 1;
      $tobool89 = ($and88|0)==(0);
      if ($tobool89) {
       $p65$2 = $incdec$ptr69;
       while(1) {
        $23 = HEAP8[$search_done48>>0]|0;
        $tobool111 = ($23<<24>>24)==(0);
        if (!($tobool111)) {
         break L1;
        }
        $24 = HEAP32[$number_to_static_ptr>>2]|0;
        $cmp115 = ($24|0)==(1);
        if ($cmp115) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$2,$info,$current_ptr,$path_below,$use_strcmp);
        $incdec$ptr120 = ((($p65$2)) + 8|0);
        $cmp121 = ($incdec$ptr120>>>0)<($add$ptr64>>>0);
        if ($cmp121) {
         $p65$2 = $incdec$ptr120;
        } else {
         break L1;
        }
       }
      } else {
       $p65$1 = $incdec$ptr69;
      }
      while(1) {
       $20 = HEAP8[$search_done48>>0]|0;
       $tobool93 = ($20<<24>>24)==(0);
       if (!($tobool93)) {
        break L1;
       }
       $21 = HEAP32[$number_to_static_ptr>>2]|0;
       $cmp97 = ($21|0)==(1);
       if ($cmp97) {
        $22 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
        $cmp100 = ($22|0)==(1);
        if ($cmp100) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$1,$info,$current_ptr,$path_below,$use_strcmp);
       $incdec$ptr105 = ((($p65$1)) + 8|0);
       $cmp106 = ($incdec$ptr105>>>0)<($add$ptr64>>>0);
       if ($cmp106) {
        $p65$1 = $incdec$ptr105;
       } else {
        break L1;
       }
      }
     }
    } else {
     $p65$0 = $incdec$ptr69;
    }
    while(1) {
     $19 = HEAP8[$search_done48>>0]|0;
     $tobool80 = ($19<<24>>24)==(0);
     if (!($tobool80)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p65$0,$info,$current_ptr,$path_below,$use_strcmp);
     $incdec$ptr84 = ((($p65$0)) + 8|0);
     $cmp85 = ($incdec$ptr84>>>0)<($add$ptr64>>>0);
     if ($cmp85) {
      $p65$0 = $incdec$ptr84;
     } else {
      break L1;
     }
    }
   }
   $dst_ptr_leading_to_static_ptr = ((($info)) + 16|0);
   $2 = HEAP32[$dst_ptr_leading_to_static_ptr>>2]|0;
   $cmp = ($2|0)==($current_ptr|0);
   $path_dynamic_ptr_to_dst_ptr = ((($info)) + 32|0);
   if (!($cmp)) {
    $dst_ptr_not_leading_to_static_ptr = ((($info)) + 20|0);
    $3 = HEAP32[$dst_ptr_not_leading_to_static_ptr>>2]|0;
    $cmp5 = ($3|0)==($current_ptr|0);
    if (!($cmp5)) {
     HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = $path_below;
     $is_dst_type_derived_from_static_type = ((($info)) + 44|0);
     $4 = HEAP32[$is_dst_type_derived_from_static_type>>2]|0;
     $cmp11 = ($4|0)==(4);
     if ($cmp11) {
      break;
     }
     $5 = HEAP32[$__base_count>>2]|0;
     $add$ptr = (((($this)) + 16|0) + ($5<<3)|0);
     $found_our_static_ptr = ((($info)) + 52|0);
     $found_any_static_type = ((($info)) + 53|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type13$0$off0 = 0;$p$0 = $arraydecay;
     L29: while(1) {
      $cmp16 = ($p$0>>>0)<($add$ptr>>>0);
      if (!($cmp16)) {
       $is_dst_type_derived_from_static_type13$2$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       label = 18;
       break;
      }
      HEAP8[$found_our_static_ptr>>0] = 0;
      HEAP8[$found_any_static_type>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $6 = HEAP8[$search_done48>>0]|0;
      $tobool18 = ($6<<24>>24)==(0);
      if (!($tobool18)) {
       $is_dst_type_derived_from_static_type13$2$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       label = 18;
       break;
      }
      $7 = HEAP8[$found_any_static_type>>0]|0;
      $tobool22 = ($7<<24>>24)==(0);
      do {
       if ($tobool22) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type13$1$off0 = $is_dst_type_derived_from_static_type13$0$off0;
       } else {
        $8 = HEAP8[$found_our_static_ptr>>0]|0;
        $tobool25 = ($8<<24>>24)==(0);
        if ($tobool25) {
         $11 = HEAP32[$__flags>>2]|0;
         $and35 = $11 & 1;
         $tobool36 = ($and35|0)==(0);
         if ($tobool36) {
          $is_dst_type_derived_from_static_type13$2$off0 = 1;
          label = 18;
          break L29;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type13$1$off0 = 1;
          break;
         }
        }
        $9 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
        $cmp27 = ($9|0)==(1);
        if ($cmp27) {
         label = 23;
         break L29;
        }
        $10 = HEAP32[$__flags>>2]|0;
        $and = $10 & 2;
        $tobool30 = ($and|0)==(0);
        if ($tobool30) {
         label = 23;
         break L29;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type13$1$off0 = 1;
        }
       }
      } while(0);
      $incdec$ptr = ((($p$0)) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type13$0$off0 = $is_dst_type_derived_from_static_type13$1$off0;$p$0 = $incdec$ptr;
     }
     do {
      if ((label|0) == 18) {
       if (!($does_dst_type_point_to_our_static_type$0$off0)) {
        HEAP32[$dst_ptr_not_leading_to_static_ptr>>2] = $current_ptr;
        $number_to_dst_ptr = ((($info)) + 40|0);
        $12 = HEAP32[$number_to_dst_ptr>>2]|0;
        $add = (($12) + 1)|0;
        HEAP32[$number_to_dst_ptr>>2] = $add;
        $13 = HEAP32[$number_to_static_ptr>>2]|0;
        $cmp44 = ($13|0)==(1);
        if ($cmp44) {
         $14 = HEAP32[$path_dst_ptr_to_static_ptr45>>2]|0;
         $cmp46 = ($14|0)==(2);
         if ($cmp46) {
          HEAP8[$search_done48>>0] = 1;
          if ($is_dst_type_derived_from_static_type13$2$off0) {
           label = 23;
           break;
          } else {
           $15 = 4;
           break;
          }
         }
        }
       }
       if ($is_dst_type_derived_from_static_type13$2$off0) {
        label = 23;
       } else {
        $15 = 4;
       }
      }
     } while(0);
     if ((label|0) == 23) {
      $15 = 3;
     }
     HEAP32[$is_dst_type_derived_from_static_type>>2] = $15;
     break;
    }
   }
   $cmp7 = ($path_below|0)==(1);
   if ($cmp7) {
    HEAP32[$path_dynamic_ptr_to_dst_ptr>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $__base_count = 0, $add$ptr = 0, $arraydecay = 0, $call = 0, $cmp = 0, $cmp7 = 0, $incdec$ptr = 0, $incdec$ptr6 = 0, $p$0 = 0, $search_done = 0, $static_type = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $static_type = ((($info)) + 8|0);
 $0 = HEAP32[$static_type>>2]|0;
 $call = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($this,$0,0)|0);
 L1: do {
  if ($call) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $arraydecay = ((($this)) + 16|0);
   $__base_count = ((($this)) + 12|0);
   $1 = HEAP32[$__base_count>>2]|0;
   $add$ptr = (((($this)) + 16|0) + ($1<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($arraydecay,$info,$adjustedPtr,$path_below);
   $cmp = ($1|0)>(1);
   if ($cmp) {
    $incdec$ptr = ((($this)) + 24|0);
    $search_done = ((($info)) + 54|0);
    $p$0 = $incdec$ptr;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $2 = HEAP8[$search_done>>0]|0;
     $tobool = ($2<<24>>24)==(0);
     if (!($tobool)) {
      break L1;
     }
     $incdec$ptr6 = ((($p$0)) + 8|0);
     $cmp7 = ($incdec$ptr6>>>0)<($add$ptr>>>0);
     if ($cmp7) {
      $p$0 = $incdec$ptr6;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$adjustedPtr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 28|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$4 & 255]($3,$info,$add$ptr4,$cond);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$current_ptr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 20|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($current_ptr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$4 & 127]($3,$info,$dst_ptr,$add$ptr4,$cond,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $__offset_flags = 0, $add$ptr = 0, $add$ptr4 = 0, $and = 0, $and6 = 0, $cond = 0, $offset_to_base$0 = 0, $shr = 0, $tobool = 0, $tobool7 = 0, $vfn = 0, $vtable3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__offset_flags = ((($this)) + 4|0);
 $0 = HEAP32[$__offset_flags>>2]|0;
 $shr = $0 >> 8;
 $and = $0 & 1;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $offset_to_base$0 = $shr;
 } else {
  $1 = HEAP32[$current_ptr>>2]|0;
  $add$ptr = (($1) + ($shr)|0);
  $2 = HEAP32[$add$ptr>>2]|0;
  $offset_to_base$0 = $2;
 }
 $3 = HEAP32[$this>>2]|0;
 $vtable3 = HEAP32[$3>>2]|0;
 $vfn = ((($vtable3)) + 24|0);
 $4 = HEAP32[$vfn>>2]|0;
 $add$ptr4 = (($current_ptr) + ($offset_to_base$0)|0);
 $and6 = $0 & 2;
 $tobool7 = ($and6|0)!=(0);
 $cond = $tobool7 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$4 & 127]($3,$info,$add$ptr4,$cond,$use_strcmp);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (1972);
 return;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2187]|0;HEAP32[2187] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $call = 0, $conv = 0, $temp = 0, $vfn = 0, $vtable = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $vtable = HEAP32[$catchType>>2]|0;
 $vfn = ((($vtable)) + 16|0);
 $1 = HEAP32[$vfn>>2]|0;
 $call = (FUNCTION_TABLE_iiii[$1 & 255]($catchType,$excpType,$temp)|0);
 $conv = $call&1;
 if ($call) {
  $2 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $2;
 }
 STACKTOP = sp;return ($conv|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $conv = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $2 = 0;
 } else {
  $1 = (___dynamic_cast($type,608,728,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $2 = $phitmp;
 }
 $conv = $2&1;
 return ($conv|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}

  
function dynCall_viddd(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=+a2; a3=+a3; a4=+a4;
  FUNCTION_TABLE_viddd[index&127](a1|0,+a2,+a3,+a4);
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&255](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_dii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return +FUNCTION_TABLE_dii[index&255](a1|0,a2|0);
}


function dynCall_vid(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=+a2;
  FUNCTION_TABLE_vid[index&255](a1|0,+a2);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&255](a1|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&255]()|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&255](a1|0);
}


function dynCall_dd(index,a1) {
  index = index|0;
  a1=+a1;
  return +FUNCTION_TABLE_dd[index&255](+a1);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&255](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&255](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&255](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&255]();
}


function dynCall_viid(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=+a3;
  FUNCTION_TABLE_viid[index&255](a1|0,a2|0,+a3);
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&255](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&255](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&255](a1|0,a2|0)|0;
}


function dynCall_id(index,a1) {
  index = index|0;
  a1=+a1;
  return FUNCTION_TABLE_id[index&255](+a1)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}

function b0(p0,p1,p2,p3) {
 p0 = p0|0;p1 = +p1;p2 = +p2;p3 = +p3; nullFunc_viddd(0);
}
function b1(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(1);return 0;
}
function b2(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(2);
}
function b3(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(3);
}
function b4(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_dii(4);return +0;
}
function b5(p0,p1) {
 p0 = p0|0;p1 = +p1; nullFunc_vid(5);
}
function b6(p0) {
 p0 = p0|0; nullFunc_di(6);return +0;
}
function b7() {
 ; nullFunc_i(7);return 0;
}
function b8(p0) {
 p0 = p0|0; nullFunc_vi(8);
}
function __emval_decref__wrapper(p0) {
 p0 = p0|0; __emval_decref(p0|0);
}
function __emval_run_destructors__wrapper(p0) {
 p0 = p0|0; __emval_run_destructors(p0|0);
}
function b9(p0) {
 p0 = +p0; nullFunc_dd(9);return +0;
}
function b10(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(10);
}
function b11(p0) {
 p0 = p0|0; nullFunc_ii(11);return 0;
}
function b12(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(12);
}
function ___cxa_throw__wrapper(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0);
}
function b13() {
 ; nullFunc_v(13);
}
function ___cxa_pure_virtual__wrapper() {
 ; ___cxa_pure_virtual();
}
function ___cxa_rethrow__wrapper() {
 ; ___cxa_rethrow();
}
function ___cxa_end_catch__wrapper() {
 ; ___cxa_end_catch();
}
function b14(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = +p2; nullFunc_viid(14);
}
function b15(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(15);return 0;
}
function __emval_call__wrapper(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; return __emval_call(p0|0,p1|0,p2|0,p3|0)|0;
}
function b16(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(16);
}
function b17(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(17);return 0;
}
function __emval_get_property__wrapper(p0,p1) {
 p0 = p0|0;p1 = p1|0; return __emval_get_property(p0|0,p1|0)|0;
}
function b18(p0) {
 p0 = +p0; nullFunc_id(18);return 0;
}
function b19(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(19);return 0;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_viddd = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN6HBasisC2Eddd,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_iiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,___stdio_write,___stdio_seek,___stdout_write,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b1,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,b1,b1,b1,b1,b1,b1,b1,b1,b1,__Z8isBasis3P6HBasisS0_S0_,__Z13encloseBasis3P6HBasisS0_S0_,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN10emscripten8internal7InvokerIP9HierarchyJNS_3valES4_EE6invokeEPFS3_S4_S4_EPNS0_7_EM_VALES9_,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__26vectorIP5HNodeNS3_9allocatorIS6_EEEEjES2_SB_JjEE6invokeEPSD_PS9_j,__ZN10emscripten8internal12VectorAccessINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3setERS8_jRKS5_,b1,b1,__ZN9Hierarchy6isTypeEN10emscripten3valERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,__ZNSt3__211char_traitsIcE7compareEPKcS3_j,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_viiiii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b3,b3,b3,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_dii = [b4,b4,b4,b4,b4,b4,b4,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EEclEOS4_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EEclEOS4_,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EEclEOS4_
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN10emscripten8internal12MemberAccessI6HBasisdE7getWireIS2_EEdRKMS2_dRKT_,b4,b4,b4,b4,b4,b4,b4,__ZN10emscripten8internal12MemberAccessI5HNodedE7getWireIS2_EEdRKMS2_dRKT_,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNKSt3__28functionIFdP5HNodeEEclES2_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vid = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z14translateChildd,b5,b5,b5,__ZN10emscripten8internal19fromGenericWireTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_d,b5
,b5,b5,b5,b5,b5,__ZN10emscripten8internal19fromGenericWireTypeINS_3valEEET_d,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_di = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,__ZNK10emscripten3val2asIdJEEET_DpT0_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,__Z11packEncloseNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_i = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,__ZN10emscripten8internal12operator_newINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEJEEEPT_DpOT0_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,___cxa_get_globals_fast,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_vi = [b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EED2Ev,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EED0Ev,b8,b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7destroyEv,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv,b8,b8,b8,__ZNSt3__210__function6__baseIFdP5HNodeEED2Ev,__ZNSt3__210__function6__baseIFdP5HNodeEED0Ev,b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EED2Ev,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EED0Ev,b8,b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7destroyEv,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv,b8,b8,b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EED2Ev,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EED0Ev,b8,b8,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7destroyEv,__ZNSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE18destroy_deallocateEv,b8
,b8,b8,__ZNSt3__217bad_function_callD2Ev,__ZNSt3__217bad_function_callD0Ev,b8,__ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EED2Ev,__ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EED0Ev,b8,b8,__ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7destroyEv,__ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE18destroy_deallocateEv,b8,b8,b8,__ZNSt3__210__function6__baseIFvP5HNodeEED2Ev,__ZNSt3__210__function6__baseIFvP5HNodeEED0Ev,__ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EED2Ev,__ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EED0Ev,b8,b8,__ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7destroyEv,__ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE18destroy_deallocateEv,b8,b8,b8,__ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEED2Ev,__ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEED0Ev,b8,b8,__ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7destroyEv
,__ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE18destroy_deallocateEv,b8,b8,b8,b8,b8,b8,b8,b8,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b8,b8,b8,b8,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b8,b8,b8,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b8,__ZNSt9exceptionD2Ev,__ZNSt9exceptionD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b8,__ZNSt12length_errorD0Ev
,__ZNSt12out_of_rangeD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,b8,__ZN10__cxxabiv119__pointer_type_infoD0Ev,b8,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__emval_decref__wrapper,b8,__ZN10emscripten8internal14raw_destructorI6HBasisEEvPT_,b8,b8,b8,__ZN10emscripten8internal14raw_destructorI5HNodeEEvPT_,b8,b8,b8,b8,b8,b8,b8,__ZN10emscripten8internal14raw_destructorI9HierarchyEEvPT_,b8,b8,b8,b8,b8
,b8,b8,__ZN10emscripten8internal14raw_destructorINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEvPT_,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,__emval_run_destructors__wrapper,b8,b8,b8,b8,b8,__ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE9pop_frontEv,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_dd = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZN10emscripten8internal19fromGenericWireTypeIdEET_d,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_vii = [b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7__cloneEPNS0_6__baseIS8_EE,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7__cloneEPNS0_6__baseISA_EE,b10,b10,__ZNSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EEclEOS4_,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7__cloneEPNS0_6__baseISA_EE,b10,b10,__ZNSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EEclEOS4_,b10,b10,b10,b10,b10,__ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7__cloneEPNS0_6__baseIS7_EE,b10
,b10,__ZNSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEEclEOS6_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEC2ERKS5_,b10,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,b10,b10,b10,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE8allocateEj,b10,b10,b10,b10,__ZN6HLNodeC2EP5HNode,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,b10,b10,b10,__ZN10emscripten3valC2ERKS0_,__ZN5HNodeC2EN10emscripten3valE,b10,b10
,b10,b10,__ZNK10emscripten3val6typeofEv,__ZNK10emscripten3val2asINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEJEEET_DpT0_,b10,b10,__ZN10emscripten14vecFromJSArrayINS_3valEEENSt3__26vectorIT_NS2_9allocatorIS4_EEEES1_,b10,b10,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE9push_backERKS2_
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__28functionIFdP5HNodeEEC2ERKS4_,__Z10radiusLeafNSt3__28functionIFdP5HNodeEEE,b10,b10,b10,b10,b10,__ZN10emscripten3valC2EPNS_8internal7_EM_VALE,b10,b10,b10
,b10,__ZNK10emscripten3val2asIS0_JEEET_DpT0_,__ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,b10,b10,b10,__ZNSt3__26vectorIN10emscripten3valENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE,b10,b10,__ZNKSt3__28functionIFvP5HNodeEEclES2_,__ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE9push_backERKS2_,__ZN5HNodeC2ERKS_,b10,b10,b10,b10,b10,__ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE9push_backEOS3_,b10,b10,b10,__ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE10push_frontERKS3_,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE8allocateEj,b10,b10,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE,__ZNKSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE17__annotate_shrinkEj,__ZZ10radiusLeafNSt3__28functionIFdP5HNodeEEEEN3__0C2ERKS5_,b10
,__ZZ12packChildrenNSt3__28functionIFdP5HNodeEEEdEN3__1C2ERKS5_,b10,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEEC2ERKS5_,b10,__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE17__annotate_shrinkEj,b10,b10,b10,b10,__ZN10emscripten3valC2EOS0_,b10,__ZN10emscripten8internal11BindingTypeINS_3valEE12fromWireTypeEPNS0_7_EM_VALE,b10,__ZNSt11logic_errorC2EPKc,__ZNSt3__218__libcpp_refstringC2EPKc,b10,b10,b10,_abort_message,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_ii = [b11,b11,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE7__cloneEv,b11,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE11target_typeEv,b11,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE7__cloneEv,b11,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE11target_typeEv,b11,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE7__cloneEv,b11,b11,b11,b11
,b11,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE11target_typeEv,b11,b11,__ZNKSt9exception4whatEv,b11,b11,__ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE7__cloneEv,b11,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE11target_typeEv,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE7__cloneEv,b11,b11,b11,b11,b11,__ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE11target_typeEv,b11,b11,__ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE7__cloneEv,b11,b11
,b11,b11,b11,__ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE11target_typeEv,___stdio_close,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt9bad_alloc4whatEv,b11,b11,b11,b11,__ZNKSt11logic_error4whatEv,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__Z12encloseBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEE,b11,b11,b11,b11,__Z7encloseNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEE,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,__ZNSt3__211char_traitsIcE6lengthEPKc,b11,b11,__Znwj,b11,b11,b11,__ZN10emscripten8internal13getActualTypeI6HBasisEEPKvPT_,b11,b11,b11,__ZN10emscripten8internal13getActualTypeI5HNodeEEPKvPT_,b11,__ZN10emscripten8internal12operator_newI5HNodeJNS_3valEEEEPT_DpOT0_,b11,b11,b11,b11,b11,__ZN10emscripten8internal13getActualTypeI9HierarchyEEPKvPT_,b11,b11,b11,__ZN9Hierarchy4packEv,b11,b11
,b11,__ZN10emscripten8internal13getActualTypeINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEEEPKvPT_,b11,b11,__ZN10emscripten8internal7InvokerIPNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEJEE6invokeEPFS9_vE,b11,b11,__ZNKSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE4sizeEv,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10emscripten3val2asIjJEEET_DpT0_
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__28functionIFdP5HNodeEE9__as_baseEPv
,b11,b11,b11,b11,b11,b11,__ZN10emscripten8internal11BindingTypeINS_3valEE10toWireTypeERKS2_,__ZN10emscripten4baseI6HBasisE14convertPointerI5HNodeS1_EEPT0_PT_,__ZN10emscripten4baseI6HBasisE14convertPointerIS1_5HNodeEEPT0_PT_,b11,__ZN10emscripten8internal11BindingTypeIP5HNodeE10toWireTypeES3_,b11,__ZN10emscripten8internal11BindingTypeIP9HierarchyE10toWireTypeES3_,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_viii = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__Z11extendBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEES2_,b12,b12,b12,b12,__ZNSt3__28functionIFvP5HNodeEEC2IZ10radiusLeafNS0_IFdS2_EEEE3__0EET_PNS_9enable_ifIXaasr10__callableIS9_EE5valuentsr7is_sameIS9_S4_EE5valueEvE4typeE,__ZNSt3__28functionIFvP5HNodeEEC2IZ12packChildrenNS0_IFdS2_EEEdE3__1EET_PNS_9enable_ifIXaasr10__callableIS9_EE5valuentsr7is_sameIS9_S4_EE5valueEvE4typeE,b12,b12,__ZN9HierarchyC2EN10emscripten3valEP5HNode,__ZNK10emscripten3valixIA6_cEES0_RKT_
,b12,__ZNK10emscripten3valixIA9_cEES0_RKT_,b12,b12,b12,b12,b12,b12,__ZN5HNodeC2EN10emscripten3valEPS_,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZN10emscripten8internal12MemberAccessI5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEE7setWireIS2_EEvRKMS2_S8_RT_PS8_,b12,b12,b12,b12,b12,b12,b12,b12,b12
,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE6resizeEjRKS2_,b12,b12,b12,b12,__ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvRKS5_EvPS8_JSA_EE6invokeERKSC_SD_S5_,b12,b12,b12,__ZN10emscripten8internal12VectorAccessINSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEE3getERKS8_j,b12,b12,b12,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b12,__ZNK10emscripten3valixIiEES0_RKT_,__ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E0_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE,__ZNSt3__28functionIFdP5HNodeEEC2IZN9Hierarchy4packEvEUlS2_E1_EET_PNS_9enable_ifIXaasr10__callableIS8_EE5valuentsr7is_sameIS8_S4_EE5valueEvE4typeE,__ZNK10emscripten3valixIA7_cEES0_RKT_,b12,b12,__ZN5HNode10eachBeforeENSt3__28functionIFvPS_EEE,b12,__ZN5HNode9eachAfterENSt3__28functionIFvPS_EEE,b12,b12,b12,b12,b12,b12
,__ZNK10emscripten3valixIjEES0_RKT_,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZN10emscripten3valclIJRP5HNodeEEES0_DpOT_,b12,__ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE8__appendEjRKS2_,__ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_,___cxa_throw__wrapper,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,__ZNSt3__214__split_bufferIP5HNodeRNS_9allocatorIS2_EEE18__construct_at_endEjRKS2_,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_v = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,___cxa_pure_virtual__wrapper,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,__ZL25default_terminate_handlerv,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,___cxa_rethrow__wrapper,___cxa_end_catch__wrapper,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_viid = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN10emscripten8internal12MemberAccessI6HBasisdE7setWireIS2_EEvRKMS2_dRT_d,b14,b14,b14,b14,b14,b14,b14,__ZN10emscripten8internal12MemberAccessI5HNodedE7setWireIS2_EEvRKMS2_dRT_d,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__Z12packChildrenNSt3__28functionIFdP5HNodeEEEd,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_iiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEjRKS5_EbS9_JjSB_EE6invokeEPSD_PS8_jS5_,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__emval_call__wrapper,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j,b16,b16,__Z9findBasisNSt3__26vectorIP6HBasisNS_9allocatorIS2_EEEEiS5_,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,__ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEFvjRKS5_EvPS8_JjSA_EE6invokeERKSC_SD_jS5_,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__214__split_bufferIPP5HNodeRNS_9allocatorIS3_EEEC2EjjS6_,b16,b16,__ZNSt3__26vectorIP5HNodeNS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j,__ZNSt3__25dequeIP5HNodeNS_9allocatorIS2_EEE8__appendIPKS2_EEvT_S9_PNS_9enable_ifIXsr21__is_forward_iteratorIS9_EE5valueEvE4typeE,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_iii = [b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE0_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17,b17,b17
,__ZNKSt3__210__function6__funcIZN9Hierarchy4packEvEUlP5HNodeE1_NS_9allocatorIS5_EEFdS4_EE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__210__function6__funcIZ10radiusLeafNS_8functionIFdP5HNodeEEEE3__0NS_9allocatorIS7_EEFvS4_EE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__210__function6__funcIZ12packChildrenNS_8functionIFdP5HNodeEEEdE3__1NS_9allocatorIS7_EEFvS4_EE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17
,b17,b17,__ZNKSt3__210__function6__funcIZ14translateChilddE3__2NS_9allocatorIS2_EEFvP5HNodeEE6targetERKSt9type_info,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__Z11enclosesAllP6HBasisNSt3__26vectorIS0_NS1_9allocatorIS0_EEEE,b17,__Z13encloseBasis2P6HBasisS0_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZN10emscripten8internal7InvokerIP5HNodeJONS_3valEEE6invokeEPFS3_S5_EPNS0_7_EM_VALE,__ZN10emscripten8internal12MemberAccessI5HNodeNSt3__26vectorIPS2_NS3_9allocatorIS5_EEEEE7getWireIS2_EEPS8_RKMS2_S8_RKT_,b17,b17,b17,b17,b17,__Z15createHierarchyN10emscripten3valES0_,b17,b17,__ZN10emscripten8internal13MethodInvokerIM9HierarchyFP5HNodevES4_PS2_JEE6invokeERKS6_S7_,b17
,b17,b17,b17,b17,b17,b17,b17,b17,__ZN10emscripten8internal13MethodInvokerIMNSt3__26vectorIP5HNodeNS2_9allocatorIS5_EEEEKFjvEjPKS8_JEE6invokeERKSA_SC_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__emval_get_property__wrapper,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_id = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,__ZN10emscripten8internal19fromGenericWireTypeIjEET_d,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiiii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,b19,b19,b19];

  return { __GLOBAL__sub_I_hierarchy_cpp: __GLOBAL__sub_I_hierarchy_cpp, stackSave: stackSave, getTempRet0: getTempRet0, _memset: _memset, setThrew: setThrew, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, _llvm_bswap_i32: _llvm_bswap_i32, ___uremdi3: ___uremdi3, stackAlloc: stackAlloc, _i64Subtract: _i64Subtract, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, ___udivmoddi4: ___udivmoddi4, setTempRet0: setTempRet0, _i64Add: _i64Add, _emscripten_get_global_libc: _emscripten_get_global_libc, ___getTypeName: ___getTypeName, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, ___cxa_can_catch: ___cxa_can_catch, _free: _free, runPostSets: runPostSets, establishStackSpace: establishStackSpace, _memmove: _memmove, stackRestore: stackRestore, _malloc: _malloc, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_viddd: dynCall_viddd, dynCall_iiii: dynCall_iiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_dii: dynCall_dii, dynCall_vid: dynCall_vid, dynCall_di: dynCall_di, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_dd: dynCall_dd, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_viid: dynCall_viid, dynCall_iiiii: dynCall_iiiii, dynCall_viiii: dynCall_viiii, dynCall_iii: dynCall_iii, dynCall_id: dynCall_id, dynCall_iiiiii: dynCall_iiiiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real___GLOBAL__sub_I_hierarchy_cpp = asm["__GLOBAL__sub_I_hierarchy_cpp"]; asm["__GLOBAL__sub_I_hierarchy_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_hierarchy_cpp.apply(null, arguments);
};

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackSave.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_getTempRet0.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setThrew.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__llvm_cttz_i32 = asm["_llvm_cttz_i32"]; asm["_llvm_cttz_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_cttz_i32.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__sbrk.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_bswap_i32.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____uremdi3.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackAlloc.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real____udivmoddi4 = asm["___udivmoddi4"]; asm["___udivmoddi4"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivmoddi4.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setTempRet0.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__emscripten_get_global_libc = asm["_emscripten_get_global_libc"]; asm["_emscripten_get_global_libc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__emscripten_get_global_libc.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____getTypeName.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivdi3.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_establishStackSpace.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackRestore.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};
var __GLOBAL__sub_I_hierarchy_cpp = Module["__GLOBAL__sub_I_hierarchy_cpp"] = asm["__GLOBAL__sub_I_hierarchy_cpp"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _memset = Module["_memset"] = asm["_memset"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var dynCall_viddd = Module["dynCall_viddd"] = asm["dynCall_viddd"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_dd = Module["dynCall_dd"] = asm["dynCall_dd"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_id = Module["dynCall_id"] = asm["dynCall_id"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;






/**
 * @constructor
 * @extends {Error}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



//# sourceMappingURL=index.html.map